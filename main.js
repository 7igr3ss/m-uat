"use strict";
(self.webpackChunkmomo_market = self.webpackChunkmomo_market || []).push([[179], {
    228: (Ot,je,D)=>{
        D.d(je, {
            m: ()=>ye
        });
        var i = D(4666)
          , l = D(3886)
          , q = D(2381)
          , ue = D(4179)
          , H = D(6328)
          , U = D(9906)
          , z = D(4344)
          , te = D(1154)
          , le = D(9129)
          , W = D(2560)
          , fe = D(2508);
        const re = function(Re, ut, Ce) {
            return {
                "p-inputswitch p-component": !0,
                "p-inputswitch-checked": Re,
                "p-disabled": ut,
                "p-focus": Ce
            }
        }
          , Ke = {
            provide: fe.JU,
            useExisting: (0,
            W.Gpc)(()=>Ne),
            multi: !0
        };
        let Ne = (()=>{
            class Re {
                constructor(Ce) {
                    this.cd = Ce,
                    this.trueValue = !0,
                    this.falseValue = !1,
                    this.onChange = new W.vpe,
                    this.modelValue = !1,
                    this.focused = !1,
                    this.onModelChange = ()=>{}
                    ,
                    this.onModelTouched = ()=>{}
                }
                onClick(Ce, Oe) {
                    !this.disabled && !this.readonly && (Ce.preventDefault(),
                    this.toggle(Ce),
                    Oe.focus())
                }
                onInputChange(Ce) {
                    this.readonly || this.updateModel(Ce, Ce.target.checked)
                }
                toggle(Ce) {
                    this.updateModel(Ce, !this.checked())
                }
                updateModel(Ce, Oe) {
                    this.modelValue = Oe ? this.trueValue : this.falseValue,
                    this.onModelChange(this.modelValue),
                    this.onChange.emit({
                        originalEvent: Ce,
                        checked: this.modelValue
                    })
                }
                onFocus(Ce) {
                    this.focused = !0
                }
                onBlur(Ce) {
                    this.focused = !1,
                    this.onModelTouched()
                }
                writeValue(Ce) {
                    this.modelValue = Ce,
                    this.cd.markForCheck()
                }
                registerOnChange(Ce) {
                    this.onModelChange = Ce
                }
                registerOnTouched(Ce) {
                    this.onModelTouched = Ce
                }
                setDisabledState(Ce) {
                    this.disabled = Ce,
                    this.cd.markForCheck()
                }
                checked() {
                    return this.modelValue === this.trueValue
                }
            }
            return Re.\u0275fac = function(Ce) {
                return new (Ce || Re)(W.Y36(W.sBO))
            }
            ,
            Re.\u0275cmp = W.Xpm({
                type: Re,
                selectors: [["p-inputSwitch"]],
                hostAttrs: [1, "p-element"],
                inputs: {
                    style: "style",
                    styleClass: "styleClass",
                    tabindex: "tabindex",
                    inputId: "inputId",
                    name: "name",
                    disabled: "disabled",
                    readonly: "readonly",
                    trueValue: "trueValue",
                    falseValue: "falseValue",
                    ariaLabel: "ariaLabel",
                    ariaLabelledBy: "ariaLabelledBy"
                },
                outputs: {
                    onChange: "onChange"
                },
                features: [W._Bn([Ke])],
                decls: 5,
                vars: 16,
                consts: [[3, "ngClass", "ngStyle", "click"], [1, "p-hidden-accessible"], ["type", "checkbox", "role", "switch", 3, "checked", "disabled", "change", "focus", "blur"], ["cb", ""], [1, "p-inputswitch-slider"]],
                template: function(Ce, Oe) {
                    if (1 & Ce) {
                        const Ze = W.EpF();
                        W.TgZ(0, "div", 0),
                        W.NdJ("click", function(rt) {
                            W.CHM(Ze);
                            const It = W.MAs(3);
                            return W.KtG(Oe.onClick(rt, It))
                        }),
                        W.TgZ(1, "div", 1)(2, "input", 2, 3),
                        W.NdJ("change", function(rt) {
                            return Oe.onInputChange(rt)
                        })("focus", function(rt) {
                            return Oe.onFocus(rt)
                        })("blur", function(rt) {
                            return Oe.onBlur(rt)
                        }),
                        W.qZA()(),
                        W._UZ(4, "span", 4),
                        W.qZA()
                    }
                    2 & Ce && (W.Tol(Oe.styleClass),
                    W.Q6J("ngClass", W.kEZ(12, re, Oe.checked(), Oe.disabled, Oe.focused))("ngStyle", Oe.style),
                    W.xp6(2),
                    W.Q6J("checked", Oe.checked())("disabled", Oe.disabled),
                    W.uIk("aria-label", Oe.ariaLabel)("id", Oe.inputId)("name", Oe.name)("tabindex", Oe.tabindex)("aria-checked", Oe.checked())("aria-labelledby", Oe.ariaLabelledBy))
                },
                dependencies: [i.mk, i.PC],
                styles: ['.p-inputswitch{position:relative;display:inline-block;-webkit-user-select:none;user-select:none}.p-inputswitch-slider{position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0}.p-inputswitch-slider:before{position:absolute;content:"";top:50%}\n'],
                encapsulation: 2,
                changeDetection: 0
            }),
            Re
        }
        )()
          , Be = (()=>{
            class Re {
            }
            return Re.\u0275fac = function(Ce) {
                return new (Ce || Re)
            }
            ,
            Re.\u0275mod = W.oAB({
                type: Re
            }),
            Re.\u0275inj = W.cJS({
                imports: [i.ez]
            }),
            Re
        }
        )();
        var ot = D(2415)
          , $e = D(8395)
          , Fe = D(2901)
          , et = D(6664)
          , st = D(9297)
          , Pe = D(3387)
          , Q = D(7298)
          , ze = D(341);
        let ye = (()=>{
            class Re {
            }
            return Re.\u0275fac = function(Ce) {
                return new (Ce || Re)
            }
            ,
            Re.\u0275mod = W.oAB({
                type: Re
            }),
            Re.\u0275inj = W.cJS({
                imports: [i.ez, z.aw, l.bB, q.TX, ue.l, H.hJ, U.j, te.x, Be, ot.Xt, $e.q, Fe.L, et.y, le.EV, fe.u5, st.Bz, Pe.U, Q.w, ze.kz, i.ez, z.aw, l.bB, q.TX, ue.l, H.hJ, U.j, te.x, le.EV, Be, ot.Xt, $e.q, Fe.L, et.y, fe.u5, st.Bz, Pe.U, Q.w, ze.kz]
            }),
            Re
        }
        )()
    }
    ,
    629: (Ot,je,D)=>{
        D.d(je, {
            e: ()=>z
        });
        var i = D(2340)
          , l = D(8987)
          , q = D(635)
          , ue = D(2560)
          , H = D(5819);
        new l.WM({
            "Content-Type": "application/json"
        });
        let z = (()=>{
            class te {
                constructor(W, fe) {
                    this.http = W,
                    this.store = fe,
                    this.baseUrl = `${i.N.apiEndPoint}/Auth`,
                    this.userController = "/User",
                    this.otpController = "/OtpUser"
                }
                login(W) {
                    return this.http.post(`${this.baseUrl}${this.userController}/Login`, W)
                }
                sendOtp(W) {
                    return this.http.post(`${this.baseUrl}${this.userController}/OtpLogin`, W)
                }
                refreshToken(W) {
                    return this.http.post(`${this.baseUrl}${this.userController}/RefreshToken`, W).pipe((0,
                    q.U)(fe=>fe))
                }
            }
            return te.\u0275fac = function(W) {
                return new (W || te)(ue.LFG(l.eN),ue.LFG(H.d))
            }
            ,
            te.\u0275prov = ue.Yz7({
                token: te,
                factory: te.\u0275fac,
                providedIn: "root"
            }),
            te
        }
        )()
    }
    ,
    5237: (Ot,je,D)=>{
        D.d(je, {
            N: ()=>ue
        });
        var i = D(2340)
          , l = D(2560)
          , q = D(8987);
        let ue = (()=>{
            class H {
                constructor(z) {
                    this.http = z,
                    this.baseUrl = `${i.N.apiEndPoint}/Product/Cart`
                }
                getCart(z) {
                    var te = `${this.baseUrl}/GetAllCart`;
                    return "" != z && (te += "?SessionId=" + z),
                    this.http.get(te)
                }
                addToCart(z) {
                    return this.http.post(`${this.baseUrl}/CreateCart`, z)
                }
                emptyCart(z) {
                    return this.http.get(`${this.baseUrl}/DeleteCart/${z}`)
                }
                removeItemFromCart(z) {
                    return this.http.get(`${this.baseUrl}/cart/remove-item/${z}`)
                }
                updateCart(z) {
                    return this.http.post(`${this.baseUrl}/UpdateCart`, z)
                }
            }
            return H.\u0275fac = function(z) {
                return new (z || H)(l.LFG(q.eN))
            }
            ,
            H.\u0275prov = l.Yz7({
                token: H,
                factory: H.\u0275fac,
                providedIn: "root"
            }),
            H
        }
        )()
    }
    ,
    7087: (Ot,je,D)=>{
        D.d(je, {
            D: ()=>q
        });
        var i = D(253)
          , l = D(2560);
        let q = (()=>{
            class ue {
                constructor() {
                    this.isLoading = new i.x
                }
                show() {
                    this.isLoading.next(!0)
                }
                hide() {
                    this.isLoading.next(!1)
                }
            }
            return ue.\u0275fac = function(U) {
                return new (U || ue)
            }
            ,
            ue.\u0275prov = l.Yz7({
                token: ue,
                factory: ue.\u0275fac,
                providedIn: "root"
            }),
            ue
        }
        )()
    }
    ,
    2618: (Ot,je,D)=>{
        D.d(je, {
            i: ()=>ue
        });
        var i = D(2340)
          , l = D(2560)
          , q = D(8987);
        let ue = (()=>{
            class H {
                constructor(z) {
                    this.http = z,
                    this.baseUrl = `${i.N.apiEndPoint}`
                }
                getAllCategories() {
                    return this.http.get(`${this.baseUrl}/Product/Category/GetAllCategory?PageSize=100&AllowFront=true`)
                }
                getInitialData() {
                    return this.http.get(`${this.baseUrl}/Tenant/ThemeKeyConfiguration/GetInitialData`)
                }
                getConfigurationData() {
                    return this.http.get(`${this.baseUrl}/Tenant/Configuration/GetAllConfiguration`)
                }
                getAllCountryTenants() {
                    return this.http.get(`${this.baseUrl}/Auth/CountryTenant/GetAllCountryTenants`)
                }
            }
            return H.\u0275fac = function(z) {
                return new (z || H)(l.LFG(q.eN))
            }
            ,
            H.\u0275prov = l.Yz7({
                token: H,
                factory: H.\u0275fac,
                providedIn: "root"
            }),
            H
        }
        )()
    }
    ,
    773: (Ot,je,D)=>{
        D.d(je, {
            M: ()=>ue
        });
        var i = D(2340)
          , l = D(2560)
          , q = D(8987);
        let ue = (()=>{
            class H {
                constructor(z) {
                    this.http = z,
                    this.baseUrl = `${i.N.apiEndPoint}/Product`
                }
                getCategoryProducts(z, te, le, W) {
                    let fe = `${this.baseUrl}/CategoryProduct/GetCategoryProductsByCategoryId/${z}/3000`;
                    return fe += le ? `/${le}` : "/false",
                    fe += W ? `/${W}` : "/false",
                    this.http.get(`${fe}`)
                }
                getCategoriesProducts(z, te) {
                    let le = `${this.baseUrl}/CategoryProduct/GetCategoryProductsByCategories`;
                    le += "?";
                    for (let W of z)
                        le += "categoriesId=" + W + "&";
                    for (let W of te)
                        le += "topNumbers=" + W + "&";
                    return this.http.get(`${le}`)
                }
                getProductDetails(z) {
                    return this.http.get(`${this.baseUrl}/Product/ProductDetails/${z}`)
                }
                getProducts(z) {
                    return this.http.get(`${this.baseUrl}/Product/GetProductById/productId=${z}`)
                }
                GetAllProductsByFeature(z, te) {
                    let le = `${this.baseUrl}/Product/GetAllProductsByFeature`;
                    return le += "?",
                    le += "FeatureType=" + z + "&",
                    le += "TopNumber=" + te,
                    this.http.get(`${le}`)
                }
                FilterWithProductName(z) {
                    return this.http.get(`${this.baseUrl}/Product/FilterProduct/${z}`)
                }
                GetProductsByShop(z) {
                    return this.http.get(`${this.baseUrl}/Product/GetProductsByShop/${z}`)
                }
            }
            return H.\u0275fac = function(z) {
                return new (z || H)(l.LFG(q.eN))
            }
            ,
            H.\u0275prov = l.Yz7({
                token: H,
                factory: H.\u0275fac,
                providedIn: "root"
            }),
            H
        }
        )()
    }
    ,
    5819: (Ot,je,D)=>{
        D.d(je, {
            d: ()=>q
        });
        var i = D(6317)
          , l = D(2560);
        let q = (()=>{
            class ue {
                constructor() {
                    this.storeData = {},
                    this.store = {},
                    this.localStoreNames = []
                }
                createNewStore(U, z, te) {
                    if (this.store[U] = new i.X(z),
                    te) {
                        const le = this.getFromLocalStorage(U) || z;
                        this.localStoreNames.push(U),
                        this.set(U, le)
                    } else
                        this.set(U, z)
                }
                subscription(U) {
                    return this.store[U]
                }
                set(U, z) {
                    const te = this.store[U];
                    te ? this.localStoreNames.includes(U) ? (this.setLocalStorage(U, z),
                    this.update(U, z),
                    this.fireChanges(U, te)) : (this.update(U, z),
                    this.fireChanges(U, te)) : console.error(`${U} is not assign to store please check it`)
                }
                fireChanges(U, z) {
                    z.next(this.storeData[U])
                }
                update(U, z) {
                    this.storeData[U] = z
                }
                get(U) {
                    return this.storeData[U]
                }
                isJson(U) {
                    try {
                        JSON.parse(U)
                    } catch {
                        return !1
                    }
                    return !0
                }
                setLocalStorage(U, z) {
                    const te = z ? "string" == typeof z ? z : JSON.stringify(z) : "";
                    return localStorage.setItem(U, te)
                }
                getFromLocalStorage(U) {
                    const z = localStorage.getItem(U) || "";
                    return this.isJson(z) ? JSON.parse(z) || null : z || null
                }
            }
            return ue.\u0275fac = function(U) {
                return new (U || ue)
            }
            ,
            ue.\u0275prov = l.Yz7({
                token: ue,
                factory: ue.\u0275fac,
                providedIn: "root"
            }),
            ue
        }
        )()
    }
    ,
    2340: (Ot,je,D)=>{
        D.d(je, {
            N: ()=>i
        });
        const i = {
            production: !0,
            apiEndPoint: "https://momouat.ug:1010",
            apiKey: "AIzaSyAvcDy5ZYc2ujCS6TTtI3RYX5QmuoV8Ffw"
        }
    }
    ,
    3838: (Ot,je,D)=>{
        var i = D(4497)
          , l = D(2560)
          , q = D(8987)
          , ue = D(9337)
          , H = D(3158)
          , U = D(5474)
          , z = D(4666);
        const te = new l.OlP("JWT_OPTIONS");
        let le = (()=>{
            class M {
                constructor(c=null) {
                    this.tokenGetter = c && c.tokenGetter || function() {}
                }
                urlBase64Decode(c) {
                    let C = c.replace(/-/g, "+").replace(/_/g, "/");
                    switch (C.length % 4) {
                    case 0:
                        break;
                    case 2:
                        C += "==";
                        break;
                    case 3:
                        C += "=";
                        break;
                    default:
                        throw new Error("Illegal base64url string!")
                    }
                    return this.b64DecodeUnicode(C)
                }
                b64decode(c) {
                    let L = "";
                    if ((c = String(c).replace(/=+$/, "")).length % 4 == 1)
                        throw new Error("'atob' failed: The string to be decoded is not correctly encoded.");
                    for (let _e, we, ie = 0, Je = 0; we = c.charAt(Je++); ~we && (_e = ie % 4 ? 64 * _e + we : we,
                    ie++ % 4) ? L += String.fromCharCode(255 & _e >> (-2 * ie & 6)) : 0)
                        we = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(we);
                    return L
                }
                b64DecodeUnicode(c) {
                    return decodeURIComponent(Array.prototype.map.call(this.b64decode(c), C=>"%" + ("00" + C.charCodeAt(0).toString(16)).slice(-2)).join(""))
                }
                decodeToken(c=this.tokenGetter()) {
                    if (!c || "" === c)
                        return null;
                    const C = c.split(".");
                    if (3 !== C.length)
                        throw new Error("The inspected token doesn't appear to be a JWT. Check to make sure it has three parts and see https://jwt.io for more.");
                    const L = this.urlBase64Decode(C[1]);
                    if (!L)
                        throw new Error("Cannot decode the token.");
                    return JSON.parse(L)
                }
                getTokenExpirationDate(c=this.tokenGetter()) {
                    let C;
                    if (C = this.decodeToken(c),
                    !C || !C.hasOwnProperty("exp"))
                        return null;
                    const L = new Date(0);
                    return L.setUTCSeconds(C.exp),
                    L
                }
                isTokenExpired(c=this.tokenGetter(), C) {
                    if (!c || "" === c)
                        return !0;
                    const L = this.getTokenExpirationDate(c);
                    return C = C || 0,
                    null !== L && !(L.valueOf() > (new Date).valueOf() + 1e3 * C)
                }
                getAuthScheme(c, C) {
                    return "function" == typeof c ? c(C) : c
                }
            }
            return M.\u0275fac = function(c) {
                return new (c || M)(l.LFG(te))
            }
            ,
            M.\u0275prov = l.Yz7({
                token: M,
                factory: M.\u0275fac
            }),
            M
        }
        )();
        class re {
            constructor() {}
        }
        var Ke = D(5819)
          , Ne = D(629)
          , Be = D(9297)
          , ot = D(4356);
        let $e = (()=>{
            class M {
                constructor(c, C, L, ie, _e) {
                    this.platformId = c,
                    this.store = C,
                    this.authService = L,
                    this.router = ie,
                    this.messageService = _e,
                    this.userToken = "",
                    this.XXSRFTOKEN = "",
                    this.helper = new le,
                    this.guestToken = "",
                    this.headers = {
                        authorization: " ",
                        token: "",
                        lang: "",
                        currency: "",
                        accept: "application/json",
                        contentType: "application/json",
                        allowOrigin: "*",
                        allowHeaders: "Cookie, Cache-Control, Host, User-Agent, Accept, token, Authorization, currency, lang, origin, x-requested-with, content-type, Accept-Encoding",
                        allowMethods: "PUT, GET, POST, DELETE, PATCH, OPTIONS"
                    },
                    this.getTimeInterval()
                }
                intercept(c, C) {
                    var L = (new Date).getTime();
                    this.userToken = L < this.store.get("timeInterval") + 18e7 && (this.store.get("authToken") || localStorage.getItem("authToken")) || this.guestToken,
                    this.headers.Authorization = "" == this.userToken ? "" : `Bearer ${this.userToken}`,
                    "" != this.guestToken && (this.headers.token = this.guestToken),
                    this.headers.lang = this.store.get("lang") || localStorage.getItem("lang") || "en";
                    var ie = localStorage.getItem("currency")?.toString();
                    return this.headers.currency = ie || "UGX",
                    this.headers.XXSRFTOKEN = this.store.get("XXSRFTOKEN") || localStorage.getItem("XXSRFTOKEN"),
                    null == this.headers.XXSRFTOKEN && (this.headers.XXSRFTOKEN = ""),
                    this.clonedRequest = c.clone({
                        headers: c.headers.set("Authorization", this.headers.Authorization).set("token", this.headers.token).set("lang", this.headers.lang).set("currency", this.headers.currency).set("Accept", this.headers.accept).set("Content-Type", this.headers.contentType).set("X-XSRF-TOKEN", this.headers.XXSRFTOKEN),
                        withCredentials: !0
                    }),
                    this.headers?.Authorization && this.helper.isTokenExpired(this.headers.Authorization) && (this.messageService.add({
                        severity: "error",
                        summary: "Login Expired",
                        detail: "Login Expired,Please login again"
                    }),
                    this.signOut()),
                    (0,
                    z.NF)(this.platformId),
                    C.handle(this.clonedRequest).pipe((0,
                    ue.b)(_e=>{
                        if (_e instanceof q.Zn) {
                            401 === _e.status && this.signOut(),
                            404 == _e.status && this.NotFound();
                            var we = _e.headers.get("XSRF-TOKEN");
                            null != we && "" != we && localStorage.setItem("XXSRFTOKEN", we)
                        }
                        return _e
                    }
                    ), (0,
                    H.K)(_e=>("Not Found" == _e ? this.router.navigateByUrl("/", {
                        skipLocationChange: !0
                    }).then(()=>{
                        this.router.navigate(["not-found"])
                    }
                    ) : "Unknown Error" == _e && this.signOut(),
                    (0,
                    U._)(_e))))
                }
                handleAuthorizationError() {
                    var c = new re;
                    c.authToken = this.store.get("authToken"),
                    c.refreshToken = localStorage.getItem("refreshToken")?.toString(),
                    this.authService.refreshToken(c).subscribe(C=>{
                        null != C && C.success && (this.store.set("authToken", C.data?.authToken),
                        this.store.set("refreshToken", C.data?.refreshToken),
                        this.headers.Authorization = `Bearer ${this.userToken}`)
                    }
                    )
                }
                signOut() {
                    this.setStoreData(),
                    this.router.navigate(["/login"])
                }
                NotFound() {
                    this.router.navigate(["/not-found"])
                }
                getTimeInterval() {
                    this.store.get("timeInterval") && this.store.subscription("timeInterval").subscribe({
                        next: c=>{
                            c && (this.timeInterval = c)
                        }
                        ,
                        error: c=>{
                            console.error(c)
                        }
                    })
                }
                setStoreData() {
                    this.store.localStoreNames.length ? (this.store.set("authToken", null),
                    this.store.set("refreshToken", null),
                    this.store.set("profile", null),
                    this.store.set("cartProducts", []),
                    this.store.set("favouritesProducts", []),
                    this.store.set("compareProducts", []),
                    this.store.set("socialAccount", null),
                    this.store.set("XXSRFTOKEN", null),
                    this.store.set("notifications", {
                        notifications: [],
                        unreadNotifications: 0
                    }),
                    this.store.set("checkoutData", {
                        shipping: null,
                        payment: null,
                        promo: null,
                        steps: null,
                        profile: null,
                        orderId: null
                    })) : (localStorage.setItem("authToken", ""),
                    localStorage.setItem("refreshToken", ""),
                    localStorage.setItem("timeInterval", ""),
                    localStorage.setItem("userPhone", ""),
                    localStorage.setItem("profile", ""),
                    localStorage.setItem("cartProducts", JSON.stringify([])),
                    localStorage.setItem("favouritesProducts", JSON.stringify([])),
                    localStorage.setItem("compareProducts", JSON.stringify([])),
                    localStorage.setItem("XXSRFTOKEN", ""))
                }
            }
            return M.\u0275fac = function(c) {
                return new (c || M)(l.LFG(l.Lbi),l.LFG(Ke.d),l.LFG(Ne.e),l.LFG(Be.F0),l.LFG(ot.ez))
            }
            ,
            M.\u0275prov = l.Yz7({
                token: M,
                factory: M.\u0275fac
            }),
            M
        }
        )()
          , Fe = (()=>{
            class M {
                constructor(c, C) {
                    this.router = c,
                    this.injector = C,
                    this.token = ""
                }
                canActivate(c, C) {
                    return this.token = localStorage.getItem("authToken"),
                    console.log(this.token),
                    !!this.token || (console.log(this.token),
                    this.router.navigate(["/login"], {
                        queryParams: {
                            returnUrl: C.url
                        }
                    }),
                    !1)
                }
            }
            return M.\u0275fac = function(c) {
                return new (c || M)(l.LFG(Be.F0),l.LFG(l.zs3))
            }
            ,
            M.\u0275prov = l.Yz7({
                token: M,
                factory: M.\u0275fac,
                providedIn: "root"
            }),
            M
        }
        )();
        const et = [{
            path: "",
            redirectTo: "/",
            pathMatch: "full"
        }, {
            path: "",
            children: [{
                path: "",
                loadChildren: ()=>Promise.all([D.e(592), D.e(731)]).then(D.bind(D, 3731)).then(M=>M.HomeModule)
            }, {
                path: "product/:id",
                children: [{
                    path: "",
                    loadChildren: ()=>Promise.all([D.e(592), D.e(275)]).then(D.bind(D, 8275)).then(M=>M.ProductDetailsModule)
                }]
            }, {
                path: "categories",
                children: [{
                    path: "",
                    loadChildren: ()=>Promise.all([D.e(592), D.e(707)]).then(D.bind(D, 7707)).then(M=>M.CategoriesModule)
                }]
            }, {
                path: "category/:id",
                children: [{
                    path: "",
                    loadChildren: ()=>Promise.all([D.e(592), D.e(740)]).then(D.bind(D, 740)).then(M=>M.CategoryProductsModule)
                }]
            }, {
                path: "cart",
                loadChildren: ()=>Promise.all([D.e(592), D.e(905)]).then(D.bind(D, 5905)).then(M=>M.CartModule)
            }, {
                path: "account",
                loadChildren: ()=>Promise.all([D.e(227), D.e(999), D.e(848), D.e(313), D.e(592), D.e(530)]).then(D.bind(D, 6530)).then(M=>M.AccountModule),
                canActivate: [Fe]
            }, {
                path: "merchants",
                loadChildren: ()=>Promise.all([D.e(592), D.e(772)]).then(D.bind(D, 9772)).then(M=>M.MerchantsModule)
            }, {
                path: "orders",
                loadChildren: ()=>Promise.all([D.e(592), D.e(470)]).then(D.bind(D, 5470)).then(M=>M.OrdersModule),
                canActivate: [Fe]
            }, {
                path: "order/:id",
                loadChildren: ()=>Promise.all([D.e(999), D.e(848), D.e(592), D.e(679)]).then(D.bind(D, 8679)).then(M=>M.OrderDetailsModule),
                canActivate: [Fe]
            }, {
                path: "order-refund",
                loadChildren: ()=>Promise.all([D.e(999), D.e(592), D.e(665)]).then(D.bind(D, 2665)).then(M=>M.OrderRefundModule),
                canActivate: [Fe]
            }, {
                path: "login",
                loadChildren: ()=>Promise.all([D.e(227), D.e(848), D.e(818)]).then(D.bind(D, 9818)).then(M=>M.SignInModule)
            }, {
                path: "contact-us",
                loadChildren: ()=>Promise.all([D.e(227), D.e(999), D.e(592), D.e(590)]).then(D.bind(D, 7590)).then(M=>M.ContactUsModule)
            }, {
                path: "about-us",
                loadChildren: ()=>Promise.all([D.e(592), D.e(449)]).then(D.bind(D, 5449)).then(M=>M.AboutUsModule)
            }, {
                path: "reset-password",
                loadChildren: ()=>Promise.all([D.e(227), D.e(848), D.e(592), D.e(27)]).then(D.bind(D, 4027)).then(M=>M.ResetPasswordModule)
            }, {
                path: "otp",
                loadChildren: ()=>Promise.all([D.e(592), D.e(930)]).then(D.bind(D, 2930)).then(M=>M.OtpModule)
            }, {
                path: "update-password",
                loadChildren: ()=>Promise.all([D.e(227), D.e(999), D.e(848), D.e(592), D.e(617)]).then(D.bind(D, 2617)).then(M=>M.UpdatePasswordModule)
            }, {
                path: "change-password",
                loadChildren: ()=>Promise.all([D.e(227), D.e(999), D.e(848), D.e(592), D.e(123)]).then(D.bind(D, 4123)).then(M=>M.ChangePasswordModule)
            }, {
                path: "checkout",
                loadChildren: ()=>Promise.all([D.e(227), D.e(592), D.e(773)]).then(D.bind(D, 5871)).then(M=>M.CheckoutModule),
                canActivate: [Fe]
            }, {
                path: "register",
                loadChildren: ()=>Promise.all([D.e(227), D.e(999), D.e(848), D.e(313), D.e(592), D.e(583)]).then(D.bind(D, 5583)).then(M=>M.RegisterModule)
            }, {
                path: "not-found",
                loadChildren: ()=>D.e(804).then(D.bind(D, 5804)).then(M=>M.NotFoundModule)
            }, {
                path: "**",
                redirectTo: ""
            }]
        }];
        let st = (()=>{
            class M {
            }
            return M.\u0275fac = function(c) {
                return new (c || M)
            }
            ,
            M.\u0275mod = l.oAB({
                type: M
            }),
            M.\u0275inj = l.cJS({
                imports: [Be.Bz.forRoot(et, {
                    initialNavigation: "enabledBlocking"
                }), Be.Bz]
            }),
            M
        }
        )();
        var Pe = (()=>{
            return (M = Pe || (Pe = {})).CurrencyDecimal = "CurrencyDecimal",
            M.CategoryEnNameAppearOnDesign = "CategoryEnNameAppearOnDesign",
            M.CategoryArNameAppearOnDesign = "CategoryArNameAppearOnDesign",
            M.CountryPhone = "CountryPhone",
            M.PhoneLength = "PhoneLength",
            M.Currency = "Currency",
            Pe;
            var M
        }
        )()
          , Q = D(5237)
          , ze = D(2618)
          , ye = D(4344)
          , Re = D(2340)
          , ut = D(2381)
          , Ce = D(6664)
          , Oe = D(2508)
          , Ze = D(4179);
        function _t(M, h) {
            if (1 & M && (l.TgZ(0, "div", 15)(1, "a", 16),
            l._uU(2),
            l.qZA()()),
            2 & M) {
                const c = h.$implicit;
                l.xp6(1),
                l.MGl("routerLink", "/category/", c.id, ""),
                l.xp6(1),
                l.Oqu(c.categoryName)
            }
        }
        function rt(M, h) {
            if (1 & M) {
                const c = l.EpF();
                l.TgZ(0, "a", 17),
                l.NdJ("click", function() {
                    l.CHM(c);
                    const L = l.oxw();
                    return l.KtG(L.closeMenu())
                }),
                l.TgZ(1, "div", 9),
                l._uU(2),
                l.ALo(3, "translate"),
                l.qZA()()
            }
            2 & M && (l.xp6(2),
            l.hij(" ", l.lcZ(3, 1, "sideMenu.signIn"), " "))
        }
        function It(M, h) {
            if (1 & M) {
                const c = l.EpF();
                l.TgZ(0, "a", 18),
                l.NdJ("click", function() {
                    l.CHM(c);
                    const L = l.oxw();
                    return L.closeMenu(),
                    l.KtG(L.logOut())
                }),
                l.TgZ(1, "div", 9),
                l._uU(2),
                l.ALo(3, "translate"),
                l.qZA()()
            }
            2 & M && (l.xp6(2),
            l.hij(" ", l.lcZ(3, 1, "sideMenu.signOut"), " "))
        }
        const qt = ["*"];
        let ft = (()=>{
            class M {
                constructor(c, C, L) {
                    this.primengConfig = c,
                    this.store = C,
                    this.router = L,
                    this.display = !1,
                    this.categories = [],
                    this.loggedIn = !1,
                    this.lang = this.store.get("lang") || "en"
                }
                ngOnInit() {
                    this.primengConfig.ripple = !0,
                    this.getLanguage()
                }
                ngAfterViewInit() {
                    var c = localStorage.getItem("authToken");
                    this.loggedIn = !!c,
                    setTimeout(()=>{
                        this.store.subscription("categories").subscribe({
                            next: C=>{
                                this.categories = C,
                                console.log(this.categories, " 5", C)
                            }
                            ,
                            error: C=>{
                                console.error(C)
                            }
                        })
                    }
                    , 1)
                }
                openMenu() {
                    this.display = !0
                }
                closeMenu() {
                    this.display = !1
                }
                getLanguage() {
                    this.store.subscription("lang").subscribe(c=>{
                        this.lang = c
                    }
                    )
                }
                logOut() {
                    sessionStorage.clear(),
                    this.store.set("authToken", ""),
                    this.store.set("profile", ""),
                    this.router.navigate(["/"]),
                    this.store.set("cartProducts", ""),
                    localStorage.setItem("sessionId", ""),
                    localStorage.setItem("addedProducts", "")
                }
            }
            return M.\u0275fac = function(c) {
                return new (c || M)(l.Y36(ot.b4),l.Y36(Ke.d),l.Y36(Be.F0))
            }
            ,
            M.\u0275cmp = l.Xpm({
                type: M,
                selectors: [["app-side-menu"]],
                ngContentSelectors: qt,
                decls: 40,
                vars: 30,
                consts: [[1, "side-menu", "cursor-auto"], [3, "visible", "baseZIndex", "position", "visibleChange"], [1, "flex", "flex-column", "align-items-start", "w-full"], [1, "section", "px-2", "py-4"], ["routerLink", "/", 1, "no-underline", 3, "click"], [1, "title", "cursor-pointer"], ["class", "category cursor-pointer my-2", 4, "ngFor", "ngForOf"], ["routerLink", "/categories", 1, "category", "cursor-pointer", "my-2"], ["routerLink", "/merchants", 1, "no-underline", 3, "click"], [1, "category", "cursor-pointer", "my-1"], ["routerLink", "/account", 1, "no-underline", 3, "click"], ["class", "no-underline", "routerLink", "/login", 3, "click", 4, "ngIf"], ["class", "no-underline", 3, "click", 4, "ngIf"], [1, "pi", "pi-bars", 2, "display", "flex", "margin-top", "2px", 3, "click"], [1, "ml-2", "mr-1", "pi-pi-text"], [1, "category", "cursor-pointer", "my-2"], [3, "routerLink"], ["routerLink", "/login", 1, "no-underline", 3, "click"], [1, "no-underline", 3, "click"]],
                template: function(c, C) {
                    1 & c && (l.F$t(),
                    l.TgZ(0, "div", 0)(1, "p-sidebar", 1),
                    l.NdJ("visibleChange", function(ie) {
                        return C.display = ie
                    }),
                    l.TgZ(2, "div", 2)(3, "div", 3)(4, "a", 4),
                    l.NdJ("click", function() {
                        return C.closeMenu()
                    }),
                    l.TgZ(5, "div", 5),
                    l._uU(6),
                    l.ALo(7, "translate"),
                    l.qZA()()(),
                    l.TgZ(8, "div", 3)(9, "div", 5),
                    l._uU(10),
                    l.ALo(11, "translate"),
                    l.qZA(),
                    l.YNc(12, _t, 3, 2, "div", 6),
                    l.TgZ(13, "a", 7),
                    l._uU(14),
                    l.ALo(15, "translate"),
                    l.qZA()(),
                    l.TgZ(16, "div", 3)(17, "div", 5),
                    l._uU(18),
                    l.ALo(19, "translate"),
                    l.qZA(),
                    l.TgZ(20, "a", 8),
                    l.NdJ("click", function() {
                        return C.closeMenu()
                    }),
                    l.TgZ(21, "div", 9),
                    l._uU(22),
                    l.ALo(23, "translate"),
                    l.qZA()()(),
                    l.TgZ(24, "div", 3)(25, "div", 5),
                    l._uU(26),
                    l.ALo(27, "translate"),
                    l.qZA(),
                    l.TgZ(28, "a", 10),
                    l.NdJ("click", function() {
                        return C.closeMenu()
                    }),
                    l.TgZ(29, "div", 9),
                    l._uU(30),
                    l.ALo(31, "translate"),
                    l.qZA()(),
                    l.TgZ(32, "div", 9),
                    l._uU(33),
                    l.ALo(34, "translate"),
                    l.qZA(),
                    l.YNc(35, rt, 4, 3, "a", 11),
                    l.YNc(36, It, 4, 3, "a", 12),
                    l.qZA()()(),
                    l.TgZ(37, "i", 13),
                    l.NdJ("click", function() {
                        return C.openMenu()
                    }),
                    l.TgZ(38, "span", 14),
                    l.Hsn(39),
                    l.qZA()()()),
                    2 & c && (l.xp6(1),
                    l.Q6J("visible", C.display)("baseZIndex", 10)("position", "ar" === C.lang ? "right" : "left"),
                    l.xp6(5),
                    l.hij(" ", l.lcZ(7, 14, "sideMenu.home"), " "),
                    l.xp6(4),
                    l.hij(" ", l.lcZ(11, 16, "sideMenu.categories"), " "),
                    l.xp6(2),
                    l.Q6J("ngForOf", C.categories),
                    l.xp6(2),
                    l.hij(" ", l.lcZ(15, 18, "sideMenu.browseAllCategories"), ""),
                    l.xp6(4),
                    l.hij(" ", l.lcZ(19, 20, "sideMenu.merchants"), " "),
                    l.xp6(4),
                    l.hij(" ", l.lcZ(23, 22, "sideMenu.allMerchants"), " "),
                    l.xp6(4),
                    l.hij(" ", l.lcZ(27, 24, "sideMenu.help"), " "),
                    l.xp6(4),
                    l.hij(" ", l.lcZ(31, 26, "sideMenu.yourAccount"), " "),
                    l.xp6(3),
                    l.hij(" ", l.lcZ(34, 28, "sideMenu.customerService"), " "),
                    l.xp6(2),
                    l.Q6J("ngIf", !C.loggedIn),
                    l.xp6(1),
                    l.Q6J("ngIf", C.loggedIn))
                },
                dependencies: [z.sg, z.O5, Ze.Y, Be.yS, ye.X$],
                styles: [".side-menu[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]{display:flex;width:100%;flex-direction:column;justify-content:center;align-items:start;border-bottom:1px solid lightgray}.side-menu[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{font-family:var(--bold-font);font-size:16px;color:#000}.side-menu[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]   .category[_ngcontent-%COMP%]{font-size:15px;color:var(--main-color)}.side-menu[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:var(--main-color);display:block;text-decoration:none;cursor:pointer}.side-menu[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:visited{color:var(--main-color)}@media screen and (max-width: 768px){.pi-pi-text[_ngcontent-%COMP%]{display:none}}"]
            }),
            M
        }
        )();
        function qe(M, h) {
            1 & M && (l.TgZ(0, "div")(1, "app-side-menu"),
            l._uU(2),
            l.ALo(3, "translate"),
            l.qZA()()),
            2 & M && (l.xp6(2),
            l.Oqu(l.lcZ(3, 1, "navbar.all")))
        }
        function be(M, h) {
            if (1 & M && (l.TgZ(0, "a", 5),
            l._uU(1),
            l.qZA()),
            2 & M) {
                const c = l.oxw().$implicit;
                l.MGl("routerLink", "/category/", c.id, ""),
                l.xp6(1),
                l.Oqu(c.categoryName)
            }
        }
        function pe(M, h) {
            if (1 & M) {
                const c = l.EpF();
                l.TgZ(0, "span", 7),
                l.NdJ("mouseenter", function() {
                    l.CHM(c);
                    const L = l.oxw(4);
                    return l.KtG(L.ShowCategory = !0)
                })("mouseleave", function() {
                    l.CHM(c);
                    const L = l.oxw(4);
                    return l.KtG(L.ShowCategory = !1)
                }),
                l.YNc(1, be, 2, 2, "a", 4),
                l.qZA()
            }
            if (2 & M) {
                const c = l.oxw(3).$implicit
                  , C = l.oxw();
                l.xp6(1),
                l.Q6J("ngIf", !c.isVirtual && C.ShowCategory)
            }
        }
        function pt(M, h) {
            if (1 & M && (l.TgZ(0, "span"),
            l.YNc(1, pe, 2, 1, "span", 6),
            l.qZA()),
            2 & M) {
                const c = l.oxw(2).$implicit;
                l.xp6(1),
                l.Q6J("ngForOf", c.categories)
            }
        }
        function Mt(M, h) {
            if (1 & M && (l.TgZ(0, "a", 5),
            l._uU(1),
            l.YNc(2, pt, 2, 1, "span", 1),
            l.qZA()),
            2 & M) {
                const c = l.oxw().$implicit;
                l.MGl("routerLink", "/category/", c.id, ""),
                l.xp6(1),
                l.hij("", c.categoryName, " "),
                l.xp6(1),
                l.Q6J("ngIf", c.categories.length > 0)
            }
        }
        function kt(M, h) {
            if (1 & M && (l.TgZ(0, "li", 3),
            l.YNc(1, Mt, 3, 3, "a", 4),
            l.qZA()),
            2 & M) {
                const c = h.$implicit;
                l.xp6(1),
                l.Q6J("ngIf", !c.isVirtual)
            }
        }
        let Xt = (()=>{
            class M {
                constructor(c, C, L, ie) {
                    this.store = c,
                    this.translate = C,
                    this.mainDataService = L,
                    this.messageService = ie,
                    this.categories = [],
                    this.isShop = !1,
                    this.ShowCategory = !1
                }
                ngOnInit() {
                    this.getMainData()
                }
                ngAfterViewInit() {
                    setTimeout(()=>{
                        this.store.subscription("categories").subscribe({
                            next: c=>{
                                this.categories = c,
                                console.log(this.categories, " 4", c)
                            }
                            ,
                            error: c=>{
                                console.error(c)
                            }
                        })
                    }
                    , 1)
                }
                getMainData() {
                    this.mainDataService.getInitialData().subscribe({
                        next: c=>{
                            console.log("is >>" + c),
                            console.log("isshop >>>>>>> " + c.data.isShop),
                            this.isShop = c.data.isShop,
                            this.store.set("isShop", this.isShop)
                        }
                        ,
                        error: c=>{
                            console.error(c),
                            this.messageService.add({
                                severity: "error",
                                summary: this.translate.instant("ErrorMessages.fetchError"),
                                detail: c.message
                            })
                        }
                        ,
                        complete: ()=>console.log("MainData complete")
                    })
                }
            }
            return M.\u0275fac = function(c) {
                return new (c || M)(l.Y36(Ke.d),l.Y36(ye.sK),l.Y36(ze.i),l.Y36(ot.ez))
            }
            ,
            M.\u0275cmp = l.Xpm({
                type: M,
                selectors: [["app-navbar"]],
                decls: 6,
                vars: 2,
                consts: [[1, "navbar"], [4, "ngIf"], ["class", "ul-mobile", 4, "ngFor", "ngForOf"], [1, "ul-mobile"], [3, "routerLink", 4, "ngIf"], [3, "routerLink"], [3, "mouseenter", "mouseleave", 4, "ngFor", "ngForOf"], [3, "mouseenter", "mouseleave"]],
                template: function(c, C) {
                    1 & c && (l.TgZ(0, "section", 0)(1, "ul")(2, "li")(3, "a"),
                    l.YNc(4, qe, 4, 3, "div", 1),
                    l.qZA()(),
                    l.YNc(5, kt, 2, 1, "li", 2),
                    l.qZA()()),
                    2 & c && (l.xp6(4),
                    l.Q6J("ngIf", !C.isShop),
                    l.xp6(1),
                    l.Q6J("ngForOf", C.categories))
                },
                dependencies: [z.sg, z.O5, Be.yS, ft, ye.X$],
                styles: [".navbar[_ngcontent-%COMP%]{width:100%;display:flex;align-content:center;align-items:center}.navbar[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{display:flex;flex-wrap:nowrap;overflow-x:scroll;width:100%;list-style-type:none;margin:0;padding:5px 0;background-color:var(--navbar_bgcolor)}.navbar[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{float:left}.navbar[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{display:block;color:var(--navbar_txtcolor);text-align:center;white-space:nowrap;padding:5px 10px;text-decoration:none;font-size:16px;cursor:pointer}@media only screen and (max-width: 786px){.ul-mobile[_ngcontent-%COMP%]{display:none!important}}"]
            }),
            M
        }
        )();
        var bt = D(773)
          , Kt = D(9906)
          , k = D(1154);
        function de(M, h) {
            if (1 & M) {
                const c = l.EpF();
                l.TgZ(0, "div", 10),
                l.NdJ("mousedown", function() {
                    const ie = l.CHM(c).$implicit
                      , _e = l.oxw(2);
                    return l.KtG(_e.NavigateToProduct(ie.specProductId))
                }),
                l.TgZ(1, "div")(2, "span", 11),
                l._uU(3),
                l.qZA()(),
                l.TgZ(4, "div")(5, "span", 12),
                l._uU(6),
                l.ALo(7, "translate"),
                l.qZA(),
                l.TgZ(8, "span", 13),
                l._uU(9),
                l.qZA()(),
                l._UZ(10, "p-divider"),
                l.qZA()
            }
            if (2 & M) {
                const c = h.$implicit;
                l.xp6(3),
                l.Oqu(c.name),
                l.xp6(3),
                l.Oqu(l.lcZ(7, 3, "search.in")),
                l.xp6(3),
                l.Oqu(c.categoryName)
            }
        }
        function he(M, h) {
            if (1 & M && (l.ynx(0),
            l.TgZ(1, "div", 6),
            l._UZ(2, "div", 7),
            l.YNc(3, de, 11, 5, "div", 8),
            l.qZA(),
            l._UZ(4, "div", 9),
            l.BQk()),
            2 & M) {
                const c = l.oxw();
                l.xp6(3),
                l.Q6J("ngForOf", c.searchResult)
            }
        }
        let Ie = (()=>{
            class M {
                constructor(c, C, L, ie, _e) {
                    this.store = c,
                    this.productService = C,
                    this.messageService = L,
                    this.translate = ie,
                    this.router = _e,
                    this.search = "",
                    this.displayResult = !1,
                    this.searchResult = [],
                    this.productId = 0,
                    this.onResult = new l.vpe,
                    this.router.routeReuseStrategy.shouldReuseRoute = function() {
                        return !1
                    }
                }
                ngOnInit() {}
                ngAfterViewInit() {
                    this.store.subscription("search").subscribe(c=>{
                        this.search = c
                    }
                    )
                }
                searchProduct(c) {
                    c.target.value && this.productService.FilterWithProductName(c.target.value).subscribe({
                        next: C=>{
                            this.searchResult = C.data.records,
                            this.showResultPopUp(!0)
                        }
                        ,
                        error: C=>{
                            this.messageService.add({
                                severity: "error",
                                summary: this.translate.instant("ErrorMessages.fetchError"),
                                detail: C.message
                            })
                        }
                        ,
                        complete: ()=>console.log("Filter")
                    })
                }
                showResultPopUp(c) {
                    this.displayResult = c,
                    this.onResult.emit(this.displayResult)
                }
                NavigateToProduct(c) {
                    this.router.navigate(["product", c]),
                    this.showResultPopUp(!1)
                }
                closeDropDown() {
                    this.showResultPopUp(!1),
                    console.log("clicked outside")
                }
            }
            return M.\u0275fac = function(c) {
                return new (c || M)(l.Y36(Ke.d),l.Y36(bt.M),l.Y36(ot.ez),l.Y36(ye.sK),l.Y36(Be.F0))
            }
            ,
            M.\u0275cmp = l.Xpm({
                type: M,
                selectors: [["app-search"]],
                outputs: {
                    onResult: "onResult"
                },
                decls: 7,
                vars: 5,
                consts: [[1, "product-search", "p-inputgroup"], [1, "p-inputgroup-addon", "color"], [1, "pi", "pi-search", 3, "mousedown"], ["autocomplete", "off", 2, "display", "contents"], ["type", "text", "autocomplete", "new-password", "autocapitalize", "off", "autocorrect", "off", "spellcheck", "false", "pInputText", "", 3, "ngModel", "placeholder", "keyup", "ngModelChange", "blur"], [4, "ngIf"], [1, "search-results"], [1, "my-3"], ["style", "cursor: pointer", "class", "px-2 padding-y-5", 3, "mousedown", 4, "ngFor", "ngForOf"], [1, "overlay"], [1, "px-2", "padding-y-5", 2, "cursor", "pointer", 3, "mousedown"], [1, "medium-font", "font-size-14"], [1, "prop-color"], [1, "main-color", "font-size-14", "mx-1", 2, "color", "#004f71", "font-weight", "bold"]],
                template: function(c, C) {
                    1 & c && (l.TgZ(0, "div", 0)(1, "span", 1)(2, "i", 2),
                    l.NdJ("mousedown", function(ie) {
                        return C.searchProduct(ie)
                    }),
                    l.qZA()(),
                    l.TgZ(3, "form", 3)(4, "input", 4),
                    l.NdJ("keyup", function(ie) {
                        return C.searchProduct(ie)
                    })("ngModelChange", function(ie) {
                        return C.search = ie
                    })("blur", function() {
                        return C.closeDropDown()
                    }),
                    l.ALo(5, "translate"),
                    l.qZA()(),
                    l.YNc(6, he, 5, 1, "ng-container", 5),
                    l.qZA()),
                    2 & c && (l.xp6(4),
                    l.s9C("placeholder", l.lcZ(5, 3, "search.searchOnMoMoMarket")),
                    l.Q6J("ngModel", C.search),
                    l.xp6(2),
                    l.Q6J("ngIf", C.displayResult))
                },
                dependencies: [z.sg, z.O5, Kt.o, k.i, Oe._Y, Oe.Fj, Oe.JJ, Oe.JL, Oe.On, Oe.F, ye.X$],
                styles: [".product-search[_ngcontent-%COMP%]{position:relative}.product-search[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;background:#f5f5f5 0 0 no-repeat padding-box!important;box-shadow:0 2px 4px #00000003!important;border:unset;padding:0 10px;font-size:12px;z-index:2;border-radius:0 5px 5px 0;font-family:main-light}.product-search[_ngcontent-%COMP%]   [_ngcontent-%COMP%]::placeholder{color:#000;font-weight:700;opacity:1}.product-search[_ngcontent-%COMP%]   .color[_ngcontent-%COMP%]{background-color:#f5f5f5}.product-search[_ngcontent-%COMP%]   .color[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{color:#000}.product-search[_ngcontent-%COMP%]   .search-results[_ngcontent-%COMP%]{display:block;position:absolute;width:100%;height:auto;top:35px;max-height:50vh;overflow-y:auto;background-color:#fff;border:1px solid rgba(151,151,151,.168627451);border-radius:5px;z-index:9999}.product-search[_ngcontent-%COMP%]   .overlay[_ngcontent-%COMP%]{position:fixed;width:100%;height:100%;top:0;left:0;background-color:#00000080;opacity:.4;z-index:1}.product-search[_ngcontent-%COMP%]   .prop-color[_ngcontent-%COMP%]{color:#a3a3a3}"]
            }),
            M
        }
        )();
        function gt(M, h) {
            if (1 & M && (l.TgZ(0, "option", 34),
            l._uU(1),
            l.qZA()),
            2 & M) {
                const c = h.$implicit;
                l.Q6J("value", c.isoCode)("selected", c.selected),
                l.xp6(1),
                l.hij(" ", c.name, " ")
            }
        }
        function Qe(M, h) {
            1 & M && (l.ynx(0),
            l.TgZ(1, "a", 35),
            l._UZ(2, "i", 36),
            l.TgZ(3, "div"),
            l._uU(4, "Y'ello,"),
            l._UZ(5, "br"),
            l._uU(6),
            l.ALo(7, "translate"),
            l.qZA()(),
            l.BQk()),
            2 & M && (l.xp6(6),
            l.Oqu(l.lcZ(7, 1, "header.signIn")))
        }
        function Tt(M, h) {
            if (1 & M) {
                const c = l.EpF();
                l.TgZ(0, "div", 44)(1, "div", 45),
                l.NdJ("click", function() {
                    l.CHM(c),
                    l.oxw();
                    const L = l.MAs(3);
                    return l.KtG(L.hide())
                }),
                l.TgZ(2, "a", 46),
                l._uU(3),
                l.ALo(4, "translate"),
                l.qZA()(),
                l.TgZ(5, "div", 45),
                l.NdJ("click", function() {
                    l.CHM(c),
                    l.oxw();
                    const L = l.MAs(3);
                    return l.KtG(L.hide())
                }),
                l.TgZ(6, "a", 47),
                l._uU(7),
                l.ALo(8, "translate"),
                l.qZA()(),
                l.TgZ(9, "div", 45),
                l.NdJ("click", function() {
                    l.CHM(c),
                    l.oxw();
                    const L = l.MAs(3);
                    return l.KtG(L.hide())
                }),
                l.TgZ(10, "a", 48),
                l._uU(11),
                l.ALo(12, "translate"),
                l.qZA()(),
                l.TgZ(13, "div", 45),
                l.NdJ("click", function() {
                    l.CHM(c),
                    l.oxw();
                    const L = l.MAs(3);
                    return l.KtG(L.hide())
                }),
                l.TgZ(14, "a", 49),
                l.NdJ("click", function() {
                    l.CHM(c);
                    const L = l.oxw(3);
                    return l.KtG(L.logOut())
                }),
                l._uU(15),
                l.ALo(16, "translate"),
                l.qZA()()()
            }
            2 & M && (l.xp6(3),
            l.Oqu(l.lcZ(4, 4, "header.yourOrders")),
            l.xp6(4),
            l.Oqu(l.lcZ(8, 6, "header.yourAddresses")),
            l.xp6(4),
            l.Oqu(l.lcZ(12, 8, "header.yourDetails")),
            l.xp6(4),
            l.Oqu(l.lcZ(16, 10, "header.logout")))
        }
        function wn(M, h) {
            if (1 & M) {
                const c = l.EpF();
                l.ynx(0),
                l.TgZ(1, "div", 37)(2, "p-overlayPanel", 38, 39),
                l.YNc(4, Tt, 17, 12, "ng-template", 40),
                l.qZA(),
                l.TgZ(5, "span", 41),
                l.NdJ("click", function(L) {
                    l.CHM(c);
                    const ie = l.MAs(3);
                    return l.KtG(ie.toggle(L))
                }),
                l.TgZ(6, "i", 42)(7, "span", 43),
                l._uU(8),
                l.qZA()()()(),
                l.BQk()
            }
            if (2 & M) {
                const c = l.oxw(2);
                l.xp6(2),
                l.Q6J("appendTo", "body"),
                l.xp6(6),
                l.Oqu(c.Name)
            }
        }
        function an(M, h) {
            if (1 & M && (l.TgZ(0, "option", 50),
            l._uU(1),
            l.qZA()),
            2 & M) {
                const c = h.$implicit;
                l.Q6J("value", c),
                l.xp6(1),
                l.hij(" ", c, " ")
            }
        }
        const In = function(M) {
            return {
                "full-height": M
            }
        };
        function $t(M, h) {
            if (1 & M) {
                const c = l.EpF();
                l.TgZ(0, "header", 1)(1, "div", 2)(2, "div", 3)(3, "a", 4, 5),
                l._UZ(5, "img", 6),
                l.qZA(),
                l.TgZ(6, "div", 7),
                l.O4$(),
                l.TgZ(7, "svg", 8)(8, "g", 9),
                l._UZ(9, "path", 10)(10, "path", 11),
                l.qZA(),
                l.TgZ(11, "g", 12),
                l._UZ(12, "path", 13)(13, "circle", 14)(14, "path", 15),
                l.qZA()(),
                l.kcU(),
                l.TgZ(15, "div", 16)(16, "span", 17),
                l._uU(17, "Deliver to"),
                l.qZA(),
                l.TgZ(18, "select", 18),
                l.YNc(19, gt, 2, 3, "option", 19),
                l.qZA()()()(),
                l.TgZ(20, "div", 20),
                l.YNc(21, Qe, 8, 3, "ng-container", 21),
                l.YNc(22, wn, 9, 2, "ng-container", 21),
                l.TgZ(23, "a", 22)(24, "span", 23),
                l._UZ(25, "i", 24),
                l._uU(26),
                l.ALo(27, "translate"),
                l.qZA()()(),
                l.TgZ(28, "div", 25)(29, "app-search", 26),
                l.NdJ("onResult", function(L) {
                    l.CHM(c);
                    const ie = l.oxw();
                    return l.KtG(ie.isActiveSearch = L)
                }),
                l.qZA(),
                l.TgZ(30, "select", 27),
                l.YNc(31, an, 2, 2, "option", 28),
                l.qZA()()(),
                l.TgZ(32, "div", 29)(33, "app-search", 26),
                l.NdJ("onResult", function(L) {
                    l.CHM(c);
                    const ie = l.oxw();
                    return l.KtG(ie.isActiveSearch = L)
                }),
                l.qZA()(),
                l.TgZ(34, "div", 30)(35, "div", 31)(36, "div", 32),
                l._UZ(37, "app-navbar", 33),
                l.qZA()()()()
            }
            if (2 & M) {
                const c = l.oxw();
                l.Q6J("ngClass", l.VKq(10, In, c.isActiveSearch)),
                l.xp6(5),
                l.s9C("src", c.baseUrl + c.logo, l.LSH),
                l.xp6(14),
                l.Q6J("ngForOf", c.countries),
                l.xp6(2),
                l.Q6J("ngIf", !c.authToken),
                l.xp6(1),
                l.Q6J("ngIf", c.authToken),
                l.xp6(3),
                l.s9C("value", c.products.length.toString()),
                l.xp6(1),
                l.hij(" ", l.lcZ(27, 8, "header.cart"), " "),
                l.xp6(5),
                l.Q6J("ngForOf", c.languages)
            }
        }
        function gn(M, h) {
            if (1 & M && (l.TgZ(0, "option", 34),
            l._uU(1),
            l.qZA()),
            2 & M) {
                const c = h.$implicit;
                l.Q6J("value", c.isoCode)("selected", c.selected),
                l.xp6(1),
                l.hij(" ", c.name, " ")
            }
        }
        function qn(M, h) {
            1 & M && (l.ynx(0),
            l.TgZ(1, "a", 35),
            l._UZ(2, "i", 36),
            l.TgZ(3, "div"),
            l._uU(4, "Y'ello,"),
            l._UZ(5, "br"),
            l._uU(6),
            l.ALo(7, "translate"),
            l.qZA()(),
            l.BQk()),
            2 & M && (l.xp6(6),
            l.Oqu(l.lcZ(7, 1, "header.signIn")))
        }
        function xn(M, h) {
            if (1 & M) {
                const c = l.EpF();
                l.TgZ(0, "div", 44)(1, "div", 45),
                l.NdJ("click", function() {
                    l.CHM(c),
                    l.oxw();
                    const L = l.MAs(3);
                    return l.KtG(L.hide())
                }),
                l.TgZ(2, "a", 46),
                l._uU(3),
                l.ALo(4, "translate"),
                l.qZA()(),
                l.TgZ(5, "div", 45),
                l.NdJ("click", function() {
                    l.CHM(c),
                    l.oxw();
                    const L = l.MAs(3);
                    return l.KtG(L.hide())
                }),
                l.TgZ(6, "a", 47),
                l._uU(7),
                l.ALo(8, "translate"),
                l.qZA()(),
                l.TgZ(9, "div", 45),
                l.NdJ("click", function() {
                    l.CHM(c),
                    l.oxw();
                    const L = l.MAs(3);
                    return l.KtG(L.hide())
                }),
                l.TgZ(10, "a", 48),
                l._uU(11),
                l.ALo(12, "translate"),
                l.qZA()(),
                l.TgZ(13, "div", 45),
                l.NdJ("click", function() {
                    l.CHM(c),
                    l.oxw();
                    const L = l.MAs(3);
                    return l.KtG(L.hide())
                }),
                l.TgZ(14, "a", 49),
                l.NdJ("click", function() {
                    l.CHM(c);
                    const L = l.oxw(3);
                    return l.KtG(L.logOut())
                }),
                l._uU(15),
                l.ALo(16, "translate"),
                l.qZA()()()
            }
            2 & M && (l.xp6(3),
            l.Oqu(l.lcZ(4, 4, "header.yourOrders")),
            l.xp6(4),
            l.Oqu(l.lcZ(8, 6, "header.yourAddresses")),
            l.xp6(4),
            l.Oqu(l.lcZ(12, 8, "header.yourDetails")),
            l.xp6(4),
            l.Oqu(l.lcZ(16, 10, "header.logout")))
        }
        function Xn(M, h) {
            if (1 & M) {
                const c = l.EpF();
                l.ynx(0),
                l.TgZ(1, "div", 37)(2, "p-overlayPanel", 38, 39),
                l.YNc(4, xn, 17, 12, "ng-template", 40),
                l.qZA(),
                l.TgZ(5, "span", 41),
                l.NdJ("click", function(L) {
                    l.CHM(c);
                    const ie = l.MAs(3);
                    return l.KtG(ie.toggle(L))
                }),
                l.TgZ(6, "i", 42)(7, "span", 43),
                l._uU(8),
                l.qZA()()()(),
                l.BQk()
            }
            if (2 & M) {
                const c = l.oxw(2);
                l.xp6(2),
                l.Q6J("appendTo", "body"),
                l.xp6(6),
                l.Oqu(c.Name)
            }
        }
        function vi(M, h) {
            if (1 & M && (l.TgZ(0, "option", 50),
            l._uU(1),
            l.qZA()),
            2 & M) {
                const c = h.$implicit;
                l.Q6J("value", c),
                l.xp6(1),
                l.hij(" ", c, " ")
            }
        }
        function Tn(M, h) {
            if (1 & M) {
                const c = l.EpF();
                l.TgZ(0, "header", 1)(1, "div", 51)(2, "div", 52)(3, "a", 4, 5),
                l._UZ(5, "img", 6),
                l.qZA()(),
                l.TgZ(6, "div", 52)(7, "div", 16)(8, "span", 17),
                l._uU(9, "Deliver to"),
                l.qZA(),
                l.TgZ(10, "select", 18),
                l.YNc(11, gn, 2, 3, "option", 19),
                l.qZA()()()(),
                l.TgZ(12, "div", 53)(13, "div", 52),
                l.YNc(14, qn, 8, 3, "ng-container", 21),
                l.YNc(15, Xn, 9, 2, "ng-container", 21),
                l.qZA(),
                l.TgZ(16, "div", 52)(17, "a", 22)(18, "span", 23),
                l._UZ(19, "i", 24),
                l._uU(20),
                l.ALo(21, "translate"),
                l.qZA()()(),
                l.TgZ(22, "div", 52)(23, "select", 27),
                l.YNc(24, vi, 2, 2, "option", 28),
                l.qZA()()(),
                l.TgZ(25, "div", 54)(26, "div", 52),
                l._UZ(27, "app-navbar", 33),
                l.qZA(),
                l.TgZ(28, "div", 55)(29, "app-search", 26),
                l.NdJ("onResult", function(L) {
                    l.CHM(c);
                    const ie = l.oxw();
                    return l.KtG(ie.isActiveSearch = L)
                }),
                l.qZA()()()()
            }
            if (2 & M) {
                const c = l.oxw();
                l.Q6J("ngClass", l.VKq(10, In, c.isActiveSearch)),
                l.xp6(5),
                l.s9C("src", c.baseUrl + c.logo, l.LSH),
                l.xp6(6),
                l.Q6J("ngForOf", c.countries),
                l.xp6(3),
                l.Q6J("ngIf", !c.authToken),
                l.xp6(1),
                l.Q6J("ngIf", c.authToken),
                l.xp6(4),
                l.s9C("value", c.products.length.toString()),
                l.xp6(1),
                l.hij(" ", l.lcZ(21, 8, "header.cart"), " "),
                l.xp6(4),
                l.Q6J("ngForOf", c.languages)
            }
        }
        let vt = (()=>{
            class M {
                constructor(c, C) {
                    this.store = c,
                    this.router = C,
                    this.subscription = [],
                    this.isActiveSearch = !1,
                    this.products = [],
                    this.authToken = "",
                    this.logo = "/Images/logo.png",
                    this.Name = "",
                    this.languages = ["English", "French"],
                    this.search = "",
                    this.geoCoder = new google.maps.Geocoder,
                    this.baseUrl = `${Re.N.apiEndPoint}`,
                    this.screenWidth = window.screen.width
                }
                ngOnInit() {
                    this.setCurrentLocation()
                }
                setCurrentLocation() {
                    "geolocation"in navigator && navigator.geolocation.getCurrentPosition(c=>{
                        this.Lat = c.coords.latitude,
                        this.Lng = c.coords.longitude,
                        this.zoom = 8,
                        this.getAddress(this.Lat, this.Lng)
                    }
                    )
                }
                getAddress(c, C) {
                    this.geoCoder.geocode({
                        location: {
                            lat: c,
                            lng: C
                        }
                    }, (L,ie)=>{
                        "OK" === ie ? L[0] ? (this.zoom = 12,
                        this.deliverTo = {
                            name: L[L.length - 1].formatted_address,
                            isoCode: L[L.length - 1].address_components[0].short_name
                        },
                        this.subscription[5] = this.store.subscription("allCountryTenants").subscribe({
                            next: _e=>{
                                this.countries = _e,
                                this.countries.forEach(we=>{
                                    we.isoCode === this.deliverTo.isoCode && (we.selected = !0)
                                }
                                )
                            }
                            ,
                            error: _e=>{
                                console.error(_e)
                            }
                        }),
                        console.log(this.countries)) : window.alert("No results found") : window.alert("Geocoder failed due to: " + ie)
                    }
                    )
                }
                ngAfterViewInit() {
                    setTimeout(()=>{
                        this.subscription[0] = this.store.subscription("authToken").subscribe({
                            next: c=>{
                                this.authToken = c
                            }
                            ,
                            error: c=>{
                                console.error(c)
                            }
                        }),
                        this.subscription[1] = this.store.subscription("profile").subscribe({
                            next: c=>{
                                console.log("user", c),
                                this.user = c,
                                this.Name = c?.name
                            }
                            ,
                            error: c=>{
                                console.error(c)
                            }
                        }),
                        this.subscription[2] = this.store.subscription("cartProducts").subscribe({
                            next: c=>{
                                this.products = c
                            }
                            ,
                            error: c=>{
                                console.error(c)
                            }
                        }),
                        this.subscription[3] = this.store.subscription("authToken").subscribe({
                            next: c=>{
                                this.authToken = c
                            }
                            ,
                            error: c=>{
                                console.error(c)
                            }
                        }),
                        this.subscription[4] = this.store.subscription("mainData").subscribe({
                            next: c=>{
                                var C = c?.find(L=>"logo" === L.key.toLowerCase());
                                C && (this.logo = "/" + (C.displayName || this.logo))
                            }
                            ,
                            error: c=>{
                                console.error(c)
                            }
                        })
                    }
                    , 1)
                }
                ngOnDestroy() {
                    this.subscription.forEach(c=>{
                        c.unsubscribe()
                    }
                    )
                }
                logOut() {
                    sessionStorage.clear(),
                    this.store.set("authToken", ""),
                    this.store.set("profile", ""),
                    this.router.navigate(["/"]),
                    this.store.set("cartProducts", ""),
                    localStorage.setItem("sessionId", ""),
                    localStorage.setItem("addedProducts", "")
                }
            }
            return M.\u0275fac = function(c) {
                return new (c || M)(l.Y36(Ke.d),l.Y36(Be.F0))
            }
            ,
            M.\u0275cmp = l.Xpm({
                type: M,
                selectors: [["app-header"]],
                decls: 2,
                vars: 2,
                consts: [["class", "header px-2 pt-1", "style", "overflow-y: unset !important", 3, "ngClass", 4, "ngIf"], [1, "header", "px-2", "pt-1", 2, "overflow-y", "unset !important", 3, "ngClass"], [1, "grid", "flex", "bg-main-color", "flex-wrap", "align-items-center", "py-1"], [1, "xl:col-auto", "lg:col-auto", "md:col-auto", "gap-4", "flex", "align-items-center", "px-2", "align-self-center", "xl:flex", "md:flex"], ["routerLink", "/", 1, "w-full", "md:mx-auto"], ["logoLink", ""], ["alt", "", "alt", "Logo", 1, "logo", 3, "src"], [1, "location", "gap-2", "w-full", "md:mx-auto"], ["xmlns", "http://www.w3.org/2000/svg", "id", "a559119926c5ebd4e4ff6e365c5da3c1", "width", "15.999", "height", "16", "viewBox", "0 0 15.999 16"], ["id", "Group_1082", "data-name", "Group 1082"], ["id", "Path_9826", "data-name", "Path 9826", "d", "M0,0H16V16H0Z", "fill", "none"], ["id", "Path_9827", "data-name", "Path 9827", "d", "M0,0H16V16H0Z", "fill", "none"], ["id", "Group_1083", "data-name", "Group 1083", "transform", "translate(1.678 0.668)"], ["id", "Path_9828", "data-name", "Path 9828", "d", "M10.334,12.335a.667.667,0,0,1-.607-.391C9.272,10.944,7,5.875,7,4.335a3.333,3.333,0,1,1,6.666,0c0,1.54-2.271,6.609-2.727,7.609a.663.663,0,0,1-.607.391Zm0-10a2,2,0,0,0-2,2,27.475,27.475,0,0,0,2,5.684,27.461,27.461,0,0,0,2-5.684A2,2,0,0,0,10.334,2.335Z", "transform", "translate(-4.012 -1.002)", "fill", "#fff"], ["id", "Ellipse_15", "data-name", "Ellipse 15", "cx", "1.153", "cy", "1.153", "r", "1.153", "transform", "translate(5.096 2.407)", "fill", "#fff"], ["id", "Path_9829", "data-name", "Path 9829", "d", "M13.829,18H3.851a1.333,1.333,0,0,1-1.225-1.859l1.428-3.332A1.33,1.33,0,0,1,5.28,12h.549v1.333H5.28L3.851,16.669h9.978L12.4,13.336h-.571V12H12.4a1.33,1.33,0,0,1,1.225.809l1.428,3.333A1.333,1.333,0,0,1,13.829,18Z", "transform", "translate(-2.517 -4.669)", "fill", "#fff"], [1, "delivery"], [1, "deliver-to"], ["name", "country", "id", "country", 1, "select-languageX", "inputX", "newSelectStyle"], [3, "value", "selected", 4, "ngFor", "ngForOf"], [1, "xl:col-2", "lg:col-2", "md:col-3", "md:flex-order-2", "flex", "align-items-center", "justify-content-center", "actions", "px-2", "align-self-center", "xl:w-auto", "lg:w-auto", "md:w-full"], [4, "ngIf"], ["routerLink", "/cart", 1, "cart_route"], [1, "mx-3", "cursor-pointer"], ["pBadge", "", 1, "pi", "pi-shopping-cart", "sign-in-logo", 3, "value"], [1, "xl:col", "lg:col", "md:col-4", "md:flex-order-1", "flex-order-2", "flex", "align-items-center", "search-bar", "align-self-center"], [1, "w-full", 3, "onResult"], ["name", "language", "id", "language", 1, "select-language"], [3, "value", 4, "ngFor", "ngForOf"], [1, "row", "navbar-mobile"], [1, "grid"], [1, "col-12", "px-0", "pb-0"], [1, "flex", "flex-row"], [1, "w-full"], [3, "value", "selected"], ["routerLink", "/login", 1, "actions", "sign-in-a"], [1, "pi", "pi-user", "sign-in-logo"], [1, "actions"], [3, "appendTo"], ["op", ""], ["pTemplate", ""], [1, "cursor-pointer", 3, "click"], [1, "pi", "pi-user"], [1, "ml-2"], [1, "profile-menu"], [1, "my-2", 3, "click"], ["routerLink", "/orders", 1, "cursor-pointer", "no-underline", "main-color", "font-size-15px", "regular-font"], ["routerLink", "/account/address", 1, "cursor-pointer", "no-underline", "main-color", "font-size-15px", "regular-font"], ["routerLink", "/account", 1, "cursor-pointer", "no-underline", "main-color", "font-size-15px", "regular-font"], [1, "cursor-pointer", "no-underline", "main-color", "font-size-15px", "regular-font", 3, "click"], [3, "value"], [1, "d-flex", "justify-content-space-between", "bg-main-color", "mb-3"], [1, "d-inline-flex"], [1, "d-flex", "bg-main-color", "justify-content-space-between", "mb-3"], [1, "d-flex", "bg-main-color"], [1, "d-contents"]],
                template: function(c, C) {
                    1 & c && (l.YNc(0, $t, 38, 12, "header", 0),
                    l.YNc(1, Tn, 30, 12, "header", 0)),
                    2 & c && (l.Q6J("ngIf", C.screenWidth > 768),
                    l.xp6(1),
                    l.Q6J("ngIf", C.screenWidth < 768))
                },
                dependencies: [z.mk, z.sg, z.O5, ut.lM, ot.jx, Ce.T, Oe.YN, Oe.Kr, Be.yS, Xt, Ie, ye.X$],
                styles: [".header[_ngcontent-%COMP%]{position:fixed;left:0;width:100%;z-index:9999;background:#1a445e}.header[_ngcontent-%COMP%]   .logo[_ngcontent-%COMP%]{margin-top:10px;width:155px;height:35px;border-radius:3px;object-fit:contain}.header[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%], .header[_ngcontent-%COMP%]   .cart_route[_ngcontent-%COMP%]{color:#fafafa!important;text-decoration:none}.header[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   a[_ngcontent-%COMP%], .header[_ngcontent-%COMP%]   .cart_route[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{white-space:pre}.navbar-mobile[_ngcontent-%COMP%]{display:none}  .p-overlaypanel{right:0!important;left:auto!important}.sign-in-logo[_ngcontent-%COMP%]{width:35px;font-size:25px}.sign-in-a[_ngcontent-%COMP%]{display:contents}@media only screen and (max-width: 786px){.search-bar[_ngcontent-%COMP%]{display:none!important}.header[_ngcontent-%COMP%]   .logo[_ngcontent-%COMP%]{margin-top:10px;width:155px;height:35px;border-radius:3px;object-fit:contain}.cart-label[_ngcontent-%COMP%]{display:none}.navbar-mobile[_ngcontent-%COMP%]{display:contents}}.location[_ngcontent-%COMP%]{display:flex;align-items:center}.location[_ngcontent-%COMP%]   .delivery[_ngcontent-%COMP%]{display:flex;flex-flow:column;font-family:var(--regular-font)}.location[_ngcontent-%COMP%]   .delivery[_ngcontent-%COMP%]   .deliver-to[_ngcontent-%COMP%]{text-align:left;letter-spacing:0px;color:#fff;font-size:14px;font-weight:300}.location[_ngcontent-%COMP%]   .delivery[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:14px;color:#fff}.location[_ngcontent-%COMP%]   .delivery[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{color:#fff}.location[_ngcontent-%COMP%]   .down-arrow[_ngcontent-%COMP%]{margin-left:-15px;font-size:20px;width:20px;height:20px}.select-language[_ngcontent-%COMP%]{border:none;color:#fff;text-decoration:none;background:#1a445e;outline:none;font-weight:300;margin-left:25px}  .ng-trigger{z-index:99999!important}  .owl-theme .owl-nav.disabled+.owl-dots{margin-top:80px!important}select.newSelectStyle[_ngcontent-%COMP%]{background:transparent;border:0;width:100%;padding:0;margin:0}@media screen and (max-width: 768px){.header[_ngcontent-%COMP%]{z-index:12!important}.delivery[_ngcontent-%COMP%]{display:flex;flex-flow:column;width:100px}.delivery[_ngcontent-%COMP%]   .deliver-to[_ngcontent-%COMP%]{text-align:left;letter-spacing:0px;color:#fff;font-size:14px;font-weight:300}.delivery[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:14px;color:#fff}.delivery[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{color:#fff}.delivery[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]   option[_ngcontent-%COMP%]{color:#1a445e!important}}"]
            }),
            M
        }
        )();
        function Le(M, h) {
            1 & M && (l.TgZ(0, "div", 5)(1, "a", 16),
            l._uU(2),
            l.ALo(3, "translate"),
            l.qZA()()),
            2 & M && (l.xp6(2),
            l.Oqu(l.lcZ(3, 1, "footer.sellOnMomoMarket")))
        }
        let Ee = (()=>{
            class M {
                constructor(c, C) {
                    this.store = c,
                    this.router = C
                }
                ngOnInit() {}
                reloadCurrentPage(c, C) {
                    this.router.navigateByUrl("/", {
                        skipLocationChange: !0
                    }).then(()=>this.router.navigate(["/about-us/"], {
                        queryParams: {
                            pageId: c,
                            title: C
                        }
                    }))
                }
                navigatePage(c) {
                    this.router.navigateByUrl("/", {
                        skipLocationChange: !0
                    }).then(()=>this.router.navigate(["/" + c + "/"]))
                }
                ngAfterViewInit() {
                    setTimeout(()=>{
                        this.store.subscription("isShop").subscribe({
                            next: c=>this.isShop = c
                        })
                    }
                    , 10)
                }
                backToTop() {
                    const c = window.setInterval(()=>{
                        let C = window.pageYOffset;
                        C > 0 ? window.scrollTo(0, C - 50) : window.clearInterval(c)
                    }
                    , 10)
                }
            }
            return M.\u0275fac = function(c) {
                return new (c || M)(l.Y36(Ke.d),l.Y36(Be.F0))
            }
            ,
            M.\u0275cmp = l.Xpm({
                type: M,
                selectors: [["app-footer"]],
                decls: 52,
                vars: 25,
                consts: [[1, "footer"], [1, "to-top", "cursor-pointer", "pt-2", "pb-4", "flex", "flex-column", "justify-content-center", "align-items-center", 3, "click"], [1, "pi", "pi-angle-up"], [1, "content", "px-7", "grid", "mx-0", "justify-content-between", "align-items-center"], [1, "col-12", "md:col-9"], [1, "my-2"], [1, "no-underline", "regular-font", 3, "click"], ["class", "my-2", 4, "ngIf"], [1, "col-12", "md:col-3", "flex", "flex-row", "justify-content-center"], [1, "mx-3"], ["src", "./././././assets/images/payment-icons/momo.png", "width", "43", "height", "26", "alt", ""], ["src", "./././././assets/images/payment-icons/mastercard.png", "width", "43", "height", "26", "alt", ""], ["src", "./././././assets/images/payment-icons/visa.png", "width", "43", "height", "26", "alt", ""], [1, "copy-rights", "grid", "px-7", "mx-0"], [1, "flex", "col-12", "md:col-9", "align-items-center"], [1, "flex", "col-12", "md:col-3", "align-items-center"], [1, "no-underline", "regular-font"]],
                template: function(c, C) {
                    1 & c && (l.TgZ(0, "footer", 0)(1, "div", 1),
                    l.NdJ("click", function() {
                        return C.backToTop()
                    }),
                    l._UZ(2, "i", 2),
                    l.TgZ(3, "div"),
                    l._uU(4),
                    l.ALo(5, "translate"),
                    l.qZA()(),
                    l.TgZ(6, "div", 3)(7, "div", 4)(8, "div", 5)(9, "a", 6),
                    l.NdJ("click", function() {
                        return C.reloadCurrentPage(1, "Shipping and return")
                    }),
                    l._uU(10),
                    l.ALo(11, "translate"),
                    l.qZA()(),
                    l.YNc(12, Le, 4, 3, "div", 7),
                    l.TgZ(13, "div", 5)(14, "a", 6),
                    l.NdJ("click", function() {
                        return C.navigatePage("account")
                    }),
                    l._uU(15),
                    l.ALo(16, "translate"),
                    l.qZA()(),
                    l.TgZ(17, "div", 5)(18, "a", 6),
                    l.NdJ("click", function() {
                        return C.navigatePage("contact-us")
                    }),
                    l._uU(19),
                    l.ALo(20, "translate"),
                    l.qZA()(),
                    l.TgZ(21, "div", 5)(22, "a", 6),
                    l.NdJ("click", function() {
                        return C.reloadCurrentPage(4, "About us")
                    }),
                    l._uU(23),
                    l.ALo(24, "translate"),
                    l.qZA()()(),
                    l.TgZ(25, "div", 8)(26, "div", 9),
                    l._UZ(27, "img", 10),
                    l.qZA(),
                    l.TgZ(28, "div", 9),
                    l._UZ(29, "img", 11),
                    l.qZA(),
                    l.TgZ(30, "div", 9),
                    l._UZ(31, "img", 12),
                    l.qZA()()(),
                    l.TgZ(32, "div", 13)(33, "div", 14)(34, "span")(35, "div", 5)(36, "a", 6),
                    l.NdJ("click", function() {
                        return C.reloadCurrentPage(2, "Conditions of use")
                    }),
                    l._uU(37),
                    l.ALo(38, "translate"),
                    l.qZA()()(),
                    l.TgZ(39, "span", 9)(40, "div", 5)(41, "a", 6),
                    l.NdJ("click", function() {
                        return C.reloadCurrentPage(3, "Privacy policy")
                    }),
                    l._uU(42),
                    l.ALo(43, "translate"),
                    l.qZA()()(),
                    l.TgZ(44, "span", 9)(45, "div", 5)(46, "a", 6),
                    l.NdJ("click", function() {
                        return C.reloadCurrentPage(5, "Terms and Conditions")
                    }),
                    l._uU(47),
                    l.ALo(48, "translate"),
                    l.qZA()()()(),
                    l.TgZ(49, "div", 15)(50, "p"),
                    l._uU(51, "\xa9 2021 MoMoMarket. All rights reserved."),
                    l.qZA()()()()),
                    2 & c && (l.xp6(4),
                    l.Oqu(l.lcZ(5, 9, "footer.backToTop")),
                    l.xp6(6),
                    l.Oqu(l.lcZ(11, 11, "footer.shippingAndReturn")),
                    l.xp6(2),
                    l.Q6J("ngIf", C.isShop),
                    l.xp6(3),
                    l.Oqu(l.lcZ(16, 13, "footer.yourAccount")),
                    l.xp6(4),
                    l.Oqu(l.lcZ(20, 15, "footer.contactUs")),
                    l.xp6(4),
                    l.Oqu(l.lcZ(24, 17, "footer.aboutUs")),
                    l.xp6(14),
                    l.Oqu(l.lcZ(38, 19, "footer.conditionsOfUse")),
                    l.xp6(5),
                    l.Oqu(l.lcZ(43, 21, "footer.privacyPolicy")),
                    l.xp6(5),
                    l.Oqu(l.lcZ(48, 23, "footer.termsandConditions")))
                },
                dependencies: [z.O5, ye.X$],
                styles: [".footer[_ngcontent-%COMP%]{width:100%}.footer[_ngcontent-%COMP%]   .to-top[_ngcontent-%COMP%]{min-height:45px;background-color:var(--footer_back_bgcolor);color:var(--footer_back_txtcolor);font-size:12px;font-family:var(--regular-font)}.footer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]{background-color:var(--footer_content_bgcolor);color:var(--footer_content_txtcolor)!important;min-height:200px;font-family:var(--regular-font);font-size:14px}.footer[_ngcontent-%COMP%]   .copy-rights[_ngcontent-%COMP%]{background-color:var(--footer_copy_bgcolor);color:var(--footer_copy_txtcolor)!important;font-size:14px}"]
            }),
            M
        }
        )();
        var dt = D(9129)
          , Et = D(7087)
          , ln = D(2901);
        function pn(M, h) {
            1 & M && (l.TgZ(0, "div", 1),
            l._UZ(1, "p-progressSpinner"),
            l.qZA())
        }
        let Pn = (()=>{
            class M {
                constructor(c) {
                    this.loaderService = c,
                    this.isLoading = this.loaderService.isLoading
                }
                ngOnInit() {}
            }
            return M.\u0275fac = function(c) {
                return new (c || M)(l.Y36(Et.D))
            }
            ,
            M.\u0275cmp = l.Xpm({
                type: M,
                selectors: [["app-loader"]],
                decls: 2,
                vars: 3,
                consts: [["class", "spinner", 4, "ngIf"], [1, "spinner"]],
                template: function(c, C) {
                    1 & c && (l.YNc(0, pn, 2, 0, "div", 0),
                    l.ALo(1, "async")),
                    2 & c && l.Q6J("ngIf", l.lcZ(1, 1, C.isLoading))
                },
                dependencies: [z.O5, ln.G, z.Ov]
            }),
            M
        }
        )();
        function Vt(M, h) {
            1 & M && l._UZ(0, "app-header")
        }
        function $n(M, h) {
            1 & M && l._UZ(0, "app-footer")
        }
        let An = (()=>{
            class M {
                constructor(c, C, L, ie, _e, we, Je, Dt) {
                    this.store = c,
                    this.cartService = C,
                    this.meta = L,
                    this.messageService = ie,
                    this.mainDataService = _e,
                    this.translate = we,
                    this.appTitle = Je,
                    this.router = Dt,
                    this.title = "momo-market",
                    this.lang = "en",
                    this.storeNames = [],
                    this.display = !0,
                    this.loading = !1,
                    this.seoTitle = "",
                    this.seoDesc = "",
                    this.isShop = !1,
                    we.addLangs(["en", "ar"]),
                    this.themeApplied = !1,
                    we.setDefaultLang("en"),
                    we.use("en"),
                    Je.setTitle(this.title)
                }
                ngOnInit() {
                    this.routeToTop(),
                    this.createStores(),
                    this.lang = this.store.get("lang") || "en",
                    this.setLangSettings(),
                    this.getMainData(),
                    this.getCategories(),
                    this.getConfigurationDecimal(),
                    this.getCart(),
                    this.getAllCountryTenants()
                }
                routeToTop() {
                    this.router.events.subscribe(c=>{
                        c instanceof Be.m2 && window.scrollTo(0, 0)
                    }
                    )
                }
                createStores() {
                    this.storeNames = [{
                        name: "lang",
                        data: this.lang ? this.lang : "en",
                        localStore: !0
                    }, {
                        name: "authToken",
                        data: null,
                        localStore: !0
                    }, {
                        name: "timeInterval",
                        data: null,
                        localStore: !0
                    }, {
                        name: "orderData",
                        data: null,
                        localStore: !0
                    }, {
                        name: "transactionData",
                        data: null,
                        localStore: !0
                    }, {
                        name: "userPhone",
                        data: null,
                        localStore: !0
                    }, {
                        name: "mainData",
                        data: null,
                        localStore: !0
                    }, {
                        name: "allCountryTenants",
                        data: null,
                        localStore: !0
                    }, {
                        name: "shipmentCost",
                        data: null,
                        localStore: !0
                    }, {
                        name: "isShop",
                        data: null,
                        localStorage: !0
                    }, {
                        name: "currency",
                        data: null,
                        localStore: !0
                    }, {
                        name: "countryCode",
                        data: null,
                        localStore: !0
                    }, {
                        name: "countryPhone",
                        data: null,
                        localStore: !0
                    }, {
                        name: "profile",
                        data: null,
                        localStore: !0
                    }, {
                        name: "categories",
                        data: [],
                        localStore: !0
                    }, {
                        name: "notifications",
                        data: null,
                        localStore: !1
                    }, {
                        name: "cartProducts",
                        data: [],
                        localStore: !0
                    }, {
                        name: "favouritesProducts",
                        data: [],
                        localStore: !0
                    }, {
                        name: "compareProducts",
                        data: [],
                        localStore: !0
                    }, {
                        name: "cartProductSuccess",
                        data: null,
                        localStore: !1
                    }, {
                        name: "favouritesProductSuccess",
                        data: null,
                        localStore: !1
                    }, {
                        name: "compareProductSuccess",
                        data: null,
                        localStore: !1
                    }, {
                        name: "checkoutData",
                        data: {
                            shipping: null,
                            payment: null,
                            promo: null,
                            steps: null,
                            profile: null,
                            orderId: null
                        },
                        localStore: !0
                    }, {
                        name: "search",
                        data: "",
                        localStore: !1
                    }, {
                        name: "loading",
                        data: !1,
                        localStore: !0
                    }, {
                        name: "verificationCode",
                        data: "",
                        localStore: !0
                    }],
                    this.storeNames.forEach(c=>{
                        this.store.createNewStore(c.name, c.data, c.localStore)
                    }
                    )
                }
                setLangSettings() {
                    this.translate.setDefaultLang(this.lang),
                    this.translate.use(this.lang),
                    document.documentElement.setAttribute("dir", "en" === this.lang ? "ltr" : "rtl")
                }
                getConfigurationDecimal() {
                    this.mainDataService.getConfigurationData().subscribe({
                        next: c=>{
                            if (c?.data?.records?.length > 0) {
                                let we = c.data.records;
                                var C = we.find(Je=>Je.key == Pe.CurrencyDecimal)
                                  , L = we.find(Je=>Je.key == Pe.CountryPhone)
                                  , ie = we.find(Je=>Je.key == Pe.PhoneLength)
                                  , _e = we.find(Je=>Je.key == Pe.Currency);
                                C && localStorage.setItem("decimalValue", C.value),
                                L && localStorage.setItem("countryPhone", L.value),
                                ie && localStorage.setItem("PhoneLength", ie.value),
                                _e && localStorage.setItem("currency", _e.value)
                            }
                        }
                        ,
                        error: c=>{}
                    })
                }
                getCart() {
                    var c = localStorage.getItem("sessionId") || "";
                    this.cartService.getCart(c).subscribe({
                        next: C=>{
                            null != C.data.records[0] && (this.store.set("cartProducts", C.data.records[0].cartDetails),
                            console.log(C.data))
                        }
                        ,
                        error: C=>{
                            console.error(C),
                            this.messageService.add({
                                severity: "error",
                                summary: this.translate.instant("ErrorMessages.fetchError"),
                                detail: C.message
                            })
                        }
                        ,
                        complete: ()=>console.log("cartProducts complete")
                    })
                }
                getMainData() {
                    this.mainDataService.getInitialData().subscribe({
                        next: c=>{
                            null != c?.data?.result?.records && (console.log(c),
                            this.store.set("mainData", c.data.result.records),
                            console.log("mainData"),
                            Object.entries(c.data.result.records).forEach(([C,L])=>{
                                if ("AppTheme" == c.data.result.records[C].key) {
                                    const ie = c.data.result.records[C].displayName;
                                    if (null != ie && "" != ie) {
                                        const _e = JSON.parse(ie);
                                        this.applyStyle(_e)
                                    }
                                } else
                                    this.themeApplied = !0
                            }
                            )),
                            this.isShop = c.data.isShop,
                            1 == this.isShop ? (console.log("meta title >>>" + c.data.shopProductSetting.seoTitle),
                            console.log("meta Desc >>>" + c.data.shopProductSetting.seoDescription),
                            this.seoTitle = c.data.shopProductSetting.seoTitle,
                            this.seoDesc = c.data.shopProductSetting.seoDescription,
                            this.meta.updateTag({
                                name: this.seoTitle,
                                content: this.seoDesc
                            })) : this.meta.updateTag({
                                name: "Description",
                                content: "MarketPlace,Buy,products"
                            })
                        }
                        ,
                        error: c=>{
                            console.error(c),
                            this.messageService.add({
                                severity: "error",
                                summary: this.translate.instant("ErrorMessages.fetchError"),
                                detail: c.message
                            })
                        }
                        ,
                        complete: ()=>console.log("MainData complete")
                    })
                }
                getCategories() {
                    this.mainDataService.getAllCategories().subscribe({
                        next: c=>{
                            null != c?.data?.records && this.store.set("categories", c.data.records)
                        }
                        ,
                        error: c=>{
                            console.error(c),
                            this.messageService.add({
                                severity: "error",
                                summary: this.translate.instant("ErrorMessages.fetchError"),
                                detail: c.message
                            })
                        }
                        ,
                        complete: ()=>console.log("Categories complete")
                    })
                }
                getAllCountryTenants() {
                    this.mainDataService.getAllCountryTenants().subscribe({
                        next: c=>{
                            null != c?.data?.records && this.store.set("allCountryTenants", c.data.records)
                        }
                        ,
                        error: c=>{
                            console.error(c),
                            this.messageService.add({
                                severity: "error",
                                summary: this.translate.instant("ErrorMessages.fetchError"),
                                detail: c.message
                            })
                        }
                        ,
                        complete: ()=>console.log("CountryTenants complete")
                    })
                }
                appendCssPropertyValue(c, C, L, ie) {
                    C && Object.entries(C).forEach(([_e,we])=>{
                        C[_e] ? document.documentElement.style.setProperty("--" + _e, C[_e]) : _e && L && L[c] && this.appendCssPropertyValue(_e, L[c][_e], L, !0)
                    }
                    )
                }
                applyStyle(c) {
                    Object.entries(c).forEach(([C,L])=>{
                        L && c[C] && (c[C]?.length > 2 || Object.entries(c[C])?.length >= 1) && (null == c[C] || 1 != c[C][0]?.length && !Number(c[C][0])) ? this.appendCssPropertyValue(C, c[C], c, !1) : document.documentElement.style.setProperty("--" + C, c[C])
                    }
                    ),
                    this.themeApplied = !0
                }
            }
            return M.\u0275fac = function(c) {
                return new (c || M)(l.Y36(Ke.d),l.Y36(Q.N),l.Y36(i.h_),l.Y36(ot.ez),l.Y36(ze.i),l.Y36(ye.sK),l.Y36(i.Dx),l.Y36(Be.F0))
            }
            ,
            M.\u0275cmp = l.Xpm({
                type: M,
                selectors: [["app-root"]],
                decls: 8,
                vars: 3,
                consts: [[1, "container"], [4, "ngIf"], [1, "page"], [1, "main-content"], ["sticky", "true", 1, "toast", 3, "baseZIndex"]],
                template: function(c, C) {
                    1 & c && (l.TgZ(0, "section", 0),
                    l.YNc(1, Vt, 1, 0, "app-header", 1),
                    l.TgZ(2, "div", 2)(3, "div", 3),
                    l._UZ(4, "app-loader")(5, "p-toast", 4)(6, "router-outlet"),
                    l.qZA(),
                    l.YNc(7, $n, 1, 0, "app-footer", 1),
                    l.qZA()()),
                    2 & c && (l.xp6(1),
                    l.Q6J("ngIf", C.themeApplied),
                    l.xp6(4),
                    l.Q6J("baseZIndex", 100),
                    l.xp6(2),
                    l.Q6J("ngIf", C.themeApplied))
                },
                dependencies: [z.O5, Be.lC, vt, Ee, dt.FN, Pn],
                styles: [".container[_ngcontent-%COMP%]{width:100%;height:100%;overflow:auto}.page[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:space-between;min-height:100vh}  .p-toast-top-right{top:7rem!important;right:0!important;left:0!important}"]
            }),
            M
        }
        )();
        class oi {
            constructor(h, c="/assets/i18n/", C=".json") {
                this.http = h,
                this.prefix = c,
                this.suffix = C
            }
            getTranslation(h) {
                return this.http.get(`${this.prefix}${h}${this.suffix}`)
            }
        }
        var un = D(228);
        let jt = (()=>{
            class M {
            }
            return M.\u0275fac = function(c) {
                return new (c || M)
            }
            ,
            M.\u0275mod = l.oAB({
                type: M
            }),
            M.\u0275inj = l.cJS({
                imports: [z.ez, un.m, un.m]
            }),
            M
        }
        )();
        var yn = D(6317);
        let ai = (()=>{
            class M {
                constructor() {
                    this.language = new yn.X("en")
                }
            }
            return M.\u0275fac = function(c) {
                return new (c || M)
            }
            ,
            M.\u0275prov = l.Yz7({
                token: M,
                factory: M.\u0275fac,
                providedIn: "root"
            }),
            M
        }
        )();
        var Zt = D(4851);
        function Si(M) {
            return new l.vHH(3e3,!1)
        }
        function ui() {
            return typeof window < "u" && typeof window.document < "u"
        }
        function ji() {
            return typeof process < "u" && "[object process]" === {}.toString.call(process)
        }
        function li(M) {
            switch (M.length) {
            case 0:
                return new Zt.ZN;
            case 1:
                return M[0];
            default:
                return new Zt.ZE(M)
            }
        }
        function Dn(M, h, c, C, L=new Map, ie=new Map) {
            const _e = []
              , we = [];
            let Je = -1
              , Dt = null;
            if (C.forEach(tn=>{
                const sn = tn.get("offset")
                  , Ln = sn == Je
                  , kn = Ln && Dt || new Map;
                tn.forEach((_n,on)=>{
                    let jn = on
                      , Yn = _n;
                    if ("offset" !== on)
                        switch (jn = h.normalizePropertyName(jn, _e),
                        Yn) {
                        case Zt.k1:
                            Yn = L.get(on);
                            break;
                        case Zt.l3:
                            Yn = ie.get(on);
                            break;
                        default:
                            Yn = h.normalizeStyleValue(on, jn, Yn, _e)
                        }
                    kn.set(jn, Yn)
                }
                ),
                Ln || we.push(kn),
                Dt = kn,
                Je = sn
            }
            ),
            _e.length)
                throw function xe(M) {
                    return new l.vHH(3502,!1)
                }();
            return we
        }
        function Hn(M, h, c, C) {
            switch (h) {
            case "start":
                M.onStart(()=>C(c && bn(c, "start", M)));
                break;
            case "done":
                M.onDone(()=>C(c && bn(c, "done", M)));
                break;
            case "destroy":
                M.onDestroy(()=>C(c && bn(c, "destroy", M)))
            }
        }
        function bn(M, h, c) {
            const ie = yi(M.element, M.triggerName, M.fromState, M.toState, h || M.phaseName, c.totalTime ?? M.totalTime, !!c.disabled)
              , _e = M._data;
            return null != _e && (ie._data = _e),
            ie
        }
        function yi(M, h, c, C, L="", ie=0, _e) {
            return {
                element: M,
                triggerName: h,
                fromState: c,
                toState: C,
                phaseName: L,
                totalTime: ie,
                disabled: !!_e
            }
        }
        function Mn(M, h, c) {
            let C = M.get(h);
            return C || M.set(h, C = c),
            C
        }
        function ti(M) {
            const h = M.indexOf(":");
            return [M.substring(1, h), M.slice(h + 1)]
        }
        let Mi = (M,h)=>!1
          , vs = (M,h,c)=>[]
          , Ci = null;
        function fi(M) {
            const h = M.parentNode || M.host;
            return h === Ci ? null : h
        }
        (ji() || typeof Element < "u") && (ui() ? (Ci = (()=>document.documentElement)(),
        Mi = (M,h)=>{
            for (; h; ) {
                if (h === M)
                    return !0;
                h = fi(h)
            }
            return !1
        }
        ) : Mi = (M,h)=>M.contains(h),
        vs = (M,h,c)=>{
            if (c)
                return Array.from(M.querySelectorAll(h));
            const C = M.querySelector(h);
            return C ? [C] : []
        }
        );
        let Ni = null
          , Vs = !1;
        const Ir = Mi
          , sr = vs;
        let Ys = (()=>{
            class M {
                validateStyleProperty(c) {
                    return function Br(M) {
                        Ni || (Ni = function Mr() {
                            return typeof document < "u" ? document.body : null
                        }() || {},
                        Vs = !!Ni.style && "WebkitAppearance"in Ni.style);
                        let h = !0;
                        return Ni.style && !function ks(M) {
                            return "ebkit" == M.substring(1, 6)
                        }(M) && (h = M in Ni.style,
                        !h && Vs && (h = "Webkit" + M.charAt(0).toUpperCase() + M.slice(1)in Ni.style)),
                        h
                    }(c)
                }
                matchesElement(c, C) {
                    return !1
                }
                containsElement(c, C) {
                    return Ir(c, C)
                }
                getParentElement(c) {
                    return fi(c)
                }
                query(c, C, L) {
                    return sr(c, C, L)
                }
                computeStyle(c, C, L) {
                    return L || ""
                }
                animate(c, C, L, ie, _e, we=[], Je) {
                    return new Zt.ZN(L,ie)
                }
            }
            return M.\u0275fac = function(c) {
                return new (c || M)
            }
            ,
            M.\u0275prov = l.Yz7({
                token: M,
                factory: M.\u0275fac
            }),
            M
        }
        )()
          , rr = (()=>{
            class M {
            }
            return M.NOOP = new Ys,
            M
        }
        )();
        const Ks = "ng-enter"
          , xs = "ng-leave"
          , es = "ng-trigger"
          , cs = ".ng-trigger"
          , bi = "ng-animating"
          , us = ".ng-animating";
        function ki(M) {
            if ("number" == typeof M)
                return M;
            const h = M.match(/^(-?[\.\d]+)(m?s)/);
            return !h || h.length < 2 ? 0 : $s(parseFloat(h[1]), h[2])
        }
        function $s(M, h) {
            return "s" === h ? 1e3 * M : M
        }
        function Vi(M, h, c) {
            return M.hasOwnProperty("duration") ? M : function Bi(M, h, c) {
                let L, ie = 0, _e = "";
                if ("string" == typeof M) {
                    const we = M.match(/^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i);
                    if (null === we)
                        return h.push(Si()),
                        {
                            duration: 0,
                            delay: 0,
                            easing: ""
                        };
                    L = $s(parseFloat(we[1]), we[2]);
                    const Je = we[3];
                    null != Je && (ie = $s(parseFloat(Je), we[4]));
                    const Dt = we[5];
                    Dt && (_e = Dt)
                } else
                    L = M;
                if (!c) {
                    let we = !1
                      , Je = h.length;
                    L < 0 && (h.push(function _i() {
                        return new l.vHH(3100,!1)
                    }()),
                    we = !0),
                    ie < 0 && (h.push(function wi() {
                        return new l.vHH(3101,!1)
                    }()),
                    we = !0),
                    we && h.splice(Je, 0, Si())
                }
                return {
                    duration: L,
                    delay: ie,
                    easing: _e
                }
            }(M, h, c)
        }
        function ts(M, h={}) {
            return Object.keys(M).forEach(c=>{
                h[c] = M[c]
            }
            ),
            h
        }
        function Hs(M) {
            const h = new Map;
            return Object.keys(M).forEach(c=>{
                h.set(c, M[c])
            }
            ),
            h
        }
        function Ai(M, h=new Map, c) {
            if (c)
                for (let[C,L] of c)
                    h.set(C, L);
            for (let[C,L] of M)
                h.set(C, L);
            return h
        }
        function Zs(M, h, c) {
            return c ? h + ":" + c + ";" : ""
        }
        function As(M) {
            let h = "";
            for (let c = 0; c < M.style.length; c++) {
                const C = M.style.item(c);
                h += Zs(0, C, M.style.getPropertyValue(C))
            }
            for (const c in M.style)
                M.style.hasOwnProperty(c) && !c.startsWith("_") && (h += Zs(0, gr(c), M.style[c]));
            M.setAttribute("style", h)
        }
        function pi(M, h, c) {
            M.style && (h.forEach((C,L)=>{
                const ie = Os(L);
                c && !c.has(L) && c.set(L, M.style[ie]),
                M.style[ie] = C
            }
            ),
            ji() && As(M))
        }
        function ys(M, h) {
            M.style && (h.forEach((c,C)=>{
                const L = Os(C);
                M.style[L] = ""
            }
            ),
            ji() && As(M))
        }
        function Jn(M) {
            return Array.isArray(M) ? 1 == M.length ? M[0] : (0,
            Zt.vP)(M) : M
        }
        const Ps = new RegExp("{{\\s*(.+?)\\s*}}","g");
        function hs(M) {
            let h = [];
            if ("string" == typeof M) {
                let c;
                for (; c = Ps.exec(M); )
                    h.push(c[1]);
                Ps.lastIndex = 0
            }
            return h
        }
        function $i(M, h, c) {
            const C = M.toString()
              , L = C.replace(Ps, (ie,_e)=>{
                let we = h[_e];
                return null == we && (c.push(function zi(M) {
                    return new l.vHH(3003,!1)
                }()),
                we = ""),
                we.toString()
            }
            );
            return L == C ? M : L
        }
        function zs(M) {
            const h = [];
            let c = M.next();
            for (; !c.done; )
                h.push(c.value),
                c = M.next();
            return h
        }
        const ni = /-+([a-z0-9])/g;
        function Os(M) {
            return M.replace(ni, (...h)=>h[1].toUpperCase())
        }
        function gr(M) {
            return M.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase()
        }
        function ci(M, h, c) {
            switch (h.type) {
            case 7:
                return M.visitTrigger(h, c);
            case 0:
                return M.visitState(h, c);
            case 1:
                return M.visitTransition(h, c);
            case 2:
                return M.visitSequence(h, c);
            case 3:
                return M.visitGroup(h, c);
            case 4:
                return M.visitAnimate(h, c);
            case 5:
                return M.visitKeyframes(h, c);
            case 6:
                return M.visitStyle(h, c);
            case 8:
                return M.visitReference(h, c);
            case 9:
                return M.visitAnimateChild(h, c);
            case 10:
                return M.visitAnimateRef(h, c);
            case 11:
                return M.visitQuery(h, c);
            case 12:
                return M.visitStagger(h, c);
            default:
                throw function Ji(M) {
                    return new l.vHH(3004,!1)
                }()
            }
        }
        function Cs(M, h) {
            return window.getComputedStyle(M)[h]
        }
        function vn(M, h) {
            const c = [];
            return "string" == typeof M ? M.split(/\s*,\s*/).forEach(C=>function Ar(M, h, c) {
                if (":" == M[0]) {
                    const Je = function io(M, h) {
                        switch (M) {
                        case ":enter":
                            return "void => *";
                        case ":leave":
                            return "* => void";
                        case ":increment":
                            return (c,C)=>parseFloat(C) > parseFloat(c);
                        case ":decrement":
                            return (c,C)=>parseFloat(C) < parseFloat(c);
                        default:
                            return h.push(function fn(M) {
                                return new l.vHH(3016,!1)
                            }()),
                            "* => *"
                        }
                    }(M, c);
                    if ("function" == typeof Je)
                        return void h.push(Je);
                    M = Je
                }
                const C = M.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                if (null == C || C.length < 4)
                    return c.push(function rn(M) {
                        return new l.vHH(3015,!1)
                    }()),
                    h;
                const L = C[1]
                  , ie = C[2]
                  , _e = C[3];
                h.push(bs(L, _e));
                "<" == ie[0] && !("*" == L && "*" == _e) && h.push(bs(_e, L))
            }(C, c, h)) : c.push(M),
            c
        }
        const ss = new Set(["true", "1"])
          , mi = new Set(["false", "0"]);
        function bs(M, h) {
            const c = ss.has(M) || mi.has(M)
              , C = ss.has(h) || mi.has(h);
            return (L,ie)=>{
                let _e = "*" == M || M == L
                  , we = "*" == h || h == ie;
                return !_e && c && "boolean" == typeof L && (_e = L ? ss.has(M) : mi.has(M)),
                !we && C && "boolean" == typeof ie && (we = ie ? ss.has(h) : mi.has(h)),
                _e && we
            }
        }
        const Hi = new RegExp("s*:selfs*,?","g");
        function or(M, h, c, C) {
            return new On(M).build(h, c, C)
        }
        class On {
            constructor(h) {
                this._driver = h
            }
            build(h, c, C) {
                const L = new Qn(c);
                return this._resetContextStyleTimingState(L),
                ci(this, Jn(h), L)
            }
            _resetContextStyleTimingState(h) {
                h.currentQuerySelector = "",
                h.collectedStyles = new Map,
                h.collectedStyles.set("", new Map),
                h.currentTime = 0
            }
            visitTrigger(h, c) {
                let C = c.queryCount = 0
                  , L = c.depCount = 0;
                const ie = []
                  , _e = [];
                return "@" == h.name.charAt(0) && c.errors.push(function He() {
                    return new l.vHH(3006,!1)
                }()),
                h.definitions.forEach(we=>{
                    if (this._resetContextStyleTimingState(c),
                    0 == we.type) {
                        const Je = we
                          , Dt = Je.name;
                        Dt.toString().split(/\s*,\s*/).forEach(tn=>{
                            Je.name = tn,
                            ie.push(this.visitState(Je, c))
                        }
                        ),
                        Je.name = Dt
                    } else if (1 == we.type) {
                        const Je = this.visitTransition(we, c);
                        C += Je.queryCount,
                        L += Je.depCount,
                        _e.push(Je)
                    } else
                        c.errors.push(function Lt() {
                            return new l.vHH(3007,!1)
                        }())
                }
                ),
                {
                    type: 7,
                    name: h.name,
                    states: ie,
                    transitions: _e,
                    queryCount: C,
                    depCount: L,
                    options: null
                }
            }
            visitState(h, c) {
                const C = this.visitStyle(h.styles, c)
                  , L = h.options && h.options.params || null;
                if (C.containsDynamicStyles) {
                    const ie = new Set
                      , _e = L || {};
                    C.styles.forEach(we=>{
                        we instanceof Map && we.forEach(Je=>{
                            hs(Je).forEach(Dt=>{
                                _e.hasOwnProperty(Dt) || ie.add(Dt)
                            }
                            )
                        }
                        )
                    }
                    ),
                    ie.size && (zs(ie.values()),
                    c.errors.push(function x(M, h) {
                        return new l.vHH(3008,!1)
                    }()))
                }
                return {
                    type: 0,
                    name: h.name,
                    style: C,
                    options: L ? {
                        params: L
                    } : null
                }
            }
            visitTransition(h, c) {
                c.queryCount = 0,
                c.depCount = 0;
                const C = ci(this, Jn(h.animation), c);
                return {
                    type: 1,
                    matchers: vn(h.expr, c.errors),
                    animation: C,
                    queryCount: c.queryCount,
                    depCount: c.depCount,
                    options: I(h.options)
                }
            }
            visitSequence(h, c) {
                return {
                    type: 2,
                    steps: h.steps.map(C=>ci(this, C, c)),
                    options: I(h.options)
                }
            }
            visitGroup(h, c) {
                const C = c.currentTime;
                let L = 0;
                const ie = h.steps.map(_e=>{
                    c.currentTime = C;
                    const we = ci(this, _e, c);
                    return L = Math.max(L, c.currentTime),
                    we
                }
                );
                return c.currentTime = L,
                {
                    type: 3,
                    steps: ie,
                    options: I(h.options)
                }
            }
            visitAnimate(h, c) {
                const C = function P(M, h) {
                    if (M.hasOwnProperty("duration"))
                        return M;
                    if ("number" == typeof M)
                        return ne(Vi(M, h).duration, 0, "");
                    const c = M;
                    if (c.split(/\s+/).some(ie=>"{" == ie.charAt(0) && "{" == ie.charAt(1))) {
                        const ie = ne(0, 0, "");
                        return ie.dynamic = !0,
                        ie.strValue = c,
                        ie
                    }
                    const L = Vi(c, h);
                    return ne(L.duration, L.delay, L.easing)
                }(h.timings, c.errors);
                c.currentAnimateTimings = C;
                let L, ie = h.styles ? h.styles : (0,
                Zt.oB)({});
                if (5 == ie.type)
                    L = this.visitKeyframes(ie, c);
                else {
                    let _e = h.styles
                      , we = !1;
                    if (!_e) {
                        we = !0;
                        const Dt = {};
                        C.easing && (Dt.easing = C.easing),
                        _e = (0,
                        Zt.oB)(Dt)
                    }
                    c.currentTime += C.duration + C.delay;
                    const Je = this.visitStyle(_e, c);
                    Je.isEmptyStep = we,
                    L = Je
                }
                return c.currentAnimateTimings = null,
                {
                    type: 4,
                    timings: C,
                    style: L,
                    options: null
                }
            }
            visitStyle(h, c) {
                const C = this._makeStyleAst(h, c);
                return this._validateStyleAst(C, c),
                C
            }
            _makeStyleAst(h, c) {
                const C = []
                  , L = Array.isArray(h.styles) ? h.styles : [h.styles];
                for (let we of L)
                    "string" == typeof we ? we === Zt.l3 ? C.push(we) : c.errors.push(new l.vHH(3002,!1)) : C.push(Hs(we));
                let ie = !1
                  , _e = null;
                return C.forEach(we=>{
                    if (we instanceof Map && (we.has("easing") && (_e = we.get("easing"),
                    we.delete("easing")),
                    !ie))
                        for (let Je of we.values())
                            if (Je.toString().indexOf("{{") >= 0) {
                                ie = !0;
                                break
                            }
                }
                ),
                {
                    type: 6,
                    styles: C,
                    easing: _e,
                    offset: h.offset,
                    containsDynamicStyles: ie,
                    options: null
                }
            }
            _validateStyleAst(h, c) {
                const C = c.currentAnimateTimings;
                let L = c.currentTime
                  , ie = c.currentTime;
                C && ie > 0 && (ie -= C.duration + C.delay),
                h.styles.forEach(_e=>{
                    "string" != typeof _e && _e.forEach((we,Je)=>{
                        const Dt = c.collectedStyles.get(c.currentQuerySelector)
                          , tn = Dt.get(Je);
                        let sn = !0;
                        tn && (ie != L && ie >= tn.startTime && L <= tn.endTime && (c.errors.push(function Ge(M, h, c, C, L) {
                            return new l.vHH(3010,!1)
                        }()),
                        sn = !1),
                        ie = tn.startTime),
                        sn && Dt.set(Je, {
                            startTime: ie,
                            endTime: L
                        }),
                        c.options && function Us(M, h, c) {
                            const C = h.params || {}
                              , L = hs(M);
                            L.length && L.forEach(ie=>{
                                C.hasOwnProperty(ie) || c.push(function Ti(M) {
                                    return new l.vHH(3001,!1)
                                }())
                            }
                            )
                        }(we, c.options, c.errors)
                    }
                    )
                }
                )
            }
            visitKeyframes(h, c) {
                const C = {
                    type: 5,
                    styles: [],
                    options: null
                };
                if (!c.currentAnimateTimings)
                    return c.errors.push(function K() {
                        return new l.vHH(3011,!1)
                    }()),
                    C;
                let ie = 0;
                const _e = [];
                let we = !1
                  , Je = !1
                  , Dt = 0;
                const tn = h.steps.map(Yn=>{
                    const Ei = this._makeStyleAst(Yn, c);
                    let os = null != Ei.offset ? Ei.offset : function R(M) {
                        if ("string" == typeof M)
                            return null;
                        let h = null;
                        if (Array.isArray(M))
                            M.forEach(c=>{
                                if (c instanceof Map && c.has("offset")) {
                                    const C = c;
                                    h = parseFloat(C.get("offset")),
                                    C.delete("offset")
                                }
                            }
                            );
                        else if (M instanceof Map && M.has("offset")) {
                            const c = M;
                            h = parseFloat(c.get("offset")),
                            c.delete("offset")
                        }
                        return h
                    }(Ei.styles)
                      , Gn = 0;
                    return null != os && (ie++,
                    Gn = Ei.offset = os),
                    Je = Je || Gn < 0 || Gn > 1,
                    we = we || Gn < Dt,
                    Dt = Gn,
                    _e.push(Gn),
                    Ei
                }
                );
                Je && c.errors.push(function J() {
                    return new l.vHH(3012,!1)
                }()),
                we && c.errors.push(function Y() {
                    return new l.vHH(3200,!1)
                }());
                const sn = h.steps.length;
                let Ln = 0;
                ie > 0 && ie < sn ? c.errors.push(function Te() {
                    return new l.vHH(3202,!1)
                }()) : 0 == ie && (Ln = 1 / (sn - 1));
                const kn = sn - 1
                  , _n = c.currentTime
                  , on = c.currentAnimateTimings
                  , jn = on.duration;
                return tn.forEach((Yn,Ei)=>{
                    const os = Ln > 0 ? Ei == kn ? 1 : Ln * Ei : _e[Ei]
                      , Gn = os * jn;
                    c.currentTime = _n + on.delay + Gn,
                    on.duration = Gn,
                    this._validateStyleAst(Yn, c),
                    Yn.offset = os,
                    C.styles.push(Yn)
                }
                ),
                C
            }
            visitReference(h, c) {
                return {
                    type: 8,
                    animation: ci(this, Jn(h.animation), c),
                    options: I(h.options)
                }
            }
            visitAnimateChild(h, c) {
                return c.depCount++,
                {
                    type: 9,
                    options: I(h.options)
                }
            }
            visitAnimateRef(h, c) {
                return {
                    type: 10,
                    animation: this.visitReference(h.animation, c),
                    options: I(h.options)
                }
            }
            visitQuery(h, c) {
                const C = c.currentQuerySelector
                  , L = h.options || {};
                c.queryCount++,
                c.currentQuery = h;
                const [ie,_e] = function Ur(M) {
                    const h = !!M.split(/\s*,\s*/).find(c=>":self" == c);
                    return h && (M = M.replace(Hi, "")),
                    M = M.replace(/@\*/g, cs).replace(/@\w+/g, c=>cs + "-" + c.slice(1)).replace(/:animating/g, us),
                    [M, h]
                }(h.selector);
                c.currentQuerySelector = C.length ? C + " " + ie : ie,
                Mn(c.collectedStyles, c.currentQuerySelector, new Map);
                const we = ci(this, Jn(h.animation), c);
                return c.currentQuery = null,
                c.currentQuerySelector = C,
                {
                    type: 11,
                    selector: ie,
                    limit: L.limit || 0,
                    optional: !!L.optional,
                    includeSelf: _e,
                    animation: we,
                    originalSelector: h.selector,
                    options: I(h.options)
                }
            }
            visitStagger(h, c) {
                c.currentQuery || c.errors.push(function nt() {
                    return new l.vHH(3013,!1)
                }());
                const C = "full" === h.timings ? {
                    duration: 0,
                    delay: 0,
                    easing: "full"
                } : Vi(h.timings, c.errors, !0);
                return {
                    type: 12,
                    animation: ci(this, Jn(h.animation), c),
                    timings: C,
                    options: null
                }
            }
        }
        class Qn {
            constructor(h) {
                this.errors = h,
                this.queryCount = 0,
                this.depCount = 0,
                this.currentTransition = null,
                this.currentQuery = null,
                this.currentQuerySelector = null,
                this.currentAnimateTimings = null,
                this.currentTime = 0,
                this.collectedStyles = new Map,
                this.options = null,
                this.unsupportedCSSPropertiesFound = new Set
            }
        }
        function I(M) {
            return M ? (M = ts(M)).params && (M.params = function ar(M) {
                return M ? ts(M) : null
            }(M.params)) : M = {},
            M
        }
        function ne(M, h, c) {
            return {
                duration: M,
                delay: h,
                easing: c
            }
        }
        function at(M, h, c, C, L, ie, _e=null, we=!1) {
            return {
                type: 1,
                element: M,
                keyframes: h,
                preStyleProps: c,
                postStyleProps: C,
                duration: L,
                delay: ie,
                totalTime: L + ie,
                easing: _e,
                subTimeline: we
            }
        }
        class nn {
            constructor() {
                this._map = new Map
            }
            get(h) {
                return this._map.get(h) || []
            }
            append(h, c) {
                let C = this._map.get(h);
                C || this._map.set(h, C = []),
                C.push(...c)
            }
            has(h) {
                return this._map.has(h)
            }
            clear() {
                this._map.clear()
            }
        }
        const Es = new RegExp(":enter","g")
          , rs = new RegExp(":leave","g");
        function vr(M, h, c, C, L, ie=new Map, _e=new Map, we, Je, Dt=[]) {
            return (new lr).buildKeyframes(M, h, c, C, L, ie, _e, we, Je, Dt)
        }
        class lr {
            buildKeyframes(h, c, C, L, ie, _e, we, Je, Dt, tn=[]) {
                Dt = Dt || new nn;
                const sn = new cr(h,c,Dt,L,ie,tn,[]);
                sn.options = Je;
                const Ln = Je.delay ? ki(Je.delay) : 0;
                sn.currentTimeline.delayNextStep(Ln),
                sn.currentTimeline.setStyles([_e], null, sn.errors, Je),
                ci(this, C, sn);
                const kn = sn.timelines.filter(_n=>_n.containsAnimation());
                if (kn.length && we.size) {
                    let _n;
                    for (let on = kn.length - 1; on >= 0; on--) {
                        const jn = kn[on];
                        if (jn.element === c) {
                            _n = jn;
                            break
                        }
                    }
                    _n && !_n.allowOnlyTimelineStyles() && _n.setStyles([we], null, sn.errors, Je)
                }
                return kn.length ? kn.map(_n=>_n.buildKeyframes()) : [at(c, [], [], [], 0, Ln, "", !1)]
            }
            visitTrigger(h, c) {}
            visitState(h, c) {}
            visitTransition(h, c) {}
            visitAnimateChild(h, c) {
                const C = c.subInstructions.get(c.element);
                if (C) {
                    const L = c.createSubContext(h.options)
                      , ie = c.currentTimeline.currentTime
                      , _e = this._visitSubInstructions(C, L, L.options);
                    ie != _e && c.transformIntoNewTimeline(_e)
                }
                c.previousNode = h
            }
            visitAnimateRef(h, c) {
                const C = c.createSubContext(h.options);
                C.transformIntoNewTimeline(),
                this._applyAnimationRefDelays([h.options, h.animation.options], c, C),
                this.visitReference(h.animation, C),
                c.transformIntoNewTimeline(C.currentTimeline.currentTime),
                c.previousNode = h
            }
            _applyAnimationRefDelays(h, c, C) {
                for (const L of h) {
                    const ie = L?.delay;
                    if (ie) {
                        const _e = "number" == typeof ie ? ie : ki($i(ie, L?.params ?? {}, c.errors));
                        C.delayNextStep(_e)
                    }
                }
            }
            _visitSubInstructions(h, c, C) {
                let ie = c.currentTimeline.currentTime;
                const _e = null != C.duration ? ki(C.duration) : null
                  , we = null != C.delay ? ki(C.delay) : null;
                return 0 !== _e && h.forEach(Je=>{
                    const Dt = c.appendInstructionToTimeline(Je, _e, we);
                    ie = Math.max(ie, Dt.duration + Dt.delay)
                }
                ),
                ie
            }
            visitReference(h, c) {
                c.updateOptions(h.options, !0),
                ci(this, h.animation, c),
                c.previousNode = h
            }
            visitSequence(h, c) {
                const C = c.subContextCount;
                let L = c;
                const ie = h.options;
                if (ie && (ie.params || ie.delay) && (L = c.createSubContext(ie),
                L.transformIntoNewTimeline(),
                null != ie.delay)) {
                    6 == L.previousNode.type && (L.currentTimeline.snapshotCurrentStyles(),
                    L.previousNode = Wi);
                    const _e = ki(ie.delay);
                    L.delayNextStep(_e)
                }
                h.steps.length && (h.steps.forEach(_e=>ci(this, _e, L)),
                L.currentTimeline.applyStylesToKeyframe(),
                L.subContextCount > C && L.transformIntoNewTimeline()),
                c.previousNode = h
            }
            visitGroup(h, c) {
                const C = [];
                let L = c.currentTimeline.currentTime;
                const ie = h.options && h.options.delay ? ki(h.options.delay) : 0;
                h.steps.forEach(_e=>{
                    const we = c.createSubContext(h.options);
                    ie && we.delayNextStep(ie),
                    ci(this, _e, we),
                    L = Math.max(L, we.currentTimeline.currentTime),
                    C.push(we.currentTimeline)
                }
                ),
                C.forEach(_e=>c.currentTimeline.mergeTimelineCollectedStyles(_e)),
                c.transformIntoNewTimeline(L),
                c.previousNode = h
            }
            _visitTiming(h, c) {
                if (h.dynamic) {
                    const C = h.strValue;
                    return Vi(c.params ? $i(C, c.params, c.errors) : C, c.errors)
                }
                return {
                    duration: h.duration,
                    delay: h.delay,
                    easing: h.easing
                }
            }
            visitAnimate(h, c) {
                const C = c.currentAnimateTimings = this._visitTiming(h.timings, c)
                  , L = c.currentTimeline;
                C.delay && (c.incrementTime(C.delay),
                L.snapshotCurrentStyles());
                const ie = h.style;
                5 == ie.type ? this.visitKeyframes(ie, c) : (c.incrementTime(C.duration),
                this.visitStyle(ie, c),
                L.applyStylesToKeyframe()),
                c.currentAnimateTimings = null,
                c.previousNode = h
            }
            visitStyle(h, c) {
                const C = c.currentTimeline
                  , L = c.currentAnimateTimings;
                !L && C.hasCurrentStyleProperties() && C.forwardFrame();
                const ie = L && L.easing || h.easing;
                h.isEmptyStep ? C.applyEmptyStep(ie) : C.setStyles(h.styles, ie, c.errors, c.options),
                c.previousNode = h
            }
            visitKeyframes(h, c) {
                const C = c.currentAnimateTimings
                  , L = c.currentTimeline.duration
                  , ie = C.duration
                  , we = c.createSubContext().currentTimeline;
                we.easing = C.easing,
                h.styles.forEach(Je=>{
                    we.forwardTime((Je.offset || 0) * ie),
                    we.setStyles(Je.styles, Je.easing, c.errors, c.options),
                    we.applyStylesToKeyframe()
                }
                ),
                c.currentTimeline.mergeTimelineCollectedStyles(we),
                c.transformIntoNewTimeline(L + ie),
                c.previousNode = h
            }
            visitQuery(h, c) {
                const C = c.currentTimeline.currentTime
                  , L = h.options || {}
                  , ie = L.delay ? ki(L.delay) : 0;
                ie && (6 === c.previousNode.type || 0 == C && c.currentTimeline.hasCurrentStyleProperties()) && (c.currentTimeline.snapshotCurrentStyles(),
                c.previousNode = Wi);
                let _e = C;
                const we = c.invokeQuery(h.selector, h.originalSelector, h.limit, h.includeSelf, !!L.optional, c.errors);
                c.currentQueryTotal = we.length;
                let Je = null;
                we.forEach((Dt,tn)=>{
                    c.currentQueryIndex = tn;
                    const sn = c.createSubContext(h.options, Dt);
                    ie && sn.delayNextStep(ie),
                    Dt === c.element && (Je = sn.currentTimeline),
                    ci(this, h.animation, sn),
                    sn.currentTimeline.applyStylesToKeyframe(),
                    _e = Math.max(_e, sn.currentTimeline.currentTime)
                }
                ),
                c.currentQueryIndex = 0,
                c.currentQueryTotal = 0,
                c.transformIntoNewTimeline(_e),
                Je && (c.currentTimeline.mergeTimelineCollectedStyles(Je),
                c.currentTimeline.snapshotCurrentStyles()),
                c.previousNode = h
            }
            visitStagger(h, c) {
                const C = c.parentContext
                  , L = c.currentTimeline
                  , ie = h.timings
                  , _e = Math.abs(ie.duration)
                  , we = _e * (c.currentQueryTotal - 1);
                let Je = _e * c.currentQueryIndex;
                switch (ie.duration < 0 ? "reverse" : ie.easing) {
                case "reverse":
                    Je = we - Je;
                    break;
                case "full":
                    Je = C.currentStaggerTime
                }
                const tn = c.currentTimeline;
                Je && tn.delayNextStep(Je);
                const sn = tn.currentTime;
                ci(this, h.animation, c),
                c.previousNode = h,
                C.currentStaggerTime = L.currentTime - sn + (L.startTime - C.currentTimeline.startTime)
            }
        }
        const Wi = {};
        class cr {
            constructor(h, c, C, L, ie, _e, we, Je) {
                this._driver = h,
                this.element = c,
                this.subInstructions = C,
                this._enterClassName = L,
                this._leaveClassName = ie,
                this.errors = _e,
                this.timelines = we,
                this.parentContext = null,
                this.currentAnimateTimings = null,
                this.previousNode = Wi,
                this.subContextCount = 0,
                this.options = {},
                this.currentQueryIndex = 0,
                this.currentQueryTotal = 0,
                this.currentStaggerTime = 0,
                this.currentTimeline = Je || new Ds(this._driver,c,0),
                we.push(this.currentTimeline)
            }
            get params() {
                return this.options.params
            }
            updateOptions(h, c) {
                if (!h)
                    return;
                const C = h;
                let L = this.options;
                null != C.duration && (L.duration = ki(C.duration)),
                null != C.delay && (L.delay = ki(C.delay));
                const ie = C.params;
                if (ie) {
                    let _e = L.params;
                    _e || (_e = this.options.params = {}),
                    Object.keys(ie).forEach(we=>{
                        (!c || !_e.hasOwnProperty(we)) && (_e[we] = $i(ie[we], _e, this.errors))
                    }
                    )
                }
            }
            _copyOptions() {
                const h = {};
                if (this.options) {
                    const c = this.options.params;
                    if (c) {
                        const C = h.params = {};
                        Object.keys(c).forEach(L=>{
                            C[L] = c[L]
                        }
                        )
                    }
                }
                return h
            }
            createSubContext(h=null, c, C) {
                const L = c || this.element
                  , ie = new cr(this._driver,L,this.subInstructions,this._enterClassName,this._leaveClassName,this.errors,this.timelines,this.currentTimeline.fork(L, C || 0));
                return ie.previousNode = this.previousNode,
                ie.currentAnimateTimings = this.currentAnimateTimings,
                ie.options = this._copyOptions(),
                ie.updateOptions(h),
                ie.currentQueryIndex = this.currentQueryIndex,
                ie.currentQueryTotal = this.currentQueryTotal,
                ie.parentContext = this,
                this.subContextCount++,
                ie
            }
            transformIntoNewTimeline(h) {
                return this.previousNode = Wi,
                this.currentTimeline = this.currentTimeline.fork(this.element, h),
                this.timelines.push(this.currentTimeline),
                this.currentTimeline
            }
            appendInstructionToTimeline(h, c, C) {
                const L = {
                    duration: c ?? h.duration,
                    delay: this.currentTimeline.currentTime + (C ?? 0) + h.delay,
                    easing: ""
                }
                  , ie = new mo(this._driver,h.element,h.keyframes,h.preStyleProps,h.postStyleProps,L,h.stretchStartingKeyframe);
                return this.timelines.push(ie),
                L
            }
            incrementTime(h) {
                this.currentTimeline.forwardTime(this.currentTimeline.duration + h)
            }
            delayNextStep(h) {
                h > 0 && this.currentTimeline.delayNextStep(h)
            }
            invokeQuery(h, c, C, L, ie, _e) {
                let we = [];
                if (L && we.push(this.element),
                h.length > 0) {
                    h = (h = h.replace(Es, "." + this._enterClassName)).replace(rs, "." + this._leaveClassName);
                    let Dt = this._driver.query(this.element, h, 1 != C);
                    0 !== C && (Dt = C < 0 ? Dt.slice(Dt.length + C, Dt.length) : Dt.slice(0, C)),
                    we.push(...Dt)
                }
                return !ie && 0 == we.length && _e.push(function Rt(M) {
                    return new l.vHH(3014,!1)
                }()),
                we
            }
        }
        class Ds {
            constructor(h, c, C, L) {
                this._driver = h,
                this.element = c,
                this.startTime = C,
                this._elementTimelineStylesLookup = L,
                this.duration = 0,
                this._previousKeyframe = new Map,
                this._currentKeyframe = new Map,
                this._keyframes = new Map,
                this._styleSummary = new Map,
                this._localTimelineStyles = new Map,
                this._pendingStyles = new Map,
                this._backFill = new Map,
                this._currentEmptyStepKeyframe = null,
                this._elementTimelineStylesLookup || (this._elementTimelineStylesLookup = new Map),
                this._globalTimelineStyles = this._elementTimelineStylesLookup.get(c),
                this._globalTimelineStyles || (this._globalTimelineStyles = this._localTimelineStyles,
                this._elementTimelineStylesLookup.set(c, this._localTimelineStyles)),
                this._loadKeyframe()
            }
            containsAnimation() {
                switch (this._keyframes.size) {
                case 0:
                    return !1;
                case 1:
                    return this.hasCurrentStyleProperties();
                default:
                    return !0
                }
            }
            hasCurrentStyleProperties() {
                return this._currentKeyframe.size > 0
            }
            get currentTime() {
                return this.startTime + this.duration
            }
            delayNextStep(h) {
                const c = 1 === this._keyframes.size && this._pendingStyles.size;
                this.duration || c ? (this.forwardTime(this.currentTime + h),
                c && this.snapshotCurrentStyles()) : this.startTime += h
            }
            fork(h, c) {
                return this.applyStylesToKeyframe(),
                new Ds(this._driver,h,c || this.currentTime,this._elementTimelineStylesLookup)
            }
            _loadKeyframe() {
                this._currentKeyframe && (this._previousKeyframe = this._currentKeyframe),
                this._currentKeyframe = this._keyframes.get(this.duration),
                this._currentKeyframe || (this._currentKeyframe = new Map,
                this._keyframes.set(this.duration, this._currentKeyframe))
            }
            forwardFrame() {
                this.duration += 1,
                this._loadKeyframe()
            }
            forwardTime(h) {
                this.applyStylesToKeyframe(),
                this.duration = h,
                this._loadKeyframe()
            }
            _updateStyle(h, c) {
                this._localTimelineStyles.set(h, c),
                this._globalTimelineStyles.set(h, c),
                this._styleSummary.set(h, {
                    time: this.currentTime,
                    value: c
                })
            }
            allowOnlyTimelineStyles() {
                return this._currentEmptyStepKeyframe !== this._currentKeyframe
            }
            applyEmptyStep(h) {
                h && this._previousKeyframe.set("easing", h);
                for (let[c,C] of this._globalTimelineStyles)
                    this._backFill.set(c, C || Zt.l3),
                    this._currentKeyframe.set(c, Zt.l3);
                this._currentEmptyStepKeyframe = this._currentKeyframe
            }
            setStyles(h, c, C, L) {
                c && this._previousKeyframe.set("easing", c);
                const ie = L && L.params || {}
                  , _e = function zr(M, h) {
                    const c = new Map;
                    let C;
                    return M.forEach(L=>{
                        if ("*" === L) {
                            C = C || h.keys();
                            for (let ie of C)
                                c.set(ie, Zt.l3)
                        } else
                            Ai(L, c)
                    }
                    ),
                    c
                }(h, this._globalTimelineStyles);
                for (let[we,Je] of _e) {
                    const Dt = $i(Je, ie, C);
                    this._pendingStyles.set(we, Dt),
                    this._localTimelineStyles.has(we) || this._backFill.set(we, this._globalTimelineStyles.get(we) ?? Zt.l3),
                    this._updateStyle(we, Dt)
                }
            }
            applyStylesToKeyframe() {
                0 != this._pendingStyles.size && (this._pendingStyles.forEach((h,c)=>{
                    this._currentKeyframe.set(c, h)
                }
                ),
                this._pendingStyles.clear(),
                this._localTimelineStyles.forEach((h,c)=>{
                    this._currentKeyframe.has(c) || this._currentKeyframe.set(c, h)
                }
                ))
            }
            snapshotCurrentStyles() {
                for (let[h,c] of this._localTimelineStyles)
                    this._pendingStyles.set(h, c),
                    this._updateStyle(h, c)
            }
            getFinalKeyframe() {
                return this._keyframes.get(this.duration)
            }
            get properties() {
                const h = [];
                for (let c in this._currentKeyframe)
                    h.push(c);
                return h
            }
            mergeTimelineCollectedStyles(h) {
                h._styleSummary.forEach((c,C)=>{
                    const L = this._styleSummary.get(C);
                    (!L || c.time > L.time) && this._updateStyle(C, c.value)
                }
                )
            }
            buildKeyframes() {
                this.applyStylesToKeyframe();
                const h = new Set
                  , c = new Set
                  , C = 1 === this._keyframes.size && 0 === this.duration;
                let L = [];
                this._keyframes.forEach((we,Je)=>{
                    const Dt = Ai(we, new Map, this._backFill);
                    Dt.forEach((tn,sn)=>{
                        tn === Zt.k1 ? h.add(sn) : tn === Zt.l3 && c.add(sn)
                    }
                    ),
                    C || Dt.set("offset", Je / this.duration),
                    L.push(Dt)
                }
                );
                const ie = h.size ? zs(h.values()) : []
                  , _e = c.size ? zs(c.values()) : [];
                if (C) {
                    const we = L[0]
                      , Je = new Map(we);
                    we.set("offset", 0),
                    Je.set("offset", 1),
                    L = [we, Je]
                }
                return at(this.element, L, ie, _e, this.duration, this.startTime, this.easing, !1)
            }
        }
        class mo extends Ds {
            constructor(h, c, C, L, ie, _e, we=!1) {
                super(h, c, _e.delay),
                this.keyframes = C,
                this.preStyleProps = L,
                this.postStyleProps = ie,
                this._stretchStartingKeyframe = we,
                this.timings = {
                    duration: _e.duration,
                    delay: _e.delay,
                    easing: _e.easing
                }
            }
            containsAnimation() {
                return this.keyframes.length > 1
            }
            buildKeyframes() {
                let h = this.keyframes
                  , {delay: c, duration: C, easing: L} = this.timings;
                if (this._stretchStartingKeyframe && c) {
                    const ie = []
                      , _e = C + c
                      , we = c / _e
                      , Je = Ai(h[0]);
                    Je.set("offset", 0),
                    ie.push(Je);
                    const Dt = Ai(h[0]);
                    Dt.set("offset", so(we)),
                    ie.push(Dt);
                    const tn = h.length - 1;
                    for (let sn = 1; sn <= tn; sn++) {
                        let Ln = Ai(h[sn]);
                        const kn = Ln.get("offset");
                        Ln.set("offset", so((c + kn * C) / _e)),
                        ie.push(Ln)
                    }
                    C = _e,
                    c = 0,
                    L = "",
                    h = ie
                }
                return at(this.element, h, this.preStyleProps, this.postStyleProps, C, c, L, !0)
            }
        }
        function so(M, h=3) {
            const c = Math.pow(10, h - 1);
            return Math.round(M * c) / c
        }
        class y {
        }
        const E = new Set(["width", "height", "minWidth", "minHeight", "maxWidth", "maxHeight", "left", "top", "bottom", "right", "fontSize", "outlineWidth", "outlineOffset", "paddingTop", "paddingLeft", "paddingBottom", "paddingRight", "marginTop", "marginLeft", "marginBottom", "marginRight", "borderRadius", "borderWidth", "borderTopWidth", "borderLeftWidth", "borderRightWidth", "borderBottomWidth", "textIndent", "perspective"]);
        class O extends y {
            normalizePropertyName(h, c) {
                return Os(h)
            }
            normalizeStyleValue(h, c, C, L) {
                let ie = "";
                const _e = C.toString().trim();
                if (E.has(c) && 0 !== C && "0" !== C)
                    if ("number" == typeof C)
                        ie = "px";
                    else {
                        const we = C.match(/^[+-]?[\d\.]+([a-z]*)$/);
                        we && 0 == we[1].length && L.push(function Li(M, h) {
                            return new l.vHH(3005,!1)
                        }())
                    }
                return _e + ie
            }
        }
        function B(M, h, c, C, L, ie, _e, we, Je, Dt, tn, sn, Ln) {
            return {
                type: 0,
                element: M,
                triggerName: h,
                isRemovalTransition: L,
                fromState: c,
                fromStyles: ie,
                toState: C,
                toStyles: _e,
                timelines: we,
                queriedElements: Je,
                preStyleProps: Dt,
                postStyleProps: tn,
                totalTime: sn,
                errors: Ln
            }
        }
        const se = {};
        class ce {
            constructor(h, c, C) {
                this._triggerName = h,
                this.ast = c,
                this._stateStyles = C
            }
            match(h, c, C, L) {
                return function u(M, h, c, C, L) {
                    return M.some(ie=>ie(h, c, C, L))
                }(this.ast.matchers, h, c, C, L)
            }
            buildStyles(h, c, C) {
                let L = this._stateStyles.get("*");
                return void 0 !== h && (L = this._stateStyles.get(h?.toString()) || L),
                L ? L.buildStyles(c, C) : new Map
            }
            build(h, c, C, L, ie, _e, we, Je, Dt, tn) {
                const sn = []
                  , Ln = this.ast.options && this.ast.options.params || se
                  , _n = this.buildStyles(C, we && we.params || se, sn)
                  , on = Je && Je.params || se
                  , jn = this.buildStyles(L, on, sn)
                  , Yn = new Set
                  , Ei = new Map
                  , os = new Map
                  , Gn = "void" === L
                  , as = {
                    params: m(on, Ln),
                    delay: this.ast.options?.delay
                }
                  , Rs = tn ? [] : vr(h, c, this.ast.animation, ie, _e, _n, jn, as, Dt, sn);
                let Pi = 0;
                if (Rs.forEach(Ws=>{
                    Pi = Math.max(Ws.duration + Ws.delay, Pi)
                }
                ),
                sn.length)
                    return B(c, this._triggerName, C, L, Gn, _n, jn, [], [], Ei, os, Pi, sn);
                Rs.forEach(Ws=>{
                    const tr = Ws.element
                      , Vo = Mn(Ei, tr, new Set);
                    Ws.preStyleProps.forEach(Cr=>Vo.add(Cr));
                    const ho = Mn(os, tr, new Set);
                    Ws.postStyleProps.forEach(Cr=>ho.add(Cr)),
                    tr !== c && Yn.add(tr)
                }
                );
                const gs = zs(Yn.values());
                return B(c, this._triggerName, C, L, Gn, _n, jn, Rs, gs, Ei, os, Pi)
            }
        }
        function m(M, h) {
            const c = ts(h);
            for (const C in M)
                M.hasOwnProperty(C) && null != M[C] && (c[C] = M[C]);
            return c
        }
        class d {
            constructor(h, c, C) {
                this.styles = h,
                this.defaultParams = c,
                this.normalizer = C
            }
            buildStyles(h, c) {
                const C = new Map
                  , L = ts(this.defaultParams);
                return Object.keys(h).forEach(ie=>{
                    const _e = h[ie];
                    null !== _e && (L[ie] = _e)
                }
                ),
                this.styles.styles.forEach(ie=>{
                    "string" != typeof ie && ie.forEach((_e,we)=>{
                        _e && (_e = $i(_e, L, c));
                        const Je = this.normalizer.normalizePropertyName(we, c);
                        _e = this.normalizer.normalizeStyleValue(we, Je, _e, c),
                        C.set(Je, _e)
                    }
                    )
                }
                ),
                C
            }
        }
        class V {
            constructor(h, c, C) {
                this.name = h,
                this.ast = c,
                this._normalizer = C,
                this.transitionFactories = [],
                this.states = new Map,
                c.states.forEach(L=>{
                    this.states.set(L.name, new d(L.style,L.options && L.options.params || {},C))
                }
                ),
                j(this.states, "true", "1"),
                j(this.states, "false", "0"),
                c.transitions.forEach(L=>{
                    this.transitionFactories.push(new ce(h,L,this.states))
                }
                ),
                this.fallbackTransition = function X(M, h, c) {
                    return new ce(M,{
                        type: 1,
                        animation: {
                            type: 2,
                            steps: [],
                            options: null
                        },
                        matchers: [(_e,we)=>!0],
                        options: null,
                        queryCount: 0,
                        depCount: 0
                    },h)
                }(h, this.states)
            }
            get containsQueries() {
                return this.ast.queryCount > 0
            }
            matchTransition(h, c, C, L) {
                return this.transitionFactories.find(_e=>_e.match(h, c, C, L)) || null
            }
            matchStyles(h, c, C) {
                return this.fallbackTransition.buildStyles(h, c, C)
            }
        }
        function j(M, h, c) {
            M.has(h) ? M.has(c) || M.set(c, M.get(h)) : M.has(c) && M.set(h, M.get(c))
        }
        const ae = new nn;
        class Ae {
            constructor(h, c, C) {
                this.bodyNode = h,
                this._driver = c,
                this._normalizer = C,
                this._animations = new Map,
                this._playersById = new Map,
                this.players = []
            }
            register(h, c) {
                const C = []
                  , ie = or(this._driver, c, C, []);
                if (C.length)
                    throw function wt(M) {
                        return new l.vHH(3503,!1)
                    }();
                this._animations.set(h, ie)
            }
            _buildPlayer(h, c, C) {
                const L = h.element
                  , ie = Dn(0, this._normalizer, 0, h.keyframes, c, C);
                return this._driver.animate(L, ie, h.duration, h.delay, h.easing, [], !0)
            }
            create(h, c, C={}) {
                const L = []
                  , ie = this._animations.get(h);
                let _e;
                const we = new Map;
                if (ie ? (_e = vr(this._driver, c, ie, Ks, xs, new Map, new Map, C, ae, L),
                _e.forEach(tn=>{
                    const sn = Mn(we, tn.element, new Map);
                    tn.postStyleProps.forEach(Ln=>sn.set(Ln, null))
                }
                )) : (L.push(function N() {
                    return new l.vHH(3300,!1)
                }()),
                _e = []),
                L.length)
                    throw function me(M) {
                        return new l.vHH(3504,!1)
                    }();
                we.forEach((tn,sn)=>{
                    tn.forEach((Ln,kn)=>{
                        tn.set(kn, this._driver.computeStyle(sn, kn, Zt.l3))
                    }
                    )
                }
                );
                const Dt = li(_e.map(tn=>{
                    const sn = we.get(tn.element);
                    return this._buildPlayer(tn, new Map, sn)
                }
                ));
                return this._playersById.set(h, Dt),
                Dt.onDestroy(()=>this.destroy(h)),
                this.players.push(Dt),
                Dt
            }
            destroy(h) {
                const c = this._getPlayer(h);
                c.destroy(),
                this._playersById.delete(h);
                const C = this.players.indexOf(c);
                C >= 0 && this.players.splice(C, 1)
            }
            _getPlayer(h) {
                const c = this._playersById.get(h);
                if (!c)
                    throw function Ve(M) {
                        return new l.vHH(3301,!1)
                    }();
                return c
            }
            listen(h, c, C, L) {
                const ie = yi(c, "", "", "");
                return Hn(this._getPlayer(h), C, ie, L),
                ()=>{}
            }
            command(h, c, C, L) {
                if ("register" == C)
                    return void this.register(h, L[0]);
                if ("create" == C)
                    return void this.create(h, c, L[0] || {});
                const ie = this._getPlayer(h);
                switch (C) {
                case "play":
                    ie.play();
                    break;
                case "pause":
                    ie.pause();
                    break;
                case "reset":
                    ie.reset();
                    break;
                case "restart":
                    ie.restart();
                    break;
                case "finish":
                    ie.finish();
                    break;
                case "init":
                    ie.init();
                    break;
                case "setPosition":
                    ie.setPosition(parseFloat(L[0]));
                    break;
                case "destroy":
                    this.destroy(h)
                }
            }
        }
        const Se = "ng-animate-queued"
          , lt = "ng-animate-disabled"
          , Nt = []
          , Ut = {
            namespaceId: "",
            setForRemoval: !1,
            setForMove: !1,
            hasAnimation: !1,
            removedBeforeQueried: !1
        }
          , At = {
            namespaceId: "",
            setForMove: !1,
            setForRemoval: !1,
            hasAnimation: !1,
            removedBeforeQueried: !0
        }
          , Xe = "__ng_removed";
        class Ye {
            constructor(h, c="") {
                this.namespaceId = c;
                const C = h && h.hasOwnProperty("value");
                if (this.value = function Vn(M) {
                    return M ?? null
                }(C ? h.value : h),
                C) {
                    const ie = ts(h);
                    delete ie.value,
                    this.options = ie
                } else
                    this.options = {};
                this.options.params || (this.options.params = {})
            }
            get params() {
                return this.options.params
            }
            absorbOptions(h) {
                const c = h.params;
                if (c) {
                    const C = this.options.params;
                    Object.keys(c).forEach(L=>{
                        null == C[L] && (C[L] = c[L])
                    }
                    )
                }
            }
        }
        const ct = "void"
          , en = new Ye(ct);
        class hn {
            constructor(h, c, C) {
                this.id = h,
                this.hostElement = c,
                this._engine = C,
                this.players = [],
                this._triggers = new Map,
                this._queue = [],
                this._elementListeners = new Map,
                this._hostClassName = "ng-tns-" + h,
                ri(c, this._hostClassName)
            }
            listen(h, c, C, L) {
                if (!this._triggers.has(c))
                    throw function We(M, h) {
                        return new l.vHH(3302,!1)
                    }();
                if (null == C || 0 == C.length)
                    throw function Ft(M) {
                        return new l.vHH(3303,!1)
                    }();
                if (!function Yi(M) {
                    return "start" == M || "done" == M
                }(C))
                    throw function Jt(M, h) {
                        return new l.vHH(3400,!1)
                    }();
                const ie = Mn(this._elementListeners, h, [])
                  , _e = {
                    name: c,
                    phase: C,
                    callback: L
                };
                ie.push(_e);
                const we = Mn(this._engine.statesByElement, h, new Map);
                return we.has(c) || (ri(h, es),
                ri(h, es + "-" + c),
                we.set(c, en)),
                ()=>{
                    this._engine.afterFlush(()=>{
                        const Je = ie.indexOf(_e);
                        Je >= 0 && ie.splice(Je, 1),
                        this._triggers.has(c) || we.delete(c)
                    }
                    )
                }
            }
            register(h, c) {
                return !this._triggers.has(h) && (this._triggers.set(h, c),
                !0)
            }
            _getTrigger(h) {
                const c = this._triggers.get(h);
                if (!c)
                    throw function Bn(M) {
                        return new l.vHH(3401,!1)
                    }();
                return c
            }
            trigger(h, c, C, L=!0) {
                const ie = this._getTrigger(c)
                  , _e = new Yt(this.id,c,h);
                let we = this._engine.statesByElement.get(h);
                we || (ri(h, es),
                ri(h, es + "-" + c),
                this._engine.statesByElement.set(h, we = new Map));
                let Je = we.get(c);
                const Dt = new Ye(C,this.id);
                if (!(C && C.hasOwnProperty("value")) && Je && Dt.absorbOptions(Je.options),
                we.set(c, Dt),
                Je || (Je = en),
                Dt.value !== ct && Je.value === Dt.value) {
                    if (!function Xs(M, h) {
                        const c = Object.keys(M)
                          , C = Object.keys(h);
                        if (c.length != C.length)
                            return !1;
                        for (let L = 0; L < c.length; L++) {
                            const ie = c[L];
                            if (!h.hasOwnProperty(ie) || M[ie] !== h[ie])
                                return !1
                        }
                        return !0
                    }(Je.params, Dt.params)) {
                        const on = []
                          , jn = ie.matchStyles(Je.value, Je.params, on)
                          , Yn = ie.matchStyles(Dt.value, Dt.params, on);
                        on.length ? this._engine.reportError(on) : this._engine.afterFlush(()=>{
                            ys(h, jn),
                            pi(h, Yn)
                        }
                        )
                    }
                    return
                }
                const Ln = Mn(this._engine.playersByElement, h, []);
                Ln.forEach(on=>{
                    on.namespaceId == this.id && on.triggerName == c && on.queued && on.destroy()
                }
                );
                let kn = ie.matchTransition(Je.value, Dt.value, h, Dt.params)
                  , _n = !1;
                if (!kn) {
                    if (!L)
                        return;
                    kn = ie.fallbackTransition,
                    _n = !0
                }
                return this._engine.totalQueuedPlayers++,
                this._queue.push({
                    element: h,
                    triggerName: c,
                    transition: kn,
                    fromState: Je,
                    toState: Dt,
                    player: _e,
                    isFallbackTransition: _n
                }),
                _n || (ri(h, Se),
                _e.onStart(()=>{
                    Ki(h, Se)
                }
                )),
                _e.onDone(()=>{
                    let on = this.players.indexOf(_e);
                    on >= 0 && this.players.splice(on, 1);
                    const jn = this._engine.playersByElement.get(h);
                    if (jn) {
                        let Yn = jn.indexOf(_e);
                        Yn >= 0 && jn.splice(Yn, 1)
                    }
                }
                ),
                this.players.push(_e),
                Ln.push(_e),
                _e
            }
            deregister(h) {
                this._triggers.delete(h),
                this._engine.statesByElement.forEach(c=>c.delete(h)),
                this._elementListeners.forEach((c,C)=>{
                    this._elementListeners.set(C, c.filter(L=>L.name != h))
                }
                )
            }
            clearElementCache(h) {
                this._engine.statesByElement.delete(h),
                this._elementListeners.delete(h);
                const c = this._engine.playersByElement.get(h);
                c && (c.forEach(C=>C.destroy()),
                this._engine.playersByElement.delete(h))
            }
            _signalRemovalForInnerTriggers(h, c) {
                const C = this._engine.driver.query(h, cs, !0);
                C.forEach(L=>{
                    if (L[Xe])
                        return;
                    const ie = this._engine.fetchNamespacesByElement(L);
                    ie.size ? ie.forEach(_e=>_e.triggerLeaveAnimation(L, c, !1, !0)) : this.clearElementCache(L)
                }
                ),
                this._engine.afterFlushAnimationsDone(()=>C.forEach(L=>this.clearElementCache(L)))
            }
            triggerLeaveAnimation(h, c, C, L) {
                const ie = this._engine.statesByElement.get(h)
                  , _e = new Map;
                if (ie) {
                    const we = [];
                    if (ie.forEach((Je,Dt)=>{
                        if (_e.set(Dt, Je.value),
                        this._triggers.has(Dt)) {
                            const tn = this.trigger(h, Dt, ct, L);
                            tn && we.push(tn)
                        }
                    }
                    ),
                    we.length)
                        return this._engine.markElementAsRemoved(this.id, h, !0, c, _e),
                        C && li(we).onDone(()=>this._engine.processLeaveNode(h)),
                        !0
                }
                return !1
            }
            prepareLeaveAnimationListeners(h) {
                const c = this._elementListeners.get(h)
                  , C = this._engine.statesByElement.get(h);
                if (c && C) {
                    const L = new Set;
                    c.forEach(ie=>{
                        const _e = ie.name;
                        if (L.has(_e))
                            return;
                        L.add(_e);
                        const Je = this._triggers.get(_e).fallbackTransition
                          , Dt = C.get(_e) || en
                          , tn = new Ye(ct)
                          , sn = new Yt(this.id,_e,h);
                        this._engine.totalQueuedPlayers++,
                        this._queue.push({
                            element: h,
                            triggerName: _e,
                            transition: Je,
                            fromState: Dt,
                            toState: tn,
                            player: sn,
                            isFallbackTransition: !0
                        })
                    }
                    )
                }
            }
            removeNode(h, c) {
                const C = this._engine;
                if (h.childElementCount && this._signalRemovalForInnerTriggers(h, c),
                this.triggerLeaveAnimation(h, c, !0))
                    return;
                let L = !1;
                if (C.totalAnimations) {
                    const ie = C.players.length ? C.playersByQueriedElement.get(h) : [];
                    if (ie && ie.length)
                        L = !0;
                    else {
                        let _e = h;
                        for (; _e = _e.parentNode; )
                            if (C.statesByElement.get(_e)) {
                                L = !0;
                                break
                            }
                    }
                }
                if (this.prepareLeaveAnimationListeners(h),
                L)
                    C.markElementAsRemoved(this.id, h, !1, c);
                else {
                    const ie = h[Xe];
                    (!ie || ie === Ut) && (C.afterFlush(()=>this.clearElementCache(h)),
                    C.destroyInnerAnimations(h),
                    C._onRemovalComplete(h, c))
                }
            }
            insertNode(h, c) {
                ri(h, this._hostClassName)
            }
            drainQueuedTransitions(h) {
                const c = [];
                return this._queue.forEach(C=>{
                    const L = C.player;
                    if (L.destroyed)
                        return;
                    const ie = C.element
                      , _e = this._elementListeners.get(ie);
                    _e && _e.forEach(we=>{
                        if (we.name == C.triggerName) {
                            const Je = yi(ie, C.triggerName, C.fromState.value, C.toState.value);
                            Je._data = h,
                            Hn(C.player, we.phase, Je, we.callback)
                        }
                    }
                    ),
                    L.markedForDestroy ? this._engine.afterFlush(()=>{
                        L.destroy()
                    }
                    ) : c.push(C)
                }
                ),
                this._queue = [],
                c.sort((C,L)=>{
                    const ie = C.transition.ast.depCount
                      , _e = L.transition.ast.depCount;
                    return 0 == ie || 0 == _e ? ie - _e : this._engine.driver.containsElement(C.element, L.element) ? 1 : -1
                }
                )
            }
            destroy(h) {
                this.players.forEach(c=>c.destroy()),
                this._signalRemovalForInnerTriggers(this.hostElement, h)
            }
            elementContainsData(h) {
                let c = !1;
                return this._elementListeners.has(h) && (c = !0),
                c = !!this._queue.find(C=>C.element === h) || c,
                c
            }
        }
        class ht {
            constructor(h, c, C) {
                this.bodyNode = h,
                this.driver = c,
                this._normalizer = C,
                this.players = [],
                this.newHostElements = new Map,
                this.playersByElement = new Map,
                this.playersByQueriedElement = new Map,
                this.statesByElement = new Map,
                this.disabledNodes = new Set,
                this.totalAnimations = 0,
                this.totalQueuedPlayers = 0,
                this._namespaceLookup = {},
                this._namespaceList = [],
                this._flushFns = [],
                this._whenQuietFns = [],
                this.namespacesByHostElement = new Map,
                this.collectedEnterElements = [],
                this.collectedLeaveElements = [],
                this.onRemovalComplete = (L,ie)=>{}
            }
            _onRemovalComplete(h, c) {
                this.onRemovalComplete(h, c)
            }
            get queuedPlayers() {
                const h = [];
                return this._namespaceList.forEach(c=>{
                    c.players.forEach(C=>{
                        C.queued && h.push(C)
                    }
                    )
                }
                ),
                h
            }
            createNamespace(h, c) {
                const C = new hn(h,c,this);
                return this.bodyNode && this.driver.containsElement(this.bodyNode, c) ? this._balanceNamespaceList(C, c) : (this.newHostElements.set(c, C),
                this.collectEnterElement(c)),
                this._namespaceLookup[h] = C
            }
            _balanceNamespaceList(h, c) {
                const C = this._namespaceList
                  , L = this.namespacesByHostElement;
                if (C.length - 1 >= 0) {
                    let _e = !1
                      , we = this.driver.getParentElement(c);
                    for (; we; ) {
                        const Je = L.get(we);
                        if (Je) {
                            const Dt = C.indexOf(Je);
                            C.splice(Dt + 1, 0, h),
                            _e = !0;
                            break
                        }
                        we = this.driver.getParentElement(we)
                    }
                    _e || C.unshift(h)
                } else
                    C.push(h);
                return L.set(c, h),
                h
            }
            register(h, c) {
                let C = this._namespaceLookup[h];
                return C || (C = this.createNamespace(h, c)),
                C
            }
            registerTrigger(h, c, C) {
                let L = this._namespaceLookup[h];
                L && L.register(c, C) && this.totalAnimations++
            }
            destroy(h, c) {
                if (!h)
                    return;
                const C = this._fetchNamespace(h);
                this.afterFlush(()=>{
                    this.namespacesByHostElement.delete(C.hostElement),
                    delete this._namespaceLookup[h];
                    const L = this._namespaceList.indexOf(C);
                    L >= 0 && this._namespaceList.splice(L, 1)
                }
                ),
                this.afterFlushAnimationsDone(()=>C.destroy(c))
            }
            _fetchNamespace(h) {
                return this._namespaceLookup[h]
            }
            fetchNamespacesByElement(h) {
                const c = new Set
                  , C = this.statesByElement.get(h);
                if (C)
                    for (let L of C.values())
                        if (L.namespaceId) {
                            const ie = this._fetchNamespace(L.namespaceId);
                            ie && c.add(ie)
                        }
                return c
            }
            trigger(h, c, C, L) {
                if (Un(c)) {
                    const ie = this._fetchNamespace(h);
                    if (ie)
                        return ie.trigger(c, C, L),
                        !0
                }
                return !1
            }
            insertNode(h, c, C, L) {
                if (!Un(c))
                    return;
                const ie = c[Xe];
                if (ie && ie.setForRemoval) {
                    ie.setForRemoval = !1,
                    ie.setForMove = !0;
                    const _e = this.collectedLeaveElements.indexOf(c);
                    _e >= 0 && this.collectedLeaveElements.splice(_e, 1)
                }
                if (h) {
                    const _e = this._fetchNamespace(h);
                    _e && _e.insertNode(c, C)
                }
                L && this.collectEnterElement(c)
            }
            collectEnterElement(h) {
                this.collectedEnterElements.push(h)
            }
            markElementAsDisabled(h, c) {
                c ? this.disabledNodes.has(h) || (this.disabledNodes.add(h),
                ri(h, lt)) : this.disabledNodes.has(h) && (this.disabledNodes.delete(h),
                Ki(h, lt))
            }
            removeNode(h, c, C, L) {
                if (Un(c)) {
                    const ie = h ? this._fetchNamespace(h) : null;
                    if (ie ? ie.removeNode(c, L) : this.markElementAsRemoved(h, c, !1, L),
                    C) {
                        const _e = this.namespacesByHostElement.get(c);
                        _e && _e.id !== h && _e.removeNode(c, L)
                    }
                } else
                    this._onRemovalComplete(c, L)
            }
            markElementAsRemoved(h, c, C, L, ie) {
                this.collectedLeaveElements.push(c),
                c[Xe] = {
                    namespaceId: h,
                    setForRemoval: L,
                    hasAnimation: C,
                    removedBeforeQueried: !1,
                    previousTriggersValues: ie
                }
            }
            listen(h, c, C, L, ie) {
                return Un(c) ? this._fetchNamespace(h).listen(c, C, L, ie) : ()=>{}
            }
            _buildInstruction(h, c, C, L, ie) {
                return h.transition.build(this.driver, h.element, h.fromState.value, h.toState.value, C, L, h.fromState.options, h.toState.options, c, ie)
            }
            destroyInnerAnimations(h) {
                let c = this.driver.query(h, cs, !0);
                c.forEach(C=>this.destroyActiveAnimationsForElement(C)),
                0 != this.playersByQueriedElement.size && (c = this.driver.query(h, us, !0),
                c.forEach(C=>this.finishActiveQueriedAnimationOnElement(C)))
            }
            destroyActiveAnimationsForElement(h) {
                const c = this.playersByElement.get(h);
                c && c.forEach(C=>{
                    C.queued ? C.markedForDestroy = !0 : C.destroy()
                }
                )
            }
            finishActiveQueriedAnimationOnElement(h) {
                const c = this.playersByQueriedElement.get(h);
                c && c.forEach(C=>C.finish())
            }
            whenRenderingDone() {
                return new Promise(h=>{
                    if (this.players.length)
                        return li(this.players).onDone(()=>h());
                    h()
                }
                )
            }
            processLeaveNode(h) {
                const c = h[Xe];
                if (c && c.setForRemoval) {
                    if (h[Xe] = Ut,
                    c.namespaceId) {
                        this.destroyInnerAnimations(h);
                        const C = this._fetchNamespace(c.namespaceId);
                        C && C.clearElementCache(h)
                    }
                    this._onRemovalComplete(h, c.setForRemoval)
                }
                h.classList?.contains(lt) && this.markElementAsDisabled(h, !1),
                this.driver.query(h, ".ng-animate-disabled", !0).forEach(C=>{
                    this.markElementAsDisabled(C, !1)
                }
                )
            }
            flush(h=-1) {
                let c = [];
                if (this.newHostElements.size && (this.newHostElements.forEach((C,L)=>this._balanceNamespaceList(C, L)),
                this.newHostElements.clear()),
                this.totalAnimations && this.collectedEnterElements.length)
                    for (let C = 0; C < this.collectedEnterElements.length; C++)
                        ri(this.collectedEnterElements[C], "ng-star-inserted");
                if (this._namespaceList.length && (this.totalQueuedPlayers || this.collectedLeaveElements.length)) {
                    const C = [];
                    try {
                        c = this._flushAnimations(C, h)
                    } finally {
                        for (let L = 0; L < C.length; L++)
                            C[L]()
                    }
                } else
                    for (let C = 0; C < this.collectedLeaveElements.length; C++)
                        this.processLeaveNode(this.collectedLeaveElements[C]);
                if (this.totalQueuedPlayers = 0,
                this.collectedEnterElements.length = 0,
                this.collectedLeaveElements.length = 0,
                this._flushFns.forEach(C=>C()),
                this._flushFns = [],
                this._whenQuietFns.length) {
                    const C = this._whenQuietFns;
                    this._whenQuietFns = [],
                    c.length ? li(c).onDone(()=>{
                        C.forEach(L=>L())
                    }
                    ) : C.forEach(L=>L())
                }
            }
            reportError(h) {
                throw function Rn(M) {
                    return new l.vHH(3402,!1)
                }()
            }
            _flushAnimations(h, c) {
                const C = new nn
                  , L = []
                  , ie = new Map
                  , _e = []
                  , we = new Map
                  , Je = new Map
                  , Dt = new Map
                  , tn = new Set;
                this.disabledNodes.forEach(g=>{
                    tn.add(g);
                    const v = this.driver.query(g, ".ng-animate-queued", !0);
                    for (let f = 0; f < v.length; f++)
                        tn.add(v[f])
                }
                );
                const sn = this.bodyNode
                  , Ln = Array.from(this.statesByElement.keys())
                  , kn = Qs(Ln, this.collectedEnterElements)
                  , _n = new Map;
                let on = 0;
                kn.forEach((g,v)=>{
                    const f = Ks + on++;
                    _n.set(v, f),
                    g.forEach(w=>ri(w, f))
                }
                );
                const jn = []
                  , Yn = new Set
                  , Ei = new Set;
                for (let g = 0; g < this.collectedLeaveElements.length; g++) {
                    const v = this.collectedLeaveElements[g]
                      , f = v[Xe];
                    f && f.setForRemoval && (jn.push(v),
                    Yn.add(v),
                    f.hasAnimation ? this.driver.query(v, ".ng-star-inserted", !0).forEach(w=>Yn.add(w)) : Ei.add(v))
                }
                const os = new Map
                  , Gn = Qs(Ln, Array.from(Yn));
                Gn.forEach((g,v)=>{
                    const f = xs + on++;
                    os.set(v, f),
                    g.forEach(w=>ri(w, f))
                }
                ),
                h.push(()=>{
                    kn.forEach((g,v)=>{
                        const f = _n.get(v);
                        g.forEach(w=>Ki(w, f))
                    }
                    ),
                    Gn.forEach((g,v)=>{
                        const f = os.get(v);
                        g.forEach(w=>Ki(w, f))
                    }
                    ),
                    jn.forEach(g=>{
                        this.processLeaveNode(g)
                    }
                    )
                }
                );
                const as = []
                  , Rs = [];
                for (let g = this._namespaceList.length - 1; g >= 0; g--)
                    this._namespaceList[g].drainQueuedTransitions(c).forEach(f=>{
                        const w = f.player
                          , A = f.element;
                        if (as.push(w),
                        this.collectedEnterElements.length) {
                            const Ht = A[Xe];
                            if (Ht && Ht.setForMove) {
                                if (Ht.previousTriggersValues && Ht.previousTriggersValues.has(f.triggerName)) {
                                    const zn = Ht.previousTriggersValues.get(f.triggerName)
                                      , Kn = this.statesByElement.get(f.element);
                                    if (Kn && Kn.has(f.triggerName)) {
                                        const ls = Kn.get(f.triggerName);
                                        ls.value = zn,
                                        Kn.set(f.triggerName, ls)
                                    }
                                }
                                return void w.destroy()
                            }
                        }
                        const Z = !sn || !this.driver.containsElement(sn, A)
                          , ve = os.get(A)
                          , De = _n.get(A)
                          , it = this._buildInstruction(f, C, De, ve, Z);
                        if (it.errors && it.errors.length)
                            return void Rs.push(it);
                        if (Z)
                            return w.onStart(()=>ys(A, it.fromStyles)),
                            w.onDestroy(()=>pi(A, it.toStyles)),
                            void L.push(w);
                        if (f.isFallbackTransition)
                            return w.onStart(()=>ys(A, it.fromStyles)),
                            w.onDestroy(()=>pi(A, it.toStyles)),
                            void L.push(w);
                        const Wt = [];
                        it.timelines.forEach(Ht=>{
                            Ht.stretchStartingKeyframe = !0,
                            this.disabledNodes.has(Ht.element) || Wt.push(Ht)
                        }
                        ),
                        it.timelines = Wt,
                        C.append(A, it.timelines),
                        _e.push({
                            instruction: it,
                            player: w,
                            element: A
                        }),
                        it.queriedElements.forEach(Ht=>Mn(we, Ht, []).push(w)),
                        it.preStyleProps.forEach((Ht,zn)=>{
                            if (Ht.size) {
                                let Kn = Je.get(zn);
                                Kn || Je.set(zn, Kn = new Set),
                                Ht.forEach((ls,Ts)=>Kn.add(Ts))
                            }
                        }
                        ),
                        it.postStyleProps.forEach((Ht,zn)=>{
                            let Kn = Dt.get(zn);
                            Kn || Dt.set(zn, Kn = new Set),
                            Ht.forEach((ls,Ts)=>Kn.add(Ts))
                        }
                        )
                    }
                    );
                if (Rs.length) {
                    const g = [];
                    Rs.forEach(v=>{
                        g.push(function Ri(M, h) {
                            return new l.vHH(3505,!1)
                        }())
                    }
                    ),
                    as.forEach(v=>v.destroy()),
                    this.reportError(g)
                }
                const Pi = new Map
                  , gs = new Map;
                _e.forEach(g=>{
                    const v = g.element;
                    C.has(v) && (gs.set(v, v),
                    this._beforeAnimationBuild(g.player.namespaceId, g.instruction, Pi))
                }
                ),
                L.forEach(g=>{
                    const v = g.element;
                    this._getPreviousPlayers(v, !1, g.namespaceId, g.triggerName, null).forEach(w=>{
                        Mn(Pi, v, []).push(w),
                        w.destroy()
                    }
                    )
                }
                );
                const Ws = jn.filter(g=>er(g, Je, Dt))
                  , tr = new Map;
                Js(tr, this.driver, Ei, Dt, Zt.l3).forEach(g=>{
                    er(g, Je, Dt) && Ws.push(g)
                }
                );
                const ho = new Map;
                kn.forEach((g,v)=>{
                    Js(ho, this.driver, new Set(g), Je, Zt.k1)
                }
                ),
                Ws.forEach(g=>{
                    const v = tr.get(g)
                      , f = ho.get(g);
                    tr.set(g, new Map([...Array.from(v?.entries() ?? []), ...Array.from(f?.entries() ?? [])]))
                }
                );
                const Cr = []
                  , Do = []
                  , ms = {};
                _e.forEach(g=>{
                    const {element: v, player: f, instruction: w} = g;
                    if (C.has(v)) {
                        if (tn.has(v))
                            return f.onDestroy(()=>pi(v, w.toStyles)),
                            f.disabled = !0,
                            f.overrideTotalTime(w.totalTime),
                            void L.push(f);
                        let A = ms;
                        if (gs.size > 1) {
                            let ve = v;
                            const De = [];
                            for (; ve = ve.parentNode; ) {
                                const it = gs.get(ve);
                                if (it) {
                                    A = it;
                                    break
                                }
                                De.push(ve)
                            }
                            De.forEach(it=>gs.set(it, A))
                        }
                        const Z = this._buildAnimation(f.namespaceId, w, Pi, ie, ho, tr);
                        if (f.setRealPlayer(Z),
                        A === ms)
                            Cr.push(f);
                        else {
                            const ve = this.playersByElement.get(A);
                            ve && ve.length && (f.parentPlayer = li(ve)),
                            L.push(f)
                        }
                    } else
                        ys(v, w.fromStyles),
                        f.onDestroy(()=>pi(v, w.toStyles)),
                        Do.push(f),
                        tn.has(v) && L.push(f)
                }
                ),
                Do.forEach(g=>{
                    const v = ie.get(g.element);
                    if (v && v.length) {
                        const f = li(v);
                        g.setRealPlayer(f)
                    }
                }
                ),
                L.forEach(g=>{
                    g.parentPlayer ? g.syncPlayerEvents(g.parentPlayer) : g.destroy()
                }
                );
                for (let g = 0; g < jn.length; g++) {
                    const v = jn[g]
                      , f = v[Xe];
                    if (Ki(v, xs),
                    f && f.hasAnimation)
                        continue;
                    let w = [];
                    if (we.size) {
                        let Z = we.get(v);
                        Z && Z.length && w.push(...Z);
                        let ve = this.driver.query(v, us, !0);
                        for (let De = 0; De < ve.length; De++) {
                            let it = we.get(ve[De]);
                            it && it.length && w.push(...it)
                        }
                    }
                    const A = w.filter(Z=>!Z.destroyed);
                    A.length ? Pr(this, v, A) : this.processLeaveNode(v)
                }
                return jn.length = 0,
                Cr.forEach(g=>{
                    this.players.push(g),
                    g.onDone(()=>{
                        g.destroy();
                        const v = this.players.indexOf(g);
                        this.players.splice(v, 1)
                    }
                    ),
                    g.play()
                }
                ),
                Cr
            }
            elementContainsData(h, c) {
                let C = !1;
                const L = c[Xe];
                return L && L.setForRemoval && (C = !0),
                this.playersByElement.has(c) && (C = !0),
                this.playersByQueriedElement.has(c) && (C = !0),
                this.statesByElement.has(c) && (C = !0),
                this._fetchNamespace(h).elementContainsData(c) || C
            }
            afterFlush(h) {
                this._flushFns.push(h)
            }
            afterFlushAnimationsDone(h) {
                this._whenQuietFns.push(h)
            }
            _getPreviousPlayers(h, c, C, L, ie) {
                let _e = [];
                if (c) {
                    const we = this.playersByQueriedElement.get(h);
                    we && (_e = we)
                } else {
                    const we = this.playersByElement.get(h);
                    if (we) {
                        const Je = !ie || ie == ct;
                        we.forEach(Dt=>{
                            Dt.queued || !Je && Dt.triggerName != L || _e.push(Dt)
                        }
                        )
                    }
                }
                return (C || L) && (_e = _e.filter(we=>!(C && C != we.namespaceId || L && L != we.triggerName))),
                _e
            }
            _beforeAnimationBuild(h, c, C) {
                const ie = c.element
                  , _e = c.isRemovalTransition ? void 0 : h
                  , we = c.isRemovalTransition ? void 0 : c.triggerName;
                for (const Je of c.timelines) {
                    const Dt = Je.element
                      , tn = Dt !== ie
                      , sn = Mn(C, Dt, []);
                    this._getPreviousPlayers(Dt, tn, _e, we, c.toState).forEach(kn=>{
                        const _n = kn.getRealPlayer();
                        _n.beforeDestroy && _n.beforeDestroy(),
                        kn.destroy(),
                        sn.push(kn)
                    }
                    )
                }
                ys(ie, c.fromStyles)
            }
            _buildAnimation(h, c, C, L, ie, _e) {
                const we = c.triggerName
                  , Je = c.element
                  , Dt = []
                  , tn = new Set
                  , sn = new Set
                  , Ln = c.timelines.map(_n=>{
                    const on = _n.element;
                    tn.add(on);
                    const jn = on[Xe];
                    if (jn && jn.removedBeforeQueried)
                        return new Zt.ZN(_n.duration,_n.delay);
                    const Yn = on !== Je
                      , Ei = function qs(M) {
                        const h = [];
                        return jr(M, h),
                        h
                    }((C.get(on) || Nt).map(Pi=>Pi.getRealPlayer())).filter(Pi=>!!Pi.element && Pi.element === on)
                      , os = ie.get(on)
                      , Gn = _e.get(on)
                      , as = Dn(0, this._normalizer, 0, _n.keyframes, os, Gn)
                      , Rs = this._buildPlayer(_n, as, Ei);
                    if (_n.subTimeline && L && sn.add(on),
                    Yn) {
                        const Pi = new Yt(h,we,on);
                        Pi.setRealPlayer(Rs),
                        Dt.push(Pi)
                    }
                    return Rs
                }
                );
                Dt.forEach(_n=>{
                    Mn(this.playersByQueriedElement, _n.element, []).push(_n),
                    _n.onDone(()=>function zt(M, h, c) {
                        let C = M.get(h);
                        if (C) {
                            if (C.length) {
                                const L = C.indexOf(c);
                                C.splice(L, 1)
                            }
                            0 == C.length && M.delete(h)
                        }
                        return C
                    }(this.playersByQueriedElement, _n.element, _n))
                }
                ),
                tn.forEach(_n=>ri(_n, bi));
                const kn = li(Ln);
                return kn.onDestroy(()=>{
                    tn.forEach(_n=>Ki(_n, bi)),
                    pi(Je, c.toStyles)
                }
                ),
                sn.forEach(_n=>{
                    Mn(L, _n, []).push(kn)
                }
                ),
                kn
            }
            _buildPlayer(h, c, C) {
                return c.length > 0 ? this.driver.animate(h.element, c, h.duration, h.delay, h.easing, C) : new Zt.ZN(h.duration,h.delay)
            }
        }
        class Yt {
            constructor(h, c, C) {
                this.namespaceId = h,
                this.triggerName = c,
                this.element = C,
                this._player = new Zt.ZN,
                this._containsRealPlayer = !1,
                this._queuedCallbacks = new Map,
                this.destroyed = !1,
                this.markedForDestroy = !1,
                this.disabled = !1,
                this.queued = !0,
                this.totalTime = 0
            }
            setRealPlayer(h) {
                this._containsRealPlayer || (this._player = h,
                this._queuedCallbacks.forEach((c,C)=>{
                    c.forEach(L=>Hn(h, C, void 0, L))
                }
                ),
                this._queuedCallbacks.clear(),
                this._containsRealPlayer = !0,
                this.overrideTotalTime(h.totalTime),
                this.queued = !1)
            }
            getRealPlayer() {
                return this._player
            }
            overrideTotalTime(h) {
                this.totalTime = h
            }
            syncPlayerEvents(h) {
                const c = this._player;
                c.triggerCallback && h.onStart(()=>c.triggerCallback("start")),
                h.onDone(()=>this.finish()),
                h.onDestroy(()=>this.destroy())
            }
            _queueEvent(h, c) {
                Mn(this._queuedCallbacks, h, []).push(c)
            }
            onDone(h) {
                this.queued && this._queueEvent("done", h),
                this._player.onDone(h)
            }
            onStart(h) {
                this.queued && this._queueEvent("start", h),
                this._player.onStart(h)
            }
            onDestroy(h) {
                this.queued && this._queueEvent("destroy", h),
                this._player.onDestroy(h)
            }
            init() {
                this._player.init()
            }
            hasStarted() {
                return !this.queued && this._player.hasStarted()
            }
            play() {
                !this.queued && this._player.play()
            }
            pause() {
                !this.queued && this._player.pause()
            }
            restart() {
                !this.queued && this._player.restart()
            }
            finish() {
                this._player.finish()
            }
            destroy() {
                this.destroyed = !0,
                this._player.destroy()
            }
            reset() {
                !this.queued && this._player.reset()
            }
            setPosition(h) {
                this.queued || this._player.setPosition(h)
            }
            getPosition() {
                return this.queued ? 0 : this._player.getPosition()
            }
            triggerCallback(h) {
                const c = this._player;
                c.triggerCallback && c.triggerCallback(h)
            }
        }
        function Un(M) {
            return M && 1 === M.nodeType
        }
        function ps(M, h) {
            const c = M.style.display;
            return M.style.display = h ?? "none",
            c
        }
        function Js(M, h, c, C, L) {
            const ie = [];
            c.forEach(Je=>ie.push(ps(Je)));
            const _e = [];
            C.forEach((Je,Dt)=>{
                const tn = new Map;
                Je.forEach(sn=>{
                    const Ln = h.computeStyle(Dt, sn, L);
                    tn.set(sn, Ln),
                    (!Ln || 0 == Ln.length) && (Dt[Xe] = At,
                    _e.push(Dt))
                }
                ),
                M.set(Dt, tn)
            }
            );
            let we = 0;
            return c.forEach(Je=>ps(Je, ie[we++])),
            _e
        }
        function Qs(M, h) {
            const c = new Map;
            if (M.forEach(we=>c.set(we, [])),
            0 == h.length)
                return c;
            const L = new Set(h)
              , ie = new Map;
            function _e(we) {
                if (!we)
                    return 1;
                let Je = ie.get(we);
                if (Je)
                    return Je;
                const Dt = we.parentNode;
                return Je = c.has(Dt) ? Dt : L.has(Dt) ? 1 : _e(Dt),
                ie.set(we, Je),
                Je
            }
            return h.forEach(we=>{
                const Je = _e(we);
                1 !== Je && c.get(Je).push(we)
            }
            ),
            c
        }
        function ri(M, h) {
            M.classList?.add(h)
        }
        function Ki(M, h) {
            M.classList?.remove(h)
        }
        function Pr(M, h, c) {
            li(c).onDone(()=>M.processLeaveNode(h))
        }
        function jr(M, h) {
            for (let c = 0; c < M.length; c++) {
                const C = M[c];
                C instanceof Zt.ZE ? jr(C.players, h) : h.push(C)
            }
        }
        function er(M, h, c) {
            const C = c.get(M);
            if (!C)
                return !1;
            let L = h.get(M);
            return L ? C.forEach(ie=>L.add(ie)) : h.set(M, C),
            c.delete(M),
            !0
        }
        class Ss {
            constructor(h, c, C) {
                this.bodyNode = h,
                this._driver = c,
                this._normalizer = C,
                this._triggerCache = {},
                this.onRemovalComplete = (L,ie)=>{}
                ,
                this._transitionEngine = new ht(h,c,C),
                this._timelineEngine = new Ae(h,c,C),
                this._transitionEngine.onRemovalComplete = (L,ie)=>this.onRemovalComplete(L, ie)
            }
            registerTrigger(h, c, C, L, ie) {
                const _e = h + "-" + L;
                let we = this._triggerCache[_e];
                if (!we) {
                    const Je = []
                      , tn = or(this._driver, ie, Je, []);
                    if (Je.length)
                        throw function Gt(M, h) {
                            return new l.vHH(3404,!1)
                        }();
                    we = function S(M, h, c) {
                        return new V(M,h,c)
                    }(L, tn, this._normalizer),
                    this._triggerCache[_e] = we
                }
                this._transitionEngine.registerTrigger(c, L, we)
            }
            register(h, c) {
                this._transitionEngine.register(h, c)
            }
            destroy(h, c) {
                this._transitionEngine.destroy(h, c)
            }
            onInsert(h, c, C, L) {
                this._transitionEngine.insertNode(h, c, C, L)
            }
            onRemove(h, c, C, L) {
                this._transitionEngine.removeNode(h, c, L || !1, C)
            }
            disableAnimations(h, c) {
                this._transitionEngine.markElementAsDisabled(h, c)
            }
            process(h, c, C, L) {
                if ("@" == C.charAt(0)) {
                    const [ie,_e] = ti(C);
                    this._timelineEngine.command(ie, c, _e, L)
                } else
                    this._transitionEngine.trigger(h, c, C, L)
            }
            listen(h, c, C, L, ie) {
                if ("@" == C.charAt(0)) {
                    const [_e,we] = ti(C);
                    return this._timelineEngine.listen(_e, c, we, ie)
                }
                return this._transitionEngine.listen(h, c, C, L, ie)
            }
            flush(h=-1) {
                this._transitionEngine.flush(h)
            }
            get players() {
                return this._transitionEngine.players.concat(this._timelineEngine.players)
            }
            whenRenderingDone() {
                return this._transitionEngine.whenRenderingDone()
            }
        }
        let _r = (()=>{
            class M {
                constructor(c, C, L) {
                    this._element = c,
                    this._startStyles = C,
                    this._endStyles = L,
                    this._state = 0;
                    let ie = M.initialStylesByElement.get(c);
                    ie || M.initialStylesByElement.set(c, ie = new Map),
                    this._initialStyles = ie
                }
                start() {
                    this._state < 1 && (this._startStyles && pi(this._element, this._startStyles, this._initialStyles),
                    this._state = 1)
                }
                finish() {
                    this.start(),
                    this._state < 2 && (pi(this._element, this._initialStyles),
                    this._endStyles && (pi(this._element, this._endStyles),
                    this._endStyles = null),
                    this._state = 1)
                }
                destroy() {
                    this.finish(),
                    this._state < 3 && (M.initialStylesByElement.delete(this._element),
                    this._startStyles && (ys(this._element, this._startStyles),
                    this._endStyles = null),
                    this._endStyles && (ys(this._element, this._endStyles),
                    this._endStyles = null),
                    pi(this._element, this._initialStyles),
                    this._state = 3)
                }
            }
            return M.initialStylesByElement = new WeakMap,
            M
        }
        )();
        function js(M) {
            let h = null;
            return M.forEach((c,C)=>{
                (function Or(M) {
                    return "display" === M || "position" === M
                }
                )(C) && (h = h || new Map,
                h.set(C, c))
            }
            ),
            h
        }
        class ws {
            constructor(h, c, C, L) {
                this.element = h,
                this.keyframes = c,
                this.options = C,
                this._specialStyles = L,
                this._onDoneFns = [],
                this._onStartFns = [],
                this._onDestroyFns = [],
                this._initialized = !1,
                this._finished = !1,
                this._started = !1,
                this._destroyed = !1,
                this._originalOnDoneFns = [],
                this._originalOnStartFns = [],
                this.time = 0,
                this.parentPlayer = null,
                this.currentSnapshot = new Map,
                this._duration = C.duration,
                this._delay = C.delay || 0,
                this.time = this._duration + this._delay
            }
            _onFinish() {
                this._finished || (this._finished = !0,
                this._onDoneFns.forEach(h=>h()),
                this._onDoneFns = [])
            }
            init() {
                this._buildPlayer(),
                this._preparePlayerBeforeStart()
            }
            _buildPlayer() {
                if (this._initialized)
                    return;
                this._initialized = !0;
                const h = this.keyframes;
                this.domPlayer = this._triggerWebAnimation(this.element, h, this.options),
                this._finalKeyframe = h.length ? h[h.length - 1] : new Map,
                this.domPlayer.addEventListener("finish", ()=>this._onFinish())
            }
            _preparePlayerBeforeStart() {
                this._delay ? this._resetDomPlayerState() : this.domPlayer.pause()
            }
            _convertKeyframesToObject(h) {
                const c = [];
                return h.forEach(C=>{
                    c.push(Object.fromEntries(C))
                }
                ),
                c
            }
            _triggerWebAnimation(h, c, C) {
                return h.animate(this._convertKeyframesToObject(c), C)
            }
            onStart(h) {
                this._originalOnStartFns.push(h),
                this._onStartFns.push(h)
            }
            onDone(h) {
                this._originalOnDoneFns.push(h),
                this._onDoneFns.push(h)
            }
            onDestroy(h) {
                this._onDestroyFns.push(h)
            }
            play() {
                this._buildPlayer(),
                this.hasStarted() || (this._onStartFns.forEach(h=>h()),
                this._onStartFns = [],
                this._started = !0,
                this._specialStyles && this._specialStyles.start()),
                this.domPlayer.play()
            }
            pause() {
                this.init(),
                this.domPlayer.pause()
            }
            finish() {
                this.init(),
                this._specialStyles && this._specialStyles.finish(),
                this._onFinish(),
                this.domPlayer.finish()
            }
            reset() {
                this._resetDomPlayerState(),
                this._destroyed = !1,
                this._finished = !1,
                this._started = !1,
                this._onStartFns = this._originalOnStartFns,
                this._onDoneFns = this._originalOnDoneFns
            }
            _resetDomPlayerState() {
                this.domPlayer && this.domPlayer.cancel()
            }
            restart() {
                this.reset(),
                this.play()
            }
            hasStarted() {
                return this._started
            }
            destroy() {
                this._destroyed || (this._destroyed = !0,
                this._resetDomPlayerState(),
                this._onFinish(),
                this._specialStyles && this._specialStyles.destroy(),
                this._onDestroyFns.forEach(h=>h()),
                this._onDestroyFns = [])
            }
            setPosition(h) {
                void 0 === this.domPlayer && this.init(),
                this.domPlayer.currentTime = h * this.time
            }
            getPosition() {
                return this.domPlayer.currentTime / this.time
            }
            get totalTime() {
                return this._delay + this._duration
            }
            beforeDestroy() {
                const h = new Map;
                this.hasStarted() && this._finalKeyframe.forEach((C,L)=>{
                    "offset" !== L && h.set(L, this._finished ? C : Cs(this.element, L))
                }
                ),
                this.currentSnapshot = h
            }
            triggerCallback(h) {
                const c = "start" === h ? this._onStartFns : this._onDoneFns;
                c.forEach(C=>C()),
                c.length = 0
            }
        }
        class Ua {
            validateStyleProperty(h) {
                return !0
            }
            validateAnimatableStyleProperty(h) {
                return !0
            }
            matchesElement(h, c) {
                return !1
            }
            containsElement(h, c) {
                return Ir(h, c)
            }
            getParentElement(h) {
                return fi(h)
            }
            query(h, c, C) {
                return sr(h, c, C)
            }
            computeStyle(h, c, C) {
                return window.getComputedStyle(h)[c]
            }
            animate(h, c, C, L, ie, _e=[]) {
                const Je = {
                    duration: C,
                    delay: L,
                    fill: 0 == L ? "both" : "forwards"
                };
                ie && (Je.easing = ie);
                const Dt = new Map
                  , tn = _e.filter(kn=>kn instanceof ws);
                (function Qi(M, h) {
                    return 0 === M || 0 === h
                }
                )(C, L) && tn.forEach(kn=>{
                    kn.currentSnapshot.forEach((_n,on)=>Dt.set(on, _n))
                }
                );
                let sn = function _s(M) {
                    return M.length ? M[0]instanceof Map ? M : M.map(h=>Hs(h)) : []
                }(c).map(kn=>Ai(kn));
                sn = function gi(M, h, c) {
                    if (c.size && h.length) {
                        let C = h[0]
                          , L = [];
                        if (c.forEach((ie,_e)=>{
                            C.has(_e) || L.push(_e),
                            C.set(_e, ie)
                        }
                        ),
                        L.length)
                            for (let ie = 1; ie < h.length; ie++) {
                                let _e = h[ie];
                                L.forEach(we=>_e.set(we, Cs(M, we)))
                            }
                    }
                    return h
                }(h, sn, Dt);
                const Ln = function ro(M, h) {
                    let c = null
                      , C = null;
                    return Array.isArray(h) && h.length ? (c = js(h[0]),
                    h.length > 1 && (C = js(h[h.length - 1]))) : h instanceof Map && (c = js(h)),
                    c || C ? new _r(M,c,C) : null
                }(h, sn);
                return new ws(h,sn,Je,Ln)
            }
        }
        let Gr = (()=>{
            class M extends Zt._j {
                constructor(c, C) {
                    super(),
                    this._nextAnimationId = 0,
                    this._renderer = c.createRenderer(C.body, {
                        id: "0",
                        encapsulation: l.ifc.None,
                        styles: [],
                        data: {
                            animation: []
                        }
                    })
                }
                build(c) {
                    const C = this._nextAnimationId.toString();
                    this._nextAnimationId++;
                    const L = Array.isArray(c) ? (0,
                    Zt.vP)(c) : c;
                    return Wr(this._renderer, null, C, "register", [L]),
                    new vo(C,this._renderer)
                }
            }
            return M.\u0275fac = function(c) {
                return new (c || M)(l.LFG(l.FYo),l.LFG(z.K0))
            }
            ,
            M.\u0275prov = l.Yz7({
                token: M,
                factory: M.\u0275fac
            }),
            M
        }
        )();
        class vo extends Zt.LC {
            constructor(h, c) {
                super(),
                this._id = h,
                this._renderer = c
            }
            create(h, c) {
                return new _o(this._id,h,c || {},this._renderer)
            }
        }
        class _o {
            constructor(h, c, C, L) {
                this.id = h,
                this.element = c,
                this._renderer = L,
                this.parentPlayer = null,
                this._started = !1,
                this.totalTime = 0,
                this._command("create", C)
            }
            _listen(h, c) {
                return this._renderer.listen(this.element, `@@${this.id}:${h}`, c)
            }
            _command(h, ...c) {
                return Wr(this._renderer, this.element, this.id, h, c)
            }
            onDone(h) {
                this._listen("done", h)
            }
            onStart(h) {
                this._listen("start", h)
            }
            onDestroy(h) {
                this._listen("destroy", h)
            }
            init() {
                this._command("init")
            }
            hasStarted() {
                return this._started
            }
            play() {
                this._command("play"),
                this._started = !0
            }
            pause() {
                this._command("pause")
            }
            restart() {
                this._command("restart")
            }
            finish() {
                this._command("finish")
            }
            destroy() {
                this._command("destroy")
            }
            reset() {
                this._command("reset"),
                this._started = !1
            }
            setPosition(h) {
                this._command("setPosition", h)
            }
            getPosition() {
                return this._renderer.engine.players[+this.id]?.getPosition() ?? 0
            }
        }
        function Wr(M, h, c, C, L) {
            return M.setProperty(h, `@@${c}:${C}`, L)
        }
        const yo = "@.disabled";
        let oo = (()=>{
            class M {
                constructor(c, C, L) {
                    this.delegate = c,
                    this.engine = C,
                    this._zone = L,
                    this._currentId = 0,
                    this._microtaskId = 1,
                    this._animationCallbacksBuffer = [],
                    this._rendererCache = new Map,
                    this._cdRecurDepth = 0,
                    this.promise = Promise.resolve(0),
                    C.onRemovalComplete = (ie,_e)=>{
                        const we = _e?.parentNode(ie);
                        we && _e.removeChild(we, ie)
                    }
                }
                createRenderer(c, C) {
                    const ie = this.delegate.createRenderer(c, C);
                    if (!(c && C && C.data && C.data.animation)) {
                        let tn = this._rendererCache.get(ie);
                        return tn || (tn = new Yr("",ie,this.engine),
                        this._rendererCache.set(ie, tn)),
                        tn
                    }
                    const _e = C.id
                      , we = C.id + "-" + this._currentId;
                    this._currentId++,
                    this.engine.register(we, c);
                    const Je = tn=>{
                        Array.isArray(tn) ? tn.forEach(Je) : this.engine.registerTrigger(_e, we, c, tn.name, tn)
                    }
                    ;
                    return C.data.animation.forEach(Je),
                    new No(this,we,ie,this.engine)
                }
                begin() {
                    this._cdRecurDepth++,
                    this.delegate.begin && this.delegate.begin()
                }
                _scheduleCountTask() {
                    this.promise.then(()=>{
                        this._microtaskId++
                    }
                    )
                }
                scheduleListenerCallback(c, C, L) {
                    c >= 0 && c < this._microtaskId ? this._zone.run(()=>C(L)) : (0 == this._animationCallbacksBuffer.length && Promise.resolve(null).then(()=>{
                        this._zone.run(()=>{
                            this._animationCallbacksBuffer.forEach(ie=>{
                                const [_e,we] = ie;
                                _e(we)
                            }
                            ),
                            this._animationCallbacksBuffer = []
                        }
                        )
                    }
                    ),
                    this._animationCallbacksBuffer.push([C, L]))
                }
                end() {
                    this._cdRecurDepth--,
                    0 == this._cdRecurDepth && this._zone.runOutsideAngular(()=>{
                        this._scheduleCountTask(),
                        this.engine.flush(this._microtaskId)
                    }
                    ),
                    this.delegate.end && this.delegate.end()
                }
                whenRenderingDone() {
                    return this.engine.whenRenderingDone()
                }
            }
            return M.\u0275fac = function(c) {
                return new (c || M)(l.LFG(l.FYo),l.LFG(Ss),l.LFG(l.R0b))
            }
            ,
            M.\u0275prov = l.Yz7({
                token: M,
                factory: M.\u0275fac
            }),
            M
        }
        )();
        class Yr {
            constructor(h, c, C) {
                this.namespaceId = h,
                this.delegate = c,
                this.engine = C,
                this.destroyNode = this.delegate.destroyNode ? L=>c.destroyNode(L) : null
            }
            get data() {
                return this.delegate.data
            }
            destroy() {
                this.engine.destroy(this.namespaceId, this.delegate),
                this.delegate.destroy()
            }
            createElement(h, c) {
                return this.delegate.createElement(h, c)
            }
            createComment(h) {
                return this.delegate.createComment(h)
            }
            createText(h) {
                return this.delegate.createText(h)
            }
            appendChild(h, c) {
                this.delegate.appendChild(h, c),
                this.engine.onInsert(this.namespaceId, c, h, !1)
            }
            insertBefore(h, c, C, L=!0) {
                this.delegate.insertBefore(h, c, C),
                this.engine.onInsert(this.namespaceId, c, h, L)
            }
            removeChild(h, c, C) {
                this.engine.onRemove(this.namespaceId, c, this.delegate, C)
            }
            selectRootElement(h, c) {
                return this.delegate.selectRootElement(h, c)
            }
            parentNode(h) {
                return this.delegate.parentNode(h)
            }
            nextSibling(h) {
                return this.delegate.nextSibling(h)
            }
            setAttribute(h, c, C, L) {
                this.delegate.setAttribute(h, c, C, L)
            }
            removeAttribute(h, c, C) {
                this.delegate.removeAttribute(h, c, C)
            }
            addClass(h, c) {
                this.delegate.addClass(h, c)
            }
            removeClass(h, c) {
                this.delegate.removeClass(h, c)
            }
            setStyle(h, c, C, L) {
                this.delegate.setStyle(h, c, C, L)
            }
            removeStyle(h, c, C) {
                this.delegate.removeStyle(h, c, C)
            }
            setProperty(h, c, C) {
                "@" == c.charAt(0) && c == yo ? this.disableAnimations(h, !!C) : this.delegate.setProperty(h, c, C)
            }
            setValue(h, c) {
                this.delegate.setValue(h, c)
            }
            listen(h, c, C) {
                return this.delegate.listen(h, c, C)
            }
            disableAnimations(h, c) {
                this.engine.disableAnimations(h, c)
            }
        }
        class No extends Yr {
            constructor(h, c, C, L) {
                super(c, C, L),
                this.factory = h,
                this.namespaceId = c
            }
            setProperty(h, c, C) {
                "@" == c.charAt(0) ? "." == c.charAt(1) && c == yo ? this.disableAnimations(h, C = void 0 === C || !!C) : this.engine.process(this.namespaceId, h, c.slice(1), C) : this.delegate.setProperty(h, c, C)
            }
            listen(h, c, C) {
                if ("@" == c.charAt(0)) {
                    const L = function Fo(M) {
                        switch (M) {
                        case "body":
                            return document.body;
                        case "document":
                            return document;
                        case "window":
                            return window;
                        default:
                            return M
                        }
                    }(h);
                    let ie = c.slice(1)
                      , _e = "";
                    return "@" != ie.charAt(0) && ([ie,_e] = function ao(M) {
                        const h = M.indexOf(".");
                        return [M.substring(0, h), M.slice(h + 1)]
                    }(ie)),
                    this.engine.listen(this.namespaceId, L, ie, _e, we=>{
                        this.factory.scheduleListenerCallback(we._data || -1, C, we)
                    }
                    )
                }
                return this.delegate.listen(h, c, C)
            }
        }
        const Co = [{
            provide: Zt._j,
            useClass: Gr
        }, {
            provide: y,
            useFactory: function Kr() {
                return new O
            }
        }, {
            provide: Ss,
            useClass: (()=>{
                class M extends Ss {
                    constructor(c, C, L, ie) {
                        super(c.body, C, L)
                    }
                    ngOnDestroy() {
                        this.flush()
                    }
                }
                return M.\u0275fac = function(c) {
                    return new (c || M)(l.LFG(z.K0),l.LFG(rr),l.LFG(y),l.LFG(l.z2F))
                }
                ,
                M.\u0275prov = l.Yz7({
                    token: M,
                    factory: M.\u0275fac
                }),
                M
            }
            )()
        }, {
            provide: l.FYo,
            useFactory: function ha(M, h, c) {
                return new oo(M,h,c)
            },
            deps: [i.se, Ss, l.R0b]
        }]
          , co = [{
            provide: rr,
            useFactory: ()=>new Ua
        }, {
            provide: l.QbO,
            useValue: "BrowserAnimations"
        }, ...Co]
          , ur = [{
            provide: rr,
            useClass: Ys
        }, {
            provide: l.QbO,
            useValue: "NoopAnimations"
        }, ...Co];
        let xi = (()=>{
            class M {
                static withConfig(c) {
                    return {
                        ngModule: M,
                        providers: c.disableAnimations ? ur : co
                    }
                }
            }
            return M.\u0275fac = function(c) {
                return new (c || M)
            }
            ,
            M.\u0275mod = l.oAB({
                type: M
            }),
            M.\u0275inj = l.cJS({
                providers: co,
                imports: [i.b2]
            }),
            M
        }
        )()
          , Zr = (()=>{
            class M {
                constructor(c, C, L) {
                    this.store = c,
                    this.messageService = C,
                    this.router = L
                }
                intercept(c, C) {
                    return C.handle(c).pipe((0,
                    H.K)(L=>(401 === L.status && (console.log(L),
                    this.store.set("authToken", ""),
                    this.store.set("profile", ""),
                    this.messageService.add({
                        severity: "error",
                        summary: "Unauthrized Action",
                        detail: "Unauthrized Action, please login first."
                    }),
                    this.router.navigate(["login"])),
                    (0,
                    U._)(L?.error?.message || L.statusText))))
                }
            }
            return M.\u0275fac = function(c) {
                return new (c || M)(l.LFG(Ke.d),l.LFG(ot.ez),l.LFG(Be.F0))
            }
            ,
            M.\u0275prov = l.Yz7({
                token: M,
                factory: M.\u0275fac
            }),
            M
        }
        )();
        var uo = D(2313);
        let Lr = (()=>{
            class M {
                constructor(c) {
                    this.loaderService = c,
                    this.noLoaders = 0
                }
                intercept(c, C) {
                    return this.noLoaders++,
                    this.loaderService.show(),
                    C.handle(c).pipe((0,
                    uo.x)(()=>{
                        this.noLoaders--,
                        this.noLoaders <= 0 && (this.noLoaders = 0,
                        this.loaderService.hide())
                    }
                    ))
                }
            }
            return M.\u0275fac = function(c) {
                return new (c || M)(l.LFG(Et.D))
            }
            ,
            M.\u0275prov = l.Yz7({
                token: M,
                factory: M.\u0275fac
            }),
            M
        }
        )();
        function yr(M) {
            return new oi(M,"./assets/i18n/",".json")
        }
        let Jr = (()=>{
            class M {
            }
            return M.\u0275fac = function(c) {
                return new (c || M)
            }
            ,
            M.\u0275mod = l.oAB({
                type: M,
                bootstrap: [An]
            }),
            M.\u0275inj = l.cJS({
                providers: [{
                    provide: q.TP,
                    useClass: $e,
                    multi: !0
                }, {
                    provide: q.TP,
                    useClass: Lr,
                    multi: !0
                }, {
                    provide: q.TP,
                    useClass: Zr,
                    multi: !0
                }, ai, ot.ez],
                imports: [i.b2.withServerTransition({
                    appId: "serverApp"
                }), xi, st, q.JF, ye.aw.forRoot({
                    loader: {
                        provide: ye.Zw,
                        useFactory: yr,
                        deps: [q.eN]
                    },
                    defaultLanguage: "en"
                }), Kt.j, jt, ye.aw, i.b2, xi]
            }),
            M
        }
        )();
        function ko() {
            i.q6().bootstrapModule(Jr).catch(M=>console.error(M))
        }
        Re.N.production && (0,
        l.G48)(),
        "complete" === document.readyState ? ko() : document.addEventListener("DOMContentLoaded", ko, {
            passive: !0
        })
    }
    ,
    6317: (Ot,je,D)=>{
        D.d(je, {
            X: ()=>l
        });
        var i = D(253);
        class l extends i.x {
            constructor(ue) {
                super(),
                this._value = ue
            }
            get value() {
                return this.getValue()
            }
            _subscribe(ue) {
                const H = super._subscribe(ue);
                return !H.closed && ue.next(this._value),
                H
            }
            getValue() {
                const {hasError: ue, thrownError: H, _value: U} = this;
                if (ue)
                    throw H;
                return this._throwIfClosed(),
                U
            }
            next(ue) {
                super.next(this._value = ue)
            }
        }
    }
    ,
    833: (Ot,je,D)=>{
        D.d(je, {
            y: ()=>te
        });
        var i = D(5463)
          , l = D(7714)
          , q = D(4585)
          , ue = D(4800)
          , H = D(9057)
          , U = D(2971)
          , z = D(2309);
        let te = (()=>{
            class re {
                constructor(Ne) {
                    Ne && (this._subscribe = Ne)
                }
                lift(Ne) {
                    const Be = new re;
                    return Be.source = this,
                    Be.operator = Ne,
                    Be
                }
                subscribe(Ne, Be, ot) {
                    const $e = function fe(re) {
                        return re && re instanceof i.Lv || function W(re) {
                            return re && (0,
                            U.m)(re.next) && (0,
                            U.m)(re.error) && (0,
                            U.m)(re.complete)
                        }(re) && (0,
                        l.Nn)(re)
                    }(Ne) ? Ne : new i.Hp(Ne,Be,ot);
                    return (0,
                    z.x)(()=>{
                        const {operator: Fe, source: et} = this;
                        $e.add(Fe ? Fe.call($e, et) : et ? this._subscribe($e) : this._trySubscribe($e))
                    }
                    ),
                    $e
                }
                _trySubscribe(Ne) {
                    try {
                        return this._subscribe(Ne)
                    } catch (Be) {
                        Ne.error(Be)
                    }
                }
                forEach(Ne, Be) {
                    return new (Be = le(Be))((ot,$e)=>{
                        let Fe;
                        Fe = this.subscribe(et=>{
                            try {
                                Ne(et)
                            } catch (st) {
                                $e(st),
                                Fe?.unsubscribe()
                            }
                        }
                        , $e, ot)
                    }
                    )
                }
                _subscribe(Ne) {
                    var Be;
                    return null === (Be = this.source) || void 0 === Be ? void 0 : Be.subscribe(Ne)
                }
                [q.L]() {
                    return this
                }
                pipe(...Ne) {
                    return (0,
                    ue.U)(Ne)(this)
                }
                toPromise(Ne) {
                    return new (Ne = le(Ne))((Be,ot)=>{
                        let $e;
                        this.subscribe(Fe=>$e = Fe, Fe=>ot(Fe), ()=>Be($e))
                    }
                    )
                }
            }
            return re.create = Ke=>new re(Ke),
            re
        }
        )();
        function le(re) {
            var Ke;
            return null !== (Ke = re ?? H.v.Promise) && void 0 !== Ke ? Ke : Promise
        }
    }
    ,
    6067: (Ot,je,D)=>{
        D.d(je, {
            t: ()=>q
        });
        var i = D(253)
          , l = D(7654);
        class q extends i.x {
            constructor(H=1 / 0, U=1 / 0, z=l.l) {
                super(),
                this._bufferSize = H,
                this._windowTime = U,
                this._timestampProvider = z,
                this._buffer = [],
                this._infiniteTimeWindow = !0,
                this._infiniteTimeWindow = U === 1 / 0,
                this._bufferSize = Math.max(1, H),
                this._windowTime = Math.max(1, U)
            }
            next(H) {
                const {isStopped: U, _buffer: z, _infiniteTimeWindow: te, _timestampProvider: le, _windowTime: W} = this;
                U || (z.push(H),
                !te && z.push(le.now() + W)),
                this._trimBuffer(),
                super.next(H)
            }
            _subscribe(H) {
                this._throwIfClosed(),
                this._trimBuffer();
                const U = this._innerSubscribe(H)
                  , {_infiniteTimeWindow: z, _buffer: te} = this
                  , le = te.slice();
                for (let W = 0; W < le.length && !H.closed; W += z ? 1 : 2)
                    H.next(le[W]);
                return this._checkFinalizedStatuses(H),
                U
            }
            _trimBuffer() {
                const {_bufferSize: H, _timestampProvider: U, _buffer: z, _infiniteTimeWindow: te} = this
                  , le = (te ? 1 : 2) * H;
                if (H < 1 / 0 && le < z.length && z.splice(0, z.length - le),
                !te) {
                    const W = U.now();
                    let fe = 0;
                    for (let re = 1; re < z.length && z[re] <= W; re += 2)
                        fe = re;
                    fe && z.splice(0, fe + 1)
                }
            }
        }
    }
    ,
    253: (Ot,je,D)=>{
        D.d(je, {
            x: ()=>z
        });
        var i = D(833)
          , l = D(7714);
        const ue = (0,
        D(7543).d)(le=>function() {
            le(this),
            this.name = "ObjectUnsubscribedError",
            this.message = "object unsubscribed"
        }
        );
        var H = D(9663)
          , U = D(2309);
        let z = (()=>{
            class le extends i.y {
                constructor() {
                    super(),
                    this.closed = !1,
                    this.observers = [],
                    this.isStopped = !1,
                    this.hasError = !1,
                    this.thrownError = null
                }
                lift(fe) {
                    const re = new te(this,this);
                    return re.operator = fe,
                    re
                }
                _throwIfClosed() {
                    if (this.closed)
                        throw new ue
                }
                next(fe) {
                    (0,
                    U.x)(()=>{
                        if (this._throwIfClosed(),
                        !this.isStopped) {
                            const re = this.observers.slice();
                            for (const Ke of re)
                                Ke.next(fe)
                        }
                    }
                    )
                }
                error(fe) {
                    (0,
                    U.x)(()=>{
                        if (this._throwIfClosed(),
                        !this.isStopped) {
                            this.hasError = this.isStopped = !0,
                            this.thrownError = fe;
                            const {observers: re} = this;
                            for (; re.length; )
                                re.shift().error(fe)
                        }
                    }
                    )
                }
                complete() {
                    (0,
                    U.x)(()=>{
                        if (this._throwIfClosed(),
                        !this.isStopped) {
                            this.isStopped = !0;
                            const {observers: fe} = this;
                            for (; fe.length; )
                                fe.shift().complete()
                        }
                    }
                    )
                }
                unsubscribe() {
                    this.isStopped = this.closed = !0,
                    this.observers = null
                }
                get observed() {
                    var fe;
                    return (null === (fe = this.observers) || void 0 === fe ? void 0 : fe.length) > 0
                }
                _trySubscribe(fe) {
                    return this._throwIfClosed(),
                    super._trySubscribe(fe)
                }
                _subscribe(fe) {
                    return this._throwIfClosed(),
                    this._checkFinalizedStatuses(fe),
                    this._innerSubscribe(fe)
                }
                _innerSubscribe(fe) {
                    const {hasError: re, isStopped: Ke, observers: Ne} = this;
                    return re || Ke ? l.Lc : (Ne.push(fe),
                    new l.w0(()=>(0,
                    H.P)(Ne, fe)))
                }
                _checkFinalizedStatuses(fe) {
                    const {hasError: re, thrownError: Ke, isStopped: Ne} = this;
                    re ? fe.error(Ke) : Ne && fe.complete()
                }
                asObservable() {
                    const fe = new i.y;
                    return fe.source = this,
                    fe
                }
            }
            return le.create = (W,fe)=>new te(W,fe),
            le
        }
        )();
        class te extends z {
            constructor(W, fe) {
                super(),
                this.destination = W,
                this.source = fe
            }
            next(W) {
                var fe, re;
                null === (re = null === (fe = this.destination) || void 0 === fe ? void 0 : fe.next) || void 0 === re || re.call(fe, W)
            }
            error(W) {
                var fe, re;
                null === (re = null === (fe = this.destination) || void 0 === fe ? void 0 : fe.error) || void 0 === re || re.call(fe, W)
            }
            complete() {
                var W, fe;
                null === (fe = null === (W = this.destination) || void 0 === W ? void 0 : W.complete) || void 0 === fe || fe.call(W)
            }
            _subscribe(W) {
                var fe, re;
                return null !== (re = null === (fe = this.source) || void 0 === fe ? void 0 : fe.subscribe(W)) && void 0 !== re ? re : l.Lc
            }
        }
    }
    ,
    5463: (Ot,je,D)=>{
        D.d(je, {
            Hp: ()=>Ke,
            Lv: ()=>re
        });
        var i = D(2971)
          , l = D(7714)
          , q = D(9057)
          , ue = D(4709)
          , H = D(9635);
        const U = le("C", void 0, void 0);
        function le(Fe, et, st) {
            return {
                kind: Fe,
                value: et,
                error: st
            }
        }
        var W = D(3542)
          , fe = D(2309);
        class re extends l.w0 {
            constructor(et) {
                super(),
                this.isStopped = !1,
                et ? (this.destination = et,
                (0,
                l.Nn)(et) && et.add(this)) : this.destination = $e
            }
            static create(et, st, Pe) {
                return new Ke(et,st,Pe)
            }
            next(et) {
                this.isStopped ? ot(function te(Fe) {
                    return le("N", Fe, void 0)
                }(et), this) : this._next(et)
            }
            error(et) {
                this.isStopped ? ot(function z(Fe) {
                    return le("E", void 0, Fe)
                }(et), this) : (this.isStopped = !0,
                this._error(et))
            }
            complete() {
                this.isStopped ? ot(U, this) : (this.isStopped = !0,
                this._complete())
            }
            unsubscribe() {
                this.closed || (this.isStopped = !0,
                super.unsubscribe(),
                this.destination = null)
            }
            _next(et) {
                this.destination.next(et)
            }
            _error(et) {
                try {
                    this.destination.error(et)
                } finally {
                    this.unsubscribe()
                }
            }
            _complete() {
                try {
                    this.destination.complete()
                } finally {
                    this.unsubscribe()
                }
            }
        }
        class Ke extends re {
            constructor(et, st, Pe) {
                let Q;
                if (super(),
                (0,
                i.m)(et))
                    Q = et;
                else if (et) {
                    let ze;
                    ({next: Q, error: st, complete: Pe} = et),
                    this && q.v.useDeprecatedNextContext ? (ze = Object.create(et),
                    ze.unsubscribe = ()=>this.unsubscribe()) : ze = et,
                    Q = Q?.bind(ze),
                    st = st?.bind(ze),
                    Pe = Pe?.bind(ze)
                }
                this.destination = {
                    next: Q ? Ne(Q) : H.Z,
                    error: Ne(st ?? Be),
                    complete: Pe ? Ne(Pe) : H.Z
                }
            }
        }
        function Ne(Fe, et) {
            return (...st)=>{
                try {
                    Fe(...st)
                } catch (Pe) {
                    q.v.useDeprecatedSynchronousErrorHandling ? (0,
                    fe.O)(Pe) : (0,
                    ue.h)(Pe)
                }
            }
        }
        function Be(Fe) {
            throw Fe
        }
        function ot(Fe, et) {
            const {onStoppedNotification: st} = q.v;
            st && W.z.setTimeout(()=>st(Fe, et))
        }
        const $e = {
            closed: !0,
            next: H.Z,
            error: Be,
            complete: H.Z
        }
    }
    ,
    7714: (Ot,je,D)=>{
        D.d(je, {
            Lc: ()=>U,
            w0: ()=>H,
            Nn: ()=>z
        });
        var i = D(2971);
        const q = (0,
        D(7543).d)(le=>function(fe) {
            le(this),
            this.message = fe ? `${fe.length} errors occurred during unsubscription:\n${fe.map((re,Ke)=>`${Ke + 1}) ${re.toString()}`).join("\n  ")}` : "",
            this.name = "UnsubscriptionError",
            this.errors = fe
        }
        );
        var ue = D(9663);
        class H {
            constructor(W) {
                this.initialTeardown = W,
                this.closed = !1,
                this._parentage = null,
                this._teardowns = null
            }
            unsubscribe() {
                let W;
                if (!this.closed) {
                    this.closed = !0;
                    const {_parentage: fe} = this;
                    if (fe)
                        if (this._parentage = null,
                        Array.isArray(fe))
                            for (const Ne of fe)
                                Ne.remove(this);
                        else
                            fe.remove(this);
                    const {initialTeardown: re} = this;
                    if ((0,
                    i.m)(re))
                        try {
                            re()
                        } catch (Ne) {
                            W = Ne instanceof q ? Ne.errors : [Ne]
                        }
                    const {_teardowns: Ke} = this;
                    if (Ke) {
                        this._teardowns = null;
                        for (const Ne of Ke)
                            try {
                                te(Ne)
                            } catch (Be) {
                                W = W ?? [],
                                Be instanceof q ? W = [...W, ...Be.errors] : W.push(Be)
                            }
                    }
                    if (W)
                        throw new q(W)
                }
            }
            add(W) {
                var fe;
                if (W && W !== this)
                    if (this.closed)
                        te(W);
                    else {
                        if (W instanceof H) {
                            if (W.closed || W._hasParent(this))
                                return;
                            W._addParent(this)
                        }
                        (this._teardowns = null !== (fe = this._teardowns) && void 0 !== fe ? fe : []).push(W)
                    }
            }
            _hasParent(W) {
                const {_parentage: fe} = this;
                return fe === W || Array.isArray(fe) && fe.includes(W)
            }
            _addParent(W) {
                const {_parentage: fe} = this;
                this._parentage = Array.isArray(fe) ? (fe.push(W),
                fe) : fe ? [fe, W] : W
            }
            _removeParent(W) {
                const {_parentage: fe} = this;
                fe === W ? this._parentage = null : Array.isArray(fe) && (0,
                ue.P)(fe, W)
            }
            remove(W) {
                const {_teardowns: fe} = this;
                fe && (0,
                ue.P)(fe, W),
                W instanceof H && W._removeParent(this)
            }
        }
        H.EMPTY = (()=>{
            const le = new H;
            return le.closed = !0,
            le
        }
        )();
        const U = H.EMPTY;
        function z(le) {
            return le instanceof H || le && "closed"in le && (0,
            i.m)(le.remove) && (0,
            i.m)(le.add) && (0,
            i.m)(le.unsubscribe)
        }
        function te(le) {
            (0,
            i.m)(le) ? le() : le.unsubscribe()
        }
    }
    ,
    9057: (Ot,je,D)=>{
        D.d(je, {
            v: ()=>i
        });
        const i = {
            onUnhandledError: null,
            onStoppedNotification: null,
            Promise: void 0,
            useDeprecatedSynchronousErrorHandling: !1,
            useDeprecatedNextContext: !1
        }
    }
    ,
    9319: (Ot,je,D)=>{
        D.d(je, {
            z: ()=>H
        });
        var i = D(1308)
          , q = D(420)
          , ue = D(2957);
        function H(...U) {
            return function l() {
                return (0,
                i.J)(1)
            }()((0,
            ue.D)(U, (0,
            q.yG)(U)))
        }
    }
    ,
    1954: (Ot,je,D)=>{
        D.d(je, {
            P: ()=>q
        });
        var i = D(833)
          , l = D(4987);
        function q(ue) {
            return new i.y(H=>{
                (0,
                l.Xf)(ue()).subscribe(H)
            }
            )
        }
    }
    ,
    591: (Ot,je,D)=>{
        D.d(je, {
            E: ()=>l
        });
        const l = new (D(833).y)(H=>H.complete())
    }
    ,
    1640: (Ot,je,D)=>{
        D.d(je, {
            D: ()=>te
        });
        var i = D(833)
          , l = D(5756)
          , q = D(4987)
          , ue = D(420)
          , H = D(3945)
          , U = D(8385)
          , z = D(1054);
        function te(...le) {
            const W = (0,
            ue.jO)(le)
              , {args: fe, keys: re} = (0,
            l.D)(le)
              , Ke = new i.y(Ne=>{
                const {length: Be} = fe;
                if (!Be)
                    return void Ne.complete();
                const ot = new Array(Be);
                let $e = Be
                  , Fe = Be;
                for (let et = 0; et < Be; et++) {
                    let st = !1;
                    (0,
                    q.Xf)(fe[et]).subscribe(new H.Q(Ne,Pe=>{
                        st || (st = !0,
                        Fe--),
                        ot[et] = Pe
                    }
                    ,()=>$e--,void 0,()=>{
                        (!$e || !st) && (Fe || Ne.next(re ? (0,
                        z.n)(re, ot) : ot),
                        Ne.complete())
                    }
                    ))
                }
            }
            );
            return W ? Ke.pipe((0,
            U.Z)(W)) : Ke
        }
    }
    ,
    2957: (Ot,je,D)=>{
        D.d(je, {
            D: ()=>ye
        });
        var i = D(4987)
          , l = D(1817)
          , q = D(1944)
          , ue = D(3945);
        function H(Re, ut=0) {
            return (0,
            q.e)((Ce,Oe)=>{
                Ce.subscribe(new ue.Q(Oe,Ze=>(0,
                l.f)(Oe, Re, ()=>Oe.next(Ze), ut),()=>(0,
                l.f)(Oe, Re, ()=>Oe.complete(), ut),Ze=>(0,
                l.f)(Oe, Re, ()=>Oe.error(Ze), ut)))
            }
            )
        }
        function U(Re, ut=0) {
            return (0,
            q.e)((Ce,Oe)=>{
                Oe.add(Re.schedule(()=>Ce.subscribe(Oe), ut))
            }
            )
        }
        var le = D(833)
          , fe = D(7321)
          , re = D(2971);
        function Ne(Re, ut) {
            if (!Re)
                throw new Error("Iterable cannot be null");
            return new le.y(Ce=>{
                (0,
                l.f)(Ce, ut, ()=>{
                    const Oe = Re[Symbol.asyncIterator]();
                    (0,
                    l.f)(Ce, ut, ()=>{
                        Oe.next().then(Ze=>{
                            Ze.done ? Ce.complete() : Ce.next(Ze.value)
                        }
                        )
                    }
                    , 0, !0)
                }
                )
            }
            )
        }
        var Be = D(1331)
          , ot = D(9548)
          , $e = D(9806)
          , Fe = D(3433)
          , et = D(470)
          , st = D(7785)
          , Pe = D(181);
        function ye(Re, ut) {
            return ut ? function ze(Re, ut) {
                if (null != Re) {
                    if ((0,
                    Be.c)(Re))
                        return function z(Re, ut) {
                            return (0,
                            i.Xf)(Re).pipe(U(ut), H(ut))
                        }(Re, ut);
                    if ((0,
                    $e.z)(Re))
                        return function W(Re, ut) {
                            return new le.y(Ce=>{
                                let Oe = 0;
                                return ut.schedule(function() {
                                    Oe === Re.length ? Ce.complete() : (Ce.next(Re[Oe++]),
                                    Ce.closed || this.schedule())
                                })
                            }
                            )
                        }(Re, ut);
                    if ((0,
                    ot.t)(Re))
                        return function te(Re, ut) {
                            return (0,
                            i.Xf)(Re).pipe(U(ut), H(ut))
                        }(Re, ut);
                    if ((0,
                    et.D)(Re))
                        return Ne(Re, ut);
                    if ((0,
                    Fe.T)(Re))
                        return function Ke(Re, ut) {
                            return new le.y(Ce=>{
                                let Oe;
                                return (0,
                                l.f)(Ce, ut, ()=>{
                                    Oe = Re[fe.h](),
                                    (0,
                                    l.f)(Ce, ut, ()=>{
                                        let Ze, _t;
                                        try {
                                            ({value: Ze, done: _t} = Oe.next())
                                        } catch (rt) {
                                            return void Ce.error(rt)
                                        }
                                        _t ? Ce.complete() : Ce.next(Ze)
                                    }
                                    , 0, !0)
                                }
                                ),
                                ()=>(0,
                                re.m)(Oe?.return) && Oe.return()
                            }
                            )
                        }(Re, ut);
                    if ((0,
                    Pe.L)(Re))
                        return function Q(Re, ut) {
                            return Ne((0,
                            Pe.Q)(Re), ut)
                        }(Re, ut)
                }
                throw (0,
                st.z)(Re)
            }(Re, ut) : (0,
            i.Xf)(Re)
        }
    }
    ,
    4987: (Ot,je,D)=>{
        D.d(je, {
            Xf: ()=>Ke
        });
        var i = D(9126)
          , l = D(9806)
          , q = D(9548)
          , ue = D(833)
          , H = D(1331)
          , U = D(470)
          , z = D(7785)
          , te = D(3433)
          , le = D(181)
          , W = D(2971)
          , fe = D(4709)
          , re = D(4585);
        function Ke(Pe) {
            if (Pe instanceof ue.y)
                return Pe;
            if (null != Pe) {
                if ((0,
                H.c)(Pe))
                    return function Ne(Pe) {
                        return new ue.y(Q=>{
                            const ze = Pe[re.L]();
                            if ((0,
                            W.m)(ze.subscribe))
                                return ze.subscribe(Q);
                            throw new TypeError("Provided object does not correctly implement Symbol.observable")
                        }
                        )
                    }(Pe);
                if ((0,
                l.z)(Pe))
                    return function Be(Pe) {
                        return new ue.y(Q=>{
                            for (let ze = 0; ze < Pe.length && !Q.closed; ze++)
                                Q.next(Pe[ze]);
                            Q.complete()
                        }
                        )
                    }(Pe);
                if ((0,
                q.t)(Pe))
                    return function ot(Pe) {
                        return new ue.y(Q=>{
                            Pe.then(ze=>{
                                Q.closed || (Q.next(ze),
                                Q.complete())
                            }
                            , ze=>Q.error(ze)).then(null, fe.h)
                        }
                        )
                    }(Pe);
                if ((0,
                U.D)(Pe))
                    return Fe(Pe);
                if ((0,
                te.T)(Pe))
                    return function $e(Pe) {
                        return new ue.y(Q=>{
                            for (const ze of Pe)
                                if (Q.next(ze),
                                Q.closed)
                                    return;
                            Q.complete()
                        }
                        )
                    }(Pe);
                if ((0,
                le.L)(Pe))
                    return function et(Pe) {
                        return Fe((0,
                        le.Q)(Pe))
                    }(Pe)
            }
            throw (0,
            z.z)(Pe)
        }
        function Fe(Pe) {
            return new ue.y(Q=>{
                (function st(Pe, Q) {
                    var ze, ye, Re, ut;
                    return (0,
                    i.mG)(this, void 0, void 0, function*() {
                        try {
                            for (ze = (0,
                            i.KL)(Pe); !(ye = yield ze.next()).done; )
                                if (Q.next(ye.value),
                                Q.closed)
                                    return
                        } catch (Ce) {
                            Re = {
                                error: Ce
                            }
                        } finally {
                            try {
                                ye && !ye.done && (ut = ze.return) && (yield ut.call(ze))
                            } finally {
                                if (Re)
                                    throw Re.error
                            }
                        }
                        Q.complete()
                    })
                }
                )(Pe, Q).catch(ze=>Q.error(ze))
            }
            )
        }
    }
    ,
    6646: (Ot,je,D)=>{
        D.d(je, {
            T: ()=>U
        });
        var i = D(1308)
          , l = D(4987)
          , q = D(591)
          , ue = D(420)
          , H = D(2957);
        function U(...z) {
            const te = (0,
            ue.yG)(z)
              , le = (0,
            ue._6)(z, 1 / 0)
              , W = z;
            return W.length ? 1 === W.length ? (0,
            l.Xf)(W[0]) : (0,
            i.J)(le)((0,
            H.D)(W, te)) : q.E
        }
    }
    ,
    745: (Ot,je,D)=>{
        D.d(je, {
            of: ()=>q
        });
        var i = D(420)
          , l = D(2957);
        function q(...ue) {
            const H = (0,
            i.yG)(ue);
            return (0,
            l.D)(ue, H)
        }
    }
    ,
    5474: (Ot,je,D)=>{
        D.d(je, {
            _: ()=>q
        });
        var i = D(833)
          , l = D(2971);
        function q(ue, H) {
            const U = (0,
            l.m)(ue) ? ue : ()=>ue
              , z = te=>te.error(U());
            return new i.y(H ? te=>H.schedule(z, 0, te) : z)
        }
    }
    ,
    5524: (Ot,je,D)=>{
        D.d(je, {
            H: ()=>H
        });
        var i = D(833)
          , l = D(5044)
          , q = D(9867);
        function H(U=0, z, te=l.P) {
            let le = -1;
            return null != z && ((0,
            q.K)(z) ? te = z : le = z),
            new i.y(W=>{
                let fe = function ue(U) {
                    return U instanceof Date && !isNaN(U)
                }(U) ? +U - te.now() : U;
                fe < 0 && (fe = 0);
                let re = 0;
                return te.schedule(function() {
                    W.closed || (W.next(re++),
                    0 <= le ? this.schedule(void 0, le) : W.complete())
                }, fe)
            }
            )
        }
    }
    ,
    3945: (Ot,je,D)=>{
        D.d(je, {
            Q: ()=>l
        });
        var i = D(5463);
        class l extends i.Lv {
            constructor(ue, H, U, z, te) {
                super(ue),
                this.onFinalize = te,
                this._next = H ? function(le) {
                    try {
                        H(le)
                    } catch (W) {
                        ue.error(W)
                    }
                }
                : super._next,
                this._error = z ? function(le) {
                    try {
                        z(le)
                    } catch (W) {
                        ue.error(W)
                    } finally {
                        this.unsubscribe()
                    }
                }
                : super._error,
                this._complete = U ? function() {
                    try {
                        U()
                    } catch (le) {
                        ue.error(le)
                    } finally {
                        this.unsubscribe()
                    }
                }
                : super._complete
            }
            unsubscribe() {
                var ue;
                const {closed: H} = this;
                super.unsubscribe(),
                !H && (null === (ue = this.onFinalize) || void 0 === ue || ue.call(this))
            }
        }
    }
    ,
    3158: (Ot,je,D)=>{
        D.d(je, {
            K: ()=>ue
        });
        var i = D(4987)
          , l = D(3945)
          , q = D(1944);
        function ue(H) {
            return (0,
            q.e)((U,z)=>{
                let W, te = null, le = !1;
                te = U.subscribe(new l.Q(z,void 0,void 0,fe=>{
                    W = (0,
                    i.Xf)(H(fe, ue(H)(U))),
                    te ? (te.unsubscribe(),
                    te = null,
                    W.subscribe(z)) : le = !0
                }
                )),
                le && (te.unsubscribe(),
                te = null,
                W.subscribe(z))
            }
            )
        }
    }
    ,
    3853: (Ot,je,D)=>{
        D.d(je, {
            b: ()=>q
        });
        var i = D(9525)
          , l = D(2971);
        function q(ue, H) {
            return (0,
            l.m)(H) ? (0,
            i.z)(ue, H, 1) : (0,
            i.z)(ue, 1)
        }
    }
    ,
    4744: (Ot,je,D)=>{
        D.d(je, {
            d: ()=>q
        });
        var i = D(1944)
          , l = D(3945);
        function q(ue) {
            return (0,
            i.e)((H,U)=>{
                let z = !1;
                H.subscribe(new l.Q(U,te=>{
                    z = !0,
                    U.next(te)
                }
                ,()=>{
                    z || U.next(ue),
                    U.complete()
                }
                ))
            }
            )
        }
    }
    ,
    116: (Ot,je,D)=>{
        D.d(je, {
            h: ()=>q
        });
        var i = D(1944)
          , l = D(3945);
        function q(ue, H) {
            return (0,
            i.e)((U,z)=>{
                let te = 0;
                U.subscribe(new l.Q(z,le=>ue.call(H, le, te++) && z.next(le)))
            }
            )
        }
    }
    ,
    2313: (Ot,je,D)=>{
        D.d(je, {
            x: ()=>l
        });
        var i = D(1944);
        function l(q) {
            return (0,
            i.e)((ue,H)=>{
                try {
                    ue.subscribe(H)
                } finally {
                    H.add(q)
                }
            }
            )
        }
    }
    ,
    155: (Ot,je,D)=>{
        D.d(je, {
            P: ()=>z
        });
        var i = D(4423)
          , l = D(116)
          , q = D(9295)
          , ue = D(4744)
          , H = D(7354)
          , U = D(9173);
        function z(te, le) {
            const W = arguments.length >= 2;
            return fe=>fe.pipe(te ? (0,
            l.h)((re,Ke)=>te(re, Ke, fe)) : U.y, (0,
            q.q)(1), W ? (0,
            ue.d)(le) : (0,
            H.T)(()=>new i.K))
        }
    }
    ,
    635: (Ot,je,D)=>{
        D.d(je, {
            U: ()=>q
        });
        var i = D(1944)
          , l = D(3945);
        function q(ue, H) {
            return (0,
            i.e)((U,z)=>{
                let te = 0;
                U.subscribe(new l.Q(z,le=>{
                    z.next(ue.call(H, le, te++))
                }
                ))
            }
            )
        }
    }
    ,
    73: (Ot,je,D)=>{
        D.d(je, {
            h: ()=>l
        });
        var i = D(635);
        function l(q) {
            return (0,
            i.U)(()=>q)
        }
    }
    ,
    1308: (Ot,je,D)=>{
        D.d(je, {
            J: ()=>q
        });
        var i = D(9525)
          , l = D(9173);
        function q(ue=1 / 0) {
            return (0,
            i.z)(l.y, ue)
        }
    }
    ,
    9525: (Ot,je,D)=>{
        D.d(je, {
            z: ()=>te
        });
        var i = D(635)
          , l = D(4987)
          , q = D(1944)
          , ue = D(1817)
          , H = D(3945)
          , z = D(2971);
        function te(le, W, fe=1 / 0) {
            return (0,
            z.m)(W) ? te((re,Ke)=>(0,
            i.U)((Ne,Be)=>W(re, Ne, Ke, Be))((0,
            l.Xf)(le(re, Ke))), fe) : ("number" == typeof W && (fe = W),
            (0,
            q.e)((re,Ke)=>function U(le, W, fe, re, Ke, Ne, Be, ot) {
                const $e = [];
                let Fe = 0
                  , et = 0
                  , st = !1;
                const Pe = ()=>{
                    st && !$e.length && !Fe && W.complete()
                }
                  , Q = ye=>Fe < re ? ze(ye) : $e.push(ye)
                  , ze = ye=>{
                    Ne && W.next(ye),
                    Fe++;
                    let Re = !1;
                    (0,
                    l.Xf)(fe(ye, et++)).subscribe(new H.Q(W,ut=>{
                        Ke?.(ut),
                        Ne ? Q(ut) : W.next(ut)
                    }
                    ,()=>{
                        Re = !0
                    }
                    ,void 0,()=>{
                        if (Re)
                            try {
                                for (Fe--; $e.length && Fe < re; ) {
                                    const ut = $e.shift();
                                    Be ? (0,
                                    ue.f)(W, Be, ()=>ze(ut)) : ze(ut)
                                }
                                Pe()
                            } catch (ut) {
                                W.error(ut)
                            }
                    }
                    ))
                }
                ;
                return le.subscribe(new H.Q(W,Q,()=>{
                    st = !0,
                    Pe()
                }
                )),
                ()=>{
                    ot?.()
                }
            }(re, Ke, le, fe)))
        }
    }
    ,
    4382: (Ot,je,D)=>{
        D.d(je, {
            U: ()=>l
        });
        var i = D(3945);
        function l(q, ue, H, U, z) {
            return (te,le)=>{
                let W = H
                  , fe = ue
                  , re = 0;
                te.subscribe(new i.Q(le,Ke=>{
                    const Ne = re++;
                    fe = W ? q(fe, Ke, Ne) : (W = !0,
                    Ke),
                    U && le.next(fe)
                }
                ,z && (()=>{
                    W && le.next(fe),
                    le.complete()
                }
                )))
            }
        }
    }
    ,
    1203: (Ot,je,D)=>{
        D.d(je, {
            B: ()=>U
        });
        var i = D(2957)
          , l = D(9295)
          , q = D(253)
          , ue = D(5463)
          , H = D(1944);
        function U(te={}) {
            const {connector: le=(()=>new q.x), resetOnError: W=!0, resetOnComplete: fe=!0, resetOnRefCountZero: re=!0} = te;
            return Ke=>{
                let Ne = null
                  , Be = null
                  , ot = null
                  , $e = 0
                  , Fe = !1
                  , et = !1;
                const st = ()=>{
                    Be?.unsubscribe(),
                    Be = null
                }
                  , Pe = ()=>{
                    st(),
                    Ne = ot = null,
                    Fe = et = !1
                }
                  , Q = ()=>{
                    const ze = Ne;
                    Pe(),
                    ze?.unsubscribe()
                }
                ;
                return (0,
                H.e)((ze,ye)=>{
                    $e++,
                    !et && !Fe && st();
                    const Re = ot = ot ?? le();
                    ye.add(()=>{
                        $e--,
                        0 === $e && !et && !Fe && (Be = z(Q, re))
                    }
                    ),
                    Re.subscribe(ye),
                    Ne || (Ne = new ue.Hp({
                        next: ut=>Re.next(ut),
                        error: ut=>{
                            et = !0,
                            st(),
                            Be = z(Pe, W, ut),
                            Re.error(ut)
                        }
                        ,
                        complete: ()=>{
                            Fe = !0,
                            st(),
                            Be = z(Pe, fe),
                            Re.complete()
                        }
                    }),
                    (0,
                    i.D)(ze).subscribe(Ne))
                }
                )(Ke)
            }
        }
        function z(te, le, ...W) {
            return !0 === le ? (te(),
            null) : !1 === le ? null : le(...W).pipe((0,
            l.q)(1)).subscribe(()=>te())
        }
    }
    ,
    9196: (Ot,je,D)=>{
        D.d(je, {
            d: ()=>q
        });
        var i = D(6067)
          , l = D(1203);
        function q(ue, H, U) {
            var z, te;
            let le, W = !1;
            return ue && "object" == typeof ue ? (le = null !== (z = ue.bufferSize) && void 0 !== z ? z : 1 / 0,
            H = null !== (te = ue.windowTime) && void 0 !== te ? te : 1 / 0,
            W = !!ue.refCount,
            U = ue.scheduler) : le = ue ?? 1 / 0,
            (0,
            l.B)({
                connector: ()=>new i.t(le,H,U),
                resetOnError: !0,
                resetOnComplete: !1,
                resetOnRefCountZero: W
            })
        }
    }
    ,
    7260: (Ot,je,D)=>{
        D.d(je, {
            T: ()=>l
        });
        var i = D(116);
        function l(q) {
            return (0,
            i.h)((ue,H)=>q <= H)
        }
    }
    ,
    4874: (Ot,je,D)=>{
        D.d(je, {
            O: ()=>ue
        });
        var i = D(9319)
          , l = D(420)
          , q = D(1944);
        function ue(...H) {
            const U = (0,
            l.yG)(H);
            return (0,
            q.e)((z,te)=>{
                (U ? (0,
                i.z)(H, z, U) : (0,
                i.z)(H, z)).subscribe(te)
            }
            )
        }
    }
    ,
    2673: (Ot,je,D)=>{
        D.d(je, {
            w: ()=>ue
        });
        var i = D(4987)
          , l = D(1944)
          , q = D(3945);
        function ue(H, U) {
            return (0,
            l.e)((z,te)=>{
                let le = null
                  , W = 0
                  , fe = !1;
                const re = ()=>fe && !le && te.complete();
                z.subscribe(new q.Q(te,Ke=>{
                    le?.unsubscribe();
                    let Ne = 0;
                    const Be = W++;
                    (0,
                    i.Xf)(H(Ke, Be)).subscribe(le = new q.Q(te,ot=>te.next(U ? U(Ke, ot, Be, Ne++) : ot),()=>{
                        le = null,
                        re()
                    }
                    ))
                }
                ,()=>{
                    fe = !0,
                    re()
                }
                ))
            }
            )
        }
    }
    ,
    9295: (Ot,je,D)=>{
        D.d(je, {
            q: ()=>ue
        });
        var i = D(591)
          , l = D(1944)
          , q = D(3945);
        function ue(H) {
            return H <= 0 ? ()=>i.E : (0,
            l.e)((U,z)=>{
                let te = 0;
                U.subscribe(new q.Q(z,le=>{
                    ++te <= H && (z.next(le),
                    H <= te && z.complete())
                }
                ))
            }
            )
        }
    }
    ,
    9337: (Ot,je,D)=>{
        D.d(je, {
            b: ()=>H
        });
        var i = D(2971)
          , l = D(1944)
          , q = D(3945)
          , ue = D(9173);
        function H(U, z, te) {
            const le = (0,
            i.m)(U) || z || te ? {
                next: U,
                error: z,
                complete: te
            } : U;
            return le ? (0,
            l.e)((W,fe)=>{
                var re;
                null === (re = le.subscribe) || void 0 === re || re.call(le);
                let Ke = !0;
                W.subscribe(new q.Q(fe,Ne=>{
                    var Be;
                    null === (Be = le.next) || void 0 === Be || Be.call(le, Ne),
                    fe.next(Ne)
                }
                ,()=>{
                    var Ne;
                    Ke = !1,
                    null === (Ne = le.complete) || void 0 === Ne || Ne.call(le),
                    fe.complete()
                }
                ,Ne=>{
                    var Be;
                    Ke = !1,
                    null === (Be = le.error) || void 0 === Be || Be.call(le, Ne),
                    fe.error(Ne)
                }
                ,()=>{
                    var Ne, Be;
                    Ke && (null === (Ne = le.unsubscribe) || void 0 === Ne || Ne.call(le)),
                    null === (Be = le.finalize) || void 0 === Be || Be.call(le)
                }
                ))
            }
            ) : ue.y
        }
    }
    ,
    7354: (Ot,je,D)=>{
        D.d(je, {
            T: ()=>ue
        });
        var i = D(4423)
          , l = D(1944)
          , q = D(3945);
        function ue(U=H) {
            return (0,
            l.e)((z,te)=>{
                let le = !1;
                z.subscribe(new q.Q(te,W=>{
                    le = !0,
                    te.next(W)
                }
                ,()=>le ? te.complete() : te.error(U())))
            }
            )
        }
        function H() {
            return new i.K
        }
    }
    ,
    5044: (Ot,je,D)=>{
        D.d(je, {
            P: ()=>W,
            z: ()=>le
        });
        var i = D(7714);
        class l extends i.w0 {
            constructor(re, Ke) {
                super()
            }
            schedule(re, Ke=0) {
                return this
            }
        }
        const q = {
            setInterval(...fe) {
                const {delegate: re} = q;
                return (re?.setInterval || setInterval)(...fe)
            },
            clearInterval(fe) {
                const {delegate: re} = q;
                return (re?.clearInterval || clearInterval)(fe)
            },
            delegate: void 0
        };
        var ue = D(9663)
          , U = D(7654);
        class z {
            constructor(re, Ke=z.now) {
                this.schedulerActionCtor = re,
                this.now = Ke
            }
            schedule(re, Ke=0, Ne) {
                return new this.schedulerActionCtor(this,re).schedule(Ne, Ke)
            }
        }
        z.now = U.l.now;
        const le = new class te extends z {
            constructor(re, Ke=z.now) {
                super(re, Ke),
                this.actions = [],
                this._active = !1,
                this._scheduled = void 0
            }
            flush(re) {
                const {actions: Ke} = this;
                if (this._active)
                    return void Ke.push(re);
                let Ne;
                this._active = !0;
                do {
                    if (Ne = re.execute(re.state, re.delay))
                        break
                } while (re = Ke.shift());
                if (this._active = !1,
                Ne) {
                    for (; re = Ke.shift(); )
                        re.unsubscribe();
                    throw Ne
                }
            }
        }
        (class H extends l {
            constructor(re, Ke) {
                super(re, Ke),
                this.scheduler = re,
                this.work = Ke,
                this.pending = !1
            }
            schedule(re, Ke=0) {
                if (this.closed)
                    return this;
                this.state = re;
                const Ne = this.id
                  , Be = this.scheduler;
                return null != Ne && (this.id = this.recycleAsyncId(Be, Ne, Ke)),
                this.pending = !0,
                this.delay = Ke,
                this.id = this.id || this.requestAsyncId(Be, this.id, Ke),
                this
            }
            requestAsyncId(re, Ke, Ne=0) {
                return q.setInterval(re.flush.bind(re, this), Ne)
            }
            recycleAsyncId(re, Ke, Ne=0) {
                if (null != Ne && this.delay === Ne && !1 === this.pending)
                    return Ke;
                q.clearInterval(Ke)
            }
            execute(re, Ke) {
                if (this.closed)
                    return new Error("executing a cancelled action");
                this.pending = !1;
                const Ne = this._execute(re, Ke);
                if (Ne)
                    return Ne;
                !1 === this.pending && null != this.id && (this.id = this.recycleAsyncId(this.scheduler, this.id, null))
            }
            _execute(re, Ke) {
                let Be, Ne = !1;
                try {
                    this.work(re)
                } catch (ot) {
                    Ne = !0,
                    Be = ot || new Error("Scheduled action threw falsy error")
                }
                if (Ne)
                    return this.unsubscribe(),
                    Be
            }
            unsubscribe() {
                if (!this.closed) {
                    const {id: re, scheduler: Ke} = this
                      , {actions: Ne} = Ke;
                    this.work = this.state = this.scheduler = null,
                    this.pending = !1,
                    (0,
                    ue.P)(Ne, this),
                    null != re && (this.id = this.recycleAsyncId(Ke, re, null)),
                    this.delay = null,
                    super.unsubscribe()
                }
            }
        }
        )
          , W = le
    }
    ,
    7654: (Ot,je,D)=>{
        D.d(je, {
            l: ()=>i
        });
        const i = {
            now: ()=>(i.delegate || Date).now(),
            delegate: void 0
        }
    }
    ,
    3542: (Ot,je,D)=>{
        D.d(je, {
            z: ()=>i
        });
        const i = {
            setTimeout(...l) {
                const {delegate: q} = i;
                return (q?.setTimeout || setTimeout)(...l)
            },
            clearTimeout(l) {
                const {delegate: q} = i;
                return (q?.clearTimeout || clearTimeout)(l)
            },
            delegate: void 0
        }
    }
    ,
    7321: (Ot,je,D)=>{
        D.d(je, {
            h: ()=>l
        });
        const l = function i() {
            return "function" == typeof Symbol && Symbol.iterator ? Symbol.iterator : "@@iterator"
        }()
    }
    ,
    4585: (Ot,je,D)=>{
        D.d(je, {
            L: ()=>i
        });
        const i = "function" == typeof Symbol && Symbol.observable || "@@observable"
    }
    ,
    4423: (Ot,je,D)=>{
        D.d(je, {
            K: ()=>l
        });
        const l = (0,
        D(7543).d)(q=>function() {
            q(this),
            this.name = "EmptyError",
            this.message = "no elements in sequence"
        }
        )
    }
    ,
    420: (Ot,je,D)=>{
        D.d(je, {
            _6: ()=>U,
            jO: ()=>ue,
            yG: ()=>H
        });
        var i = D(2971)
          , l = D(9867);
        function q(z) {
            return z[z.length - 1]
        }
        function ue(z) {
            return (0,
            i.m)(q(z)) ? z.pop() : void 0
        }
        function H(z) {
            return (0,
            l.K)(q(z)) ? z.pop() : void 0
        }
        function U(z, te) {
            return "number" == typeof q(z) ? z.pop() : te
        }
    }
    ,
    5756: (Ot,je,D)=>{
        D.d(je, {
            D: ()=>H
        });
        const {isArray: i} = Array
          , {getPrototypeOf: l, prototype: q, keys: ue} = Object;
        function H(z) {
            if (1 === z.length) {
                const te = z[0];
                if (i(te))
                    return {
                        args: te,
                        keys: null
                    };
                if (function U(z) {
                    return z && "object" == typeof z && l(z) === q
                }(te)) {
                    const le = ue(te);
                    return {
                        args: le.map(W=>te[W]),
                        keys: le
                    }
                }
            }
            return {
                args: z,
                keys: null
            }
        }
    }
    ,
    9663: (Ot,je,D)=>{
        function i(l, q) {
            if (l) {
                const ue = l.indexOf(q);
                0 <= ue && l.splice(ue, 1)
            }
        }
        D.d(je, {
            P: ()=>i
        })
    }
    ,
    7543: (Ot,je,D)=>{
        function i(l) {
            const ue = l(H=>{
                Error.call(H),
                H.stack = (new Error).stack
            }
            );
            return ue.prototype = Object.create(Error.prototype),
            ue.prototype.constructor = ue,
            ue
        }
        D.d(je, {
            d: ()=>i
        })
    }
    ,
    1054: (Ot,je,D)=>{
        function i(l, q) {
            return l.reduce((ue,H,U)=>(ue[H] = q[U],
            ue), {})
        }
        D.d(je, {
            n: ()=>i
        })
    }
    ,
    2309: (Ot,je,D)=>{
        D.d(je, {
            O: ()=>ue,
            x: ()=>q
        });
        var i = D(9057);
        let l = null;
        function q(H) {
            if (i.v.useDeprecatedSynchronousErrorHandling) {
                const U = !l;
                if (U && (l = {
                    errorThrown: !1,
                    error: null
                }),
                H(),
                U) {
                    const {errorThrown: z, error: te} = l;
                    if (l = null,
                    z)
                        throw te
                }
            } else
                H()
        }
        function ue(H) {
            i.v.useDeprecatedSynchronousErrorHandling && l && (l.errorThrown = !0,
            l.error = H)
        }
    }
    ,
    1817: (Ot,je,D)=>{
        function i(l, q, ue, H=0, U=!1) {
            const z = q.schedule(function() {
                ue(),
                U ? l.add(this.schedule(null, H)) : this.unsubscribe()
            }, H);
            if (l.add(z),
            !U)
                return z
        }
        D.d(je, {
            f: ()=>i
        })
    }
    ,
    9173: (Ot,je,D)=>{
        function i(l) {
            return l
        }
        D.d(je, {
            y: ()=>i
        })
    }
    ,
    9806: (Ot,je,D)=>{
        D.d(je, {
            z: ()=>i
        });
        const i = l=>l && "number" == typeof l.length && "function" != typeof l
    }
    ,
    470: (Ot,je,D)=>{
        D.d(je, {
            D: ()=>l
        });
        var i = D(2971);
        function l(q) {
            return Symbol.asyncIterator && (0,
            i.m)(q?.[Symbol.asyncIterator])
        }
    }
    ,
    2971: (Ot,je,D)=>{
        function i(l) {
            return "function" == typeof l
        }
        D.d(je, {
            m: ()=>i
        })
    }
    ,
    1331: (Ot,je,D)=>{
        D.d(je, {
            c: ()=>q
        });
        var i = D(4585)
          , l = D(2971);
        function q(ue) {
            return (0,
            l.m)(ue[i.L])
        }
    }
    ,
    3433: (Ot,je,D)=>{
        D.d(je, {
            T: ()=>q
        });
        var i = D(7321)
          , l = D(2971);
        function q(ue) {
            return (0,
            l.m)(ue?.[i.h])
        }
    }
    ,
    9548: (Ot,je,D)=>{
        D.d(je, {
            t: ()=>l
        });
        var i = D(2971);
        function l(q) {
            return (0,
            i.m)(q?.then)
        }
    }
    ,
    181: (Ot,je,D)=>{
        D.d(je, {
            L: ()=>ue,
            Q: ()=>q
        });
        var i = D(9126)
          , l = D(2971);
        function q(H) {
            return (0,
            i.FC)(this, arguments, function*() {
                const z = H.getReader();
                try {
                    for (; ; ) {
                        const {value: te, done: le} = yield(0,
                        i.qq)(z.read());
                        if (le)
                            return yield(0,
                            i.qq)(void 0);
                        yield yield(0,
                        i.qq)(te)
                    }
                } finally {
                    z.releaseLock()
                }
            })
        }
        function ue(H) {
            return (0,
            l.m)(H?.getReader)
        }
    }
    ,
    9867: (Ot,je,D)=>{
        D.d(je, {
            K: ()=>l
        });
        var i = D(2971);
        function l(q) {
            return q && (0,
            i.m)(q.schedule)
        }
    }
    ,
    1944: (Ot,je,D)=>{
        D.d(je, {
            A: ()=>l,
            e: ()=>q
        });
        var i = D(2971);
        function l(ue) {
            return (0,
            i.m)(ue?.lift)
        }
        function q(ue) {
            return H=>{
                if (l(H))
                    return H.lift(function(U) {
                        try {
                            return ue(U, this)
                        } catch (z) {
                            this.error(z)
                        }
                    });
                throw new TypeError("Unable to lift unknown Observable type")
            }
        }
    }
    ,
    8385: (Ot,je,D)=>{
        D.d(je, {
            Z: ()=>ue
        });
        var i = D(635);
        const {isArray: l} = Array;
        function ue(H) {
            return (0,
            i.U)(U=>function q(H, U) {
                return l(U) ? H(...U) : H(U)
            }(H, U))
        }
    }
    ,
    9635: (Ot,je,D)=>{
        function i() {}
        D.d(je, {
            Z: ()=>i
        })
    }
    ,
    4800: (Ot,je,D)=>{
        D.d(je, {
            U: ()=>q,
            z: ()=>l
        });
        var i = D(9173);
        function l(...ue) {
            return q(ue)
        }
        function q(ue) {
            return 0 === ue.length ? i.y : 1 === ue.length ? ue[0] : function(U) {
                return ue.reduce((z,te)=>te(z), U)
            }
        }
    }
    ,
    4709: (Ot,je,D)=>{
        D.d(je, {
            h: ()=>q
        });
        var i = D(9057)
          , l = D(3542);
        function q(ue) {
            l.z.setTimeout(()=>{
                const {onUnhandledError: H} = i.v;
                if (!H)
                    throw ue;
                H(ue)
            }
            )
        }
    }
    ,
    7785: (Ot,je,D)=>{
        function i(l) {
            return new TypeError(`You provided ${null !== l && "object" == typeof l ? "an invalid object" : `'${l}'`} where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`)
        }
        D.d(je, {
            z: ()=>i
        })
    }
    ,
    9126: (Ot,je,D)=>{
        function te(Ce, Oe, Ze, _t) {
            return new (Ze || (Ze = Promise))(function(It, qt) {
                function ft(pe) {
                    try {
                        be(_t.next(pe))
                    } catch (pt) {
                        qt(pt)
                    }
                }
                function qe(pe) {
                    try {
                        be(_t.throw(pe))
                    } catch (pt) {
                        qt(pt)
                    }
                }
                function be(pe) {
                    pe.done ? It(pe.value) : function rt(It) {
                        return It instanceof Ze ? It : new Ze(function(qt) {
                            qt(It)
                        }
                        )
                    }(pe.value).then(ft, qe)
                }
                be((_t = _t.apply(Ce, Oe || [])).next())
            }
            )
        }
        function $e(Ce) {
            return this instanceof $e ? (this.v = Ce,
            this) : new $e(Ce)
        }
        function Fe(Ce, Oe, Ze) {
            if (!Symbol.asyncIterator)
                throw new TypeError("Symbol.asyncIterator is not defined.");
            var rt, _t = Ze.apply(Ce, Oe || []), It = [];
            return rt = {},
            qt("next"),
            qt("throw"),
            qt("return"),
            rt[Symbol.asyncIterator] = function() {
                return this
            }
            ,
            rt;
            function qt(Mt) {
                _t[Mt] && (rt[Mt] = function(kt) {
                    return new Promise(function(Xt, bt) {
                        It.push([Mt, kt, Xt, bt]) > 1 || ft(Mt, kt)
                    }
                    )
                }
                )
            }
            function ft(Mt, kt) {
                try {
                    !function qe(Mt) {
                        Mt.value instanceof $e ? Promise.resolve(Mt.value.v).then(be, pe) : pt(It[0][2], Mt)
                    }(_t[Mt](kt))
                } catch (Xt) {
                    pt(It[0][3], Xt)
                }
            }
            function be(Mt) {
                ft("next", Mt)
            }
            function pe(Mt) {
                ft("throw", Mt)
            }
            function pt(Mt, kt) {
                Mt(kt),
                It.shift(),
                It.length && ft(It[0][0], It[0][1])
            }
        }
        function st(Ce) {
            if (!Symbol.asyncIterator)
                throw new TypeError("Symbol.asyncIterator is not defined.");
            var Ze, Oe = Ce[Symbol.asyncIterator];
            return Oe ? Oe.call(Ce) : (Ce = function re(Ce) {
                var Oe = "function" == typeof Symbol && Symbol.iterator
                  , Ze = Oe && Ce[Oe]
                  , _t = 0;
                if (Ze)
                    return Ze.call(Ce);
                if (Ce && "number" == typeof Ce.length)
                    return {
                        next: function() {
                            return Ce && _t >= Ce.length && (Ce = void 0),
                            {
                                value: Ce && Ce[_t++],
                                done: !Ce
                            }
                        }
                    };
                throw new TypeError(Oe ? "Object is not iterable." : "Symbol.iterator is not defined.")
            }(Ce),
            Ze = {},
            _t("next"),
            _t("throw"),
            _t("return"),
            Ze[Symbol.asyncIterator] = function() {
                return this
            }
            ,
            Ze);
            function _t(It) {
                Ze[It] = Ce[It] && function(qt) {
                    return new Promise(function(ft, qe) {
                        !function rt(It, qt, ft, qe) {
                            Promise.resolve(qe).then(function(be) {
                                It({
                                    value: be,
                                    done: ft
                                })
                            }, qt)
                        }(ft, qe, (qt = Ce[It](qt)).done, qt.value)
                    }
                    )
                }
            }
        }
        D.d(je, {
            FC: ()=>Fe,
            KL: ()=>st,
            mG: ()=>te,
            qq: ()=>$e
        })
    }
    ,
    4851: (Ot,je,D)=>{
        D.d(je, {
            IO: ()=>Be,
            LC: ()=>l,
            SB: ()=>le,
            X$: ()=>ue,
            ZE: ()=>et,
            ZN: ()=>Fe,
            _7: ()=>Ne,
            _j: ()=>i,
            eR: ()=>fe,
            jt: ()=>H,
            k1: ()=>st,
            l3: ()=>q,
            oB: ()=>te,
            oQ: ()=>re,
            pV: ()=>Ke,
            vP: ()=>z
        });
        class i {
        }
        class l {
        }
        const q = "*";
        function ue(Pe, Q) {
            return {
                type: 7,
                name: Pe,
                definitions: Q,
                options: {}
            }
        }
        function H(Pe, Q=null) {
            return {
                type: 4,
                styles: Q,
                timings: Pe
            }
        }
        function z(Pe, Q=null) {
            return {
                type: 2,
                steps: Pe,
                options: Q
            }
        }
        function te(Pe) {
            return {
                type: 6,
                styles: Pe,
                offset: null
            }
        }
        function le(Pe, Q, ze) {
            return {
                type: 0,
                name: Pe,
                styles: Q,
                options: ze
            }
        }
        function fe(Pe, Q, ze=null) {
            return {
                type: 1,
                expr: Pe,
                animation: Q,
                options: ze
            }
        }
        function re(Pe, Q=null) {
            return {
                type: 8,
                animation: Pe,
                options: Q
            }
        }
        function Ke(Pe=null) {
            return {
                type: 9,
                options: Pe
            }
        }
        function Ne(Pe, Q=null) {
            return {
                type: 10,
                animation: Pe,
                options: Q
            }
        }
        function Be(Pe, Q, ze=null) {
            return {
                type: 11,
                selector: Pe,
                animation: Q,
                options: ze
            }
        }
        function $e(Pe) {
            Promise.resolve().then(Pe)
        }
        class Fe {
            constructor(Q=0, ze=0) {
                this._onDoneFns = [],
                this._onStartFns = [],
                this._onDestroyFns = [],
                this._originalOnDoneFns = [],
                this._originalOnStartFns = [],
                this._started = !1,
                this._destroyed = !1,
                this._finished = !1,
                this._position = 0,
                this.parentPlayer = null,
                this.totalTime = Q + ze
            }
            _onFinish() {
                this._finished || (this._finished = !0,
                this._onDoneFns.forEach(Q=>Q()),
                this._onDoneFns = [])
            }
            onStart(Q) {
                this._originalOnStartFns.push(Q),
                this._onStartFns.push(Q)
            }
            onDone(Q) {
                this._originalOnDoneFns.push(Q),
                this._onDoneFns.push(Q)
            }
            onDestroy(Q) {
                this._onDestroyFns.push(Q)
            }
            hasStarted() {
                return this._started
            }
            init() {}
            play() {
                this.hasStarted() || (this._onStart(),
                this.triggerMicrotask()),
                this._started = !0
            }
            triggerMicrotask() {
                $e(()=>this._onFinish())
            }
            _onStart() {
                this._onStartFns.forEach(Q=>Q()),
                this._onStartFns = []
            }
            pause() {}
            restart() {}
            finish() {
                this._onFinish()
            }
            destroy() {
                this._destroyed || (this._destroyed = !0,
                this.hasStarted() || this._onStart(),
                this.finish(),
                this._onDestroyFns.forEach(Q=>Q()),
                this._onDestroyFns = [])
            }
            reset() {
                this._started = !1,
                this._finished = !1,
                this._onStartFns = this._originalOnStartFns,
                this._onDoneFns = this._originalOnDoneFns
            }
            setPosition(Q) {
                this._position = this.totalTime ? Q * this.totalTime : 1
            }
            getPosition() {
                return this.totalTime ? this._position / this.totalTime : 1
            }
            triggerCallback(Q) {
                const ze = "start" == Q ? this._onStartFns : this._onDoneFns;
                ze.forEach(ye=>ye()),
                ze.length = 0
            }
        }
        class et {
            constructor(Q) {
                this._onDoneFns = [],
                this._onStartFns = [],
                this._finished = !1,
                this._started = !1,
                this._destroyed = !1,
                this._onDestroyFns = [],
                this.parentPlayer = null,
                this.totalTime = 0,
                this.players = Q;
                let ze = 0
                  , ye = 0
                  , Re = 0;
                const ut = this.players.length;
                0 == ut ? $e(()=>this._onFinish()) : this.players.forEach(Ce=>{
                    Ce.onDone(()=>{
                        ++ze == ut && this._onFinish()
                    }
                    ),
                    Ce.onDestroy(()=>{
                        ++ye == ut && this._onDestroy()
                    }
                    ),
                    Ce.onStart(()=>{
                        ++Re == ut && this._onStart()
                    }
                    )
                }
                ),
                this.totalTime = this.players.reduce((Ce,Oe)=>Math.max(Ce, Oe.totalTime), 0)
            }
            _onFinish() {
                this._finished || (this._finished = !0,
                this._onDoneFns.forEach(Q=>Q()),
                this._onDoneFns = [])
            }
            init() {
                this.players.forEach(Q=>Q.init())
            }
            onStart(Q) {
                this._onStartFns.push(Q)
            }
            _onStart() {
                this.hasStarted() || (this._started = !0,
                this._onStartFns.forEach(Q=>Q()),
                this._onStartFns = [])
            }
            onDone(Q) {
                this._onDoneFns.push(Q)
            }
            onDestroy(Q) {
                this._onDestroyFns.push(Q)
            }
            hasStarted() {
                return this._started
            }
            play() {
                this.parentPlayer || this.init(),
                this._onStart(),
                this.players.forEach(Q=>Q.play())
            }
            pause() {
                this.players.forEach(Q=>Q.pause())
            }
            restart() {
                this.players.forEach(Q=>Q.restart())
            }
            finish() {
                this._onFinish(),
                this.players.forEach(Q=>Q.finish())
            }
            destroy() {
                this._onDestroy()
            }
            _onDestroy() {
                this._destroyed || (this._destroyed = !0,
                this._onFinish(),
                this.players.forEach(Q=>Q.destroy()),
                this._onDestroyFns.forEach(Q=>Q()),
                this._onDestroyFns = [])
            }
            reset() {
                this.players.forEach(Q=>Q.reset()),
                this._destroyed = !1,
                this._finished = !1,
                this._started = !1
            }
            setPosition(Q) {
                const ze = Q * this.totalTime;
                this.players.forEach(ye=>{
                    const Re = ye.totalTime ? Math.min(1, ze / ye.totalTime) : 1;
                    ye.setPosition(Re)
                }
                )
            }
            getPosition() {
                const Q = this.players.reduce((ze,ye)=>null === ze || ye.totalTime > ze.totalTime ? ye : ze, null);
                return null != Q ? Q.getPosition() : 0
            }
            beforeDestroy() {
                this.players.forEach(Q=>{
                    Q.beforeDestroy && Q.beforeDestroy()
                }
                )
            }
            triggerCallback(Q) {
                const ze = "start" == Q ? this._onStartFns : this._onDoneFns;
                ze.forEach(ye=>ye()),
                ze.length = 0
            }
        }
        const st = "!"
    }
    ,
    4666: (Ot,je,D)=>{
        D.d(je, {
            Do: ()=>st,
            ED: ()=>Ci,
            EM: ()=>Os,
            HT: ()=>H,
            JF: ()=>Cs,
            JJ: ()=>Bi,
            K0: ()=>z,
            Mx: ()=>Rn,
            NF: ()=>Ps,
            O5: ()=>bn,
            Ov: ()=>Ys,
            PC: ()=>Ni,
            PM: ()=>hs,
            RF: ()=>Mi,
            S$: ()=>$e,
            V_: ()=>W,
            Ye: ()=>Pe,
            b0: ()=>et,
            bD: ()=>pi,
            ez: ()=>As,
            mk: ()=>dn,
            n9: ()=>vs,
            q: ()=>q,
            sg: ()=>li,
            tP: ()=>Vs,
            uU: ()=>xs,
            w_: ()=>U
        });
        var i = D(2560);
        let l = null;
        function q() {
            return l
        }
        function H(u) {
            l || (l = u)
        }
        class U {
        }
        const z = new i.OlP("DocumentToken");
        let te = (()=>{
            class u {
                historyGo(d) {
                    throw new Error("Not implemented")
                }
            }
            return u.\u0275fac = function(d) {
                return new (d || u)
            }
            ,
            u.\u0275prov = i.Yz7({
                token: u,
                factory: function() {
                    return function le() {
                        return (0,
                        i.LFG)(fe)
                    }()
                },
                providedIn: "platform"
            }),
            u
        }
        )();
        const W = new i.OlP("Location Initialized");
        let fe = (()=>{
            class u extends te {
                constructor(d) {
                    super(),
                    this._doc = d,
                    this._init()
                }
                _init() {
                    this.location = window.location,
                    this._history = window.history
                }
                getBaseHrefFromDOM() {
                    return q().getBaseHref(this._doc)
                }
                onPopState(d) {
                    const S = q().getGlobalEventTarget(this._doc, "window");
                    return S.addEventListener("popstate", d, !1),
                    ()=>S.removeEventListener("popstate", d)
                }
                onHashChange(d) {
                    const S = q().getGlobalEventTarget(this._doc, "window");
                    return S.addEventListener("hashchange", d, !1),
                    ()=>S.removeEventListener("hashchange", d)
                }
                get href() {
                    return this.location.href
                }
                get protocol() {
                    return this.location.protocol
                }
                get hostname() {
                    return this.location.hostname
                }
                get port() {
                    return this.location.port
                }
                get pathname() {
                    return this.location.pathname
                }
                get search() {
                    return this.location.search
                }
                get hash() {
                    return this.location.hash
                }
                set pathname(d) {
                    this.location.pathname = d
                }
                pushState(d, S, V) {
                    re() ? this._history.pushState(d, S, V) : this.location.hash = V
                }
                replaceState(d, S, V) {
                    re() ? this._history.replaceState(d, S, V) : this.location.hash = V
                }
                forward() {
                    this._history.forward()
                }
                back() {
                    this._history.back()
                }
                historyGo(d=0) {
                    this._history.go(d)
                }
                getState() {
                    return this._history.state
                }
            }
            return u.\u0275fac = function(d) {
                return new (d || u)(i.LFG(z))
            }
            ,
            u.\u0275prov = i.Yz7({
                token: u,
                factory: function() {
                    return function Ke() {
                        return new fe((0,
                        i.LFG)(z))
                    }()
                },
                providedIn: "platform"
            }),
            u
        }
        )();
        function re() {
            return !!window.history.pushState
        }
        function Ne(u, m) {
            if (0 == u.length)
                return m;
            if (0 == m.length)
                return u;
            let d = 0;
            return u.endsWith("/") && d++,
            m.startsWith("/") && d++,
            2 == d ? u + m.substring(1) : 1 == d ? u + m : u + "/" + m
        }
        function Be(u) {
            const m = u.match(/#|\?|$/)
              , d = m && m.index || u.length;
            return u.slice(0, d - ("/" === u[d - 1] ? 1 : 0)) + u.slice(d)
        }
        function ot(u) {
            return u && "?" !== u[0] ? "?" + u : u
        }
        let $e = (()=>{
            class u {
                historyGo(d) {
                    throw new Error("Not implemented")
                }
            }
            return u.\u0275fac = function(d) {
                return new (d || u)
            }
            ,
            u.\u0275prov = i.Yz7({
                token: u,
                factory: function() {
                    return (0,
                    i.f3M)(et)
                },
                providedIn: "root"
            }),
            u
        }
        )();
        const Fe = new i.OlP("appBaseHref");
        let et = (()=>{
            class u extends $e {
                constructor(d, S) {
                    super(),
                    this._platformLocation = d,
                    this._removeListenerFns = [],
                    this._baseHref = S ?? this._platformLocation.getBaseHrefFromDOM() ?? (0,
                    i.f3M)(z).location?.origin ?? ""
                }
                ngOnDestroy() {
                    for (; this._removeListenerFns.length; )
                        this._removeListenerFns.pop()()
                }
                onPopState(d) {
                    this._removeListenerFns.push(this._platformLocation.onPopState(d), this._platformLocation.onHashChange(d))
                }
                getBaseHref() {
                    return this._baseHref
                }
                prepareExternalUrl(d) {
                    return Ne(this._baseHref, d)
                }
                path(d=!1) {
                    const S = this._platformLocation.pathname + ot(this._platformLocation.search)
                      , V = this._platformLocation.hash;
                    return V && d ? `${S}${V}` : S
                }
                pushState(d, S, V, X) {
                    const j = this.prepareExternalUrl(V + ot(X));
                    this._platformLocation.pushState(d, S, j)
                }
                replaceState(d, S, V, X) {
                    const j = this.prepareExternalUrl(V + ot(X));
                    this._platformLocation.replaceState(d, S, j)
                }
                forward() {
                    this._platformLocation.forward()
                }
                back() {
                    this._platformLocation.back()
                }
                getState() {
                    return this._platformLocation.getState()
                }
                historyGo(d=0) {
                    this._platformLocation.historyGo?.(d)
                }
            }
            return u.\u0275fac = function(d) {
                return new (d || u)(i.LFG(te),i.LFG(Fe, 8))
            }
            ,
            u.\u0275prov = i.Yz7({
                token: u,
                factory: u.\u0275fac,
                providedIn: "root"
            }),
            u
        }
        )()
          , st = (()=>{
            class u extends $e {
                constructor(d, S) {
                    super(),
                    this._platformLocation = d,
                    this._baseHref = "",
                    this._removeListenerFns = [],
                    null != S && (this._baseHref = S)
                }
                ngOnDestroy() {
                    for (; this._removeListenerFns.length; )
                        this._removeListenerFns.pop()()
                }
                onPopState(d) {
                    this._removeListenerFns.push(this._platformLocation.onPopState(d), this._platformLocation.onHashChange(d))
                }
                getBaseHref() {
                    return this._baseHref
                }
                path(d=!1) {
                    let S = this._platformLocation.hash;
                    return null == S && (S = "#"),
                    S.length > 0 ? S.substring(1) : S
                }
                prepareExternalUrl(d) {
                    const S = Ne(this._baseHref, d);
                    return S.length > 0 ? "#" + S : S
                }
                pushState(d, S, V, X) {
                    let j = this.prepareExternalUrl(V + ot(X));
                    0 == j.length && (j = this._platformLocation.pathname),
                    this._platformLocation.pushState(d, S, j)
                }
                replaceState(d, S, V, X) {
                    let j = this.prepareExternalUrl(V + ot(X));
                    0 == j.length && (j = this._platformLocation.pathname),
                    this._platformLocation.replaceState(d, S, j)
                }
                forward() {
                    this._platformLocation.forward()
                }
                back() {
                    this._platformLocation.back()
                }
                getState() {
                    return this._platformLocation.getState()
                }
                historyGo(d=0) {
                    this._platformLocation.historyGo?.(d)
                }
            }
            return u.\u0275fac = function(d) {
                return new (d || u)(i.LFG(te),i.LFG(Fe, 8))
            }
            ,
            u.\u0275prov = i.Yz7({
                token: u,
                factory: u.\u0275fac
            }),
            u
        }
        )()
          , Pe = (()=>{
            class u {
                constructor(d) {
                    this._subject = new i.vpe,
                    this._urlChangeListeners = [],
                    this._urlChangeSubscription = null,
                    this._locationStrategy = d;
                    const S = this._locationStrategy.getBaseHref();
                    this._baseHref = Be(ye(S)),
                    this._locationStrategy.onPopState(V=>{
                        this._subject.emit({
                            url: this.path(!0),
                            pop: !0,
                            state: V.state,
                            type: V.type
                        })
                    }
                    )
                }
                ngOnDestroy() {
                    this._urlChangeSubscription?.unsubscribe(),
                    this._urlChangeListeners = []
                }
                path(d=!1) {
                    return this.normalize(this._locationStrategy.path(d))
                }
                getState() {
                    return this._locationStrategy.getState()
                }
                isCurrentPathEqualTo(d, S="") {
                    return this.path() == this.normalize(d + ot(S))
                }
                normalize(d) {
                    return u.stripTrailingSlash(function ze(u, m) {
                        return u && m.startsWith(u) ? m.substring(u.length) : m
                    }(this._baseHref, ye(d)))
                }
                prepareExternalUrl(d) {
                    return d && "/" !== d[0] && (d = "/" + d),
                    this._locationStrategy.prepareExternalUrl(d)
                }
                go(d, S="", V=null) {
                    this._locationStrategy.pushState(V, "", d, S),
                    this._notifyUrlChangeListeners(this.prepareExternalUrl(d + ot(S)), V)
                }
                replaceState(d, S="", V=null) {
                    this._locationStrategy.replaceState(V, "", d, S),
                    this._notifyUrlChangeListeners(this.prepareExternalUrl(d + ot(S)), V)
                }
                forward() {
                    this._locationStrategy.forward()
                }
                back() {
                    this._locationStrategy.back()
                }
                historyGo(d=0) {
                    this._locationStrategy.historyGo?.(d)
                }
                onUrlChange(d) {
                    return this._urlChangeListeners.push(d),
                    this._urlChangeSubscription || (this._urlChangeSubscription = this.subscribe(S=>{
                        this._notifyUrlChangeListeners(S.url, S.state)
                    }
                    )),
                    ()=>{
                        const S = this._urlChangeListeners.indexOf(d);
                        this._urlChangeListeners.splice(S, 1),
                        0 === this._urlChangeListeners.length && (this._urlChangeSubscription?.unsubscribe(),
                        this._urlChangeSubscription = null)
                    }
                }
                _notifyUrlChangeListeners(d="", S) {
                    this._urlChangeListeners.forEach(V=>V(d, S))
                }
                subscribe(d, S, V) {
                    return this._subject.subscribe({
                        next: d,
                        error: S,
                        complete: V
                    })
                }
            }
            return u.normalizeQueryParams = ot,
            u.joinWithSlash = Ne,
            u.stripTrailingSlash = Be,
            u.\u0275fac = function(d) {
                return new (d || u)(i.LFG($e))
            }
            ,
            u.\u0275prov = i.Yz7({
                token: u,
                factory: function() {
                    return function Q() {
                        return new Pe((0,
                        i.LFG)($e))
                    }()
                },
                providedIn: "root"
            }),
            u
        }
        )();
        function ye(u) {
            return u.replace(/\/index.html$/, "")
        }
        var ut = (()=>((ut = ut || {})[ut.Decimal = 0] = "Decimal",
        ut[ut.Percent = 1] = "Percent",
        ut[ut.Currency = 2] = "Currency",
        ut[ut.Scientific = 3] = "Scientific",
        ut))()
          , Oe = (()=>((Oe = Oe || {})[Oe.Format = 0] = "Format",
        Oe[Oe.Standalone = 1] = "Standalone",
        Oe))()
          , Ze = (()=>((Ze = Ze || {})[Ze.Narrow = 0] = "Narrow",
        Ze[Ze.Abbreviated = 1] = "Abbreviated",
        Ze[Ze.Wide = 2] = "Wide",
        Ze[Ze.Short = 3] = "Short",
        Ze))()
          , _t = (()=>((_t = _t || {})[_t.Short = 0] = "Short",
        _t[_t.Medium = 1] = "Medium",
        _t[_t.Long = 2] = "Long",
        _t[_t.Full = 3] = "Full",
        _t))()
          , rt = (()=>((rt = rt || {})[rt.Decimal = 0] = "Decimal",
        rt[rt.Group = 1] = "Group",
        rt[rt.List = 2] = "List",
        rt[rt.PercentSign = 3] = "PercentSign",
        rt[rt.PlusSign = 4] = "PlusSign",
        rt[rt.MinusSign = 5] = "MinusSign",
        rt[rt.Exponential = 6] = "Exponential",
        rt[rt.SuperscriptingExponent = 7] = "SuperscriptingExponent",
        rt[rt.PerMille = 8] = "PerMille",
        rt[rt.Infinity = 9] = "Infinity",
        rt[rt.NaN = 10] = "NaN",
        rt[rt.TimeSeparator = 11] = "TimeSeparator",
        rt[rt.CurrencyDecimal = 12] = "CurrencyDecimal",
        rt[rt.CurrencyGroup = 13] = "CurrencyGroup",
        rt))();
        function kt(u, m) {
            return $t((0,
            i.cg1)(u)[i.wAp.DateFormat], m)
        }
        function Xt(u, m) {
            return $t((0,
            i.cg1)(u)[i.wAp.TimeFormat], m)
        }
        function bt(u, m) {
            return $t((0,
            i.cg1)(u)[i.wAp.DateTimeFormat], m)
        }
        function Kt(u, m) {
            const d = (0,
            i.cg1)(u)
              , S = d[i.wAp.NumberSymbols][m];
            if (typeof S > "u") {
                if (m === rt.CurrencyDecimal)
                    return d[i.wAp.NumberSymbols][rt.Decimal];
                if (m === rt.CurrencyGroup)
                    return d[i.wAp.NumberSymbols][rt.Group]
            }
            return S
        }
        function Tt(u) {
            if (!u[i.wAp.ExtraData])
                throw new Error(`Missing extra locale data for the locale "${u[i.wAp.LocaleId]}". Use "registerLocaleData" to load new data. See the "I18n guide" on angular.io to know more.`)
        }
        function $t(u, m) {
            for (let d = m; d > -1; d--)
                if (typeof u[d] < "u")
                    return u[d];
            throw new Error("Locale data API: locale data undefined")
        }
        function gn(u) {
            const [m,d] = u.split(":");
            return {
                hours: +m,
                minutes: +d
            }
        }
        const vi = /^(\d{4,})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/
          , Tn = {}
          , vt = /((?:[^BEGHLMOSWYZabcdhmswyz']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|Y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|c{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\s\S]*)/;
        var Le = (()=>((Le = Le || {})[Le.Short = 0] = "Short",
        Le[Le.ShortGMT = 1] = "ShortGMT",
        Le[Le.Long = 2] = "Long",
        Le[Le.Extended = 3] = "Extended",
        Le))()
          , Ee = (()=>((Ee = Ee || {})[Ee.FullYear = 0] = "FullYear",
        Ee[Ee.Month = 1] = "Month",
        Ee[Ee.Date = 2] = "Date",
        Ee[Ee.Hours = 3] = "Hours",
        Ee[Ee.Minutes = 4] = "Minutes",
        Ee[Ee.Seconds = 5] = "Seconds",
        Ee[Ee.FractionalSeconds = 6] = "FractionalSeconds",
        Ee[Ee.Day = 7] = "Day",
        Ee))()
          , dt = (()=>((dt = dt || {})[dt.DayPeriods = 0] = "DayPeriods",
        dt[dt.Days = 1] = "Days",
        dt[dt.Months = 2] = "Months",
        dt[dt.Eras = 3] = "Eras",
        dt))();
        function Et(u, m, d, S) {
            let V = function Lt(u) {
                if (oe(u))
                    return u;
                if ("number" == typeof u && !isNaN(u))
                    return new Date(u);
                if ("string" == typeof u) {
                    if (u = u.trim(),
                    /^(\d{4}(-\d{1,2}(-\d{1,2})?)?)$/.test(u)) {
                        const [V,X=1,j=1] = u.split("-").map(ae=>+ae);
                        return ln(V, X - 1, j)
                    }
                    const d = parseFloat(u);
                    if (!isNaN(u - d))
                        return new Date(d);
                    let S;
                    if (S = u.match(vi))
                        return function x(u) {
                            const m = new Date(0);
                            let d = 0
                              , S = 0;
                            const V = u[8] ? m.setUTCFullYear : m.setFullYear
                              , X = u[8] ? m.setUTCHours : m.setHours;
                            u[9] && (d = Number(u[9] + u[10]),
                            S = Number(u[9] + u[11])),
                            V.call(m, Number(u[1]), Number(u[2]) - 1, Number(u[3]));
                            const j = Number(u[4] || 0) - d
                              , ae = Number(u[5] || 0) - S
                              , Ae = Number(u[6] || 0)
                              , Se = Math.floor(1e3 * parseFloat("0." + (u[7] || 0)));
                            return X.call(m, j, ae, Ae, Se),
                            m
                        }(S)
                }
                const m = new Date(u);
                if (!oe(m))
                    throw new Error(`Unable to convert "${u}" into a date`);
                return m
            }(u);
            m = pn(d, m) || m;
            let ae, j = [];
            for (; m; ) {
                if (ae = vt.exec(m),
                !ae) {
                    j.push(m);
                    break
                }
                {
                    j = j.concat(ae.slice(1));
                    const ke = j.pop();
                    if (!ke)
                        break;
                    m = ke
                }
            }
            let Ae = V.getTimezoneOffset();
            S && (Ae = Ji(S, Ae),
            V = function He(u, m, d) {
                const S = d ? -1 : 1
                  , V = u.getTimezoneOffset();
                return function Li(u, m) {
                    return (u = new Date(u.getTime())).setMinutes(u.getMinutes() + m),
                    u
                }(u, S * (Ji(m, V) - V))
            }(V, S, !0));
            let Se = "";
            return j.forEach(ke=>{
                const lt = function zi(u) {
                    if (Ti[u])
                        return Ti[u];
                    let m;
                    switch (u) {
                    case "G":
                    case "GG":
                    case "GGG":
                        m = un(dt.Eras, Ze.Abbreviated);
                        break;
                    case "GGGG":
                        m = un(dt.Eras, Ze.Wide);
                        break;
                    case "GGGGG":
                        m = un(dt.Eras, Ze.Narrow);
                        break;
                    case "y":
                        m = An(Ee.FullYear, 1, 0, !1, !0);
                        break;
                    case "yy":
                        m = An(Ee.FullYear, 2, 0, !0, !0);
                        break;
                    case "yyy":
                        m = An(Ee.FullYear, 3, 0, !1, !0);
                        break;
                    case "yyyy":
                        m = An(Ee.FullYear, 4, 0, !1, !0);
                        break;
                    case "Y":
                        m = wi(1);
                        break;
                    case "YY":
                        m = wi(2, !0);
                        break;
                    case "YYY":
                        m = wi(3);
                        break;
                    case "YYYY":
                        m = wi(4);
                        break;
                    case "M":
                    case "L":
                        m = An(Ee.Month, 1, 1);
                        break;
                    case "MM":
                    case "LL":
                        m = An(Ee.Month, 2, 1);
                        break;
                    case "MMM":
                        m = un(dt.Months, Ze.Abbreviated);
                        break;
                    case "MMMM":
                        m = un(dt.Months, Ze.Wide);
                        break;
                    case "MMMMM":
                        m = un(dt.Months, Ze.Narrow);
                        break;
                    case "LLL":
                        m = un(dt.Months, Ze.Abbreviated, Oe.Standalone);
                        break;
                    case "LLLL":
                        m = un(dt.Months, Ze.Wide, Oe.Standalone);
                        break;
                    case "LLLLL":
                        m = un(dt.Months, Ze.Narrow, Oe.Standalone);
                        break;
                    case "w":
                        m = _i(1);
                        break;
                    case "ww":
                        m = _i(2);
                        break;
                    case "W":
                        m = _i(1, !0);
                        break;
                    case "d":
                        m = An(Ee.Date, 1);
                        break;
                    case "dd":
                        m = An(Ee.Date, 2);
                        break;
                    case "c":
                    case "cc":
                        m = An(Ee.Day, 1);
                        break;
                    case "ccc":
                        m = un(dt.Days, Ze.Abbreviated, Oe.Standalone);
                        break;
                    case "cccc":
                        m = un(dt.Days, Ze.Wide, Oe.Standalone);
                        break;
                    case "ccccc":
                        m = un(dt.Days, Ze.Narrow, Oe.Standalone);
                        break;
                    case "cccccc":
                        m = un(dt.Days, Ze.Short, Oe.Standalone);
                        break;
                    case "E":
                    case "EE":
                    case "EEE":
                        m = un(dt.Days, Ze.Abbreviated);
                        break;
                    case "EEEE":
                        m = un(dt.Days, Ze.Wide);
                        break;
                    case "EEEEE":
                        m = un(dt.Days, Ze.Narrow);
                        break;
                    case "EEEEEE":
                        m = un(dt.Days, Ze.Short);
                        break;
                    case "a":
                    case "aa":
                    case "aaa":
                        m = un(dt.DayPeriods, Ze.Abbreviated);
                        break;
                    case "aaaa":
                        m = un(dt.DayPeriods, Ze.Wide);
                        break;
                    case "aaaaa":
                        m = un(dt.DayPeriods, Ze.Narrow);
                        break;
                    case "b":
                    case "bb":
                    case "bbb":
                        m = un(dt.DayPeriods, Ze.Abbreviated, Oe.Standalone, !0);
                        break;
                    case "bbbb":
                        m = un(dt.DayPeriods, Ze.Wide, Oe.Standalone, !0);
                        break;
                    case "bbbbb":
                        m = un(dt.DayPeriods, Ze.Narrow, Oe.Standalone, !0);
                        break;
                    case "B":
                    case "BB":
                    case "BBB":
                        m = un(dt.DayPeriods, Ze.Abbreviated, Oe.Format, !0);
                        break;
                    case "BBBB":
                        m = un(dt.DayPeriods, Ze.Wide, Oe.Format, !0);
                        break;
                    case "BBBBB":
                        m = un(dt.DayPeriods, Ze.Narrow, Oe.Format, !0);
                        break;
                    case "h":
                        m = An(Ee.Hours, 1, -12);
                        break;
                    case "hh":
                        m = An(Ee.Hours, 2, -12);
                        break;
                    case "H":
                        m = An(Ee.Hours, 1);
                        break;
                    case "HH":
                        m = An(Ee.Hours, 2);
                        break;
                    case "m":
                        m = An(Ee.Minutes, 1);
                        break;
                    case "mm":
                        m = An(Ee.Minutes, 2);
                        break;
                    case "s":
                        m = An(Ee.Seconds, 1);
                        break;
                    case "ss":
                        m = An(Ee.Seconds, 2);
                        break;
                    case "S":
                        m = An(Ee.FractionalSeconds, 1);
                        break;
                    case "SS":
                        m = An(Ee.FractionalSeconds, 2);
                        break;
                    case "SSS":
                        m = An(Ee.FractionalSeconds, 3);
                        break;
                    case "Z":
                    case "ZZ":
                    case "ZZZ":
                        m = yn(Le.Short);
                        break;
                    case "ZZZZZ":
                        m = yn(Le.Extended);
                        break;
                    case "O":
                    case "OO":
                    case "OOO":
                    case "z":
                    case "zz":
                    case "zzz":
                        m = yn(Le.ShortGMT);
                        break;
                    case "OOOO":
                    case "ZZZZ":
                    case "zzzz":
                        m = yn(Le.Long);
                        break;
                    default:
                        return null
                    }
                    return Ti[u] = m,
                    m
                }(ke);
                Se += lt ? lt(V, d, Ae) : "''" === ke ? "'" : ke.replace(/(^'|'$)/g, "").replace(/''/g, "'")
            }
            ),
            Se
        }
        function ln(u, m, d) {
            const S = new Date(0);
            return S.setFullYear(u, m, d),
            S.setHours(0, 0, 0),
            S
        }
        function pn(u, m) {
            const d = function qt(u) {
                return (0,
                i.cg1)(u)[i.wAp.LocaleId]
            }(u);
            if (Tn[d] = Tn[d] || {},
            Tn[d][m])
                return Tn[d][m];
            let S = "";
            switch (m) {
            case "shortDate":
                S = kt(u, _t.Short);
                break;
            case "mediumDate":
                S = kt(u, _t.Medium);
                break;
            case "longDate":
                S = kt(u, _t.Long);
                break;
            case "fullDate":
                S = kt(u, _t.Full);
                break;
            case "shortTime":
                S = Xt(u, _t.Short);
                break;
            case "mediumTime":
                S = Xt(u, _t.Medium);
                break;
            case "longTime":
                S = Xt(u, _t.Long);
                break;
            case "fullTime":
                S = Xt(u, _t.Full);
                break;
            case "short":
                const V = pn(u, "shortTime")
                  , X = pn(u, "shortDate");
                S = Pn(bt(u, _t.Short), [V, X]);
                break;
            case "medium":
                const j = pn(u, "mediumTime")
                  , ae = pn(u, "mediumDate");
                S = Pn(bt(u, _t.Medium), [j, ae]);
                break;
            case "long":
                const Ae = pn(u, "longTime")
                  , Se = pn(u, "longDate");
                S = Pn(bt(u, _t.Long), [Ae, Se]);
                break;
            case "full":
                const ke = pn(u, "fullTime")
                  , lt = pn(u, "fullDate");
                S = Pn(bt(u, _t.Full), [ke, lt])
            }
            return S && (Tn[d][m] = S),
            S
        }
        function Pn(u, m) {
            return m && (u = u.replace(/\{([^}]+)}/g, function(d, S) {
                return null != m && S in m ? m[S] : d
            })),
            u
        }
        function Vt(u, m, d="-", S, V) {
            let X = "";
            (u < 0 || V && u <= 0) && (V ? u = 1 - u : (u = -u,
            X = d));
            let j = String(u);
            for (; j.length < m; )
                j = "0" + j;
            return S && (j = j.slice(j.length - m)),
            X + j
        }
        function An(u, m, d=0, S=!1, V=!1) {
            return function(X, j) {
                let ae = function oi(u, m) {
                    switch (u) {
                    case Ee.FullYear:
                        return m.getFullYear();
                    case Ee.Month:
                        return m.getMonth();
                    case Ee.Date:
                        return m.getDate();
                    case Ee.Hours:
                        return m.getHours();
                    case Ee.Minutes:
                        return m.getMinutes();
                    case Ee.Seconds:
                        return m.getSeconds();
                    case Ee.FractionalSeconds:
                        return m.getMilliseconds();
                    case Ee.Day:
                        return m.getDay();
                    default:
                        throw new Error(`Unknown DateType value "${u}".`)
                    }
                }(u, X);
                if ((d > 0 || ae > -d) && (ae += d),
                u === Ee.Hours)
                    0 === ae && -12 === d && (ae = 12);
                else if (u === Ee.FractionalSeconds)
                    return function $n(u, m) {
                        return Vt(u, 3).substring(0, m)
                    }(ae, m);
                const Ae = Kt(j, rt.MinusSign);
                return Vt(ae, m, Ae, S, V)
            }
        }
        function un(u, m, d=Oe.Format, S=!1) {
            return function(V, X) {
                return function jt(u, m, d, S, V, X) {
                    switch (d) {
                    case dt.Months:
                        return function be(u, m, d) {
                            const S = (0,
                            i.cg1)(u)
                              , X = $t([S[i.wAp.MonthsFormat], S[i.wAp.MonthsStandalone]], m);
                            return $t(X, d)
                        }(m, V, S)[u.getMonth()];
                    case dt.Days:
                        return function qe(u, m, d) {
                            const S = (0,
                            i.cg1)(u)
                              , X = $t([S[i.wAp.DaysFormat], S[i.wAp.DaysStandalone]], m);
                            return $t(X, d)
                        }(m, V, S)[u.getDay()];
                    case dt.DayPeriods:
                        const j = u.getHours()
                          , ae = u.getMinutes();
                        if (X) {
                            const Se = function wn(u) {
                                const m = (0,
                                i.cg1)(u);
                                return Tt(m),
                                (m[i.wAp.ExtraData][2] || []).map(S=>"string" == typeof S ? gn(S) : [gn(S[0]), gn(S[1])])
                            }(m)
                              , ke = function an(u, m, d) {
                                const S = (0,
                                i.cg1)(u);
                                Tt(S);
                                const X = $t([S[i.wAp.ExtraData][0], S[i.wAp.ExtraData][1]], m) || [];
                                return $t(X, d) || []
                            }(m, V, S)
                              , lt = Se.findIndex(yt=>{
                                if (Array.isArray(yt)) {
                                    const [mt,Ct] = yt
                                      , Nt = j >= mt.hours && ae >= mt.minutes
                                      , Ut = j < Ct.hours || j === Ct.hours && ae < Ct.minutes;
                                    if (mt.hours < Ct.hours) {
                                        if (Nt && Ut)
                                            return !0
                                    } else if (Nt || Ut)
                                        return !0
                                } else if (yt.hours === j && yt.minutes === ae)
                                    return !0;
                                return !1
                            }
                            );
                            if (-1 !== lt)
                                return ke[lt]
                        }
                        return function ft(u, m, d) {
                            const S = (0,
                            i.cg1)(u)
                              , X = $t([S[i.wAp.DayPeriodsFormat], S[i.wAp.DayPeriodsStandalone]], m);
                            return $t(X, d)
                        }(m, V, S)[j < 12 ? 0 : 1];
                    case dt.Eras:
                        return function pe(u, m) {
                            return $t((0,
                            i.cg1)(u)[i.wAp.Eras], m)
                        }(m, S)[u.getFullYear() <= 0 ? 0 : 1];
                    default:
                        throw new Error(`unexpected translation type ${d}`)
                    }
                }(V, X, u, m, d, S)
            }
        }
        function yn(u) {
            return function(m, d, S) {
                const V = -1 * S
                  , X = Kt(d, rt.MinusSign)
                  , j = V > 0 ? Math.floor(V / 60) : Math.ceil(V / 60);
                switch (u) {
                case Le.Short:
                    return (V >= 0 ? "+" : "") + Vt(j, 2, X) + Vt(Math.abs(V % 60), 2, X);
                case Le.ShortGMT:
                    return "GMT" + (V >= 0 ? "+" : "") + Vt(j, 1, X);
                case Le.Long:
                    return "GMT" + (V >= 0 ? "+" : "") + Vt(j, 2, X) + ":" + Vt(Math.abs(V % 60), 2, X);
                case Le.Extended:
                    return 0 === S ? "Z" : (V >= 0 ? "+" : "") + Vt(j, 2, X) + ":" + Vt(Math.abs(V % 60), 2, X);
                default:
                    throw new Error(`Unknown zone width "${u}"`)
                }
            }
        }
        function Si(u) {
            return ln(u.getFullYear(), u.getMonth(), u.getDate() + (4 - u.getDay()))
        }
        function _i(u, m=!1) {
            return function(d, S) {
                let V;
                if (m) {
                    const X = new Date(d.getFullYear(),d.getMonth(),1).getDay() - 1
                      , j = d.getDate();
                    V = 1 + Math.floor((j + X) / 7)
                } else {
                    const X = Si(d)
                      , j = function ei(u) {
                        const m = ln(u, 0, 1).getDay();
                        return ln(u, 0, 1 + (m <= 4 ? 4 : 11) - m)
                    }(X.getFullYear())
                      , ae = X.getTime() - j.getTime();
                    V = 1 + Math.round(ae / 6048e5)
                }
                return Vt(V, u, Kt(S, rt.MinusSign))
            }
        }
        function wi(u, m=!1) {
            return function(d, S) {
                return Vt(Si(d).getFullYear(), u, Kt(S, rt.MinusSign), m)
            }
        }
        const Ti = {};
        function Ji(u, m) {
            u = u.replace(/:/g, "");
            const d = Date.parse("Jan 01, 1970 00:00:00 " + u) / 6e4;
            return isNaN(d) ? m : d
        }
        function oe(u) {
            return u instanceof Date && !isNaN(u.valueOf())
        }
        const Me = /^(\d+)?\.((\d+)(-(\d+))?)?$/
          , K = "."
          , J = "0";
        function Ve(u) {
            const m = parseInt(u);
            if (isNaN(m))
                throw new Error("Invalid integer literal when parsing " + u);
            return m
        }
        function Rn(u, m) {
            m = encodeURIComponent(m);
            for (const d of u.split(";")) {
                const S = d.indexOf("=")
                  , [V,X] = -1 == S ? [d, ""] : [d.slice(0, S), d.slice(S + 1)];
                if (V.trim() === m)
                    return decodeURIComponent(X)
            }
            return null
        }
        let dn = (()=>{
            class u {
                constructor(d, S, V, X) {
                    this._iterableDiffers = d,
                    this._keyValueDiffers = S,
                    this._ngEl = V,
                    this._renderer = X,
                    this._iterableDiffer = null,
                    this._keyValueDiffer = null,
                    this._initialClasses = [],
                    this._rawClass = null
                }
                set klass(d) {
                    this._removeClasses(this._initialClasses),
                    this._initialClasses = "string" == typeof d ? d.split(/\s+/) : [],
                    this._applyClasses(this._initialClasses),
                    this._applyClasses(this._rawClass)
                }
                set ngClass(d) {
                    this._removeClasses(this._rawClass),
                    this._applyClasses(this._initialClasses),
                    this._iterableDiffer = null,
                    this._keyValueDiffer = null,
                    this._rawClass = "string" == typeof d ? d.split(/\s+/) : d,
                    this._rawClass && ((0,
                    i.sIi)(this._rawClass) ? this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create() : this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create())
                }
                ngDoCheck() {
                    if (this._iterableDiffer) {
                        const d = this._iterableDiffer.diff(this._rawClass);
                        d && this._applyIterableChanges(d)
                    } else if (this._keyValueDiffer) {
                        const d = this._keyValueDiffer.diff(this._rawClass);
                        d && this._applyKeyValueChanges(d)
                    }
                }
                _applyKeyValueChanges(d) {
                    d.forEachAddedItem(S=>this._toggleClass(S.key, S.currentValue)),
                    d.forEachChangedItem(S=>this._toggleClass(S.key, S.currentValue)),
                    d.forEachRemovedItem(S=>{
                        S.previousValue && this._toggleClass(S.key, !1)
                    }
                    )
                }
                _applyIterableChanges(d) {
                    d.forEachAddedItem(S=>{
                        if ("string" != typeof S.item)
                            throw new Error(`NgClass can only toggle CSS classes expressed as strings, got ${(0,
                            i.AaK)(S.item)}`);
                        this._toggleClass(S.item, !0)
                    }
                    ),
                    d.forEachRemovedItem(S=>this._toggleClass(S.item, !1))
                }
                _applyClasses(d) {
                    d && (Array.isArray(d) || d instanceof Set ? d.forEach(S=>this._toggleClass(S, !0)) : Object.keys(d).forEach(S=>this._toggleClass(S, !!d[S])))
                }
                _removeClasses(d) {
                    d && (Array.isArray(d) || d instanceof Set ? d.forEach(S=>this._toggleClass(S, !1)) : Object.keys(d).forEach(S=>this._toggleClass(S, !1)))
                }
                _toggleClass(d, S) {
                    (d = d.trim()) && d.split(/\s+/g).forEach(V=>{
                        S ? this._renderer.addClass(this._ngEl.nativeElement, V) : this._renderer.removeClass(this._ngEl.nativeElement, V)
                    }
                    )
                }
            }
            return u.\u0275fac = function(d) {
                return new (d || u)(i.Y36(i.ZZ4),i.Y36(i.aQg),i.Y36(i.SBq),i.Y36(i.Qsj))
            }
            ,
            u.\u0275dir = i.lG2({
                type: u,
                selectors: [["", "ngClass", ""]],
                inputs: {
                    klass: ["class", "klass"],
                    ngClass: "ngClass"
                },
                standalone: !0
            }),
            u
        }
        )();
        class ji {
            constructor(m, d, S, V) {
                this.$implicit = m,
                this.ngForOf = d,
                this.index = S,
                this.count = V
            }
            get first() {
                return 0 === this.index
            }
            get last() {
                return this.index === this.count - 1
            }
            get even() {
                return this.index % 2 == 0
            }
            get odd() {
                return !this.even
            }
        }
        let li = (()=>{
            class u {
                constructor(d, S, V) {
                    this._viewContainer = d,
                    this._template = S,
                    this._differs = V,
                    this._ngForOf = null,
                    this._ngForOfDirty = !0,
                    this._differ = null
                }
                set ngForOf(d) {
                    this._ngForOf = d,
                    this._ngForOfDirty = !0
                }
                set ngForTrackBy(d) {
                    this._trackByFn = d
                }
                get ngForTrackBy() {
                    return this._trackByFn
                }
                set ngForTemplate(d) {
                    d && (this._template = d)
                }
                ngDoCheck() {
                    if (this._ngForOfDirty) {
                        this._ngForOfDirty = !1;
                        const d = this._ngForOf;
                        !this._differ && d && (this._differ = this._differs.find(d).create(this.ngForTrackBy))
                    }
                    if (this._differ) {
                        const d = this._differ.diff(this._ngForOf);
                        d && this._applyChanges(d)
                    }
                }
                _applyChanges(d) {
                    const S = this._viewContainer;
                    d.forEachOperation((V,X,j)=>{
                        if (null == V.previousIndex)
                            S.createEmbeddedView(this._template, new ji(V.item,this._ngForOf,-1,-1), null === j ? void 0 : j);
                        else if (null == j)
                            S.remove(null === X ? void 0 : X);
                        else if (null !== X) {
                            const ae = S.get(X);
                            S.move(ae, j),
                            Dn(ae, V)
                        }
                    }
                    );
                    for (let V = 0, X = S.length; V < X; V++) {
                        const ae = S.get(V).context;
                        ae.index = V,
                        ae.count = X,
                        ae.ngForOf = this._ngForOf
                    }
                    d.forEachIdentityChange(V=>{
                        Dn(S.get(V.currentIndex), V)
                    }
                    )
                }
                static ngTemplateContextGuard(d, S) {
                    return !0
                }
            }
            return u.\u0275fac = function(d) {
                return new (d || u)(i.Y36(i.s_b),i.Y36(i.Rgc),i.Y36(i.ZZ4))
            }
            ,
            u.\u0275dir = i.lG2({
                type: u,
                selectors: [["", "ngFor", "", "ngForOf", ""]],
                inputs: {
                    ngForOf: "ngForOf",
                    ngForTrackBy: "ngForTrackBy",
                    ngForTemplate: "ngForTemplate"
                },
                standalone: !0
            }),
            u
        }
        )();
        function Dn(u, m) {
            u.context.$implicit = m.item
        }
        let bn = (()=>{
            class u {
                constructor(d, S) {
                    this._viewContainer = d,
                    this._context = new yi,
                    this._thenTemplateRef = null,
                    this._elseTemplateRef = null,
                    this._thenViewRef = null,
                    this._elseViewRef = null,
                    this._thenTemplateRef = S
                }
                set ngIf(d) {
                    this._context.$implicit = this._context.ngIf = d,
                    this._updateView()
                }
                set ngIfThen(d) {
                    Mn("ngIfThen", d),
                    this._thenTemplateRef = d,
                    this._thenViewRef = null,
                    this._updateView()
                }
                set ngIfElse(d) {
                    Mn("ngIfElse", d),
                    this._elseTemplateRef = d,
                    this._elseViewRef = null,
                    this._updateView()
                }
                _updateView() {
                    this._context.$implicit ? this._thenViewRef || (this._viewContainer.clear(),
                    this._elseViewRef = null,
                    this._thenTemplateRef && (this._thenViewRef = this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context))) : this._elseViewRef || (this._viewContainer.clear(),
                    this._thenViewRef = null,
                    this._elseTemplateRef && (this._elseViewRef = this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context)))
                }
                static ngTemplateContextGuard(d, S) {
                    return !0
                }
            }
            return u.\u0275fac = function(d) {
                return new (d || u)(i.Y36(i.s_b),i.Y36(i.Rgc))
            }
            ,
            u.\u0275dir = i.lG2({
                type: u,
                selectors: [["", "ngIf", ""]],
                inputs: {
                    ngIf: "ngIf",
                    ngIfThen: "ngIfThen",
                    ngIfElse: "ngIfElse"
                },
                standalone: !0
            }),
            u
        }
        )();
        class yi {
            constructor() {
                this.$implicit = null,
                this.ngIf = null
            }
        }
        function Mn(u, m) {
            if (m && !m.createEmbeddedView)
                throw new Error(`${u} must be a TemplateRef, but received '${(0,
                i.AaK)(m)}'.`)
        }
        class ti {
            constructor(m, d) {
                this._viewContainerRef = m,
                this._templateRef = d,
                this._created = !1
            }
            create() {
                this._created = !0,
                this._viewContainerRef.createEmbeddedView(this._templateRef)
            }
            destroy() {
                this._created = !1,
                this._viewContainerRef.clear()
            }
            enforceState(m) {
                m && !this._created ? this.create() : !m && this._created && this.destroy()
            }
        }
        let Mi = (()=>{
            class u {
                constructor() {
                    this._defaultUsed = !1,
                    this._caseCount = 0,
                    this._lastCaseCheckIndex = 0,
                    this._lastCasesMatched = !1
                }
                set ngSwitch(d) {
                    this._ngSwitch = d,
                    0 === this._caseCount && this._updateDefaultCases(!0)
                }
                _addCase() {
                    return this._caseCount++
                }
                _addDefault(d) {
                    this._defaultViews || (this._defaultViews = []),
                    this._defaultViews.push(d)
                }
                _matchCase(d) {
                    const S = d == this._ngSwitch;
                    return this._lastCasesMatched = this._lastCasesMatched || S,
                    this._lastCaseCheckIndex++,
                    this._lastCaseCheckIndex === this._caseCount && (this._updateDefaultCases(!this._lastCasesMatched),
                    this._lastCaseCheckIndex = 0,
                    this._lastCasesMatched = !1),
                    S
                }
                _updateDefaultCases(d) {
                    if (this._defaultViews && d !== this._defaultUsed) {
                        this._defaultUsed = d;
                        for (let S = 0; S < this._defaultViews.length; S++)
                            this._defaultViews[S].enforceState(d)
                    }
                }
            }
            return u.\u0275fac = function(d) {
                return new (d || u)
            }
            ,
            u.\u0275dir = i.lG2({
                type: u,
                selectors: [["", "ngSwitch", ""]],
                inputs: {
                    ngSwitch: "ngSwitch"
                },
                standalone: !0
            }),
            u
        }
        )()
          , vs = (()=>{
            class u {
                constructor(d, S, V) {
                    this.ngSwitch = V,
                    V._addCase(),
                    this._view = new ti(d,S)
                }
                ngDoCheck() {
                    this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase))
                }
            }
            return u.\u0275fac = function(d) {
                return new (d || u)(i.Y36(i.s_b),i.Y36(i.Rgc),i.Y36(Mi, 9))
            }
            ,
            u.\u0275dir = i.lG2({
                type: u,
                selectors: [["", "ngSwitchCase", ""]],
                inputs: {
                    ngSwitchCase: "ngSwitchCase"
                },
                standalone: !0
            }),
            u
        }
        )()
          , Ci = (()=>{
            class u {
                constructor(d, S, V) {
                    V._addDefault(new ti(d,S))
                }
            }
            return u.\u0275fac = function(d) {
                return new (d || u)(i.Y36(i.s_b),i.Y36(i.Rgc),i.Y36(Mi, 9))
            }
            ,
            u.\u0275dir = i.lG2({
                type: u,
                selectors: [["", "ngSwitchDefault", ""]],
                standalone: !0
            }),
            u
        }
        )()
          , Ni = (()=>{
            class u {
                constructor(d, S, V) {
                    this._ngEl = d,
                    this._differs = S,
                    this._renderer = V,
                    this._ngStyle = null,
                    this._differ = null
                }
                set ngStyle(d) {
                    this._ngStyle = d,
                    !this._differ && d && (this._differ = this._differs.find(d).create())
                }
                ngDoCheck() {
                    if (this._differ) {
                        const d = this._differ.diff(this._ngStyle);
                        d && this._applyChanges(d)
                    }
                }
                _setStyle(d, S) {
                    const [V,X] = d.split(".")
                      , j = -1 === V.indexOf("-") ? void 0 : i.JOm.DashCase;
                    null != S ? this._renderer.setStyle(this._ngEl.nativeElement, V, X ? `${S}${X}` : S, j) : this._renderer.removeStyle(this._ngEl.nativeElement, V, j)
                }
                _applyChanges(d) {
                    d.forEachRemovedItem(S=>this._setStyle(S.key, null)),
                    d.forEachAddedItem(S=>this._setStyle(S.key, S.currentValue)),
                    d.forEachChangedItem(S=>this._setStyle(S.key, S.currentValue))
                }
            }
            return u.\u0275fac = function(d) {
                return new (d || u)(i.Y36(i.SBq),i.Y36(i.aQg),i.Y36(i.Qsj))
            }
            ,
            u.\u0275dir = i.lG2({
                type: u,
                selectors: [["", "ngStyle", ""]],
                inputs: {
                    ngStyle: "ngStyle"
                },
                standalone: !0
            }),
            u
        }
        )()
          , Vs = (()=>{
            class u {
                constructor(d) {
                    this._viewContainerRef = d,
                    this._viewRef = null,
                    this.ngTemplateOutletContext = null,
                    this.ngTemplateOutlet = null,
                    this.ngTemplateOutletInjector = null
                }
                ngOnChanges(d) {
                    if (d.ngTemplateOutlet || d.ngTemplateOutletInjector) {
                        const S = this._viewContainerRef;
                        if (this._viewRef && S.remove(S.indexOf(this._viewRef)),
                        this.ngTemplateOutlet) {
                            const {ngTemplateOutlet: V, ngTemplateOutletContext: X, ngTemplateOutletInjector: j} = this;
                            this._viewRef = S.createEmbeddedView(V, X, j ? {
                                injector: j
                            } : void 0)
                        } else
                            this._viewRef = null
                    } else
                        this._viewRef && d.ngTemplateOutletContext && this.ngTemplateOutletContext && (this._viewRef.context = this.ngTemplateOutletContext)
                }
            }
            return u.\u0275fac = function(d) {
                return new (d || u)(i.Y36(i.s_b))
            }
            ,
            u.\u0275dir = i.lG2({
                type: u,
                selectors: [["", "ngTemplateOutlet", ""]],
                inputs: {
                    ngTemplateOutletContext: "ngTemplateOutletContext",
                    ngTemplateOutlet: "ngTemplateOutlet",
                    ngTemplateOutletInjector: "ngTemplateOutletInjector"
                },
                standalone: !0,
                features: [i.TTD]
            }),
            u
        }
        )();
        function Fi(u, m) {
            return new i.vHH(2100,!1)
        }
        class Mr {
            createSubscription(m, d) {
                return m.subscribe({
                    next: d,
                    error: S=>{
                        throw S
                    }
                })
            }
            dispose(m) {
                m.unsubscribe()
            }
        }
        class Ir {
            createSubscription(m, d) {
                return m.then(d, S=>{
                    throw S
                }
                )
            }
            dispose(m) {}
        }
        const sr = new Ir
          , $r = new Mr;
        let Ys = (()=>{
            class u {
                constructor(d) {
                    this._latestValue = null,
                    this._subscription = null,
                    this._obj = null,
                    this._strategy = null,
                    this._ref = d
                }
                ngOnDestroy() {
                    this._subscription && this._dispose(),
                    this._ref = null
                }
                transform(d) {
                    return this._obj ? d !== this._obj ? (this._dispose(),
                    this.transform(d)) : this._latestValue : (d && this._subscribe(d),
                    this._latestValue)
                }
                _subscribe(d) {
                    this._obj = d,
                    this._strategy = this._selectStrategy(d),
                    this._subscription = this._strategy.createSubscription(d, S=>this._updateLatestValue(d, S))
                }
                _selectStrategy(d) {
                    if ((0,
                    i.QGY)(d))
                        return sr;
                    if ((0,
                    i.F4k)(d))
                        return $r;
                    throw Fi()
                }
                _dispose() {
                    this._strategy.dispose(this._subscription),
                    this._latestValue = null,
                    this._subscription = null,
                    this._obj = null
                }
                _updateLatestValue(d, S) {
                    d === this._obj && (this._latestValue = S,
                    this._ref.markForCheck())
                }
            }
            return u.\u0275fac = function(d) {
                return new (d || u)(i.Y36(i.sBO, 16))
            }
            ,
            u.\u0275pipe = i.Yjl({
                name: "async",
                type: u,
                pure: !1,
                standalone: !0
            }),
            u
        }
        )();
        const Ks = new i.OlP("DATE_PIPE_DEFAULT_TIMEZONE");
        let xs = (()=>{
            class u {
                constructor(d, S) {
                    this.locale = d,
                    this.defaultTimezone = S
                }
                transform(d, S="mediumDate", V, X) {
                    if (null == d || "" === d || d != d)
                        return null;
                    try {
                        return Et(d, S, X || this.locale, V ?? this.defaultTimezone ?? void 0)
                    } catch (j) {
                        throw Fi()
                    }
                }
            }
            return u.\u0275fac = function(d) {
                return new (d || u)(i.Y36(i.soG, 16),i.Y36(Ks, 24))
            }
            ,
            u.\u0275pipe = i.Yjl({
                name: "date",
                type: u,
                pure: !0,
                standalone: !0
            }),
            u
        }
        )()
          , Bi = (()=>{
            class u {
                constructor(d) {
                    this._locale = d
                }
                transform(d, S, V) {
                    if (!function _s(u) {
                        return !(null == u || "" === u || u != u)
                    }(d))
                        return null;
                    V = V || this._locale;
                    try {
                        return function Gt(u, m, d) {
                            return function fn(u, m, d, S, V, X, j=!1) {
                                let ae = ""
                                  , Ae = !1;
                                if (isFinite(u)) {
                                    let Se = function N(u) {
                                        let S, V, X, j, ae, m = Math.abs(u) + "", d = 0;
                                        for ((V = m.indexOf(K)) > -1 && (m = m.replace(K, "")),
                                        (X = m.search(/e/i)) > 0 ? (V < 0 && (V = X),
                                        V += +m.slice(X + 1),
                                        m = m.substring(0, X)) : V < 0 && (V = m.length),
                                        X = 0; m.charAt(X) === J; X++)
                                            ;
                                        if (X === (ae = m.length))
                                            S = [0],
                                            V = 1;
                                        else {
                                            for (ae--; m.charAt(ae) === J; )
                                                ae--;
                                            for (V -= X,
                                            S = [],
                                            j = 0; X <= ae; X++,
                                            j++)
                                                S[j] = Number(m.charAt(X))
                                        }
                                        return V > 22 && (S = S.splice(0, 21),
                                        d = V - 1,
                                        V = 1),
                                        {
                                            digits: S,
                                            exponent: d,
                                            integerLen: V
                                        }
                                    }(u);
                                    j && (Se = function wt(u) {
                                        if (0 === u.digits[0])
                                            return u;
                                        const m = u.digits.length - u.integerLen;
                                        return u.exponent ? u.exponent += 2 : (0 === m ? u.digits.push(0, 0) : 1 === m && u.digits.push(0),
                                        u.integerLen += 2),
                                        u
                                    }(Se));
                                    let ke = m.minInt
                                      , lt = m.minFrac
                                      , yt = m.maxFrac;
                                    if (X) {
                                        const Xe = X.match(Me);
                                        if (null === Xe)
                                            throw new Error(`${X} is not a valid digit info`);
                                        const Ye = Xe[1]
                                          , ct = Xe[3]
                                          , en = Xe[5];
                                        null != Ye && (ke = Ve(Ye)),
                                        null != ct && (lt = Ve(ct)),
                                        null != en ? yt = Ve(en) : null != ct && lt > yt && (yt = lt)
                                    }
                                    !function me(u, m, d) {
                                        if (m > d)
                                            throw new Error(`The minimum number of digits after fraction (${m}) is higher than the maximum (${d}).`);
                                        let S = u.digits
                                          , V = S.length - u.integerLen;
                                        const X = Math.min(Math.max(m, V), d);
                                        let j = X + u.integerLen
                                          , ae = S[j];
                                        if (j > 0) {
                                            S.splice(Math.max(u.integerLen, j));
                                            for (let lt = j; lt < S.length; lt++)
                                                S[lt] = 0
                                        } else {
                                            V = Math.max(0, V),
                                            u.integerLen = 1,
                                            S.length = Math.max(1, j = X + 1),
                                            S[0] = 0;
                                            for (let lt = 1; lt < j; lt++)
                                                S[lt] = 0
                                        }
                                        if (ae >= 5)
                                            if (j - 1 < 0) {
                                                for (let lt = 0; lt > j; lt--)
                                                    S.unshift(0),
                                                    u.integerLen++;
                                                S.unshift(1),
                                                u.integerLen++
                                            } else
                                                S[j - 1]++;
                                        for (; V < Math.max(0, X); V++)
                                            S.push(0);
                                        let Ae = 0 !== X;
                                        const Se = m + u.integerLen
                                          , ke = S.reduceRight(function(lt, yt, mt, Ct) {
                                            return Ct[mt] = (yt += lt) < 10 ? yt : yt - 10,
                                            Ae && (0 === Ct[mt] && mt >= Se ? Ct.pop() : Ae = !1),
                                            yt >= 10 ? 1 : 0
                                        }, 0);
                                        ke && (S.unshift(ke),
                                        u.integerLen++)
                                    }(Se, lt, yt);
                                    let mt = Se.digits
                                      , Ct = Se.integerLen;
                                    const Nt = Se.exponent;
                                    let Ut = [];
                                    for (Ae = mt.every(Xe=>!Xe); Ct < ke; Ct++)
                                        mt.unshift(0);
                                    for (; Ct < 0; Ct++)
                                        mt.unshift(0);
                                    Ct > 0 ? Ut = mt.splice(Ct, mt.length) : (Ut = mt,
                                    mt = [0]);
                                    const At = [];
                                    for (mt.length >= m.lgSize && At.unshift(mt.splice(-m.lgSize, mt.length).join("")); mt.length > m.gSize; )
                                        At.unshift(mt.splice(-m.gSize, mt.length).join(""));
                                    mt.length && At.unshift(mt.join("")),
                                    ae = At.join(Kt(d, S)),
                                    Ut.length && (ae += Kt(d, V) + Ut.join("")),
                                    Nt && (ae += Kt(d, rt.Exponential) + "+" + Nt)
                                } else
                                    ae = Kt(d, rt.Infinity);
                                return ae = u < 0 && !Ae ? m.negPre + ae + m.negSuf : m.posPre + ae + m.posSuf,
                                ae
                            }(u, function xe(u, m="-") {
                                const d = {
                                    minInt: 1,
                                    minFrac: 0,
                                    maxFrac: 0,
                                    posPre: "",
                                    posSuf: "",
                                    negPre: "",
                                    negSuf: "",
                                    gSize: 0,
                                    lgSize: 0
                                }
                                  , S = u.split(";")
                                  , V = S[0]
                                  , X = S[1]
                                  , j = -1 !== V.indexOf(K) ? V.split(K) : [V.substring(0, V.lastIndexOf(J) + 1), V.substring(V.lastIndexOf(J) + 1)]
                                  , ae = j[0]
                                  , Ae = j[1] || "";
                                d.posPre = ae.substring(0, ae.indexOf("#"));
                                for (let ke = 0; ke < Ae.length; ke++) {
                                    const lt = Ae.charAt(ke);
                                    lt === J ? d.minFrac = d.maxFrac = ke + 1 : "#" === lt ? d.maxFrac = ke + 1 : d.posSuf += lt
                                }
                                const Se = ae.split(",");
                                if (d.gSize = Se[1] ? Se[1].length : 0,
                                d.lgSize = Se[2] || Se[1] ? (Se[2] || Se[1]).length : 0,
                                X) {
                                    const ke = V.length - d.posPre.length - d.posSuf.length
                                      , lt = X.indexOf("#");
                                    d.negPre = X.substring(0, lt).replace(/'/g, ""),
                                    d.negSuf = X.slice(lt + ke).replace(/'/g, "")
                                } else
                                    d.negPre = m + d.posPre,
                                    d.negSuf = d.posSuf;
                                return d
                            }(function k(u, m) {
                                return (0,
                                i.cg1)(u)[i.wAp.NumberFormats][m]
                            }(m, ut.Decimal), Kt(m, rt.MinusSign)), m, rt.Group, rt.Decimal, d)
                        }(function ds(u) {
                            if ("string" == typeof u && !isNaN(Number(u) - parseFloat(u)))
                                return Number(u);
                            if ("number" != typeof u)
                                throw new Error(`${u} is not a number`);
                            return u
                        }(d), V, S)
                    } catch (X) {
                        throw Fi()
                    }
                }
            }
            return u.\u0275fac = function(d) {
                return new (d || u)(i.Y36(i.soG, 16))
            }
            ,
            u.\u0275pipe = i.Yjl({
                name: "number",
                type: u,
                pure: !0,
                standalone: !0
            }),
            u
        }
        )();
        let As = (()=>{
            class u {
            }
            return u.\u0275fac = function(d) {
                return new (d || u)
            }
            ,
            u.\u0275mod = i.oAB({
                type: u
            }),
            u.\u0275inj = i.cJS({}),
            u
        }
        )();
        const pi = "browser";
        function Ps(u) {
            return u === pi
        }
        function hs(u) {
            return "server" === u
        }
        let Os = (()=>{
            class u {
            }
            return u.\u0275prov = (0,
            i.Yz7)({
                token: u,
                providedIn: "root",
                factory: ()=>new gr((0,
                i.LFG)(z),window)
            }),
            u
        }
        )();
        class gr {
            constructor(m, d) {
                this.document = m,
                this.window = d,
                this.offset = ()=>[0, 0]
            }
            setOffset(m) {
                this.offset = Array.isArray(m) ? ()=>m : m
            }
            getScrollPosition() {
                return this.supportsScrolling() ? [this.window.pageXOffset, this.window.pageYOffset] : [0, 0]
            }
            scrollToPosition(m) {
                this.supportsScrolling() && this.window.scrollTo(m[0], m[1])
            }
            scrollToAnchor(m) {
                if (!this.supportsScrolling())
                    return;
                const d = function gi(u, m) {
                    const d = u.getElementById(m) || u.getElementsByName(m)[0];
                    if (d)
                        return d;
                    if ("function" == typeof u.createTreeWalker && u.body && (u.body.createShadowRoot || u.body.attachShadow)) {
                        const S = u.createTreeWalker(u.body, NodeFilter.SHOW_ELEMENT);
                        let V = S.currentNode;
                        for (; V; ) {
                            const X = V.shadowRoot;
                            if (X) {
                                const j = X.getElementById(m) || X.querySelector(`[name="${m}"]`);
                                if (j)
                                    return j
                            }
                            V = S.nextNode()
                        }
                    }
                    return null
                }(this.document, m);
                d && (this.scrollToElement(d),
                d.focus())
            }
            setHistoryScrollRestoration(m) {
                if (this.supportScrollRestoration()) {
                    const d = this.window.history;
                    d && d.scrollRestoration && (d.scrollRestoration = m)
                }
            }
            scrollToElement(m) {
                const d = m.getBoundingClientRect()
                  , S = d.left + this.window.pageXOffset
                  , V = d.top + this.window.pageYOffset
                  , X = this.offset();
                this.window.scrollTo(S - X[0], V - X[1])
            }
            supportScrollRestoration() {
                try {
                    if (!this.supportsScrolling())
                        return !1;
                    const m = Qi(this.window.history) || Qi(Object.getPrototypeOf(this.window.history));
                    return !(!m || !m.writable && !m.set)
                } catch {
                    return !1
                }
            }
            supportsScrolling() {
                try {
                    return !!this.window && !!this.window.scrollTo && "pageXOffset"in this.window
                } catch {
                    return !1
                }
            }
        }
        function Qi(u) {
            return Object.getOwnPropertyDescriptor(u, "scrollRestoration")
        }
        class Cs {
        }
    }
    ,
    8987: (Ot,je,D)=>{
        D.d(je, {
            JF: ()=>Xn,
            LE: ()=>Fe,
            TP: ()=>qe,
            WM: ()=>W,
            Zn: ()=>_t,
            eN: ()=>qt
        });
        var i = D(4666)
          , l = D(2560)
          , q = D(745)
          , ue = D(833)
          , H = D(3853)
          , U = D(116)
          , z = D(635);
        class te {
        }
        class le {
        }
        class W {
            constructor(Le) {
                this.normalizedNames = new Map,
                this.lazyUpdate = null,
                Le ? this.lazyInit = "string" == typeof Le ? ()=>{
                    this.headers = new Map,
                    Le.split("\n").forEach(Ee=>{
                        const dt = Ee.indexOf(":");
                        if (dt > 0) {
                            const Et = Ee.slice(0, dt)
                              , ln = Et.toLowerCase()
                              , pn = Ee.slice(dt + 1).trim();
                            this.maybeSetNormalizedName(Et, ln),
                            this.headers.has(ln) ? this.headers.get(ln).push(pn) : this.headers.set(ln, [pn])
                        }
                    }
                    )
                }
                : ()=>{
                    this.headers = new Map,
                    Object.keys(Le).forEach(Ee=>{
                        let dt = Le[Ee];
                        const Et = Ee.toLowerCase();
                        "string" == typeof dt && (dt = [dt]),
                        dt.length > 0 && (this.headers.set(Et, dt),
                        this.maybeSetNormalizedName(Ee, Et))
                    }
                    )
                }
                : this.headers = new Map
            }
            has(Le) {
                return this.init(),
                this.headers.has(Le.toLowerCase())
            }
            get(Le) {
                this.init();
                const Ee = this.headers.get(Le.toLowerCase());
                return Ee && Ee.length > 0 ? Ee[0] : null
            }
            keys() {
                return this.init(),
                Array.from(this.normalizedNames.values())
            }
            getAll(Le) {
                return this.init(),
                this.headers.get(Le.toLowerCase()) || null
            }
            append(Le, Ee) {
                return this.clone({
                    name: Le,
                    value: Ee,
                    op: "a"
                })
            }
            set(Le, Ee) {
                return this.clone({
                    name: Le,
                    value: Ee,
                    op: "s"
                })
            }
            delete(Le, Ee) {
                return this.clone({
                    name: Le,
                    value: Ee,
                    op: "d"
                })
            }
            maybeSetNormalizedName(Le, Ee) {
                this.normalizedNames.has(Ee) || this.normalizedNames.set(Ee, Le)
            }
            init() {
                this.lazyInit && (this.lazyInit instanceof W ? this.copyFrom(this.lazyInit) : this.lazyInit(),
                this.lazyInit = null,
                this.lazyUpdate && (this.lazyUpdate.forEach(Le=>this.applyUpdate(Le)),
                this.lazyUpdate = null))
            }
            copyFrom(Le) {
                Le.init(),
                Array.from(Le.headers.keys()).forEach(Ee=>{
                    this.headers.set(Ee, Le.headers.get(Ee)),
                    this.normalizedNames.set(Ee, Le.normalizedNames.get(Ee))
                }
                )
            }
            clone(Le) {
                const Ee = new W;
                return Ee.lazyInit = this.lazyInit && this.lazyInit instanceof W ? this.lazyInit : this,
                Ee.lazyUpdate = (this.lazyUpdate || []).concat([Le]),
                Ee
            }
            applyUpdate(Le) {
                const Ee = Le.name.toLowerCase();
                switch (Le.op) {
                case "a":
                case "s":
                    let dt = Le.value;
                    if ("string" == typeof dt && (dt = [dt]),
                    0 === dt.length)
                        return;
                    this.maybeSetNormalizedName(Le.name, Ee);
                    const Et = ("a" === Le.op ? this.headers.get(Ee) : void 0) || [];
                    Et.push(...dt),
                    this.headers.set(Ee, Et);
                    break;
                case "d":
                    const ln = Le.value;
                    if (ln) {
                        let pn = this.headers.get(Ee);
                        if (!pn)
                            return;
                        pn = pn.filter(Pn=>-1 === ln.indexOf(Pn)),
                        0 === pn.length ? (this.headers.delete(Ee),
                        this.normalizedNames.delete(Ee)) : this.headers.set(Ee, pn)
                    } else
                        this.headers.delete(Ee),
                        this.normalizedNames.delete(Ee)
                }
            }
            forEach(Le) {
                this.init(),
                Array.from(this.normalizedNames.keys()).forEach(Ee=>Le(this.normalizedNames.get(Ee), this.headers.get(Ee)))
            }
        }
        class re {
            encodeKey(Le) {
                return ot(Le)
            }
            encodeValue(Le) {
                return ot(Le)
            }
            decodeKey(Le) {
                return decodeURIComponent(Le)
            }
            decodeValue(Le) {
                return decodeURIComponent(Le)
            }
        }
        const Ne = /%(\d[a-f0-9])/gi
          , Be = {
            40: "@",
            "3A": ":",
            24: "$",
            "2C": ",",
            "3B": ";",
            "3D": "=",
            "3F": "?",
            "2F": "/"
        };
        function ot(vt) {
            return encodeURIComponent(vt).replace(Ne, (Le,Ee)=>Be[Ee] ?? Le)
        }
        function $e(vt) {
            return `${vt}`
        }
        class Fe {
            constructor(Le={}) {
                if (this.updates = null,
                this.cloneFrom = null,
                this.encoder = Le.encoder || new re,
                Le.fromString) {
                    if (Le.fromObject)
                        throw new Error("Cannot specify both fromString and fromObject.");
                    this.map = function Ke(vt, Le) {
                        const Ee = new Map;
                        return vt.length > 0 && vt.replace(/^\?/, "").split("&").forEach(Et=>{
                            const ln = Et.indexOf("=")
                              , [pn,Pn] = -1 == ln ? [Le.decodeKey(Et), ""] : [Le.decodeKey(Et.slice(0, ln)), Le.decodeValue(Et.slice(ln + 1))]
                              , Vt = Ee.get(pn) || [];
                            Vt.push(Pn),
                            Ee.set(pn, Vt)
                        }
                        ),
                        Ee
                    }(Le.fromString, this.encoder)
                } else
                    Le.fromObject ? (this.map = new Map,
                    Object.keys(Le.fromObject).forEach(Ee=>{
                        const dt = Le.fromObject[Ee]
                          , Et = Array.isArray(dt) ? dt.map($e) : [$e(dt)];
                        this.map.set(Ee, Et)
                    }
                    )) : this.map = null
            }
            has(Le) {
                return this.init(),
                this.map.has(Le)
            }
            get(Le) {
                this.init();
                const Ee = this.map.get(Le);
                return Ee ? Ee[0] : null
            }
            getAll(Le) {
                return this.init(),
                this.map.get(Le) || null
            }
            keys() {
                return this.init(),
                Array.from(this.map.keys())
            }
            append(Le, Ee) {
                return this.clone({
                    param: Le,
                    value: Ee,
                    op: "a"
                })
            }
            appendAll(Le) {
                const Ee = [];
                return Object.keys(Le).forEach(dt=>{
                    const Et = Le[dt];
                    Array.isArray(Et) ? Et.forEach(ln=>{
                        Ee.push({
                            param: dt,
                            value: ln,
                            op: "a"
                        })
                    }
                    ) : Ee.push({
                        param: dt,
                        value: Et,
                        op: "a"
                    })
                }
                ),
                this.clone(Ee)
            }
            set(Le, Ee) {
                return this.clone({
                    param: Le,
                    value: Ee,
                    op: "s"
                })
            }
            delete(Le, Ee) {
                return this.clone({
                    param: Le,
                    value: Ee,
                    op: "d"
                })
            }
            toString() {
                return this.init(),
                this.keys().map(Le=>{
                    const Ee = this.encoder.encodeKey(Le);
                    return this.map.get(Le).map(dt=>Ee + "=" + this.encoder.encodeValue(dt)).join("&")
                }
                ).filter(Le=>"" !== Le).join("&")
            }
            clone(Le) {
                const Ee = new Fe({
                    encoder: this.encoder
                });
                return Ee.cloneFrom = this.cloneFrom || this,
                Ee.updates = (this.updates || []).concat(Le),
                Ee
            }
            init() {
                null === this.map && (this.map = new Map),
                null !== this.cloneFrom && (this.cloneFrom.init(),
                this.cloneFrom.keys().forEach(Le=>this.map.set(Le, this.cloneFrom.map.get(Le))),
                this.updates.forEach(Le=>{
                    switch (Le.op) {
                    case "a":
                    case "s":
                        const Ee = ("a" === Le.op ? this.map.get(Le.param) : void 0) || [];
                        Ee.push($e(Le.value)),
                        this.map.set(Le.param, Ee);
                        break;
                    case "d":
                        if (void 0 === Le.value) {
                            this.map.delete(Le.param);
                            break
                        }
                        {
                            let dt = this.map.get(Le.param) || [];
                            const Et = dt.indexOf($e(Le.value));
                            -1 !== Et && dt.splice(Et, 1),
                            dt.length > 0 ? this.map.set(Le.param, dt) : this.map.delete(Le.param)
                        }
                    }
                }
                ),
                this.cloneFrom = this.updates = null)
            }
        }
        class st {
            constructor() {
                this.map = new Map
            }
            set(Le, Ee) {
                return this.map.set(Le, Ee),
                this
            }
            get(Le) {
                return this.map.has(Le) || this.map.set(Le, Le.defaultValue()),
                this.map.get(Le)
            }
            delete(Le) {
                return this.map.delete(Le),
                this
            }
            has(Le) {
                return this.map.has(Le)
            }
            keys() {
                return this.map.keys()
            }
        }
        function Q(vt) {
            return typeof ArrayBuffer < "u" && vt instanceof ArrayBuffer
        }
        function ze(vt) {
            return typeof Blob < "u" && vt instanceof Blob
        }
        function ye(vt) {
            return typeof FormData < "u" && vt instanceof FormData
        }
        class ut {
            constructor(Le, Ee, dt, Et) {
                let ln;
                if (this.url = Ee,
                this.body = null,
                this.reportProgress = !1,
                this.withCredentials = !1,
                this.responseType = "json",
                this.method = Le.toUpperCase(),
                function Pe(vt) {
                    switch (vt) {
                    case "DELETE":
                    case "GET":
                    case "HEAD":
                    case "OPTIONS":
                    case "JSONP":
                        return !1;
                    default:
                        return !0
                    }
                }(this.method) || Et ? (this.body = void 0 !== dt ? dt : null,
                ln = Et) : ln = dt,
                ln && (this.reportProgress = !!ln.reportProgress,
                this.withCredentials = !!ln.withCredentials,
                ln.responseType && (this.responseType = ln.responseType),
                ln.headers && (this.headers = ln.headers),
                ln.context && (this.context = ln.context),
                ln.params && (this.params = ln.params)),
                this.headers || (this.headers = new W),
                this.context || (this.context = new st),
                this.params) {
                    const pn = this.params.toString();
                    if (0 === pn.length)
                        this.urlWithParams = Ee;
                    else {
                        const Pn = Ee.indexOf("?");
                        this.urlWithParams = Ee + (-1 === Pn ? "?" : Pn < Ee.length - 1 ? "&" : "") + pn
                    }
                } else
                    this.params = new Fe,
                    this.urlWithParams = Ee
            }
            serializeBody() {
                return null === this.body ? null : Q(this.body) || ze(this.body) || ye(this.body) || function Re(vt) {
                    return typeof URLSearchParams < "u" && vt instanceof URLSearchParams
                }(this.body) || "string" == typeof this.body ? this.body : this.body instanceof Fe ? this.body.toString() : "object" == typeof this.body || "boolean" == typeof this.body || Array.isArray(this.body) ? JSON.stringify(this.body) : this.body.toString()
            }
            detectContentTypeHeader() {
                return null === this.body || ye(this.body) ? null : ze(this.body) ? this.body.type || null : Q(this.body) ? null : "string" == typeof this.body ? "text/plain" : this.body instanceof Fe ? "application/x-www-form-urlencoded;charset=UTF-8" : "object" == typeof this.body || "number" == typeof this.body || "boolean" == typeof this.body ? "application/json" : null
            }
            clone(Le={}) {
                const Ee = Le.method || this.method
                  , dt = Le.url || this.url
                  , Et = Le.responseType || this.responseType
                  , ln = void 0 !== Le.body ? Le.body : this.body
                  , pn = void 0 !== Le.withCredentials ? Le.withCredentials : this.withCredentials
                  , Pn = void 0 !== Le.reportProgress ? Le.reportProgress : this.reportProgress;
                let Vt = Le.headers || this.headers
                  , $n = Le.params || this.params;
                const An = Le.context ?? this.context;
                return void 0 !== Le.setHeaders && (Vt = Object.keys(Le.setHeaders).reduce((oi,un)=>oi.set(un, Le.setHeaders[un]), Vt)),
                Le.setParams && ($n = Object.keys(Le.setParams).reduce((oi,un)=>oi.set(un, Le.setParams[un]), $n)),
                new ut(Ee,dt,ln,{
                    params: $n,
                    headers: Vt,
                    context: An,
                    reportProgress: Pn,
                    responseType: Et,
                    withCredentials: pn
                })
            }
        }
        var Ce = (()=>((Ce = Ce || {})[Ce.Sent = 0] = "Sent",
        Ce[Ce.UploadProgress = 1] = "UploadProgress",
        Ce[Ce.ResponseHeader = 2] = "ResponseHeader",
        Ce[Ce.DownloadProgress = 3] = "DownloadProgress",
        Ce[Ce.Response = 4] = "Response",
        Ce[Ce.User = 5] = "User",
        Ce))();
        class Oe {
            constructor(Le, Ee=200, dt="OK") {
                this.headers = Le.headers || new W,
                this.status = void 0 !== Le.status ? Le.status : Ee,
                this.statusText = Le.statusText || dt,
                this.url = Le.url || null,
                this.ok = this.status >= 200 && this.status < 300
            }
        }
        class Ze extends Oe {
            constructor(Le={}) {
                super(Le),
                this.type = Ce.ResponseHeader
            }
            clone(Le={}) {
                return new Ze({
                    headers: Le.headers || this.headers,
                    status: void 0 !== Le.status ? Le.status : this.status,
                    statusText: Le.statusText || this.statusText,
                    url: Le.url || this.url || void 0
                })
            }
        }
        class _t extends Oe {
            constructor(Le={}) {
                super(Le),
                this.type = Ce.Response,
                this.body = void 0 !== Le.body ? Le.body : null
            }
            clone(Le={}) {
                return new _t({
                    body: void 0 !== Le.body ? Le.body : this.body,
                    headers: Le.headers || this.headers,
                    status: void 0 !== Le.status ? Le.status : this.status,
                    statusText: Le.statusText || this.statusText,
                    url: Le.url || this.url || void 0
                })
            }
        }
        class rt extends Oe {
            constructor(Le) {
                super(Le, 0, "Unknown Error"),
                this.name = "HttpErrorResponse",
                this.ok = !1,
                this.message = this.status >= 200 && this.status < 300 ? `Http failure during parsing for ${Le.url || "(unknown url)"}` : `Http failure response for ${Le.url || "(unknown url)"}: ${Le.status} ${Le.statusText}`,
                this.error = Le.error || null
            }
        }
        function It(vt, Le) {
            return {
                body: Le,
                headers: vt.headers,
                context: vt.context,
                observe: vt.observe,
                params: vt.params,
                reportProgress: vt.reportProgress,
                responseType: vt.responseType,
                withCredentials: vt.withCredentials
            }
        }
        let qt = (()=>{
            class vt {
                constructor(Ee) {
                    this.handler = Ee
                }
                request(Ee, dt, Et={}) {
                    let ln;
                    if (Ee instanceof ut)
                        ln = Ee;
                    else {
                        let Vt, $n;
                        Vt = Et.headers instanceof W ? Et.headers : new W(Et.headers),
                        Et.params && ($n = Et.params instanceof Fe ? Et.params : new Fe({
                            fromObject: Et.params
                        })),
                        ln = new ut(Ee,dt,void 0 !== Et.body ? Et.body : null,{
                            headers: Vt,
                            context: Et.context,
                            params: $n,
                            reportProgress: Et.reportProgress,
                            responseType: Et.responseType || "json",
                            withCredentials: Et.withCredentials
                        })
                    }
                    const pn = (0,
                    q.of)(ln).pipe((0,
                    H.b)(Vt=>this.handler.handle(Vt)));
                    if (Ee instanceof ut || "events" === Et.observe)
                        return pn;
                    const Pn = pn.pipe((0,
                    U.h)(Vt=>Vt instanceof _t));
                    switch (Et.observe || "body") {
                    case "body":
                        switch (ln.responseType) {
                        case "arraybuffer":
                            return Pn.pipe((0,
                            z.U)(Vt=>{
                                if (null !== Vt.body && !(Vt.body instanceof ArrayBuffer))
                                    throw new Error("Response is not an ArrayBuffer.");
                                return Vt.body
                            }
                            ));
                        case "blob":
                            return Pn.pipe((0,
                            z.U)(Vt=>{
                                if (null !== Vt.body && !(Vt.body instanceof Blob))
                                    throw new Error("Response is not a Blob.");
                                return Vt.body
                            }
                            ));
                        case "text":
                            return Pn.pipe((0,
                            z.U)(Vt=>{
                                if (null !== Vt.body && "string" != typeof Vt.body)
                                    throw new Error("Response is not a string.");
                                return Vt.body
                            }
                            ));
                        default:
                            return Pn.pipe((0,
                            z.U)(Vt=>Vt.body))
                        }
                    case "response":
                        return Pn;
                    default:
                        throw new Error(`Unreachable: unhandled observe type ${Et.observe}}`)
                    }
                }
                delete(Ee, dt={}) {
                    return this.request("DELETE", Ee, dt)
                }
                get(Ee, dt={}) {
                    return this.request("GET", Ee, dt)
                }
                head(Ee, dt={}) {
                    return this.request("HEAD", Ee, dt)
                }
                jsonp(Ee, dt) {
                    return this.request("JSONP", Ee, {
                        params: (new Fe).append(dt, "JSONP_CALLBACK"),
                        observe: "body",
                        responseType: "json"
                    })
                }
                options(Ee, dt={}) {
                    return this.request("OPTIONS", Ee, dt)
                }
                patch(Ee, dt, Et={}) {
                    return this.request("PATCH", Ee, It(Et, dt))
                }
                post(Ee, dt, Et={}) {
                    return this.request("POST", Ee, It(Et, dt))
                }
                put(Ee, dt, Et={}) {
                    return this.request("PUT", Ee, It(Et, dt))
                }
            }
            return vt.\u0275fac = function(Ee) {
                return new (Ee || vt)(l.LFG(te))
            }
            ,
            vt.\u0275prov = l.Yz7({
                token: vt,
                factory: vt.\u0275fac
            }),
            vt
        }
        )();
        class ft {
            constructor(Le, Ee) {
                this.next = Le,
                this.interceptor = Ee
            }
            handle(Le) {
                return this.interceptor.intercept(Le, this.next)
            }
        }
        const qe = new l.OlP("HTTP_INTERCEPTORS");
        let be = (()=>{
            class vt {
                intercept(Ee, dt) {
                    return dt.handle(Ee)
                }
            }
            return vt.\u0275fac = function(Ee) {
                return new (Ee || vt)
            }
            ,
            vt.\u0275prov = l.Yz7({
                token: vt,
                factory: vt.\u0275fac
            }),
            vt
        }
        )();
        const he = /^\)\]\}',?\n/;
        let gt = (()=>{
            class vt {
                constructor(Ee) {
                    this.xhrFactory = Ee
                }
                handle(Ee) {
                    if ("JSONP" === Ee.method)
                        throw new Error("Attempted to construct Jsonp request without HttpClientJsonpModule installed.");
                    return new ue.y(dt=>{
                        const Et = this.xhrFactory.build();
                        if (Et.open(Ee.method, Ee.urlWithParams),
                        Ee.withCredentials && (Et.withCredentials = !0),
                        Ee.headers.forEach((jt,yn)=>Et.setRequestHeader(jt, yn.join(","))),
                        Ee.headers.has("Accept") || Et.setRequestHeader("Accept", "application/json, text/plain, */*"),
                        !Ee.headers.has("Content-Type")) {
                            const jt = Ee.detectContentTypeHeader();
                            null !== jt && Et.setRequestHeader("Content-Type", jt)
                        }
                        if (Ee.responseType) {
                            const jt = Ee.responseType.toLowerCase();
                            Et.responseType = "json" !== jt ? jt : "text"
                        }
                        const ln = Ee.serializeBody();
                        let pn = null;
                        const Pn = ()=>{
                            if (null !== pn)
                                return pn;
                            const jt = Et.statusText || "OK"
                              , yn = new W(Et.getAllResponseHeaders())
                              , ai = function Ie(vt) {
                                return "responseURL"in vt && vt.responseURL ? vt.responseURL : /^X-Request-URL:/m.test(vt.getAllResponseHeaders()) ? vt.getResponseHeader("X-Request-URL") : null
                            }(Et) || Ee.url;
                            return pn = new Ze({
                                headers: yn,
                                status: Et.status,
                                statusText: jt,
                                url: ai
                            }),
                            pn
                        }
                          , Vt = ()=>{
                            let {headers: jt, status: yn, statusText: ai, url: Zt} = Pn()
                              , ei = null;
                            204 !== yn && (ei = typeof Et.response > "u" ? Et.responseText : Et.response),
                            0 === yn && (yn = ei ? 200 : 0);
                            let Si = yn >= 200 && yn < 300;
                            if ("json" === Ee.responseType && "string" == typeof ei) {
                                const _i = ei;
                                ei = ei.replace(he, "");
                                try {
                                    ei = "" !== ei ? JSON.parse(ei) : null
                                } catch (wi) {
                                    ei = _i,
                                    Si && (Si = !1,
                                    ei = {
                                        error: wi,
                                        text: ei
                                    })
                                }
                            }
                            Si ? (dt.next(new _t({
                                body: ei,
                                headers: jt,
                                status: yn,
                                statusText: ai,
                                url: Zt || void 0
                            })),
                            dt.complete()) : dt.error(new rt({
                                error: ei,
                                headers: jt,
                                status: yn,
                                statusText: ai,
                                url: Zt || void 0
                            }))
                        }
                          , $n = jt=>{
                            const {url: yn} = Pn()
                              , ai = new rt({
                                error: jt,
                                status: Et.status || 0,
                                statusText: Et.statusText || "Unknown Error",
                                url: yn || void 0
                            });
                            dt.error(ai)
                        }
                        ;
                        let An = !1;
                        const oi = jt=>{
                            An || (dt.next(Pn()),
                            An = !0);
                            let yn = {
                                type: Ce.DownloadProgress,
                                loaded: jt.loaded
                            };
                            jt.lengthComputable && (yn.total = jt.total),
                            "text" === Ee.responseType && !!Et.responseText && (yn.partialText = Et.responseText),
                            dt.next(yn)
                        }
                          , un = jt=>{
                            let yn = {
                                type: Ce.UploadProgress,
                                loaded: jt.loaded
                            };
                            jt.lengthComputable && (yn.total = jt.total),
                            dt.next(yn)
                        }
                        ;
                        return Et.addEventListener("load", Vt),
                        Et.addEventListener("error", $n),
                        Et.addEventListener("timeout", $n),
                        Et.addEventListener("abort", $n),
                        Ee.reportProgress && (Et.addEventListener("progress", oi),
                        null !== ln && Et.upload && Et.upload.addEventListener("progress", un)),
                        Et.send(ln),
                        dt.next({
                            type: Ce.Sent
                        }),
                        ()=>{
                            Et.removeEventListener("error", $n),
                            Et.removeEventListener("abort", $n),
                            Et.removeEventListener("load", Vt),
                            Et.removeEventListener("timeout", $n),
                            Ee.reportProgress && (Et.removeEventListener("progress", oi),
                            null !== ln && Et.upload && Et.upload.removeEventListener("progress", un)),
                            Et.readyState !== Et.DONE && Et.abort()
                        }
                    }
                    )
                }
            }
            return vt.\u0275fac = function(Ee) {
                return new (Ee || vt)(l.LFG(i.JF))
            }
            ,
            vt.\u0275prov = l.Yz7({
                token: vt,
                factory: vt.\u0275fac
            }),
            vt
        }
        )();
        const Qe = new l.OlP("XSRF_COOKIE_NAME")
          , Tt = new l.OlP("XSRF_HEADER_NAME");
        class wn {
        }
        let an = (()=>{
            class vt {
                constructor(Ee, dt, Et) {
                    this.doc = Ee,
                    this.platform = dt,
                    this.cookieName = Et,
                    this.lastCookieString = "",
                    this.lastToken = null,
                    this.parseCount = 0
                }
                getToken() {
                    if ("server" === this.platform)
                        return null;
                    const Ee = this.doc.cookie || "";
                    return Ee !== this.lastCookieString && (this.parseCount++,
                    this.lastToken = (0,
                    i.Mx)(Ee, this.cookieName),
                    this.lastCookieString = Ee),
                    this.lastToken
                }
            }
            return vt.\u0275fac = function(Ee) {
                return new (Ee || vt)(l.LFG(i.K0),l.LFG(l.Lbi),l.LFG(Qe))
            }
            ,
            vt.\u0275prov = l.Yz7({
                token: vt,
                factory: vt.\u0275fac
            }),
            vt
        }
        )()
          , In = (()=>{
            class vt {
                constructor(Ee, dt) {
                    this.tokenService = Ee,
                    this.headerName = dt
                }
                intercept(Ee, dt) {
                    const Et = Ee.url.toLowerCase();
                    if ("GET" === Ee.method || "HEAD" === Ee.method || Et.startsWith("http://") || Et.startsWith("https://"))
                        return dt.handle(Ee);
                    const ln = this.tokenService.getToken();
                    return null !== ln && !Ee.headers.has(this.headerName) && (Ee = Ee.clone({
                        headers: Ee.headers.set(this.headerName, ln)
                    })),
                    dt.handle(Ee)
                }
            }
            return vt.\u0275fac = function(Ee) {
                return new (Ee || vt)(l.LFG(wn),l.LFG(Tt))
            }
            ,
            vt.\u0275prov = l.Yz7({
                token: vt,
                factory: vt.\u0275fac
            }),
            vt
        }
        )()
          , $t = (()=>{
            class vt {
                constructor(Ee, dt) {
                    this.backend = Ee,
                    this.injector = dt,
                    this.chain = null
                }
                handle(Ee) {
                    if (null === this.chain) {
                        const dt = this.injector.get(qe, []);
                        this.chain = dt.reduceRight((Et,ln)=>new ft(Et,ln), this.backend)
                    }
                    return this.chain.handle(Ee)
                }
            }
            return vt.\u0275fac = function(Ee) {
                return new (Ee || vt)(l.LFG(le),l.LFG(l.zs3))
            }
            ,
            vt.\u0275prov = l.Yz7({
                token: vt,
                factory: vt.\u0275fac
            }),
            vt
        }
        )()
          , xn = (()=>{
            class vt {
                static disable() {
                    return {
                        ngModule: vt,
                        providers: [{
                            provide: In,
                            useClass: be
                        }]
                    }
                }
                static withOptions(Ee={}) {
                    return {
                        ngModule: vt,
                        providers: [Ee.cookieName ? {
                            provide: Qe,
                            useValue: Ee.cookieName
                        } : [], Ee.headerName ? {
                            provide: Tt,
                            useValue: Ee.headerName
                        } : []]
                    }
                }
            }
            return vt.\u0275fac = function(Ee) {
                return new (Ee || vt)
            }
            ,
            vt.\u0275mod = l.oAB({
                type: vt
            }),
            vt.\u0275inj = l.cJS({
                providers: [In, {
                    provide: qe,
                    useExisting: In,
                    multi: !0
                }, {
                    provide: wn,
                    useClass: an
                }, {
                    provide: Qe,
                    useValue: "XSRF-TOKEN"
                }, {
                    provide: Tt,
                    useValue: "X-XSRF-TOKEN"
                }]
            }),
            vt
        }
        )()
          , Xn = (()=>{
            class vt {
            }
            return vt.\u0275fac = function(Ee) {
                return new (Ee || vt)
            }
            ,
            vt.\u0275mod = l.oAB({
                type: vt
            }),
            vt.\u0275inj = l.cJS({
                providers: [qt, {
                    provide: te,
                    useClass: $t
                }, gt, {
                    provide: le,
                    useExisting: gt
                }],
                imports: [xn.withOptions({
                    cookieName: "XSRF-TOKEN",
                    headerName: "X-XSRF-TOKEN"
                })]
            }),
            vt
        }
        )()
    }
    ,
    2560: (Ot,je,D)=>{
        D.d(je, {
            $8M: ()=>uo,
            $Z: ()=>Ih,
            AFp: ()=>Gg,
            ALo: ()=>ug,
            AaK: ()=>te,
            Akn: ()=>Dr,
            AsE: ()=>au,
            BQk: ()=>vl,
            CHM: ()=>Ur,
            CRH: ()=>bg,
            CZH: ()=>Al,
            CqO: ()=>Cf,
            D6c: ()=>CE,
            DdM: ()=>Qp,
            EJc: ()=>Nb,
            EiD: ()=>vd,
            EpF: ()=>_f,
            F$t: ()=>Tf,
            F4k: ()=>yf,
            FYo: ()=>Pd,
            FiY: ()=>ma,
            G48: ()=>nE,
            Gf: ()=>yg,
            GfV: ()=>Od,
            GkF: ()=>qc,
            Gpc: ()=>fe,
            HTZ: ()=>ig,
            Hsn: ()=>Mf,
            JOm: ()=>Rr,
            JVY: ()=>Gm,
            Jf7: ()=>jd,
            KtG: ()=>ar,
            L6k: ()=>Wm,
            LAX: ()=>Km,
            LFG: ()=>Zi,
            LSH: ()=>jl,
            Lbi: ()=>Pb,
            Lck: ()=>R0,
            MAs: ()=>vf,
            MGl: ()=>_l,
            MMx: ()=>vu,
            NdJ: ()=>eu,
            O4$: ()=>ae,
            OlP: ()=>L,
            Oqu: ()=>ou,
            PXZ: ()=>Jb,
            Q6J: ()=>Zc,
            QGY: ()=>Xc,
            QP$: ()=>oe,
            QbO: ()=>Ob,
            Qsj: ()=>Tv,
            R0b: ()=>hr,
            RDi: ()=>Fm,
            Rgc: ()=>$a,
            SBq: ()=>Da,
            Sil: ()=>kb,
            Suo: ()=>Cg,
            TTD: ()=>ts,
            TgZ: ()=>pl,
            Tol: ()=>Uf,
            Udp: ()=>iu,
            VKq: ()=>qp,
            W1O: ()=>wg,
            WLB: ()=>Xp,
            X6Q: ()=>tE,
            XFs: ()=>$t,
            Xpm: ()=>Zt,
            Xts: ()=>Gl,
            Y36: ()=>Ko,
            YKP: ()=>Up,
            YNc: ()=>mf,
            Yjl: ()=>Li,
            Yz7: ()=>Xt,
            Z0I: ()=>de,
            ZZ4: ()=>Hu,
            _Bn: ()=>Hp,
            _UZ: ()=>Qc,
            _Vd: ()=>Ea,
            _c5: ()=>_E,
            _uU: ()=>Zf,
            aQg: ()=>Uu,
            c2e: ()=>Lb,
            cJS: ()=>Kt,
            cg1: ()=>cu,
            dDg: ()=>Wb,
            dqk: ()=>Et,
            eBb: ()=>Ym,
            eFA: ()=>sm,
            ekj: ()=>su,
            eoX: ()=>tm,
            evT: ()=>Gd,
            f3M: ()=>Xu,
            g9A: ()=>Yg,
            h0i: ()=>ca,
            hGG: ()=>yE,
            hYB: ()=>nu,
            hij: ()=>Cl,
            iGM: ()=>_g,
            ifc: ()=>dt,
            ip1: ()=>jg,
            jDz: ()=>jp,
            kEZ: ()=>eg,
            kL8: ()=>fp,
            kYT: ()=>Ti,
            kcU: ()=>Se,
            l5B: ()=>tg,
            lG2: ()=>Ji,
            lcZ: ()=>dg,
            lnq: ()=>lu,
            lqb: ()=>Mo,
            lri: ()=>Xg,
            mCW: ()=>Za,
            n5z: ()=>fa,
            n_E: ()=>wl,
            oAB: ()=>wi,
            oJD: ()=>_d,
            oxw: ()=>wf,
            pB0: ()=>Zm,
            q3G: ()=>Ui,
            qLn: ()=>Sa,
            qOj: ()=>Gc,
            qZA: ()=>gl,
            qbA: ()=>ng,
            qzn: ()=>Uo,
            rFY: ()=>sg,
            rWj: ()=>em,
            s9C: ()=>tu,
            sBO: ()=>iE,
            sIi: ()=>Aa,
            s_b: ()=>Ml,
            soG: ()=>Pl,
            tb: ()=>Kg,
            tp0: ()=>va,
            uIk: ()=>Kc,
            vHH: ()=>Be,
            vpe: ()=>Vr,
            wAp: ()=>Cn,
            xi3: ()=>hg,
            xp6: ()=>gh,
            ynx: ()=>ml,
            z2F: ()=>Ol,
            z3N: ()=>Qr,
            zSh: ()=>Kl,
            zs3: ()=>xo
        });
        var i = D(253)
          , l = D(7714)
          , q = D(833)
          , ue = D(6646)
          , H = D(1203);
        function U(e) {
            for (let t in e)
                if (e[t] === U)
                    return t;
            throw Error("Could not find renamed property on target object.")
        }
        function z(e, t) {
            for (const n in t)
                t.hasOwnProperty(n) && !e.hasOwnProperty(n) && (e[n] = t[n])
        }
        function te(e) {
            if ("string" == typeof e)
                return e;
            if (Array.isArray(e))
                return "[" + e.map(te).join(", ") + "]";
            if (null == e)
                return "" + e;
            if (e.overriddenName)
                return `${e.overriddenName}`;
            if (e.name)
                return `${e.name}`;
            const t = e.toString();
            if (null == t)
                return "" + t;
            const n = t.indexOf("\n");
            return -1 === n ? t : t.substring(0, n)
        }
        function le(e, t) {
            return null == e || "" === e ? null === t ? "" : t : null == t || "" === t ? e : e + " " + t
        }
        const W = U({
            __forward_ref__: U
        });
        function fe(e) {
            return e.__forward_ref__ = fe,
            e.toString = function() {
                return te(this())
            }
            ,
            e
        }
        function re(e) {
            return Ke(e) ? e() : e
        }
        function Ke(e) {
            return "function" == typeof e && e.hasOwnProperty(W) && e.__forward_ref__ === fe
        }
        class Be extends Error {
            constructor(t, n) {
                super(function ot(e, t) {
                    return `NG0${Math.abs(e)}${t ? ": " + t.trim() : ""}`
                }(t, n)),
                this.code = t
            }
        }
        function $e(e) {
            return "string" == typeof e ? e : null == e ? "" : String(e)
        }
        function Q(e, t) {
            throw new Be(-201,!1)
        }
        function be(e, t) {
            null == e && function pe(e, t, n, s) {
                throw new Error(`ASSERTION ERROR: ${e}` + (null == s ? "" : ` [Expected=> ${n} ${s} ${t} <=Actual]`))
            }(t, e, null, "!=")
        }
        function Xt(e) {
            return {
                token: e.token,
                providedIn: e.providedIn || null,
                factory: e.factory,
                value: void 0
            }
        }
        function Kt(e) {
            return {
                providers: e.providers || [],
                imports: e.imports || []
            }
        }
        function k(e) {
            return he(e, Tt) || he(e, an)
        }
        function de(e) {
            return null !== k(e)
        }
        function he(e, t) {
            return e.hasOwnProperty(t) ? e[t] : null
        }
        function Qe(e) {
            return e && (e.hasOwnProperty(wn) || e.hasOwnProperty(In)) ? e[wn] : null
        }
        const Tt = U({
            \u0275prov: U
        })
          , wn = U({
            \u0275inj: U
        })
          , an = U({
            ngInjectableDef: U
        })
          , In = U({
            ngInjectorDef: U
        });
        var $t = (()=>(($t = $t || {})[$t.Default = 0] = "Default",
        $t[$t.Host = 1] = "Host",
        $t[$t.Self = 2] = "Self",
        $t[$t.SkipSelf = 4] = "SkipSelf",
        $t[$t.Optional = 8] = "Optional",
        $t))();
        let gn;
        function xn(e) {
            const t = gn;
            return gn = e,
            t
        }
        function Xn(e, t, n) {
            const s = k(e);
            return s && "root" == s.providedIn ? void 0 === s.value ? s.value = s.factory() : s.value : n & $t.Optional ? null : void 0 !== t ? t : void Q(te(e))
        }
        function Tn(e) {
            return {
                toString: e
            }.toString()
        }
        var vt = (()=>((vt = vt || {})[vt.OnPush = 0] = "OnPush",
        vt[vt.Default = 1] = "Default",
        vt))()
          , dt = (()=>{
            return (e = dt || (dt = {}))[e.Emulated = 0] = "Emulated",
            e[e.None = 2] = "None",
            e[e.ShadowDom = 3] = "ShadowDom",
            dt;
            var e
        }
        )();
        const Et = (()=>typeof globalThis < "u" && globalThis || typeof global < "u" && global || typeof window < "u" && window || typeof self < "u" && typeof WorkerGlobalScope < "u" && self instanceof WorkerGlobalScope && self)()
          , Pn = {}
          , Vt = []
          , $n = U({
            \u0275cmp: U
        })
          , An = U({
            \u0275dir: U
        })
          , oi = U({
            \u0275pipe: U
        })
          , un = U({
            \u0275mod: U
        })
          , jt = U({
            \u0275fac: U
        })
          , yn = U({
            __NG_ELEMENT_ID__: U
        });
        let ai = 0;
        function Zt(e) {
            return Tn(()=>{
                const n = !0 === e.standalone
                  , s = {}
                  , o = {
                    type: e.type,
                    providersResolver: null,
                    decls: e.decls,
                    vars: e.vars,
                    factory: null,
                    template: e.template || null,
                    consts: e.consts || null,
                    ngContentSelectors: e.ngContentSelectors,
                    hostBindings: e.hostBindings || null,
                    hostVars: e.hostVars || 0,
                    hostAttrs: e.hostAttrs || null,
                    contentQueries: e.contentQueries || null,
                    declaredInputs: s,
                    inputs: null,
                    outputs: null,
                    exportAs: e.exportAs || null,
                    onPush: e.changeDetection === vt.OnPush,
                    directiveDefs: null,
                    pipeDefs: null,
                    standalone: n,
                    dependencies: n && e.dependencies || null,
                    getStandaloneInjector: null,
                    selectors: e.selectors || Vt,
                    viewQuery: e.viewQuery || null,
                    features: e.features || null,
                    data: e.data || {},
                    encapsulation: e.encapsulation || dt.Emulated,
                    id: "c" + ai++,
                    styles: e.styles || Vt,
                    _: null,
                    setInput: null,
                    schemas: e.schemas || null,
                    tView: null
                }
                  , a = e.dependencies
                  , p = e.features;
                return o.inputs = zi(e.inputs, s),
                o.outputs = zi(e.outputs),
                p && p.forEach(b=>b(o)),
                o.directiveDefs = a ? ()=>("function" == typeof a ? a() : a).map(Si).filter(_i) : null,
                o.pipeDefs = a ? ()=>("function" == typeof a ? a() : a).map(x).filter(_i) : null,
                o
            }
            )
        }
        function Si(e) {
            return He(e) || Lt(e)
        }
        function _i(e) {
            return null !== e
        }
        function wi(e) {
            return Tn(()=>({
                type: e.type,
                bootstrap: e.bootstrap || Vt,
                declarations: e.declarations || Vt,
                imports: e.imports || Vt,
                exports: e.exports || Vt,
                transitiveCompileScopes: null,
                schemas: e.schemas || null,
                id: e.id || null
            }))
        }
        function Ti(e, t) {
            return Tn(()=>{
                const n = Me(e, !0);
                n.declarations = t.declarations || Vt,
                n.imports = t.imports || Vt,
                n.exports = t.exports || Vt
            }
            )
        }
        function zi(e, t) {
            if (null == e)
                return Pn;
            const n = {};
            for (const s in e)
                if (e.hasOwnProperty(s)) {
                    let o = e[s]
                      , a = o;
                    Array.isArray(o) && (a = o[1],
                    o = o[0]),
                    n[o] = s,
                    t && (t[o] = a)
                }
            return n
        }
        const Ji = Zt;
        function Li(e) {
            return {
                type: e.type,
                name: e.name,
                factory: null,
                pure: !1 !== e.pure,
                standalone: !0 === e.standalone,
                onDestroy: e.type.prototype.ngOnDestroy || null
            }
        }
        function He(e) {
            return e[$n] || null
        }
        function Lt(e) {
            return e[An] || null
        }
        function x(e) {
            return e[oi] || null
        }
        function oe(e) {
            const t = He(e) || Lt(e) || x(e);
            return null !== t && t.standalone
        }
        function Me(e, t) {
            const n = e[un] || null;
            if (!n && !0 === t)
                throw new Error(`Type ${te(e)} does not have '\u0275mod' property.`);
            return n
        }
        function Mn(e) {
            return Array.isArray(e) && "object" == typeof e[1]
        }
        function ti(e) {
            return Array.isArray(e) && !0 === e[1]
        }
        function Mi(e) {
            return 0 != (8 & e.flags)
        }
        function vs(e) {
            return 2 == (2 & e.flags)
        }
        function Ci(e) {
            return 1 == (1 & e.flags)
        }
        function fi(e) {
            return null !== e.template
        }
        function Xi(e) {
            return 0 != (256 & e[2])
        }
        function Vi(e, t) {
            return e.hasOwnProperty(jt) ? e[jt] : null
        }
        class Bi {
            constructor(t, n, s) {
                this.previousValue = t,
                this.currentValue = n,
                this.firstChange = s
            }
            isFirstChange() {
                return this.firstChange
            }
        }
        function ts() {
            return Hs
        }
        function Hs(e) {
            return e.type.prototype.ngOnChanges && (e.setInput = ds),
            _s
        }
        function _s() {
            const e = Zs(this)
              , t = e?.current;
            if (t) {
                const n = e.previous;
                if (n === Pn)
                    e.previous = t;
                else
                    for (let s in t)
                        n[s] = t[s];
                e.current = null,
                this.ngOnChanges(t)
            }
        }
        function ds(e, t, n, s) {
            const o = Zs(e) || function As(e, t) {
                return e[Ai] = t
            }(e, {
                previous: Pn,
                current: null
            })
              , a = o.current || (o.current = {})
              , p = o.previous
              , b = this.declaredInputs[n]
              , T = p[b];
            a[b] = new Bi(T && T.currentValue,t,p === Pn),
            e[s] = t
        }
        ts.ngInherit = !0;
        const Ai = "__ngSimpleChanges__";
        function Zs(e) {
            return e[Ai] || null
        }
        function ni(e) {
            for (; Array.isArray(e); )
                e = e[0];
            return e
        }
        function Qi(e, t) {
            return ni(t[e])
        }
        function gi(e, t) {
            return ni(t[e.index])
        }
        function Cs(e, t) {
            return e.data[t]
        }
        function ns(e, t) {
            return e[t]
        }
        function Nn(e, t) {
            const n = t[e];
            return Mn(n) ? n : n[0]
        }
        function fs(e) {
            return 64 == (64 & e[2])
        }
        function is(e, t) {
            return null == t ? null : e[t]
        }
        function xr(e) {
            e[18] = 0
        }
        function Gi(e, t) {
            e[5] += t;
            let n = e
              , s = e[3];
            for (; null !== s && (1 === t && 1 === n[5] || -1 === t && 0 === n[5]); )
                s[5] += t,
                n = s,
                s = s[3]
        }
        const vn = {
            lFrame: ce(null),
            bindingsEnabled: !0
        };
        function Ii() {
            return vn.bindingsEnabled
        }
        function xt() {
            return vn.lFrame.lView
        }
        function On() {
            return vn.lFrame.tView
        }
        function Ur(e) {
            return vn.lFrame.contextLView = e,
            e[8]
        }
        function ar(e) {
            return vn.lFrame.contextLView = null,
            e
        }
        function Qn() {
            let e = R();
            for (; null !== e && 64 === e.type; )
                e = e.parent;
            return e
        }
        function R() {
            return vn.lFrame.currentTNode
        }
        function I(e, t) {
            const n = vn.lFrame;
            n.currentTNode = e,
            n.isParent = t
        }
        function ne() {
            return vn.lFrame.isParent
        }
        function at() {
            vn.lFrame.isParent = !1
        }
        function si() {
            const e = vn.lFrame;
            let t = e.bindingRootIndex;
            return -1 === t && (t = e.bindingRootIndex = e.tView.bindingStartIndex),
            t
        }
        function rs() {
            return vn.lFrame.bindingIndex
        }
        function lr() {
            return vn.lFrame.bindingIndex++
        }
        function Wi(e) {
            const t = vn.lFrame
              , n = t.bindingIndex;
            return t.bindingIndex = t.bindingIndex + e,
            n
        }
        function mo(e, t) {
            const n = vn.lFrame;
            n.bindingIndex = n.bindingRootIndex = e,
            zr(t)
        }
        function zr(e) {
            vn.lFrame.currentDirectiveIndex = e
        }
        function y() {
            return vn.lFrame.currentQueryIndex
        }
        function _(e) {
            vn.lFrame.currentQueryIndex = e
        }
        function E(e) {
            const t = e[1];
            return 2 === t.type ? t.declTNode : 1 === t.type ? e[6] : null
        }
        function O(e, t, n) {
            if (n & $t.SkipSelf) {
                let o = t
                  , a = e;
                for (; !(o = o.parent,
                null !== o || n & $t.Host || (o = E(a),
                null === o || (a = a[15],
                10 & o.type))); )
                    ;
                if (null === o)
                    return !1;
                t = o,
                e = a
            }
            const s = vn.lFrame = se();
            return s.currentTNode = t,
            s.lView = e,
            !0
        }
        function B(e) {
            const t = se()
              , n = e[1];
            vn.lFrame = t,
            t.currentTNode = n.firstChild,
            t.lView = e,
            t.tView = n,
            t.contextLView = e,
            t.bindingIndex = n.bindingStartIndex,
            t.inI18n = !1
        }
        function se() {
            const e = vn.lFrame
              , t = null === e ? null : e.child;
            return null === t ? ce(e) : t
        }
        function ce(e) {
            const t = {
                currentTNode: null,
                isParent: !0,
                lView: null,
                tView: null,
                selectedIndex: -1,
                contextLView: null,
                elementDepthCount: 0,
                currentNamespace: null,
                currentDirectiveIndex: -1,
                bindingRootIndex: -1,
                bindingIndex: -1,
                currentQueryIndex: 0,
                parent: e,
                child: null,
                inI18n: !1
            };
            return null !== e && (e.child = t),
            t
        }
        function G() {
            const e = vn.lFrame;
            return vn.lFrame = e.parent,
            e.currentTNode = null,
            e.lView = null,
            e
        }
        const u = G;
        function m() {
            const e = G();
            e.isParent = !0,
            e.tView = null,
            e.selectedIndex = -1,
            e.contextLView = null,
            e.elementDepthCount = 0,
            e.currentDirectiveIndex = -1,
            e.currentNamespace = null,
            e.bindingRootIndex = -1,
            e.bindingIndex = -1,
            e.currentQueryIndex = 0
        }
        function V() {
            return vn.lFrame.selectedIndex
        }
        function X(e) {
            vn.lFrame.selectedIndex = e
        }
        function j() {
            const e = vn.lFrame;
            return Cs(e.tView, e.selectedIndex)
        }
        function ae() {
            vn.lFrame.currentNamespace = "svg"
        }
        function Se() {
            !function ke() {
                vn.lFrame.currentNamespace = null
            }()
        }
        function mt(e, t) {
            for (let n = t.directiveStart, s = t.directiveEnd; n < s; n++) {
                const a = e.data[n].type.prototype
                  , {ngAfterContentInit: p, ngAfterContentChecked: b, ngAfterViewInit: T, ngAfterViewChecked: F, ngOnDestroy: ee} = a;
                p && (e.contentHooks || (e.contentHooks = [])).push(-n, p),
                b && ((e.contentHooks || (e.contentHooks = [])).push(n, b),
                (e.contentCheckHooks || (e.contentCheckHooks = [])).push(n, b)),
                T && (e.viewHooks || (e.viewHooks = [])).push(-n, T),
                F && ((e.viewHooks || (e.viewHooks = [])).push(n, F),
                (e.viewCheckHooks || (e.viewCheckHooks = [])).push(n, F)),
                null != ee && (e.destroyHooks || (e.destroyHooks = [])).push(n, ee)
            }
        }
        function Ct(e, t, n) {
            At(e, t, 3, n)
        }
        function Nt(e, t, n, s) {
            (3 & e[2]) === n && At(e, t, n, s)
        }
        function Ut(e, t) {
            let n = e[2];
            (3 & n) === t && (n &= 2047,
            n += 1,
            e[2] = n)
        }
        function At(e, t, n, s) {
            const a = s ?? -1
              , p = t.length - 1;
            let b = 0;
            for (let T = void 0 !== s ? 65535 & e[18] : 0; T < p; T++)
                if ("number" == typeof t[T + 1]) {
                    if (b = t[T],
                    null != s && b >= s)
                        break
                } else
                    t[T] < 0 && (e[18] += 65536),
                    (b < a || -1 == a) && (Xe(e, n, t, T),
                    e[18] = (4294901760 & e[18]) + T + 2),
                    T++
        }
        function Xe(e, t, n, s) {
            const o = n[s] < 0
              , a = n[s + 1]
              , b = e[o ? -n[s] : n[s]];
            if (o) {
                if (e[2] >> 11 < e[18] >> 16 && (3 & e[2]) === t) {
                    e[2] += 2048;
                    try {
                        a.call(b)
                    } finally {}
                }
            } else
                try {
                    a.call(b)
                } finally {}
        }
        class ct {
            constructor(t, n, s) {
                this.factory = t,
                this.resolving = !1,
                this.canSeeViewProviders = n,
                this.injectImpl = s
            }
        }
        function ps(e, t, n) {
            let s = 0;
            for (; s < n.length; ) {
                const o = n[s];
                if ("number" == typeof o) {
                    if (0 !== o)
                        break;
                    s++;
                    const a = n[s++]
                      , p = n[s++]
                      , b = n[s++];
                    e.setAttribute(t, p, b, a)
                } else {
                    const a = o
                      , p = n[++s];
                    Qs(a) ? e.setProperty(t, a, p) : e.setAttribute(t, a, p),
                    s++
                }
            }
            return s
        }
        function Js(e) {
            return 3 === e || 4 === e || 6 === e
        }
        function Qs(e) {
            return 64 === e.charCodeAt(0)
        }
        function ri(e, t) {
            if (null !== t && 0 !== t.length)
                if (null === e || 0 === e.length)
                    e = t.slice();
                else {
                    let n = -1;
                    for (let s = 0; s < t.length; s++) {
                        const o = t[s];
                        "number" == typeof o ? n = o : 0 === n || Ki(e, n, o, null, -1 === n || 2 === n ? t[++s] : null)
                    }
                }
            return e
        }
        function Ki(e, t, n, s, o) {
            let a = 0
              , p = e.length;
            if (-1 === t)
                p = -1;
            else
                for (; a < e.length; ) {
                    const b = e[a++];
                    if ("number" == typeof b) {
                        if (b === t) {
                            p = -1;
                            break
                        }
                        if (b > t) {
                            p = a - 1;
                            break
                        }
                    }
                }
            for (; a < e.length; ) {
                const b = e[a];
                if ("number" == typeof b)
                    break;
                if (b === n) {
                    if (null === s)
                        return void (null !== o && (e[a + 1] = o));
                    if (s === e[a + 1])
                        return void (e[a + 2] = o)
                }
                a++,
                null !== s && a++,
                null !== o && a++
            }
            -1 !== p && (e.splice(p, 0, t),
            a = p + 1),
            e.splice(a++, 0, n),
            null !== s && e.splice(a++, 0, s),
            null !== o && e.splice(a++, 0, o)
        }
        function Pr(e) {
            return -1 !== e
        }
        function qs(e) {
            return 32767 & e
        }
        function Xs(e, t) {
            let n = function jr(e) {
                return e >> 16
            }(e)
              , s = t;
            for (; n > 0; )
                s = s[15],
                n--;
            return s
        }
        let er = !0;
        function Ss(e) {
            const t = er;
            return er = e,
            t
        }
        let Or = 0;
        const ws = {};
        function Gr(e, t) {
            const n = _o(e, t);
            if (-1 !== n)
                return n;
            const s = t[1];
            s.firstCreatePass && (e.injectorIndex = t.length,
            vo(s.data, e),
            vo(t, null),
            vo(s.blueprint, null));
            const o = Wr(e, t)
              , a = e.injectorIndex;
            if (Pr(o)) {
                const p = qs(o)
                  , b = Xs(o, t)
                  , T = b[1].data;
                for (let F = 0; F < 8; F++)
                    t[a + F] = b[p + F] | T[p + F]
            }
            return t[a + 8] = o,
            a
        }
        function vo(e, t) {
            e.push(0, 0, 0, 0, 0, 0, 0, 0, t)
        }
        function _o(e, t) {
            return -1 === e.injectorIndex || e.parent && e.parent.injectorIndex === e.injectorIndex || null === t[e.injectorIndex + 8] ? -1 : e.injectorIndex
        }
        function Wr(e, t) {
            if (e.parent && -1 !== e.parent.injectorIndex)
                return e.parent.injectorIndex;
            let n = 0
              , s = null
              , o = t;
            for (; null !== o; ) {
                if (s = Zr(o),
                null === s)
                    return -1;
                if (n++,
                o = o[15],
                -1 !== s.injectorIndex)
                    return s.injectorIndex | n << 16
            }
            return -1
        }
        function Gs(e, t, n) {
            !function Ua(e, t, n) {
                let s;
                "string" == typeof n ? s = n.charCodeAt(0) || 0 : n.hasOwnProperty(yn) && (s = n[yn]),
                null == s && (s = n[yn] = Or++);
                const o = 255 & s;
                t.data[e + (o >> 5)] |= 1 << o
            }(e, t, n)
        }
        function oo(e, t, n) {
            if (n & $t.Optional || void 0 !== e)
                return e;
            Q()
        }
        function Yr(e, t, n, s) {
            if (n & $t.Optional && void 0 === s && (s = null),
            0 == (n & ($t.Self | $t.Host))) {
                const o = e[9]
                  , a = xn(void 0);
                try {
                    return o ? o.get(t, s, n & $t.Optional) : Xn(t, s, n & $t.Optional)
                } finally {
                    xn(a)
                }
            }
            return oo(s, 0, n)
        }
        function No(e, t, n, s=$t.Default, o) {
            if (null !== e) {
                if (1024 & t[2]) {
                    const p = function Eo(e, t, n, s, o) {
                        let a = e
                          , p = t;
                        for (; null !== a && null !== p && 1024 & p[2] && !(256 & p[2]); ) {
                            const b = Fo(a, p, n, s | $t.Self, ws);
                            if (b !== ws)
                                return b;
                            let T = a.parent;
                            if (!T) {
                                const F = p[21];
                                if (F) {
                                    const ee = F.get(n, ws, s);
                                    if (ee !== ws)
                                        return ee
                                }
                                T = Zr(p),
                                p = p[15]
                            }
                            a = T
                        }
                        return o
                    }(e, t, n, s, ws);
                    if (p !== ws)
                        return p
                }
                const a = Fo(e, t, n, s, ws);
                if (a !== ws)
                    return a
            }
            return Yr(t, n, s, o)
        }
        function Fo(e, t, n, s, o) {
            const a = function ha(e) {
                if ("string" == typeof e)
                    return e.charCodeAt(0) || 0;
                const t = e.hasOwnProperty(yn) ? e[yn] : void 0;
                return "number" == typeof t ? t >= 0 ? 255 & t : xi : t
            }(n);
            if ("function" == typeof a) {
                if (!O(t, e, s))
                    return s & $t.Host ? oo(o, 0, s) : Yr(t, n, s, o);
                try {
                    const p = a(s);
                    if (null != p || s & $t.Optional)
                        return p;
                    Q()
                } finally {
                    u()
                }
            } else if ("number" == typeof a) {
                let p = null
                  , b = _o(e, t)
                  , T = -1
                  , F = s & $t.Host ? t[16][6] : null;
                for ((-1 === b || s & $t.SkipSelf) && (T = -1 === b ? Wr(e, t) : t[b + 8],
                -1 !== T && co(s, !1) ? (p = t[1],
                b = qs(T),
                t = Xs(T, t)) : b = -1); -1 !== b; ) {
                    const ee = t[1];
                    if (Co(a, b, ee.data)) {
                        const ge = ao(b, t, n, p, s, F);
                        if (ge !== ws)
                            return ge
                    }
                    T = t[b + 8],
                    -1 !== T && co(s, t[1].data[b + 8] === F) && Co(a, b, t) ? (p = ee,
                    b = qs(T),
                    t = Xs(T, t)) : b = -1
                }
            }
            return o
        }
        function ao(e, t, n, s, o, a) {
            const p = t[1]
              , b = p.data[e + 8]
              , ee = lo(b, p, n, null == s ? vs(b) && er : s != p && 0 != (3 & b.type), o & $t.Host && a === b);
            return null !== ee ? Kr(t, p, ee, b) : ws
        }
        function lo(e, t, n, s, o) {
            const a = e.providerIndexes
              , p = t.data
              , b = 1048575 & a
              , T = e.directiveStart
              , ee = a >> 20
              , Ue = o ? b + ee : e.directiveEnd;
            for (let tt = s ? b : b + ee; tt < Ue; tt++) {
                const St = p[tt];
                if (tt < T && n === St || tt >= T && St.type === n)
                    return tt
            }
            if (o) {
                const tt = p[T];
                if (tt && fi(tt) && tt.type === n)
                    return T
            }
            return null
        }
        function Kr(e, t, n, s) {
            let o = e[n];
            const a = t.data;
            if (function en(e) {
                return e instanceof ct
            }(o)) {
                const p = o;
                p.resolving && function et(e, t) {
                    const n = t ? `. Dependency path: ${t.join(" > ")} > ${e}` : "";
                    throw new Be(-200,`Circular dependency in DI detected for ${e}${n}`)
                }(function Fe(e) {
                    return "function" == typeof e ? e.name || e.toString() : "object" == typeof e && null != e && "function" == typeof e.type ? e.type.name || e.type.toString() : $e(e)
                }(a[n]));
                const b = Ss(p.canSeeViewProviders);
                p.resolving = !0;
                const T = p.injectImpl ? xn(p.injectImpl) : null;
                O(e, s, $t.Default);
                try {
                    o = e[n] = p.factory(void 0, a, e, s),
                    t.firstCreatePass && n >= s.directiveStart && function yt(e, t, n) {
                        const {ngOnChanges: s, ngOnInit: o, ngDoCheck: a} = t.type.prototype;
                        if (s) {
                            const p = Hs(t);
                            (n.preOrderHooks || (n.preOrderHooks = [])).push(e, p),
                            (n.preOrderCheckHooks || (n.preOrderCheckHooks = [])).push(e, p)
                        }
                        o && (n.preOrderHooks || (n.preOrderHooks = [])).push(0 - e, o),
                        a && ((n.preOrderHooks || (n.preOrderHooks = [])).push(e, a),
                        (n.preOrderCheckHooks || (n.preOrderCheckHooks = [])).push(e, a))
                    }(n, a[n], t)
                } finally {
                    null !== T && xn(T),
                    Ss(b),
                    p.resolving = !1,
                    u()
                }
            }
            return o
        }
        function Co(e, t, n) {
            return !!(n[t + (e >> 5)] & 1 << e)
        }
        function co(e, t) {
            return !(e & $t.Self || e & $t.Host && t)
        }
        class ur {
            constructor(t, n) {
                this._tNode = t,
                this._lView = n
            }
            get(t, n, s) {
                return No(this._tNode, this._lView, t, s, n)
            }
        }
        function xi() {
            return new ur(Qn(),xt())
        }
        function fa(e) {
            return Tn(()=>{
                const t = e.prototype.constructor
                  , n = t[jt] || bo(t)
                  , s = Object.prototype;
                let o = Object.getPrototypeOf(e.prototype).constructor;
                for (; o && o !== s; ) {
                    const a = o[jt] || bo(o);
                    if (a && a !== n)
                        return a;
                    o = Object.getPrototypeOf(o)
                }
                return a=>new a
            }
            )
        }
        function bo(e) {
            return Ke(e) ? ()=>{
                const t = bo(re(e));
                return t && t()
            }
            : Vi(e)
        }
        function Zr(e) {
            const t = e[1]
              , n = t.type;
            return 2 === n ? t.declTNode : 1 === n ? e[6] : null
        }
        function uo(e) {
            return function yo(e, t) {
                if ("class" === t)
                    return e.classes;
                if ("style" === t)
                    return e.styles;
                const n = e.attrs;
                if (n) {
                    const s = n.length;
                    let o = 0;
                    for (; o < s; ) {
                        const a = n[o];
                        if (Js(a))
                            break;
                        if (0 === a)
                            o += 2;
                        else if ("number" == typeof a)
                            for (o++; o < s && "string" == typeof n[o]; )
                                o++;
                        else {
                            if (a === t)
                                return n[o + 1];
                            o += 2
                        }
                    }
                }
                return null
            }(Qn(), e)
        }
        const yr = "__parameters__";
        function h(e, t, n) {
            return Tn(()=>{
                const s = function M(e) {
                    return function(...n) {
                        if (e) {
                            const s = e(...n);
                            for (const o in s)
                                this[o] = s[o]
                        }
                    }
                }(t);
                function o(...a) {
                    if (this instanceof o)
                        return s.apply(this, a),
                        this;
                    const p = new o(...a);
                    return b.annotation = p,
                    b;
                    function b(T, F, ee) {
                        const ge = T.hasOwnProperty(yr) ? T[yr] : Object.defineProperty(T, yr, {
                            value: []
                        })[yr];
                        for (; ge.length <= ee; )
                            ge.push(null);
                        return (ge[ee] = ge[ee] || []).push(p),
                        T
                    }
                }
                return n && (o.prototype = Object.create(n.prototype)),
                o.prototype.ngMetadataName = e,
                o.annotationCls = o,
                o
            }
            )
        }
        class L {
            constructor(t, n) {
                this._desc = t,
                this.ngMetadataName = "InjectionToken",
                this.\u0275prov = void 0,
                "number" == typeof n ? this.__NG_ELEMENT_ID__ = n : void 0 !== n && (this.\u0275prov = Xt({
                    token: this,
                    providedIn: n.providedIn || "root",
                    factory: n.factory
                }))
            }
            get multi() {
                return this
            }
            toString() {
                return `InjectionToken ${this._desc}`
            }
        }
        function Gn(e, t) {
            void 0 === t && (t = e);
            for (let n = 0; n < e.length; n++) {
                let s = e[n];
                Array.isArray(s) ? (t === e && (t = e.slice(0, n)),
                Gn(s, t)) : t !== e && t.push(s)
            }
            return t
        }
        function as(e, t) {
            e.forEach(n=>Array.isArray(n) ? as(n, t) : t(n))
        }
        function Rs(e, t, n) {
            t >= e.length ? e.push(n) : e.splice(t, 0, n)
        }
        function Pi(e, t) {
            return t >= e.length - 1 ? e.pop() : e.splice(t, 1)[0]
        }
        function gs(e, t) {
            const n = [];
            for (let s = 0; s < e; s++)
                n.push(t);
            return n
        }
        function ms(e, t, n) {
            let s = v(e, t);
            return s >= 0 ? e[1 | s] = n : (s = ~s,
            function Vo(e, t, n, s) {
                let o = e.length;
                if (o == t)
                    e.push(n, s);
                else if (1 === o)
                    e.push(s, e[0]),
                    e[0] = n;
                else {
                    for (o--,
                    e.push(e[o - 1], e[o]); o > t; )
                        e[o] = e[o - 2],
                        o--;
                    e[t] = n,
                    e[t + 1] = s
                }
            }(e, s, t, n)),
            s
        }
        function g(e, t) {
            const n = v(e, t);
            if (n >= 0)
                return e[1 | n]
        }
        function v(e, t) {
            return function w(e, t, n) {
                let s = 0
                  , o = e.length >> n;
                for (; o !== s; ) {
                    const a = s + (o - s >> 1)
                      , p = e[a << n];
                    if (t === p)
                        return a << n;
                    p > t ? o = a : s = a + 1
                }
                return ~(o << n)
            }(e, t, 1)
        }
        const Kn = {}
          , ls = "__NG_DI_FLAG__"
          , Ts = "ngTempTokenPath"
          , za = /\n/gm
          , ja = "__source";
        let pa;
        function Bo(e) {
            const t = pa;
            return pa = e,
            t
        }
        function Dm(e, t=$t.Default) {
            if (void 0 === pa)
                throw new Be(-203,!1);
            return null === pa ? Xn(e, void 0, t) : pa.get(e, t & $t.Optional ? null : void 0, t)
        }
        function Zi(e, t=$t.Default) {
            return (function qn() {
                return gn
            }() || Dm)(re(e), t)
        }
        function Xu(e, t=$t.Default) {
            return "number" != typeof t && (t = 0 | (t.optional && 8) | (t.host && 1) | (t.self && 2) | (t.skipSelf && 4)),
            Zi(e, t)
        }
        function Fl(e) {
            const t = [];
            for (let n = 0; n < e.length; n++) {
                const s = re(e[n]);
                if (Array.isArray(s)) {
                    if (0 === s.length)
                        throw new Be(900,!1);
                    let o, a = $t.Default;
                    for (let p = 0; p < s.length; p++) {
                        const b = s[p]
                          , T = Sm(b);
                        "number" == typeof T ? -1 === T ? o = b.token : a |= T : o = b
                    }
                    t.push(Zi(o, a))
                } else
                    t.push(Zi(s))
            }
            return t
        }
        function ga(e, t) {
            return e[ls] = t,
            e.prototype[ls] = t,
            e
        }
        function Sm(e) {
            return e[ls]
        }
        const ma = ga(h("Optional"), 8)
          , va = ga(h("SkipSelf"), 4);
        let Vl, Ya, Ka;
        function Fm(e) {
            Vl = e
        }
        function Ho(e) {
            return function Bl() {
                if (void 0 === Ya && (Ya = null,
                Et.trustedTypes))
                    try {
                        Ya = Et.trustedTypes.createPolicy("angular", {
                            createHTML: e=>e,
                            createScript: e=>e,
                            createScriptURL: e=>e
                        })
                    } catch {}
                return Ya
            }()?.createHTML(e) || e
        }
        function ld(e) {
            return function $l() {
                if (void 0 === Ka && (Ka = null,
                Et.trustedTypes))
                    try {
                        Ka = Et.trustedTypes.createPolicy("angular#unsafe-bypass", {
                            createHTML: e=>e,
                            createScript: e=>e,
                            createScriptURL: e=>e
                        })
                    } catch {}
                return Ka
            }()?.createHTML(e) || e
        }
        class wo {
            constructor(t) {
                this.changingThisBreaksApplicationSecurity = t
            }
            toString() {
                return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`
            }
        }
        class Bm extends wo {
            getTypeName() {
                return "HTML"
            }
        }
        class $m extends wo {
            getTypeName() {
                return "Style"
            }
        }
        class Hm extends wo {
            getTypeName() {
                return "Script"
            }
        }
        class Um extends wo {
            getTypeName() {
                return "URL"
            }
        }
        class zm extends wo {
            getTypeName() {
                return "ResourceURL"
            }
        }
        function Qr(e) {
            return e instanceof wo ? e.changingThisBreaksApplicationSecurity : e
        }
        function Uo(e, t) {
            const n = function jm(e) {
                return e instanceof wo && e.getTypeName() || null
            }(e);
            if (null != n && n !== t) {
                if ("ResourceURL" === n && "URL" === t)
                    return !0;
                throw new Error(`Required a safe ${t}, got a ${n} (see https://g.co/ng/security#xss)`)
            }
            return n === t
        }
        function Gm(e) {
            return new Bm(e)
        }
        function Wm(e) {
            return new $m(e)
        }
        function Ym(e) {
            return new Hm(e)
        }
        function Km(e) {
            return new Um(e)
        }
        function Zm(e) {
            return new zm(e)
        }
        class Jm {
            constructor(t) {
                this.inertDocumentHelper = t
            }
            getInertBodyElement(t) {
                t = "<body><remove></remove>" + t;
                try {
                    const n = (new window.DOMParser).parseFromString(Ho(t), "text/html").body;
                    return null === n ? this.inertDocumentHelper.getInertBodyElement(t) : (n.removeChild(n.firstChild),
                    n)
                } catch {
                    return null
                }
            }
        }
        class Qm {
            constructor(t) {
                if (this.defaultDoc = t,
                this.inertDocument = this.defaultDoc.implementation.createHTMLDocument("sanitization-inert"),
                null == this.inertDocument.body) {
                    const n = this.inertDocument.createElement("html");
                    this.inertDocument.appendChild(n);
                    const s = this.inertDocument.createElement("body");
                    n.appendChild(s)
                }
            }
            getInertBodyElement(t) {
                const n = this.inertDocument.createElement("template");
                if ("content"in n)
                    return n.innerHTML = Ho(t),
                    n;
                const s = this.inertDocument.createElement("body");
                return s.innerHTML = Ho(t),
                this.defaultDoc.documentMode && this.stripCustomNsAttrs(s),
                s
            }
            stripCustomNsAttrs(t) {
                const n = t.attributes;
                for (let o = n.length - 1; 0 < o; o--) {
                    const p = n.item(o).name;
                    ("xmlns:ns1" === p || 0 === p.indexOf("ns1:")) && t.removeAttribute(p)
                }
                let s = t.firstChild;
                for (; s; )
                    s.nodeType === Node.ELEMENT_NODE && this.stripCustomNsAttrs(s),
                    s = s.nextSibling
            }
        }
        const Xm = /^(?:(?:https?|mailto|data|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi;
        function Za(e) {
            return (e = String(e)).match(Xm) ? e : "unsafe:" + e
        }
        function qr(e) {
            const t = {};
            for (const n of e.split(","))
                t[n] = !0;
            return t
        }
        function Ca(...e) {
            const t = {};
            for (const n of e)
                for (const s in n)
                    n.hasOwnProperty(s) && (t[s] = !0);
            return t
        }
        const hd = qr("area,br,col,hr,img,wbr")
          , fd = qr("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr")
          , pd = qr("rp,rt")
          , Hl = Ca(hd, Ca(fd, qr("address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul")), Ca(pd, qr("a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video")), Ca(pd, fd))
          , Ul = qr("background,cite,href,itemtype,longdesc,poster,src,xlink:href")
          , gd = Ca(Ul, qr("abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,srcset,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width"), qr("aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext"))
          , ev = qr("script,style,template");
        class tv {
            constructor() {
                this.sanitizedSomething = !1,
                this.buf = []
            }
            sanitizeChildren(t) {
                let n = t.firstChild
                  , s = !0;
                for (; n; )
                    if (n.nodeType === Node.ELEMENT_NODE ? s = this.startElement(n) : n.nodeType === Node.TEXT_NODE ? this.chars(n.nodeValue) : this.sanitizedSomething = !0,
                    s && n.firstChild)
                        n = n.firstChild;
                    else
                        for (; n; ) {
                            n.nodeType === Node.ELEMENT_NODE && this.endElement(n);
                            let o = this.checkClobberedElement(n, n.nextSibling);
                            if (o) {
                                n = o;
                                break
                            }
                            n = this.checkClobberedElement(n, n.parentNode)
                        }
                return this.buf.join("")
            }
            startElement(t) {
                const n = t.nodeName.toLowerCase();
                if (!Hl.hasOwnProperty(n))
                    return this.sanitizedSomething = !0,
                    !ev.hasOwnProperty(n);
                this.buf.push("<"),
                this.buf.push(n);
                const s = t.attributes;
                for (let o = 0; o < s.length; o++) {
                    const a = s.item(o)
                      , p = a.name
                      , b = p.toLowerCase();
                    if (!gd.hasOwnProperty(b)) {
                        this.sanitizedSomething = !0;
                        continue
                    }
                    let T = a.value;
                    Ul[b] && (T = Za(T)),
                    this.buf.push(" ", p, '="', md(T), '"')
                }
                return this.buf.push(">"),
                !0
            }
            endElement(t) {
                const n = t.nodeName.toLowerCase();
                Hl.hasOwnProperty(n) && !hd.hasOwnProperty(n) && (this.buf.push("</"),
                this.buf.push(n),
                this.buf.push(">"))
            }
            chars(t) {
                this.buf.push(md(t))
            }
            checkClobberedElement(t, n) {
                if (n && (t.compareDocumentPosition(n) & Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY)
                    throw new Error(`Failed to sanitize html because the element is clobbered: ${t.outerHTML}`);
                return n
            }
        }
        const nv = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g
          , iv = /([^\#-~ |!])/g;
        function md(e) {
            return e.replace(/&/g, "&amp;").replace(nv, function(t) {
                return "&#" + (1024 * (t.charCodeAt(0) - 55296) + (t.charCodeAt(1) - 56320) + 65536) + ";"
            }).replace(iv, function(t) {
                return "&#" + t.charCodeAt(0) + ";"
            }).replace(/</g, "&lt;").replace(/>/g, "&gt;")
        }
        let Ja;
        function vd(e, t) {
            let n = null;
            try {
                Ja = Ja || function dd(e) {
                    const t = new Qm(e);
                    return function qm() {
                        try {
                            return !!(new window.DOMParser).parseFromString(Ho(""), "text/html")
                        } catch {
                            return !1
                        }
                    }() ? new Jm(t) : t
                }(e);
                let s = t ? String(t) : "";
                n = Ja.getInertBodyElement(s);
                let o = 5
                  , a = s;
                do {
                    if (0 === o)
                        throw new Error("Failed to sanitize html because the input is unstable");
                    o--,
                    s = a,
                    a = n.innerHTML,
                    n = Ja.getInertBodyElement(s)
                } while (s !== a);
                return Ho((new tv).sanitizeChildren(zl(n) || n))
            } finally {
                if (n) {
                    const s = zl(n) || n;
                    for (; s.firstChild; )
                        s.removeChild(s.firstChild)
                }
            }
        }
        function zl(e) {
            return "content"in e && function sv(e) {
                return e.nodeType === Node.ELEMENT_NODE && "TEMPLATE" === e.nodeName
            }(e) ? e.content : null
        }
        var Ui = (()=>((Ui = Ui || {})[Ui.NONE = 0] = "NONE",
        Ui[Ui.HTML = 1] = "HTML",
        Ui[Ui.STYLE = 2] = "STYLE",
        Ui[Ui.SCRIPT = 3] = "SCRIPT",
        Ui[Ui.URL = 4] = "URL",
        Ui[Ui.RESOURCE_URL = 5] = "RESOURCE_URL",
        Ui))();
        function _d(e) {
            const t = ba();
            return t ? ld(t.sanitize(Ui.HTML, e) || "") : Uo(e, "HTML") ? ld(Qr(e)) : vd(function ad() {
                return void 0 !== Vl ? Vl : typeof document < "u" ? document : void 0
            }(), $e(e))
        }
        function jl(e) {
            const t = ba();
            return t ? t.sanitize(Ui.URL, e) || "" : Uo(e, "URL") ? Qr(e) : Za($e(e))
        }
        function ba() {
            const e = xt();
            return e && e[12]
        }
        const Gl = new L("ENVIRONMENT_INITIALIZER")
          , Cd = new L("INJECTOR",-1)
          , bd = new L("INJECTOR_DEF_TYPES");
        class Ed {
            get(t, n=Kn) {
                if (n === Kn) {
                    const s = new Error(`NullInjectorError: No provider for ${te(t)}!`);
                    throw s.name = "NullInjectorError",
                    s
                }
                return n
            }
        }
        function dv(...e) {
            return {
                \u0275providers: Dd(0, e)
            }
        }
        function Dd(e, ...t) {
            const n = []
              , s = new Set;
            let o;
            return as(t, a=>{
                const p = a;
                Wl(p, n, [], s) && (o || (o = []),
                o.push(p))
            }
            ),
            void 0 !== o && Sd(o, n),
            n
        }
        function Sd(e, t) {
            for (let n = 0; n < e.length; n++) {
                const {providers: o} = e[n];
                as(o, a=>{
                    t.push(a)
                }
                )
            }
        }
        function Wl(e, t, n, s) {
            if (!(e = re(e)))
                return !1;
            let o = null
              , a = Qe(e);
            const p = !a && He(e);
            if (a || p) {
                if (p && !p.standalone)
                    return !1;
                o = e
            } else {
                const T = e.ngModule;
                if (a = Qe(T),
                !a)
                    return !1;
                o = T
            }
            const b = s.has(o);
            if (p) {
                if (b)
                    return !1;
                if (s.add(o),
                p.dependencies) {
                    const T = "function" == typeof p.dependencies ? p.dependencies() : p.dependencies;
                    for (const F of T)
                        Wl(F, t, n, s)
                }
            } else {
                if (!a)
                    return !1;
                {
                    if (null != a.imports && !b) {
                        let F;
                        s.add(o);
                        try {
                            as(a.imports, ee=>{
                                Wl(ee, t, n, s) && (F || (F = []),
                                F.push(ee))
                            }
                            )
                        } finally {}
                        void 0 !== F && Sd(F, t)
                    }
                    if (!b) {
                        const F = Vi(o) || (()=>new o);
                        t.push({
                            provide: o,
                            useFactory: F,
                            deps: Vt
                        }, {
                            provide: bd,
                            useValue: o,
                            multi: !0
                        }, {
                            provide: Gl,
                            useValue: ()=>Zi(o),
                            multi: !0
                        })
                    }
                    const T = a.providers;
                    null == T || b || as(T, ee=>{
                        t.push(ee)
                    }
                    )
                }
            }
            return o !== e && void 0 !== e.providers
        }
        const hv = U({
            provide: String,
            useValue: U
        });
        function Yl(e) {
            return null !== e && "object" == typeof e && hv in e
        }
        function To(e) {
            return "function" == typeof e
        }
        const Kl = new L("Set Injector scope.")
          , Qa = {}
          , pv = {};
        let Zl;
        function qa() {
            return void 0 === Zl && (Zl = new Ed),
            Zl
        }
        class Mo {
        }
        class Md extends Mo {
            constructor(t, n, s, o) {
                super(),
                this.parent = n,
                this.source = s,
                this.scopes = o,
                this.records = new Map,
                this._ngOnDestroyHooks = new Set,
                this._onDestroyHooks = [],
                this._destroyed = !1,
                Ql(t, p=>this.processProvider(p)),
                this.records.set(Cd, zo(void 0, this)),
                o.has("environment") && this.records.set(Mo, zo(void 0, this));
                const a = this.records.get(Kl);
                null != a && "string" == typeof a.value && this.scopes.add(a.value),
                this.injectorDefTypes = new Set(this.get(bd.multi, Vt, $t.Self))
            }
            get destroyed() {
                return this._destroyed
            }
            destroy() {
                this.assertNotDestroyed(),
                this._destroyed = !0;
                try {
                    for (const t of this._ngOnDestroyHooks)
                        t.ngOnDestroy();
                    for (const t of this._onDestroyHooks)
                        t()
                } finally {
                    this.records.clear(),
                    this._ngOnDestroyHooks.clear(),
                    this.injectorDefTypes.clear(),
                    this._onDestroyHooks.length = 0
                }
            }
            onDestroy(t) {
                this._onDestroyHooks.push(t)
            }
            runInContext(t) {
                this.assertNotDestroyed();
                const n = Bo(this)
                  , s = xn(void 0);
                try {
                    return t()
                } finally {
                    Bo(n),
                    xn(s)
                }
            }
            get(t, n=Kn, s=$t.Default) {
                this.assertNotDestroyed();
                const o = Bo(this)
                  , a = xn(void 0);
                try {
                    if (!(s & $t.SkipSelf)) {
                        let b = this.records.get(t);
                        if (void 0 === b) {
                            const T = function yv(e) {
                                return "function" == typeof e || "object" == typeof e && e instanceof L
                            }(t) && k(t);
                            b = T && this.injectableDefInScope(T) ? zo(Jl(t), Qa) : null,
                            this.records.set(t, b)
                        }
                        if (null != b)
                            return this.hydrate(t, b)
                    }
                    return (s & $t.Self ? qa() : this.parent).get(t, n = s & $t.Optional && n === Kn ? null : n)
                } catch (p) {
                    if ("NullInjectorError" === p.name) {
                        if ((p[Ts] = p[Ts] || []).unshift(te(t)),
                        o)
                            throw p;
                        return function wm(e, t, n, s) {
                            const o = e[Ts];
                            throw t[ja] && o.unshift(t[ja]),
                            e.message = function Tm(e, t, n, s=null) {
                                e = e && "\n" === e.charAt(0) && "\u0275" == e.charAt(1) ? e.slice(2) : e;
                                let o = te(t);
                                if (Array.isArray(t))
                                    o = t.map(te).join(" -> ");
                                else if ("object" == typeof t) {
                                    let a = [];
                                    for (let p in t)
                                        if (t.hasOwnProperty(p)) {
                                            let b = t[p];
                                            a.push(p + ":" + ("string" == typeof b ? JSON.stringify(b) : te(b)))
                                        }
                                    o = `{${a.join(", ")}}`
                                }
                                return `${n}${s ? "(" + s + ")" : ""}[${o}]: ${e.replace(za, "\n  ")}`
                            }("\n" + e.message, o, n, s),
                            e.ngTokenPath = o,
                            e[Ts] = null,
                            e
                        }(p, t, "R3InjectorError", this.source)
                    }
                    throw p
                } finally {
                    xn(a),
                    Bo(o)
                }
            }
            resolveInjectorInitializers() {
                const t = Bo(this)
                  , n = xn(void 0);
                try {
                    const s = this.get(Gl.multi, Vt, $t.Self);
                    for (const o of s)
                        o()
                } finally {
                    Bo(t),
                    xn(n)
                }
            }
            toString() {
                const t = []
                  , n = this.records;
                for (const s of n.keys())
                    t.push(te(s));
                return `R3Injector[${t.join(", ")}]`
            }
            assertNotDestroyed() {
                if (this._destroyed)
                    throw new Be(205,!1)
            }
            processProvider(t) {
                let n = To(t = re(t)) ? t : re(t && t.provide);
                const s = function mv(e) {
                    return Yl(e) ? zo(void 0, e.useValue) : zo(Id(e), Qa)
                }(t);
                if (To(t) || !0 !== t.multi)
                    this.records.get(n);
                else {
                    let o = this.records.get(n);
                    o || (o = zo(void 0, Qa, !0),
                    o.factory = ()=>Fl(o.multi),
                    this.records.set(n, o)),
                    n = t,
                    o.multi.push(t)
                }
                this.records.set(n, s)
            }
            hydrate(t, n) {
                return n.value === Qa && (n.value = pv,
                n.value = n.factory()),
                "object" == typeof n.value && n.value && function _v(e) {
                    return null !== e && "object" == typeof e && "function" == typeof e.ngOnDestroy
                }(n.value) && this._ngOnDestroyHooks.add(n.value),
                n.value
            }
            injectableDefInScope(t) {
                if (!t.providedIn)
                    return !1;
                const n = re(t.providedIn);
                return "string" == typeof n ? "any" === n || this.scopes.has(n) : this.injectorDefTypes.has(n)
            }
        }
        function Jl(e) {
            const t = k(e)
              , n = null !== t ? t.factory : Vi(e);
            if (null !== n)
                return n;
            if (e instanceof L)
                throw new Be(204,!1);
            if (e instanceof Function)
                return function gv(e) {
                    const t = e.length;
                    if (t > 0)
                        throw gs(t, "?"),
                        new Be(204,!1);
                    const n = function Ie(e) {
                        const t = e && (e[Tt] || e[an]);
                        if (t) {
                            const n = function gt(e) {
                                if (e.hasOwnProperty("name"))
                                    return e.name;
                                const t = ("" + e).match(/^function\s*([^\s(]+)/);
                                return null === t ? "" : t[1]
                            }(e);
                            return console.warn(`DEPRECATED: DI is instantiating a token "${n}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${n}" class.`),
                            t
                        }
                        return null
                    }(e);
                    return null !== n ? ()=>n.factory(e) : ()=>new e
                }(e);
            throw new Be(204,!1)
        }
        function Id(e, t, n) {
            let s;
            if (To(e)) {
                const o = re(e);
                return Vi(o) || Jl(o)
            }
            if (Yl(e))
                s = ()=>re(e.useValue);
            else if (function Td(e) {
                return !(!e || !e.useFactory)
            }(e))
                s = ()=>e.useFactory(...Fl(e.deps || []));
            else if (function wd(e) {
                return !(!e || !e.useExisting)
            }(e))
                s = ()=>Zi(re(e.useExisting));
            else {
                const o = re(e && (e.useClass || e.provide));
                if (!function vv(e) {
                    return !!e.deps
                }(e))
                    return Vi(o) || Jl(o);
                s = ()=>new o(...Fl(e.deps))
            }
            return s
        }
        function zo(e, t, n=!1) {
            return {
                factory: e,
                value: t,
                multi: n ? [] : void 0
            }
        }
        function Cv(e) {
            return !!e.\u0275providers
        }
        function Ql(e, t) {
            for (const n of e)
                Array.isArray(n) ? Ql(n, t) : Cv(n) ? Ql(n.\u0275providers, t) : t(n)
        }
        class xd {
        }
        class Dv {
            resolveComponentFactory(t) {
                throw function Ev(e) {
                    const t = Error(`No component factory found for ${te(e)}. Did you add it to @NgModule.entryComponents?`);
                    return t.ngComponent = e,
                    t
                }(t)
            }
        }
        let Ea = (()=>{
            class e {
            }
            return e.NULL = new Dv,
            e
        }
        )();
        function Sv() {
            return jo(Qn(), xt())
        }
        function jo(e, t) {
            return new Da(gi(e, t))
        }
        let Da = (()=>{
            class e {
                constructor(n) {
                    this.nativeElement = n
                }
            }
            return e.__NG_ELEMENT_ID__ = Sv,
            e
        }
        )();
        function wv(e) {
            return e instanceof Da ? e.nativeElement : e
        }
        class Pd {
        }
        let Tv = (()=>{
            class e {
            }
            return e.__NG_ELEMENT_ID__ = ()=>function Mv() {
                const e = xt()
                  , n = Nn(Qn().index, e);
                return (Mn(n) ? n : e)[11]
            }(),
            e
        }
        )()
          , Iv = (()=>{
            class e {
            }
            return e.\u0275prov = Xt({
                token: e,
                providedIn: "root",
                factory: ()=>null
            }),
            e
        }
        )();
        class Od {
            constructor(t) {
                this.full = t,
                this.major = t.split(".")[0],
                this.minor = t.split(".")[1],
                this.patch = t.split(".").slice(2).join(".")
            }
        }
        const xv = new Od("14.2.4")
          , ql = {};
        function ic(e) {
            return e.ngOriginalError
        }
        class Sa {
            constructor() {
                this._console = console
            }
            handleError(t) {
                const n = this._findOriginalError(t);
                this._console.error("ERROR", t),
                n && this._console.error("ORIGINAL ERROR", n)
            }
            _findOriginalError(t) {
                let n = t && ic(t);
                for (; n && ic(n); )
                    n = ic(n);
                return n || null
            }
        }
        const sc = new Map;
        let Hv = 0;
        const oc = "__ngContext__";
        function Ms(e, t) {
            Mn(t) ? (e[oc] = t[20],
            function zv(e) {
                sc.set(e[20], e)
            }(t)) : e[oc] = t
        }
        function jd(e) {
            return e.ownerDocument.defaultView
        }
        function Gd(e) {
            return e.ownerDocument
        }
        function Xr(e) {
            return e instanceof Function ? e() : e
        }
        var Rr = (()=>((Rr = Rr || {})[Rr.Important = 1] = "Important",
        Rr[Rr.DashCase = 2] = "DashCase",
        Rr))();
        function lc(e, t) {
            return undefined(e, t)
        }
        function Ta(e) {
            const t = e[3];
            return ti(t) ? t[3] : t
        }
        function cc(e) {
            return Kd(e[13])
        }
        function uc(e) {
            return Kd(e[4])
        }
        function Kd(e) {
            for (; null !== e && !ti(e); )
                e = e[4];
            return e
        }
        function Wo(e, t, n, s, o) {
            if (null != s) {
                let a, p = !1;
                ti(s) ? a = s : Mn(s) && (p = !0,
                s = s[0]);
                const b = ni(s);
                0 === e && null !== n ? null == o ? eh(t, n, b) : Io(t, n, b, o || null, !0) : 1 === e && null !== n ? Io(t, n, b, o || null, !0) : 2 === e ? function ah(e, t, n) {
                    const s = Xa(e, t);
                    s && function p_(e, t, n, s) {
                        e.removeChild(t, n, s)
                    }(e, s, t, n)
                }(t, b, p) : 3 === e && t.destroyNode(b),
                null != a && function v_(e, t, n, s, o) {
                    const a = n[7];
                    a !== ni(n) && Wo(t, e, s, a, o);
                    for (let b = 10; b < n.length; b++) {
                        const T = n[b];
                        Ma(T[1], T, e, t, s, a)
                    }
                }(t, e, a, n, o)
            }
        }
        function hc(e, t, n) {
            return e.createElement(t, n)
        }
        function Jd(e, t) {
            const n = e[9]
              , s = n.indexOf(t)
              , o = t[3];
            512 & t[2] && (t[2] &= -513,
            Gi(o, -1)),
            n.splice(s, 1)
        }
        function fc(e, t) {
            if (e.length <= 10)
                return;
            const n = 10 + t
              , s = e[n];
            if (s) {
                const o = s[17];
                null !== o && o !== e && Jd(o, s),
                t > 0 && (e[n - 1][4] = s[4]);
                const a = Pi(e, 10 + t);
                !function o_(e, t) {
                    Ma(e, t, t[11], 2, null, null),
                    t[0] = null,
                    t[6] = null
                }(s[1], s);
                const p = a[19];
                null !== p && p.detachView(a[1]),
                s[3] = null,
                s[4] = null,
                s[2] &= -65
            }
            return s
        }
        function Qd(e, t) {
            if (!(128 & t[2])) {
                const n = t[11];
                n.destroyNode && Ma(e, t, n, 3, null, null),
                function c_(e) {
                    let t = e[13];
                    if (!t)
                        return pc(e[1], e);
                    for (; t; ) {
                        let n = null;
                        if (Mn(t))
                            n = t[13];
                        else {
                            const s = t[10];
                            s && (n = s)
                        }
                        if (!n) {
                            for (; t && !t[4] && t !== e; )
                                Mn(t) && pc(t[1], t),
                                t = t[3];
                            null === t && (t = e),
                            Mn(t) && pc(t[1], t),
                            n = t && t[4]
                        }
                        t = n
                    }
                }(t)
            }
        }
        function pc(e, t) {
            if (!(128 & t[2])) {
                t[2] &= -65,
                t[2] |= 128,
                function f_(e, t) {
                    let n;
                    if (null != e && null != (n = e.destroyHooks))
                        for (let s = 0; s < n.length; s += 2) {
                            const o = t[n[s]];
                            if (!(o instanceof ct)) {
                                const a = n[s + 1];
                                if (Array.isArray(a))
                                    for (let p = 0; p < a.length; p += 2) {
                                        const b = o[a[p]]
                                          , T = a[p + 1];
                                        try {
                                            T.call(b)
                                        } finally {}
                                    }
                                else
                                    try {
                                        a.call(o)
                                    } finally {}
                            }
                        }
                }(e, t),
                function h_(e, t) {
                    const n = e.cleanup
                      , s = t[7];
                    let o = -1;
                    if (null !== n)
                        for (let a = 0; a < n.length - 1; a += 2)
                            if ("string" == typeof n[a]) {
                                const p = n[a + 1]
                                  , b = "function" == typeof p ? p(t) : ni(t[p])
                                  , T = s[o = n[a + 2]]
                                  , F = n[a + 3];
                                "boolean" == typeof F ? b.removeEventListener(n[a], T, F) : F >= 0 ? s[o = F]() : s[o = -F].unsubscribe(),
                                a += 2
                            } else {
                                const p = s[o = n[a + 1]];
                                n[a].call(p)
                            }
                    if (null !== s) {
                        for (let a = o + 1; a < s.length; a++)
                            (0,
                            s[a])();
                        t[7] = null
                    }
                }(e, t),
                1 === t[1].type && t[11].destroy();
                const n = t[17];
                if (null !== n && ti(t[3])) {
                    n !== t[3] && Jd(n, t);
                    const s = t[19];
                    null !== s && s.detachView(e)
                }
                !function jv(e) {
                    sc.delete(e[20])
                }(t)
            }
        }
        function qd(e, t, n) {
            return function Xd(e, t, n) {
                let s = t;
                for (; null !== s && 40 & s.type; )
                    s = (t = s).parent;
                if (null === s)
                    return n[0];
                if (2 & s.flags) {
                    const o = e.data[s.directiveStart].encapsulation;
                    if (o === dt.None || o === dt.Emulated)
                        return null
                }
                return gi(s, n)
            }(e, t.parent, n)
        }
        function Io(e, t, n, s, o) {
            e.insertBefore(t, n, s, o)
        }
        function eh(e, t, n) {
            e.appendChild(t, n)
        }
        function th(e, t, n, s, o) {
            null !== s ? Io(e, t, n, s, o) : eh(e, t, n)
        }
        function Xa(e, t) {
            return e.parentNode(t)
        }
        function nh(e, t, n) {
            return sh(e, t, n)
        }
        let sh = function ih(e, t, n) {
            return 40 & e.type ? gi(e, n) : null
        };
        function el(e, t, n, s) {
            const o = qd(e, s, t)
              , a = t[11]
              , b = nh(s.parent || t[6], s, t);
            if (null != o)
                if (Array.isArray(n))
                    for (let T = 0; T < n.length; T++)
                        th(a, o, n[T], b, !1);
                else
                    th(a, o, n, b, !1)
        }
        function tl(e, t) {
            if (null !== t) {
                const n = t.type;
                if (3 & n)
                    return gi(t, e);
                if (4 & n)
                    return mc(-1, e[t.index]);
                if (8 & n) {
                    const s = t.child;
                    if (null !== s)
                        return tl(e, s);
                    {
                        const o = e[t.index];
                        return ti(o) ? mc(-1, o) : ni(o)
                    }
                }
                if (32 & n)
                    return lc(t, e)() || ni(e[t.index]);
                {
                    const s = oh(e, t);
                    return null !== s ? Array.isArray(s) ? s[0] : tl(Ta(e[16]), s) : tl(e, t.next)
                }
            }
            return null
        }
        function oh(e, t) {
            return null !== t ? e[16][6].projection[t.projection] : null
        }
        function mc(e, t) {
            const n = 10 + e + 1;
            if (n < t.length) {
                const s = t[n]
                  , o = s[1].firstChild;
                if (null !== o)
                    return tl(s, o)
            }
            return t[7]
        }
        function vc(e, t, n, s, o, a, p) {
            for (; null != n; ) {
                const b = s[n.index]
                  , T = n.type;
                if (p && 0 === t && (b && Ms(ni(b), s),
                n.flags |= 4),
                64 != (64 & n.flags))
                    if (8 & T)
                        vc(e, t, n.child, s, o, a, !1),
                        Wo(t, e, o, b, a);
                    else if (32 & T) {
                        const F = lc(n, s);
                        let ee;
                        for (; ee = F(); )
                            Wo(t, e, o, ee, a);
                        Wo(t, e, o, b, a)
                    } else
                        16 & T ? lh(e, t, s, n, o, a) : Wo(t, e, o, b, a);
                n = p ? n.projectionNext : n.next
            }
        }
        function Ma(e, t, n, s, o, a) {
            vc(n, s, e.firstChild, t, o, a, !1)
        }
        function lh(e, t, n, s, o, a) {
            const p = n[16]
              , T = p[6].projection[s.projection];
            if (Array.isArray(T))
                for (let F = 0; F < T.length; F++)
                    Wo(t, e, o, T[F], a);
            else
                vc(e, t, T, p[3], o, a, !0)
        }
        function ch(e, t, n) {
            e.setAttribute(t, "style", n)
        }
        function _c(e, t, n) {
            "" === n ? e.removeAttribute(t, "class") : e.setAttribute(t, "class", n)
        }
        function uh(e, t, n) {
            let s = e.length;
            for (; ; ) {
                const o = e.indexOf(t, n);
                if (-1 === o)
                    return o;
                if (0 === o || e.charCodeAt(o - 1) <= 32) {
                    const a = t.length;
                    if (o + a === s || e.charCodeAt(o + a) <= 32)
                        return o
                }
                n = o + 1
            }
        }
        const dh = "ng-template";
        function y_(e, t, n) {
            let s = 0;
            for (; s < e.length; ) {
                let o = e[s++];
                if (n && "class" === o) {
                    if (o = e[s],
                    -1 !== uh(o.toLowerCase(), t, 0))
                        return !0
                } else if (1 === o) {
                    for (; s < e.length && "string" == typeof (o = e[s++]); )
                        if (o.toLowerCase() === t)
                            return !0;
                    return !1
                }
            }
            return !1
        }
        function hh(e) {
            return 4 === e.type && e.value !== dh
        }
        function C_(e, t, n) {
            return t === (4 !== e.type || n ? e.value : dh)
        }
        function b_(e, t, n) {
            let s = 4;
            const o = e.attrs || []
              , a = function S_(e) {
                for (let t = 0; t < e.length; t++)
                    if (Js(e[t]))
                        return t;
                return e.length
            }(o);
            let p = !1;
            for (let b = 0; b < t.length; b++) {
                const T = t[b];
                if ("number" != typeof T) {
                    if (!p)
                        if (4 & s) {
                            if (s = 2 | 1 & s,
                            "" !== T && !C_(e, T, n) || "" === T && 1 === t.length) {
                                if (br(s))
                                    return !1;
                                p = !0
                            }
                        } else {
                            const F = 8 & s ? T : t[++b];
                            if (8 & s && null !== e.attrs) {
                                if (!y_(e.attrs, F, n)) {
                                    if (br(s))
                                        return !1;
                                    p = !0
                                }
                                continue
                            }
                            const ge = E_(8 & s ? "class" : T, o, hh(e), n);
                            if (-1 === ge) {
                                if (br(s))
                                    return !1;
                                p = !0;
                                continue
                            }
                            if ("" !== F) {
                                let Ue;
                                Ue = ge > a ? "" : o[ge + 1].toLowerCase();
                                const tt = 8 & s ? Ue : null;
                                if (tt && -1 !== uh(tt, F, 0) || 2 & s && F !== Ue) {
                                    if (br(s))
                                        return !1;
                                    p = !0
                                }
                            }
                        }
                } else {
                    if (!p && !br(s) && !br(T))
                        return !1;
                    if (p && br(T))
                        continue;
                    p = !1,
                    s = T | 1 & s
                }
            }
            return br(s) || p
        }
        function br(e) {
            return 0 == (1 & e)
        }
        function E_(e, t, n, s) {
            if (null === t)
                return -1;
            let o = 0;
            if (s || !n) {
                let a = !1;
                for (; o < t.length; ) {
                    const p = t[o];
                    if (p === e)
                        return o;
                    if (3 === p || 6 === p)
                        a = !0;
                    else {
                        if (1 === p || 2 === p) {
                            let b = t[++o];
                            for (; "string" == typeof b; )
                                b = t[++o];
                            continue
                        }
                        if (4 === p)
                            break;
                        if (0 === p) {
                            o += 4;
                            continue
                        }
                    }
                    o += a ? 1 : 2
                }
                return -1
            }
            return function w_(e, t) {
                let n = e.indexOf(4);
                if (n > -1)
                    for (n++; n < e.length; ) {
                        const s = e[n];
                        if ("number" == typeof s)
                            return -1;
                        if (s === t)
                            return n;
                        n++
                    }
                return -1
            }(t, e)
        }
        function fh(e, t, n=!1) {
            for (let s = 0; s < t.length; s++)
                if (b_(e, t[s], n))
                    return !0;
            return !1
        }
        function T_(e, t) {
            e: for (let n = 0; n < t.length; n++) {
                const s = t[n];
                if (e.length === s.length) {
                    for (let o = 0; o < e.length; o++)
                        if (e[o] !== s[o])
                            continue e;
                    return !0
                }
            }
            return !1
        }
        function ph(e, t) {
            return e ? ":not(" + t.trim() + ")" : t
        }
        function M_(e) {
            let t = e[0]
              , n = 1
              , s = 2
              , o = ""
              , a = !1;
            for (; n < e.length; ) {
                let p = e[n];
                if ("string" == typeof p)
                    if (2 & s) {
                        const b = e[++n];
                        o += "[" + p + (b.length > 0 ? '="' + b + '"' : "") + "]"
                    } else
                        8 & s ? o += "." + p : 4 & s && (o += " " + p);
                else
                    "" !== o && !br(p) && (t += ph(a, o),
                    o = ""),
                    s = p,
                    a = a || !br(s);
                n++
            }
            return "" !== o && (t += ph(a, o)),
            t
        }
        const Fn = {};
        function gh(e) {
            mh(On(), xt(), V() + e, !1)
        }
        function mh(e, t, n, s) {
            if (!s)
                if (3 == (3 & t[2])) {
                    const a = e.preOrderCheckHooks;
                    null !== a && Ct(t, a, n)
                } else {
                    const a = e.preOrderHooks;
                    null !== a && Nt(t, a, 0, n)
                }
            X(n)
        }
        function Ch(e, t=null, n=null, s) {
            const o = bh(e, t, n, s);
            return o.resolveInjectorInitializers(),
            o
        }
        function bh(e, t=null, n=null, s, o=new Set) {
            const a = [n || Vt, dv(e)];
            return s = s || ("object" == typeof e ? void 0 : te(e)),
            new Md(a,t || qa(),s || null,o)
        }
        let xo = (()=>{
            class e {
                static create(n, s) {
                    if (Array.isArray(n))
                        return Ch({
                            name: ""
                        }, s, n, "");
                    {
                        const o = n.name ?? "";
                        return Ch({
                            name: o
                        }, n.parent, n.providers, o)
                    }
                }
            }
            return e.THROW_IF_NOT_FOUND = Kn,
            e.NULL = new Ed,
            e.\u0275prov = Xt({
                token: e,
                providedIn: "any",
                factory: ()=>Zi(Cd)
            }),
            e.__NG_ELEMENT_ID__ = -1,
            e
        }
        )();
        function Ko(e, t=$t.Default) {
            const n = xt();
            return null === n ? Zi(e, t) : No(Qn(), n, re(e), t)
        }
        function Ih() {
            throw new Error("invalid")
        }
        function il(e, t) {
            return e << 17 | t << 2
        }
        function Er(e) {
            return e >> 17 & 32767
        }
        function Dc(e) {
            return 2 | e
        }
        function eo(e) {
            return (131068 & e) >> 2
        }
        function Sc(e, t) {
            return -131069 & e | t << 2
        }
        function wc(e) {
            return 1 | e
        }
        function Bh(e, t) {
            const n = e.contentQueries;
            if (null !== n)
                for (let s = 0; s < n.length; s += 2) {
                    const o = n[s]
                      , a = n[s + 1];
                    if (-1 !== a) {
                        const p = e.data[a];
                        _(o),
                        p.contentQueries(2, t[a], a)
                    }
                }
        }
        function ol(e, t, n, s, o, a, p, b, T, F, ee) {
            const ge = t.blueprint.slice();
            return ge[0] = o,
            ge[2] = 76 | s,
            (null !== ee || e && 1024 & e[2]) && (ge[2] |= 1024),
            xr(ge),
            ge[3] = ge[15] = e,
            ge[8] = n,
            ge[10] = p || e && e[10],
            ge[11] = b || e && e[11],
            ge[12] = T || e && e[12] || null,
            ge[9] = F || e && e[9] || null,
            ge[6] = a,
            ge[20] = function Uv() {
                return Hv++
            }(),
            ge[21] = ee,
            ge[16] = 2 == t.type ? e[16] : ge,
            ge
        }
        function Zo(e, t, n, s, o) {
            let a = e.data[t];
            if (null === a)
                a = function Lc(e, t, n, s, o) {
                    const a = R()
                      , p = ne()
                      , T = e.data[t] = function cy(e, t, n, s, o, a) {
                        return {
                            type: n,
                            index: s,
                            insertBeforeIndex: null,
                            injectorIndex: t ? t.injectorIndex : -1,
                            directiveStart: -1,
                            directiveEnd: -1,
                            directiveStylingLast: -1,
                            propertyBindings: null,
                            flags: 0,
                            providerIndexes: 0,
                            value: o,
                            attrs: a,
                            mergedAttrs: null,
                            localNames: null,
                            initialInputs: void 0,
                            inputs: null,
                            outputs: null,
                            tViews: null,
                            next: null,
                            projectionNext: null,
                            child: null,
                            parent: t,
                            projection: null,
                            styles: null,
                            stylesWithoutHost: null,
                            residualStyles: void 0,
                            classes: null,
                            classesWithoutHost: null,
                            residualClasses: void 0,
                            classBindings: 0,
                            styleBindings: 0
                        }
                    }(0, p ? a : a && a.parent, n, t, s, o);
                    return null === e.firstChild && (e.firstChild = T),
                    null !== a && (p ? null == a.child && null !== T.parent && (a.child = T) : null === a.next && (a.next = T)),
                    T
                }(e, t, n, s, o),
                function cr() {
                    return vn.lFrame.inI18n
                }() && (a.flags |= 64);
            else if (64 & a.type) {
                a.type = n,
                a.value = s,
                a.attrs = o;
                const p = function P() {
                    const e = vn.lFrame
                      , t = e.currentTNode;
                    return e.isParent ? t : t.parent
                }();
                a.injectorIndex = null === p ? -1 : p.injectorIndex
            }
            return I(a, !0),
            a
        }
        function Jo(e, t, n, s) {
            if (0 === n)
                return -1;
            const o = t.length;
            for (let a = 0; a < n; a++)
                t.push(s),
                e.blueprint.push(s),
                e.data.push(null);
            return o
        }
        function Rc(e, t, n) {
            B(t);
            try {
                const s = e.viewQuery;
                null !== s && Uc(1, s, n);
                const o = e.template;
                null !== o && $h(e, t, o, 1, n),
                e.firstCreatePass && (e.firstCreatePass = !1),
                e.staticContentQueries && Bh(e, t),
                e.staticViewQueries && Uc(2, e.viewQuery, n);
                const a = e.components;
                null !== a && function oy(e, t) {
                    for (let n = 0; n < t.length; n++)
                        wy(e, t[n])
                }(t, a)
            } catch (s) {
                throw e.firstCreatePass && (e.incompleteFirstPass = !0,
                e.firstCreatePass = !1),
                s
            } finally {
                t[2] &= -5,
                m()
            }
        }
        function al(e, t, n, s) {
            const o = t[2];
            if (128 != (128 & o)) {
                B(t);
                try {
                    xr(t),
                    function vr(e) {
                        return vn.lFrame.bindingIndex = e
                    }(e.bindingStartIndex),
                    null !== n && $h(e, t, n, 2, s);
                    const p = 3 == (3 & o);
                    if (p) {
                        const F = e.preOrderCheckHooks;
                        null !== F && Ct(t, F, null)
                    } else {
                        const F = e.preOrderHooks;
                        null !== F && Nt(t, F, 0, null),
                        Ut(t, 0)
                    }
                    if (function Dy(e) {
                        for (let t = cc(e); null !== t; t = uc(t)) {
                            if (!t[2])
                                continue;
                            const n = t[9];
                            for (let s = 0; s < n.length; s++) {
                                const o = n[s]
                                  , a = o[3];
                                0 == (512 & o[2]) && Gi(a, 1),
                                o[2] |= 512
                            }
                        }
                    }(t),
                    function Ey(e) {
                        for (let t = cc(e); null !== t; t = uc(t))
                            for (let n = 10; n < t.length; n++) {
                                const s = t[n]
                                  , o = s[1];
                                fs(s) && al(o, s, o.template, s[8])
                            }
                    }(t),
                    null !== e.contentQueries && Bh(e, t),
                    p) {
                        const F = e.contentCheckHooks;
                        null !== F && Ct(t, F)
                    } else {
                        const F = e.contentHooks;
                        null !== F && Nt(t, F, 1),
                        Ut(t, 1)
                    }
                    !function sy(e, t) {
                        const n = e.hostBindingOpCodes;
                        if (null !== n)
                            try {
                                for (let s = 0; s < n.length; s++) {
                                    const o = n[s];
                                    if (o < 0)
                                        X(~o);
                                    else {
                                        const a = o
                                          , p = n[++s]
                                          , b = n[++s];
                                        mo(p, a),
                                        b(2, t[a])
                                    }
                                }
                            } finally {
                                X(-1)
                            }
                    }(e, t);
                    const b = e.components;
                    null !== b && function ry(e, t) {
                        for (let n = 0; n < t.length; n++)
                            Sy(e, t[n])
                    }(t, b);
                    const T = e.viewQuery;
                    if (null !== T && Uc(2, T, s),
                    p) {
                        const F = e.viewCheckHooks;
                        null !== F && Ct(t, F)
                    } else {
                        const F = e.viewHooks;
                        null !== F && Nt(t, F, 2),
                        Ut(t, 2)
                    }
                    !0 === e.firstUpdatePass && (e.firstUpdatePass = !1),
                    t[2] &= -41,
                    512 & t[2] && (t[2] &= -513,
                    Gi(t[3], -1))
                } finally {
                    m()
                }
            }
        }
        function $h(e, t, n, s, o) {
            const a = V()
              , p = 2 & s;
            try {
                X(-1),
                p && t.length > 22 && mh(e, t, 22, !1),
                n(s, o)
            } finally {
                X(a)
            }
        }
        function Hh(e, t, n) {
            if (Mi(t)) {
                const o = t.directiveEnd;
                for (let a = t.directiveStart; a < o; a++) {
                    const p = e.data[a];
                    p.contentQueries && p.contentQueries(1, n[a], a)
                }
            }
        }
        function Nc(e, t, n) {
            !Ii() || (function py(e, t, n, s) {
                const o = n.directiveStart
                  , a = n.directiveEnd;
                e.firstCreatePass || Gr(n, t),
                Ms(s, t);
                const p = n.initialInputs;
                for (let b = o; b < a; b++) {
                    const T = e.data[b]
                      , F = fi(T);
                    F && yy(t, n, T);
                    const ee = Kr(t, e, b, n);
                    Ms(ee, t),
                    null !== p && Cy(0, b - o, ee, T, 0, p),
                    F && (Nn(n.index, t)[8] = ee)
                }
            }(e, t, n, gi(n, t)),
            128 == (128 & n.flags) && function gy(e, t, n) {
                const s = n.directiveStart
                  , o = n.directiveEnd
                  , a = n.index
                  , p = function so() {
                    return vn.lFrame.currentDirectiveIndex
                }();
                try {
                    X(a);
                    for (let b = s; b < o; b++) {
                        const T = e.data[b]
                          , F = t[b];
                        zr(b),
                        (null !== T.hostBindings || 0 !== T.hostVars || null !== T.hostAttrs) && Kh(T, F)
                    }
                } finally {
                    X(-1),
                    zr(p)
                }
            }(e, t, n))
        }
        function Fc(e, t, n=gi) {
            const s = t.localNames;
            if (null !== s) {
                let o = t.index + 1;
                for (let a = 0; a < s.length; a += 2) {
                    const p = s[a + 1]
                      , b = -1 === p ? n(t, e) : e[p];
                    e[o++] = b
                }
            }
        }
        function Uh(e) {
            const t = e.tView;
            return null === t || t.incompleteFirstPass ? e.tView = kc(1, null, e.template, e.decls, e.vars, e.directiveDefs, e.pipeDefs, e.viewQuery, e.schemas, e.consts) : t
        }
        function kc(e, t, n, s, o, a, p, b, T, F) {
            const ee = 22 + s
              , ge = ee + o
              , Ue = function ay(e, t) {
                const n = [];
                for (let s = 0; s < t; s++)
                    n.push(s < e ? null : Fn);
                return n
            }(ee, ge)
              , tt = "function" == typeof F ? F() : F;
            return Ue[1] = {
                type: e,
                blueprint: Ue,
                template: n,
                queries: null,
                viewQuery: b,
                declTNode: t,
                data: Ue.slice().fill(null, ee),
                bindingStartIndex: ee,
                expandoStartIndex: ge,
                hostBindingOpCodes: null,
                firstCreatePass: !0,
                firstUpdatePass: !0,
                staticViewQueries: !1,
                staticContentQueries: !1,
                preOrderHooks: null,
                preOrderCheckHooks: null,
                contentHooks: null,
                contentCheckHooks: null,
                viewHooks: null,
                viewCheckHooks: null,
                destroyHooks: null,
                cleanup: null,
                contentQueries: null,
                components: null,
                directiveRegistry: "function" == typeof a ? a() : a,
                pipeRegistry: "function" == typeof p ? p() : p,
                firstChild: null,
                schemas: T,
                consts: tt,
                incompleteFirstPass: !1
            }
        }
        function zh(e, t, n, s) {
            const o = Xh(t);
            null === n ? o.push(s) : (o.push(n),
            e.firstCreatePass && ef(e).push(s, o.length - 1))
        }
        function jh(e, t, n) {
            for (let s in e)
                if (e.hasOwnProperty(s)) {
                    const o = e[s];
                    (n = null === n ? {} : n).hasOwnProperty(s) ? n[s].push(t, o) : n[s] = [t, o]
                }
            return n
        }
        function Gh(e, t) {
            const s = t.directiveEnd
              , o = e.data
              , a = t.attrs
              , p = [];
            let b = null
              , T = null;
            for (let F = t.directiveStart; F < s; F++) {
                const ee = o[F]
                  , ge = ee.inputs
                  , Ue = null === a || hh(t) ? null : by(ge, a);
                p.push(Ue),
                b = jh(ge, F, b),
                T = jh(ee.outputs, F, T)
            }
            null !== b && (b.hasOwnProperty("class") && (t.flags |= 16),
            b.hasOwnProperty("style") && (t.flags |= 32)),
            t.initialInputs = p,
            t.inputs = b,
            t.outputs = T
        }
        function ir(e, t, n, s, o, a, p, b) {
            const T = gi(t, n);
            let ee, F = t.inputs;
            !b && null != F && (ee = F[s]) ? (zc(e, n, ee, s, o),
            vs(t) && Wh(n, t.index)) : 3 & t.type && (s = function uy(e) {
                return "class" === e ? "className" : "for" === e ? "htmlFor" : "formaction" === e ? "formAction" : "innerHtml" === e ? "innerHTML" : "readonly" === e ? "readOnly" : "tabindex" === e ? "tabIndex" : e
            }(s),
            o = null != p ? p(o, t.value || "", s) : o,
            a.setProperty(T, s, o))
        }
        function Wh(e, t) {
            const n = Nn(t, e);
            16 & n[2] || (n[2] |= 32)
        }
        function Vc(e, t, n, s) {
            let o = !1;
            if (Ii()) {
                const a = function my(e, t, n) {
                    const s = e.directiveRegistry;
                    let o = null;
                    if (s)
                        for (let a = 0; a < s.length; a++) {
                            const p = s[a];
                            fh(n, p.selectors, !1) && (o || (o = []),
                            Gs(Gr(n, t), e, p.type),
                            fi(p) ? (Zh(e, n),
                            o.unshift(p)) : o.push(p))
                        }
                    return o
                }(e, t, n)
                  , p = null === s ? null : {
                    "": -1
                };
                if (null !== a) {
                    o = !0,
                    Jh(n, e.data.length, a.length);
                    for (let ee = 0; ee < a.length; ee++) {
                        const ge = a[ee];
                        ge.providersResolver && ge.providersResolver(ge)
                    }
                    let b = !1
                      , T = !1
                      , F = Jo(e, t, a.length, null);
                    for (let ee = 0; ee < a.length; ee++) {
                        const ge = a[ee];
                        n.mergedAttrs = ri(n.mergedAttrs, ge.hostAttrs),
                        Qh(e, n, t, F, ge),
                        _y(F, ge, p),
                        null !== ge.contentQueries && (n.flags |= 8),
                        (null !== ge.hostBindings || null !== ge.hostAttrs || 0 !== ge.hostVars) && (n.flags |= 128);
                        const Ue = ge.type.prototype;
                        !b && (Ue.ngOnChanges || Ue.ngOnInit || Ue.ngDoCheck) && ((e.preOrderHooks || (e.preOrderHooks = [])).push(n.index),
                        b = !0),
                        !T && (Ue.ngOnChanges || Ue.ngDoCheck) && ((e.preOrderCheckHooks || (e.preOrderCheckHooks = [])).push(n.index),
                        T = !0),
                        F++
                    }
                    Gh(e, n)
                }
                p && function vy(e, t, n) {
                    if (t) {
                        const s = e.localNames = [];
                        for (let o = 0; o < t.length; o += 2) {
                            const a = n[t[o + 1]];
                            if (null == a)
                                throw new Be(-301,!1);
                            s.push(t[o], a)
                        }
                    }
                }(n, s, p)
            }
            return n.mergedAttrs = ri(n.mergedAttrs, n.attrs),
            o
        }
        function Yh(e, t, n, s, o, a) {
            const p = a.hostBindings;
            if (p) {
                let b = e.hostBindingOpCodes;
                null === b && (b = e.hostBindingOpCodes = []);
                const T = ~t.index;
                (function fy(e) {
                    let t = e.length;
                    for (; t > 0; ) {
                        const n = e[--t];
                        if ("number" == typeof n && n < 0)
                            return n
                    }
                    return 0
                }
                )(b) != T && b.push(T),
                b.push(s, o, p)
            }
        }
        function Kh(e, t) {
            null !== e.hostBindings && e.hostBindings(1, t)
        }
        function Zh(e, t) {
            t.flags |= 2,
            (e.components || (e.components = [])).push(t.index)
        }
        function _y(e, t, n) {
            if (n) {
                if (t.exportAs)
                    for (let s = 0; s < t.exportAs.length; s++)
                        n[t.exportAs[s]] = e;
                fi(t) && (n[""] = e)
            }
        }
        function Jh(e, t, n) {
            e.flags |= 1,
            e.directiveStart = t,
            e.directiveEnd = t + n,
            e.providerIndexes = t
        }
        function Qh(e, t, n, s, o) {
            e.data[s] = o;
            const a = o.factory || (o.factory = Vi(o.type))
              , p = new ct(a,fi(o),Ko);
            e.blueprint[s] = p,
            n[s] = p,
            Yh(e, t, 0, s, Jo(e, n, o.hostVars, Fn), o)
        }
        function yy(e, t, n) {
            const s = gi(t, e)
              , o = Uh(n)
              , a = e[10]
              , p = ll(e, ol(e, o, null, n.onPush ? 32 : 16, s, t, a, a.createRenderer(s, n), null, null, null));
            e[t.index] = p
        }
        function Nr(e, t, n, s, o, a) {
            const p = gi(e, t);
            !function Bc(e, t, n, s, o, a, p) {
                if (null == a)
                    e.removeAttribute(t, o, n);
                else {
                    const b = null == p ? $e(a) : p(a, s || "", o);
                    e.setAttribute(t, o, b, n)
                }
            }(t[11], p, a, e.value, n, s, o)
        }
        function Cy(e, t, n, s, o, a) {
            const p = a[t];
            if (null !== p) {
                const b = s.setInput;
                for (let T = 0; T < p.length; ) {
                    const F = p[T++]
                      , ee = p[T++]
                      , ge = p[T++];
                    null !== b ? s.setInput(n, ge, F, ee) : n[ee] = ge
                }
            }
        }
        function by(e, t) {
            let n = null
              , s = 0;
            for (; s < t.length; ) {
                const o = t[s];
                if (0 !== o)
                    if (5 !== o) {
                        if ("number" == typeof o)
                            break;
                        e.hasOwnProperty(o) && (null === n && (n = []),
                        n.push(o, e[o], t[s + 1])),
                        s += 2
                    } else
                        s += 2;
                else
                    s += 4
            }
            return n
        }
        function qh(e, t, n, s) {
            return new Array(e,!0,!1,t,null,0,s,n,null,null)
        }
        function Sy(e, t) {
            const n = Nn(t, e);
            if (fs(n)) {
                const s = n[1];
                48 & n[2] ? al(s, n, s.template, n[8]) : n[5] > 0 && $c(n)
            }
        }
        function $c(e) {
            for (let s = cc(e); null !== s; s = uc(s))
                for (let o = 10; o < s.length; o++) {
                    const a = s[o];
                    if (fs(a))
                        if (512 & a[2]) {
                            const p = a[1];
                            al(p, a, p.template, a[8])
                        } else
                            a[5] > 0 && $c(a)
                }
            const n = e[1].components;
            if (null !== n)
                for (let s = 0; s < n.length; s++) {
                    const o = Nn(n[s], e);
                    fs(o) && o[5] > 0 && $c(o)
                }
        }
        function wy(e, t) {
            const n = Nn(t, e)
              , s = n[1];
            (function Ty(e, t) {
                for (let n = t.length; n < e.blueprint.length; n++)
                    t.push(e.blueprint[n])
            }
            )(s, n),
            Rc(s, n, n[8])
        }
        function ll(e, t) {
            return e[13] ? e[14][4] = t : e[13] = t,
            e[14] = t,
            t
        }
        function Hc(e) {
            for (; e; ) {
                e[2] |= 32;
                const t = Ta(e);
                if (Xi(e) && !t)
                    return e;
                e = t
            }
            return null
        }
        function cl(e, t, n, s=!0) {
            const o = t[10];
            o.begin && o.begin();
            try {
                al(e, t, e.template, n)
            } catch (p) {
                throw s && nf(t, p),
                p
            } finally {
                o.end && o.end()
            }
        }
        function Uc(e, t, n) {
            _(0),
            t(e, n)
        }
        function Xh(e) {
            return e[7] || (e[7] = [])
        }
        function ef(e) {
            return e.cleanup || (e.cleanup = [])
        }
        function nf(e, t) {
            const n = e[9]
              , s = n ? n.get(Sa, null) : null;
            s && s.handleError(t)
        }
        function zc(e, t, n, s, o) {
            for (let a = 0; a < n.length; ) {
                const p = n[a++]
                  , b = n[a++]
                  , T = t[p]
                  , F = e.data[p];
                null !== F.setInput ? F.setInput(T, o, s, b) : T[b] = o
            }
        }
        function to(e, t, n) {
            const s = Qi(t, e);
            !function Zd(e, t, n) {
                e.setValue(t, n)
            }(e[11], s, n)
        }
        function ul(e, t, n) {
            let s = n ? e.styles : null
              , o = n ? e.classes : null
              , a = 0;
            if (null !== t)
                for (let p = 0; p < t.length; p++) {
                    const b = t[p];
                    "number" == typeof b ? a = b : 1 == a ? o = le(o, b) : 2 == a && (s = le(s, b + ": " + t[++p] + ";"))
                }
            n ? e.styles = s : e.stylesWithoutHost = s,
            n ? e.classes = o : e.classesWithoutHost = o
        }
        function dl(e, t, n, s, o=!1) {
            for (; null !== n; ) {
                const a = t[n.index];
                if (null !== a && s.push(ni(a)),
                ti(a))
                    for (let b = 10; b < a.length; b++) {
                        const T = a[b]
                          , F = T[1].firstChild;
                        null !== F && dl(T[1], T, F, s)
                    }
                const p = n.type;
                if (8 & p)
                    dl(e, t, n.child, s);
                else if (32 & p) {
                    const b = lc(n, t);
                    let T;
                    for (; T = b(); )
                        s.push(T)
                } else if (16 & p) {
                    const b = oh(t, n);
                    if (Array.isArray(b))
                        s.push(...b);
                    else {
                        const T = Ta(t[16]);
                        dl(T[1], T, b, s, !0)
                    }
                }
                n = o ? n.projectionNext : n.next
            }
            return s
        }
        class Ia {
            constructor(t, n) {
                this._lView = t,
                this._cdRefInjectingView = n,
                this._appRef = null,
                this._attachedToViewContainer = !1
            }
            get rootNodes() {
                const t = this._lView
                  , n = t[1];
                return dl(n, t, n.firstChild, [])
            }
            get context() {
                return this._lView[8]
            }
            set context(t) {
                this._lView[8] = t
            }
            get destroyed() {
                return 128 == (128 & this._lView[2])
            }
            destroy() {
                if (this._appRef)
                    this._appRef.detachView(this);
                else if (this._attachedToViewContainer) {
                    const t = this._lView[3];
                    if (ti(t)) {
                        const n = t[8]
                          , s = n ? n.indexOf(this) : -1;
                        s > -1 && (fc(t, s),
                        Pi(n, s))
                    }
                    this._attachedToViewContainer = !1
                }
                Qd(this._lView[1], this._lView)
            }
            onDestroy(t) {
                zh(this._lView[1], this._lView, null, t)
            }
            markForCheck() {
                Hc(this._cdRefInjectingView || this._lView)
            }
            detach() {
                this._lView[2] &= -65
            }
            reattach() {
                this._lView[2] |= 64
            }
            detectChanges() {
                cl(this._lView[1], this._lView, this.context)
            }
            checkNoChanges() {}
            attachToViewContainerRef() {
                if (this._appRef)
                    throw new Be(902,!1);
                this._attachedToViewContainer = !0
            }
            detachFromAppRef() {
                this._appRef = null,
                function l_(e, t) {
                    Ma(e, t, t[11], 2, null, null)
                }(this._lView[1], this._lView)
            }
            attachToAppRef(t) {
                if (this._attachedToViewContainer)
                    throw new Be(902,!1);
                this._appRef = t
            }
        }
        class My extends Ia {
            constructor(t) {
                super(t),
                this._view = t
            }
            detectChanges() {
                const t = this._view;
                cl(t[1], t, t[8], !1)
            }
            checkNoChanges() {}
            get context() {
                return null
            }
        }
        class jc extends Ea {
            constructor(t) {
                super(),
                this.ngModule = t
            }
            resolveComponentFactory(t) {
                const n = He(t);
                return new xa(n,this.ngModule)
            }
        }
        function sf(e) {
            const t = [];
            for (let n in e)
                e.hasOwnProperty(n) && t.push({
                    propName: e[n],
                    templateName: n
                });
            return t
        }
        class xy {
            constructor(t, n) {
                this.injector = t,
                this.parentInjector = n
            }
            get(t, n, s) {
                const o = this.injector.get(t, ql, s);
                return o !== ql || n === ql ? o : this.parentInjector.get(t, n, s)
            }
        }
        class xa extends xd {
            constructor(t, n) {
                super(),
                this.componentDef = t,
                this.ngModule = n,
                this.componentType = t.type,
                this.selector = function I_(e) {
                    return e.map(M_).join(",")
                }(t.selectors),
                this.ngContentSelectors = t.ngContentSelectors ? t.ngContentSelectors : [],
                this.isBoundToModule = !!n
            }
            get inputs() {
                return sf(this.componentDef.inputs)
            }
            get outputs() {
                return sf(this.componentDef.outputs)
            }
            create(t, n, s, o) {
                let a = (o = o || this.ngModule)instanceof Mo ? o : o?.injector;
                a && null !== this.componentDef.getStandaloneInjector && (a = this.componentDef.getStandaloneInjector(a) || a);
                const p = a ? new xy(t,a) : t
                  , b = p.get(Pd, null);
                if (null === b)
                    throw new Be(407,!1);
                const T = p.get(Iv, null)
                  , F = b.createRenderer(null, this.componentDef)
                  , ee = this.componentDef.selectors[0][0] || "div"
                  , ge = s ? function ly(e, t, n) {
                    return e.selectRootElement(t, n === dt.ShadowDom)
                }(F, s, this.componentDef.encapsulation) : hc(b.createRenderer(null, this.componentDef), ee, function Iy(e) {
                    const t = e.toLowerCase();
                    return "svg" === t ? "svg" : "math" === t ? "math" : null
                }(ee))
                  , Ue = this.componentDef.onPush ? 288 : 272
                  , tt = kc(0, null, null, 1, 0, null, null, null, null, null)
                  , St = ol(null, tt, null, Ue, null, null, b, F, T, p, null);
                let Bt, Qt;
                B(St);
                try {
                    const cn = function Oy(e, t, n, s, o, a) {
                        const p = n[1];
                        n[22] = e;
                        const T = Zo(p, 22, 2, "#host", null)
                          , F = T.mergedAttrs = t.hostAttrs;
                        null !== F && (ul(T, F, !0),
                        null !== e && (ps(o, e, F),
                        null !== T.classes && _c(o, e, T.classes),
                        null !== T.styles && ch(o, e, T.styles)));
                        const ee = s.createRenderer(e, t)
                          , ge = ol(n, Uh(t), null, t.onPush ? 32 : 16, n[22], T, s, ee, a || null, null, null);
                        return p.firstCreatePass && (Gs(Gr(T, n), p, t.type),
                        Zh(p, T),
                        Jh(T, n.length, 1)),
                        ll(n, ge),
                        n[22] = ge
                    }(ge, this.componentDef, St, b, F);
                    if (ge)
                        if (s)
                            ps(F, ge, ["ng-version", xv.full]);
                        else {
                            const {attrs: mn, classes: Pt} = function x_(e) {
                                const t = []
                                  , n = [];
                                let s = 1
                                  , o = 2;
                                for (; s < e.length; ) {
                                    let a = e[s];
                                    if ("string" == typeof a)
                                        2 === o ? "" !== a && t.push(a, e[++s]) : 8 === o && n.push(a);
                                    else {
                                        if (!br(o))
                                            break;
                                        o = a
                                    }
                                    s++
                                }
                                return {
                                    attrs: t,
                                    classes: n
                                }
                            }(this.componentDef.selectors[0]);
                            mn && ps(F, ge, mn),
                            Pt && Pt.length > 0 && _c(F, ge, Pt.join(" "))
                        }
                    if (Qt = Cs(tt, 22),
                    void 0 !== n) {
                        const mn = Qt.projection = [];
                        for (let Pt = 0; Pt < this.ngContentSelectors.length; Pt++) {
                            const En = n[Pt];
                            mn.push(null != En ? Array.from(En) : null)
                        }
                    }
                    Bt = function Ly(e, t, n, s) {
                        const o = n[1]
                          , a = function hy(e, t, n) {
                            const s = Qn();
                            e.firstCreatePass && (n.providersResolver && n.providersResolver(n),
                            Qh(e, s, t, Jo(e, t, 1, null), n),
                            Gh(e, s));
                            const o = Kr(t, e, s.directiveStart, s);
                            Ms(o, t);
                            const a = gi(s, t);
                            return a && Ms(a, t),
                            o
                        }(o, n, t);
                        if (e[8] = n[8] = a,
                        null !== s)
                            for (const b of s)
                                b(a, t);
                        if (t.contentQueries) {
                            const b = Qn();
                            t.contentQueries(1, a, b.directiveStart)
                        }
                        const p = Qn();
                        return !o.firstCreatePass || null === t.hostBindings && null === t.hostAttrs || (X(p.index),
                        Yh(n[1], p, 0, p.directiveStart, p.directiveEnd, t),
                        Kh(t, a)),
                        a
                    }(cn, this.componentDef, St, [Ry]),
                    Rc(tt, St, null)
                } finally {
                    m()
                }
                return new Py(this.componentType,Bt,jo(Qt, St),St,Qt)
            }
        }
        class Py extends class bv {
        }
        {
            constructor(t, n, s, o, a) {
                super(),
                this.location = s,
                this._rootLView = o,
                this._tNode = a,
                this.instance = n,
                this.hostView = this.changeDetectorRef = new My(o),
                this.componentType = t
            }
            setInput(t, n) {
                const s = this._tNode.inputs;
                let o;
                if (null !== s && (o = s[t])) {
                    const a = this._rootLView;
                    zc(a[1], a, o, t, n),
                    Wh(a, this._tNode.index)
                }
            }
            get injector() {
                return new ur(this._tNode,this._rootLView)
            }
            destroy() {
                this.hostView.destroy()
            }
            onDestroy(t) {
                this.hostView.onDestroy(t)
            }
        }
        function Ry() {
            const e = Qn();
            mt(xt()[1], e)
        }
        function Gc(e) {
            let t = function rf(e) {
                return Object.getPrototypeOf(e.prototype).constructor
            }(e.type)
              , n = !0;
            const s = [e];
            for (; t; ) {
                let o;
                if (fi(e))
                    o = t.\u0275cmp || t.\u0275dir;
                else {
                    if (t.\u0275cmp)
                        throw new Be(903,!1);
                    o = t.\u0275dir
                }
                if (o) {
                    if (n) {
                        s.push(o);
                        const p = e;
                        p.inputs = Wc(e.inputs),
                        p.declaredInputs = Wc(e.declaredInputs),
                        p.outputs = Wc(e.outputs);
                        const b = o.hostBindings;
                        b && Vy(e, b);
                        const T = o.viewQuery
                          , F = o.contentQueries;
                        if (T && Fy(e, T),
                        F && ky(e, F),
                        z(e.inputs, o.inputs),
                        z(e.declaredInputs, o.declaredInputs),
                        z(e.outputs, o.outputs),
                        fi(o) && o.data.animation) {
                            const ee = e.data;
                            ee.animation = (ee.animation || []).concat(o.data.animation)
                        }
                    }
                    const a = o.features;
                    if (a)
                        for (let p = 0; p < a.length; p++) {
                            const b = a[p];
                            b && b.ngInherit && b(e),
                            b === Gc && (n = !1)
                        }
                }
                t = Object.getPrototypeOf(t)
            }
            !function Ny(e) {
                let t = 0
                  , n = null;
                for (let s = e.length - 1; s >= 0; s--) {
                    const o = e[s];
                    o.hostVars = t += o.hostVars,
                    o.hostAttrs = ri(o.hostAttrs, n = ri(n, o.hostAttrs))
                }
            }(s)
        }
        function Wc(e) {
            return e === Pn ? {} : e === Vt ? [] : e
        }
        function Fy(e, t) {
            const n = e.viewQuery;
            e.viewQuery = n ? (s,o)=>{
                t(s, o),
                n(s, o)
            }
            : t
        }
        function ky(e, t) {
            const n = e.contentQueries;
            e.contentQueries = n ? (s,o,a)=>{
                t(s, o, a),
                n(s, o, a)
            }
            : t
        }
        function Vy(e, t) {
            const n = e.hostBindings;
            e.hostBindings = n ? (s,o)=>{
                t(s, o),
                n(s, o)
            }
            : t
        }
        let hl = null;
        function Ao() {
            if (!hl) {
                const e = Et.Symbol;
                if (e && e.iterator)
                    hl = e.iterator;
                else {
                    const t = Object.getOwnPropertyNames(Map.prototype);
                    for (let n = 0; n < t.length; ++n) {
                        const s = t[n];
                        "entries" !== s && "size" !== s && Map.prototype[s] === Map.prototype.entries && (hl = s)
                    }
                }
            }
            return hl
        }
        function Aa(e) {
            return !!Yc(e) && (Array.isArray(e) || !(e instanceof Map) && Ao()in e)
        }
        function Yc(e) {
            return null !== e && ("function" == typeof e || "object" == typeof e)
        }
        function Fr(e, t, n) {
            return e[t] = n
        }
        function Pa(e, t) {
            return e[t]
        }
        function Is(e, t, n) {
            return !Object.is(e[t], n) && (e[t] = n,
            !0)
        }
        function Po(e, t, n, s) {
            const o = Is(e, t, n);
            return Is(e, t + 1, s) || o
        }
        function fl(e, t, n, s, o) {
            const a = Po(e, t, n, s);
            return Is(e, t + 2, o) || a
        }
        function dr(e, t, n, s, o, a) {
            const p = Po(e, t, n, s);
            return Po(e, t + 2, o, a) || p
        }
        function Kc(e, t, n, s) {
            const o = xt();
            return Is(o, lr(), t) && (On(),
            Nr(j(), o, e, t, n, s)),
            Kc
        }
        function qo(e, t, n, s) {
            return Is(e, lr(), n) ? t + $e(n) + s : Fn
        }
        function Xo(e, t, n, s, o, a) {
            const b = Po(e, rs(), n, o);
            return Wi(2),
            b ? t + $e(n) + s + $e(o) + a : Fn
        }
        function mf(e, t, n, s, o, a, p, b) {
            const T = xt()
              , F = On()
              , ee = e + 22
              , ge = F.firstCreatePass ? function Wy(e, t, n, s, o, a, p, b, T) {
                const F = t.consts
                  , ee = Zo(t, e, 4, p || null, is(F, b));
                Vc(t, n, ee, is(F, T)),
                mt(t, ee);
                const ge = ee.tViews = kc(2, ee, s, o, a, t.directiveRegistry, t.pipeRegistry, null, t.schemas, F);
                return null !== t.queries && (t.queries.template(t, ee),
                ge.queries = t.queries.embeddedTView(ee)),
                ee
            }(ee, F, T, t, n, s, o, a, p) : F.data[ee];
            I(ge, !1);
            const Ue = T[11].createComment("");
            el(F, T, Ue, ge),
            Ms(Ue, T),
            ll(T, T[ee] = qh(Ue, T, Ue, ge)),
            Ci(ge) && Nc(F, T, ge),
            null != p && Fc(T, ge, b)
        }
        function vf(e) {
            return ns(function di() {
                return vn.lFrame.contextLView
            }(), 22 + e)
        }
        function Zc(e, t, n) {
            const s = xt();
            return Is(s, lr(), t) && ir(On(), j(), s, e, t, s[11], n, !1),
            Zc
        }
        function Jc(e, t, n, s, o) {
            const p = o ? "class" : "style";
            zc(e, n, t.inputs[p], p, s)
        }
        function pl(e, t, n, s) {
            const o = xt()
              , a = On()
              , p = 22 + e
              , b = o[11]
              , T = o[p] = hc(b, t, function lt() {
                return vn.lFrame.currentNamespace
            }())
              , F = a.firstCreatePass ? function Ky(e, t, n, s, o, a, p) {
                const b = t.consts
                  , F = Zo(t, e, 2, o, is(b, a));
                return Vc(t, n, F, is(b, p)),
                null !== F.attrs && ul(F, F.attrs, !1),
                null !== F.mergedAttrs && ul(F, F.mergedAttrs, !0),
                null !== t.queries && t.queries.elementStart(t, F),
                F
            }(p, a, o, 0, t, n, s) : a.data[p];
            I(F, !0);
            const ee = F.mergedAttrs;
            null !== ee && ps(b, T, ee);
            const ge = F.classes;
            null !== ge && _c(b, T, ge);
            const Ue = F.styles;
            return null !== Ue && ch(b, T, Ue),
            64 != (64 & F.flags) && el(a, o, T, F),
            0 === function ss() {
                return vn.lFrame.elementDepthCount
            }() && Ms(T, o),
            function mi() {
                vn.lFrame.elementDepthCount++
            }(),
            Ci(F) && (Nc(a, o, F),
            Hh(a, F, o)),
            null !== s && Fc(o, F),
            pl
        }
        function gl() {
            let e = Qn();
            ne() ? at() : (e = e.parent,
            I(e, !1));
            const t = e;
            !function bs() {
                vn.lFrame.elementDepthCount--
            }();
            const n = On();
            return n.firstCreatePass && (mt(n, e),
            Mi(e) && n.queries.elementEnd(e)),
            null != t.classesWithoutHost && function zt(e) {
                return 0 != (16 & e.flags)
            }(t) && Jc(n, t, xt(), t.classesWithoutHost, !0),
            null != t.stylesWithoutHost && function Vn(e) {
                return 0 != (32 & e.flags)
            }(t) && Jc(n, t, xt(), t.stylesWithoutHost, !1),
            gl
        }
        function Qc(e, t, n, s) {
            return pl(e, t, n, s),
            gl(),
            Qc
        }
        function ml(e, t, n) {
            const s = xt()
              , o = On()
              , a = e + 22
              , p = o.firstCreatePass ? function Zy(e, t, n, s, o) {
                const a = t.consts
                  , p = is(a, s)
                  , b = Zo(t, e, 8, "ng-container", p);
                return null !== p && ul(b, p, !0),
                Vc(t, n, b, is(a, o)),
                null !== t.queries && t.queries.elementStart(t, b),
                b
            }(a, o, s, t, n) : o.data[a];
            I(p, !0);
            const b = s[a] = s[11].createComment("");
            return el(o, s, b, p),
            Ms(b, s),
            Ci(p) && (Nc(o, s, p),
            Hh(o, p, s)),
            null != n && Fc(s, p),
            ml
        }
        function vl() {
            let e = Qn();
            const t = On();
            return ne() ? at() : (e = e.parent,
            I(e, !1)),
            t.firstCreatePass && (mt(t, e),
            Mi(e) && t.queries.elementEnd(e)),
            vl
        }
        function qc(e, t, n) {
            return ml(e, t, n),
            vl(),
            qc
        }
        function _f() {
            return xt()
        }
        function Xc(e) {
            return !!e && "function" == typeof e.then
        }
        function yf(e) {
            return !!e && "function" == typeof e.subscribe
        }
        const Cf = yf;
        function eu(e, t, n, s) {
            const o = xt()
              , a = On()
              , p = Qn();
            return function Ef(e, t, n, s, o, a, p, b) {
                const T = Ci(s)
                  , ee = e.firstCreatePass && ef(e)
                  , ge = t[8]
                  , Ue = Xh(t);
                let tt = !0;
                if (3 & s.type || b) {
                    const Qt = gi(s, t)
                      , cn = b ? b(Qt) : Qt
                      , mn = Ue.length
                      , Pt = b ? ii=>b(ni(ii[s.index])) : s.index;
                    let En = null;
                    if (!b && T && (En = function Jy(e, t, n, s) {
                        const o = e.cleanup;
                        if (null != o)
                            for (let a = 0; a < o.length - 1; a += 2) {
                                const p = o[a];
                                if (p === n && o[a + 1] === s) {
                                    const b = t[7]
                                      , T = o[a + 2];
                                    return b.length > T ? b[T] : null
                                }
                                "string" == typeof p && (a += 2)
                            }
                        return null
                    }(e, t, o, s.index)),
                    null !== En)
                        (En.__ngLastListenerFn__ || En).__ngNextListenerFn__ = a,
                        En.__ngLastListenerFn__ = a,
                        tt = !1;
                    else {
                        a = Sf(s, t, ge, a, !1);
                        const ii = n.listen(cn, o, a);
                        Ue.push(a, ii),
                        ee && ee.push(o, Pt, mn, mn + 1)
                    }
                } else
                    a = Sf(s, t, ge, a, !1);
                const St = s.outputs;
                let Bt;
                if (tt && null !== St && (Bt = St[o])) {
                    const Qt = Bt.length;
                    if (Qt)
                        for (let cn = 0; cn < Qt; cn += 2) {
                            const Di = t[Bt[cn]][Bt[cn + 1]].subscribe(a)
                              , Ro = Ue.length;
                            Ue.push(a, Di),
                            ee && ee.push(o, s.index, Ro, -(Ro + 1))
                        }
                }
            }(a, o, o[11], p, e, t, 0, s),
            eu
        }
        function Df(e, t, n, s) {
            try {
                return !1 !== n(s)
            } catch (o) {
                return nf(e, o),
                !1
            }
        }
        function Sf(e, t, n, s, o) {
            return function a(p) {
                if (p === Function)
                    return s;
                Hc(2 & e.flags ? Nn(e.index, t) : t);
                let T = Df(t, 0, s, p)
                  , F = a.__ngNextListenerFn__;
                for (; F; )
                    T = Df(t, 0, F, p) && T,
                    F = F.__ngNextListenerFn__;
                return o && !1 === T && (p.preventDefault(),
                p.returnValue = !1),
                T
            }
        }
        function wf(e=1) {
            return function d(e) {
                return (vn.lFrame.contextLView = function S(e, t) {
                    for (; e > 0; )
                        t = t[15],
                        e--;
                    return t
                }(e, vn.lFrame.contextLView))[8]
            }(e)
        }
        function Qy(e, t) {
            let n = null;
            const s = function D_(e) {
                const t = e.attrs;
                if (null != t) {
                    const n = t.indexOf(5);
                    if (0 == (1 & n))
                        return t[n + 1]
                }
                return null
            }(e);
            for (let o = 0; o < t.length; o++) {
                const a = t[o];
                if ("*" !== a) {
                    if (null === s ? fh(e, a, !0) : T_(s, a))
                        return o
                } else
                    n = o
            }
            return n
        }
        function Tf(e) {
            const t = xt()[16][6];
            if (!t.projection) {
                const s = t.projection = gs(e ? e.length : 1, null)
                  , o = s.slice();
                let a = t.child;
                for (; null !== a; ) {
                    const p = e ? Qy(a, e) : 0;
                    null !== p && (o[p] ? o[p].projectionNext = a : s[p] = a,
                    o[p] = a),
                    a = a.next
                }
            }
        }
        function Mf(e, t=0, n) {
            const s = xt()
              , o = On()
              , a = Zo(o, 22 + e, 16, null, n || null);
            null === a.projection && (a.projection = t),
            at(),
            64 != (64 & a.flags) && function m_(e, t, n) {
                lh(t[11], 0, t, n, qd(e, n, t), nh(n.parent || t[6], n, t))
            }(o, s, a)
        }
        function tu(e, t, n) {
            return _l(e, "", t, "", n),
            tu
        }
        function _l(e, t, n, s, o) {
            const a = xt()
              , p = qo(a, t, n, s);
            return p !== Fn && ir(On(), j(), a, e, p, a[11], o, !1),
            _l
        }
        function nu(e, t, n, s, o, a, p) {
            const b = xt()
              , T = Xo(b, t, n, s, o, a);
            return T !== Fn && ir(On(), j(), b, e, T, b[11], p, !1),
            nu
        }
        function Nf(e, t, n, s, o) {
            const a = e[n + 1]
              , p = null === t;
            let b = s ? Er(a) : eo(a)
              , T = !1;
            for (; 0 !== b && (!1 === T || p); ) {
                const ee = e[b + 1];
                eC(e[b], t) && (T = !0,
                e[b + 1] = s ? wc(ee) : Dc(ee)),
                b = s ? Er(ee) : eo(ee)
            }
            T && (e[n + 1] = s ? Dc(a) : wc(a))
        }
        function eC(e, t) {
            return null === e || null == t || (Array.isArray(e) ? e[1] : e) === t || !(!Array.isArray(e) || "string" != typeof t) && v(e, t) >= 0
        }
        const qi = {
            textEnd: 0,
            key: 0,
            keyEnd: 0,
            value: 0,
            valueEnd: 0
        };
        function Ff(e) {
            return e.substring(qi.key, qi.keyEnd)
        }
        function tC(e) {
            return e.substring(qi.value, qi.valueEnd)
        }
        function kf(e, t) {
            const n = qi.textEnd;
            return n === t ? -1 : (t = qi.keyEnd = function sC(e, t, n) {
                for (; t < n && e.charCodeAt(t) > 32; )
                    t++;
                return t
            }(e, qi.key = t, n),
            oa(e, t, n))
        }
        function Vf(e, t) {
            const n = qi.textEnd;
            let s = qi.key = oa(e, t, n);
            return n === s ? -1 : (s = qi.keyEnd = function rC(e, t, n) {
                let s;
                for (; t < n && (45 === (s = e.charCodeAt(t)) || 95 === s || (-33 & s) >= 65 && (-33 & s) <= 90 || s >= 48 && s <= 57); )
                    t++;
                return t
            }(e, s, n),
            s = $f(e, s, n),
            s = qi.value = oa(e, s, n),
            s = qi.valueEnd = function oC(e, t, n) {
                let s = -1
                  , o = -1
                  , a = -1
                  , p = t
                  , b = p;
                for (; p < n; ) {
                    const T = e.charCodeAt(p++);
                    if (59 === T)
                        return b;
                    34 === T || 39 === T ? b = p = Hf(e, T, p, n) : t === p - 4 && 85 === a && 82 === o && 76 === s && 40 === T ? b = p = Hf(e, 41, p, n) : T > 32 && (b = p),
                    a = o,
                    o = s,
                    s = -33 & T
                }
                return b
            }(e, s, n),
            $f(e, s, n))
        }
        function Bf(e) {
            qi.key = 0,
            qi.keyEnd = 0,
            qi.value = 0,
            qi.valueEnd = 0,
            qi.textEnd = e.length
        }
        function oa(e, t, n) {
            for (; t < n && e.charCodeAt(t) <= 32; )
                t++;
            return t
        }
        function $f(e, t, n, s) {
            return (t = oa(e, t, n)) < n && t++,
            t
        }
        function Hf(e, t, n, s) {
            let o = -1
              , a = n;
            for (; a < s; ) {
                const p = e.charCodeAt(a++);
                if (p == t && 92 !== o)
                    return a;
                o = 92 == p && 92 === o ? 0 : p
            }
            throw new Error
        }
        function iu(e, t, n) {
            return Sr(e, t, n, !1),
            iu
        }
        function su(e, t) {
            return Sr(e, t, null, !0),
            su
        }
        function Dr(e) {
            wr(Gf, aC, e, !1)
        }
        function aC(e, t) {
            for (let n = function iC(e) {
                return Bf(e),
                Vf(e, oa(e, 0, qi.textEnd))
            }(t); n >= 0; n = Vf(t, n))
                Gf(e, Ff(t), tC(t))
        }
        function Uf(e) {
            wr(ms, kr, e, !0)
        }
        function kr(e, t) {
            for (let n = function nC(e) {
                return Bf(e),
                kf(e, oa(e, 0, qi.textEnd))
            }(t); n >= 0; n = kf(t, n))
                ms(e, Ff(t), !0)
        }
        function Sr(e, t, n, s) {
            const o = xt()
              , a = On()
              , p = Wi(2);
            a.firstUpdatePass && jf(a, e, p, s),
            t !== Fn && Is(o, p, t) && Wf(a, a.data[V()], o, o[11], e, o[p + 1] = function pC(e, t) {
                return null == e || ("string" == typeof t ? e += t : "object" == typeof e && (e = te(Qr(e)))),
                e
            }(t, n), s, p)
        }
        function wr(e, t, n, s) {
            const o = On()
              , a = Wi(2);
            o.firstUpdatePass && jf(o, null, a, s);
            const p = xt();
            if (n !== Fn && Is(p, a, n)) {
                const b = o.data[V()];
                if (Kf(b, s) && !zf(o, a)) {
                    let T = s ? b.classesWithoutHost : b.stylesWithoutHost;
                    null !== T && (n = le(T, n || "")),
                    Jc(o, b, p, n, s)
                } else
                    !function fC(e, t, n, s, o, a, p, b) {
                        o === Fn && (o = Vt);
                        let T = 0
                          , F = 0
                          , ee = 0 < o.length ? o[0] : null
                          , ge = 0 < a.length ? a[0] : null;
                        for (; null !== ee || null !== ge; ) {
                            const Ue = T < o.length ? o[T + 1] : void 0
                              , tt = F < a.length ? a[F + 1] : void 0;
                            let Bt, St = null;
                            ee === ge ? (T += 2,
                            F += 2,
                            Ue !== tt && (St = ge,
                            Bt = tt)) : null === ge || null !== ee && ee < ge ? (T += 2,
                            St = ee) : (F += 2,
                            St = ge,
                            Bt = tt),
                            null !== St && Wf(e, t, n, s, St, Bt, p, b),
                            ee = T < o.length ? o[T] : null,
                            ge = F < a.length ? a[F] : null
                        }
                    }(o, b, p, p[11], p[a + 1], p[a + 1] = function hC(e, t, n) {
                        if (null == n || "" === n)
                            return Vt;
                        const s = []
                          , o = Qr(n);
                        if (Array.isArray(o))
                            for (let a = 0; a < o.length; a++)
                                e(s, o[a], !0);
                        else if ("object" == typeof o)
                            for (const a in o)
                                o.hasOwnProperty(a) && e(s, a, o[a]);
                        else
                            "string" == typeof o && t(s, o);
                        return s
                    }(e, t, n), s, a)
            }
        }
        function zf(e, t) {
            return t >= e.expandoStartIndex
        }
        function jf(e, t, n, s) {
            const o = e.data;
            if (null === o[n + 1]) {
                const a = o[V()]
                  , p = zf(e, n);
                Kf(a, s) && null === t && !p && (t = !1),
                t = function lC(e, t, n, s) {
                    const o = function r(e) {
                        const t = vn.lFrame.currentDirectiveIndex;
                        return -1 === t ? null : e[t]
                    }(e);
                    let a = s ? t.residualClasses : t.residualStyles;
                    if (null === o)
                        0 === (s ? t.classBindings : t.styleBindings) && (n = Oa(n = ru(null, e, t, n, s), t.attrs, s),
                        a = null);
                    else {
                        const p = t.directiveStylingLast;
                        if (-1 === p || e[p] !== o)
                            if (n = ru(o, e, t, n, s),
                            null === a) {
                                let T = function cC(e, t, n) {
                                    const s = n ? t.classBindings : t.styleBindings;
                                    if (0 !== eo(s))
                                        return e[Er(s)]
                                }(e, t, s);
                                void 0 !== T && Array.isArray(T) && (T = ru(null, e, t, T[1], s),
                                T = Oa(T, t.attrs, s),
                                function uC(e, t, n, s) {
                                    e[Er(n ? t.classBindings : t.styleBindings)] = s
                                }(e, t, s, T))
                            } else
                                a = function dC(e, t, n) {
                                    let s;
                                    const o = t.directiveEnd;
                                    for (let a = 1 + t.directiveStylingLast; a < o; a++)
                                        s = Oa(s, e[a].hostAttrs, n);
                                    return Oa(s, t.attrs, n)
                                }(e, t, s)
                    }
                    return void 0 !== a && (s ? t.residualClasses = a : t.residualStyles = a),
                    n
                }(o, a, t, s),
                function qy(e, t, n, s, o, a) {
                    let p = a ? t.classBindings : t.styleBindings
                      , b = Er(p)
                      , T = eo(p);
                    e[s] = n;
                    let ee, F = !1;
                    if (Array.isArray(n)) {
                        const ge = n;
                        ee = ge[1],
                        (null === ee || v(ge, ee) > 0) && (F = !0)
                    } else
                        ee = n;
                    if (o)
                        if (0 !== T) {
                            const Ue = Er(e[b + 1]);
                            e[s + 1] = il(Ue, b),
                            0 !== Ue && (e[Ue + 1] = Sc(e[Ue + 1], s)),
                            e[b + 1] = function K_(e, t) {
                                return 131071 & e | t << 17
                            }(e[b + 1], s)
                        } else
                            e[s + 1] = il(b, 0),
                            0 !== b && (e[b + 1] = Sc(e[b + 1], s)),
                            b = s;
                    else
                        e[s + 1] = il(T, 0),
                        0 === b ? b = s : e[T + 1] = Sc(e[T + 1], s),
                        T = s;
                    F && (e[s + 1] = Dc(e[s + 1])),
                    Nf(e, ee, s, !0),
                    Nf(e, ee, s, !1),
                    function Xy(e, t, n, s, o) {
                        const a = o ? e.residualClasses : e.residualStyles;
                        null != a && "string" == typeof t && v(a, t) >= 0 && (n[s + 1] = wc(n[s + 1]))
                    }(t, ee, e, s, a),
                    p = il(b, T),
                    a ? t.classBindings = p : t.styleBindings = p
                }(o, a, t, n, p, s)
            }
        }
        function ru(e, t, n, s, o) {
            let a = null;
            const p = n.directiveEnd;
            let b = n.directiveStylingLast;
            for (-1 === b ? b = n.directiveStart : b++; b < p && (a = t[b],
            s = Oa(s, a.hostAttrs, o),
            a !== e); )
                b++;
            return null !== e && (n.directiveStylingLast = b),
            s
        }
        function Oa(e, t, n) {
            const s = n ? 1 : 2;
            let o = -1;
            if (null !== t)
                for (let a = 0; a < t.length; a++) {
                    const p = t[a];
                    "number" == typeof p ? o = p : o === s && (Array.isArray(e) || (e = void 0 === e ? [] : ["", e]),
                    ms(e, p, !!n || t[++a]))
                }
            return void 0 === e ? null : e
        }
        function Gf(e, t, n) {
            ms(e, t, Qr(n))
        }
        function Wf(e, t, n, s, o, a, p, b) {
            if (!(3 & t.type))
                return;
            const T = e.data
              , F = T[b + 1];
            yl(function Ph(e) {
                return 1 == (1 & e)
            }(F) ? Yf(T, t, n, o, eo(F), p) : void 0) || (yl(a) || function Ah(e) {
                return 2 == (2 & e)
            }(F) && (a = Yf(T, null, n, o, b, p)),
            function __(e, t, n, s, o) {
                if (t)
                    o ? e.addClass(n, s) : e.removeClass(n, s);
                else {
                    let a = -1 === s.indexOf("-") ? void 0 : Rr.DashCase;
                    null == o ? e.removeStyle(n, s, a) : ("string" == typeof o && o.endsWith("!important") && (o = o.slice(0, -10),
                    a |= Rr.Important),
                    e.setStyle(n, s, o, a))
                }
            }(s, p, Qi(V(), n), o, a))
        }
        function Yf(e, t, n, s, o, a) {
            const p = null === t;
            let b;
            for (; o > 0; ) {
                const T = e[o]
                  , F = Array.isArray(T)
                  , ee = F ? T[1] : T
                  , ge = null === ee;
                let Ue = n[o + 1];
                Ue === Fn && (Ue = ge ? Vt : void 0);
                let tt = ge ? g(Ue, s) : ee === s ? Ue : void 0;
                if (F && !yl(tt) && (tt = g(T, s)),
                yl(tt) && (b = tt,
                p))
                    return b;
                const St = e[o + 1];
                o = p ? Er(St) : eo(St)
            }
            if (null !== t) {
                let T = a ? t.residualClasses : t.residualStyles;
                null != T && (b = g(T, s))
            }
            return b
        }
        function yl(e) {
            return void 0 !== e
        }
        function Kf(e, t) {
            return 0 != (e.flags & (t ? 16 : 32))
        }
        function Zf(e, t="") {
            const n = xt()
              , s = On()
              , o = e + 22
              , a = s.firstCreatePass ? Zo(s, o, 1, t, null) : s.data[o]
              , p = n[o] = function dc(e, t) {
                return e.createText(t)
            }(n[11], t);
            el(s, n, p, a),
            I(a, !1)
        }
        function ou(e) {
            return Cl("", e, ""),
            ou
        }
        function Cl(e, t, n) {
            const s = xt()
              , o = qo(s, e, t, n);
            return o !== Fn && to(s, V(), o),
            Cl
        }
        function au(e, t, n, s, o) {
            const a = xt()
              , p = Xo(a, e, t, n, s, o);
            return p !== Fn && to(a, V(), p),
            au
        }
        function lu(e, t, n, s, o, a, p) {
            const b = xt()
              , T = function ea(e, t, n, s, o, a, p, b) {
                const F = fl(e, rs(), n, o, p);
                return Wi(3),
                F ? t + $e(n) + s + $e(o) + a + $e(p) + b : Fn
            }(b, e, t, n, s, o, a, p);
            return T !== Fn && to(b, V(), T),
            lu
        }
        const Oo = void 0;
        var RC = ["en", [["a", "p"], ["AM", "PM"], Oo], [["AM", "PM"], Oo, Oo], [["S", "M", "T", "W", "T", "F", "S"], ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"]], Oo, [["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]], Oo, [["B", "A"], ["BC", "AD"], ["Before Christ", "Anno Domini"]], 0, [6, 0], ["M/d/yy", "MMM d, y", "MMMM d, y", "EEEE, MMMM d, y"], ["h:mm a", "h:mm:ss a", "h:mm:ss a z", "h:mm:ss a zzzz"], ["{1}, {0}", Oo, "{1} 'at' {0}", Oo], [".", ",", ";", "%", "+", "-", "E", "\xd7", "\u2030", "\u221e", "NaN", ":"], ["#,##0.###", "#,##0%", "\xa4#,##0.00", "#E0"], "USD", "$", "US Dollar", {}, "ltr", function LC(e) {
            const n = Math.floor(Math.abs(e))
              , s = e.toString().replace(/^[^.]*\.?/, "").length;
            return 1 === n && 0 === s ? 1 : 5
        }
        ];
        let aa = {};
        function cu(e) {
            const t = function NC(e) {
                return e.toLowerCase().replace(/_/g, "-")
            }(e);
            let n = pp(t);
            if (n)
                return n;
            const s = t.split("-")[0];
            if (n = pp(s),
            n)
                return n;
            if ("en" === s)
                return RC;
            throw new Be(701,!1)
        }
        function fp(e) {
            return cu(e)[Cn.PluralCase]
        }
        function pp(e) {
            return e in aa || (aa[e] = Et.ng && Et.ng.common && Et.ng.common.locales && Et.ng.common.locales[e]),
            aa[e]
        }
        var Cn = (()=>((Cn = Cn || {})[Cn.LocaleId = 0] = "LocaleId",
        Cn[Cn.DayPeriodsFormat = 1] = "DayPeriodsFormat",
        Cn[Cn.DayPeriodsStandalone = 2] = "DayPeriodsStandalone",
        Cn[Cn.DaysFormat = 3] = "DaysFormat",
        Cn[Cn.DaysStandalone = 4] = "DaysStandalone",
        Cn[Cn.MonthsFormat = 5] = "MonthsFormat",
        Cn[Cn.MonthsStandalone = 6] = "MonthsStandalone",
        Cn[Cn.Eras = 7] = "Eras",
        Cn[Cn.FirstDayOfWeek = 8] = "FirstDayOfWeek",
        Cn[Cn.WeekendRange = 9] = "WeekendRange",
        Cn[Cn.DateFormat = 10] = "DateFormat",
        Cn[Cn.TimeFormat = 11] = "TimeFormat",
        Cn[Cn.DateTimeFormat = 12] = "DateTimeFormat",
        Cn[Cn.NumberSymbols = 13] = "NumberSymbols",
        Cn[Cn.NumberFormats = 14] = "NumberFormats",
        Cn[Cn.CurrencyCode = 15] = "CurrencyCode",
        Cn[Cn.CurrencySymbol = 16] = "CurrencySymbol",
        Cn[Cn.CurrencyName = 17] = "CurrencyName",
        Cn[Cn.Currencies = 18] = "Currencies",
        Cn[Cn.Directionality = 19] = "Directionality",
        Cn[Cn.PluralCase = 20] = "PluralCase",
        Cn[Cn.ExtraData = 21] = "ExtraData",
        Cn))();
        const la = "en-US";
        let gp = la;
        function hu(e, t, n, s, o) {
            if (e = re(e),
            Array.isArray(e))
                for (let a = 0; a < e.length; a++)
                    hu(e[a], t, n, s, o);
            else {
                const a = On()
                  , p = xt();
                let b = To(e) ? e : re(e.provide)
                  , T = Id(e);
                const F = Qn()
                  , ee = 1048575 & F.providerIndexes
                  , ge = F.directiveStart
                  , Ue = F.providerIndexes >> 20;
                if (To(e) || !e.multi) {
                    const tt = new ct(T,o,Ko)
                      , St = pu(b, t, o ? ee : ee + Ue, ge);
                    -1 === St ? (Gs(Gr(F, p), a, b),
                    fu(a, e, t.length),
                    t.push(b),
                    F.directiveStart++,
                    F.directiveEnd++,
                    o && (F.providerIndexes += 1048576),
                    n.push(tt),
                    p.push(tt)) : (n[St] = tt,
                    p[St] = tt)
                } else {
                    const tt = pu(b, t, ee + Ue, ge)
                      , St = pu(b, t, ee, ee + Ue)
                      , Bt = tt >= 0 && n[tt]
                      , Qt = St >= 0 && n[St];
                    if (o && !Qt || !o && !Bt) {
                        Gs(Gr(F, p), a, b);
                        const cn = function L0(e, t, n, s, o) {
                            const a = new ct(e,n,Ko);
                            return a.multi = [],
                            a.index = t,
                            a.componentProviders = 0,
                            $p(a, o, s && !n),
                            a
                        }(o ? O0 : P0, n.length, o, s, T);
                        !o && Qt && (n[St].providerFactory = cn),
                        fu(a, e, t.length, 0),
                        t.push(b),
                        F.directiveStart++,
                        F.directiveEnd++,
                        o && (F.providerIndexes += 1048576),
                        n.push(cn),
                        p.push(cn)
                    } else
                        fu(a, e, tt > -1 ? tt : St, $p(n[o ? St : tt], T, !o && s));
                    !o && s && Qt && n[St].componentProviders++
                }
            }
        }
        function fu(e, t, n, s) {
            const o = To(t)
              , a = function fv(e) {
                return !!e.useClass
            }(t);
            if (o || a) {
                const T = (a ? re(t.useClass) : t).prototype.ngOnDestroy;
                if (T) {
                    const F = e.destroyHooks || (e.destroyHooks = []);
                    if (!o && t.multi) {
                        const ee = F.indexOf(n);
                        -1 === ee ? F.push(n, [s, T]) : F[ee + 1].push(s, T)
                    } else
                        F.push(n, T)
                }
            }
        }
        function $p(e, t, n) {
            return n && e.componentProviders++,
            e.multi.push(t) - 1
        }
        function pu(e, t, n, s) {
            for (let o = n; o < s; o++)
                if (t[o] === e)
                    return o;
            return -1
        }
        function P0(e, t, n, s) {
            return gu(this.multi, [])
        }
        function O0(e, t, n, s) {
            const o = this.multi;
            let a;
            if (this.providerFactory) {
                const p = this.providerFactory.componentProviders
                  , b = Kr(n, n[1], this.providerFactory.index, s);
                a = b.slice(0, p),
                gu(o, a);
                for (let T = p; T < b.length; T++)
                    a.push(b[T])
            } else
                a = [],
                gu(o, a);
            return a
        }
        function gu(e, t) {
            for (let n = 0; n < e.length; n++)
                t.push((0,
                e[n])());
            return t
        }
        function Hp(e, t=[]) {
            return n=>{
                n.providersResolver = (s,o)=>function A0(e, t, n) {
                    const s = On();
                    if (s.firstCreatePass) {
                        const o = fi(e);
                        hu(n, s.data, s.blueprint, o, !0),
                        hu(t, s.data, s.blueprint, o, !1)
                    }
                }(s, o ? o(e) : e, t)
            }
        }
        class ca {
        }
        class Up {
        }
        function R0(e, t) {
            return new zp(e,t ?? null)
        }
        class zp extends ca {
            constructor(t, n) {
                super(),
                this._parent = n,
                this._bootstrapComponents = [],
                this.destroyCbs = [],
                this.componentFactoryResolver = new jc(this);
                const s = Me(t);
                this._bootstrapComponents = Xr(s.bootstrap),
                this._r3Injector = bh(t, n, [{
                    provide: ca,
                    useValue: this
                }, {
                    provide: Ea,
                    useValue: this.componentFactoryResolver
                }], te(t), new Set(["environment"])),
                this._r3Injector.resolveInjectorInitializers(),
                this.instance = this._r3Injector.get(t)
            }
            get injector() {
                return this._r3Injector
            }
            destroy() {
                const t = this._r3Injector;
                !t.destroyed && t.destroy(),
                this.destroyCbs.forEach(n=>n()),
                this.destroyCbs = null
            }
            onDestroy(t) {
                this.destroyCbs.push(t)
            }
        }
        class mu extends Up {
            constructor(t) {
                super(),
                this.moduleType = t
            }
            create(t) {
                return new zp(this.moduleType,t)
            }
        }
        class N0 extends ca {
            constructor(t, n, s) {
                super(),
                this.componentFactoryResolver = new jc(this),
                this.instance = null;
                const o = new Md([...t, {
                    provide: ca,
                    useValue: this
                }, {
                    provide: Ea,
                    useValue: this.componentFactoryResolver
                }],n || qa(),s,new Set(["environment"]));
                this.injector = o,
                o.resolveInjectorInitializers()
            }
            destroy() {
                this.injector.destroy()
            }
            onDestroy(t) {
                this.injector.onDestroy(t)
            }
        }
        function vu(e, t, n=null) {
            return new N0(e,t,n).injector
        }
        let F0 = (()=>{
            class e {
                constructor(n) {
                    this._injector = n,
                    this.cachedInjectors = new Map
                }
                getOrCreateStandaloneInjector(n) {
                    if (!n.standalone)
                        return null;
                    if (!this.cachedInjectors.has(n.id)) {
                        const s = Dd(0, n.type)
                          , o = s.length > 0 ? vu([s], this._injector, `Standalone[${n.type.name}]`) : null;
                        this.cachedInjectors.set(n.id, o)
                    }
                    return this.cachedInjectors.get(n.id)
                }
                ngOnDestroy() {
                    try {
                        for (const n of this.cachedInjectors.values())
                            null !== n && n.destroy()
                    } finally {
                        this.cachedInjectors.clear()
                    }
                }
            }
            return e.\u0275prov = Xt({
                token: e,
                providedIn: "environment",
                factory: ()=>new e(Zi(Mo))
            }),
            e
        }
        )();
        function jp(e) {
            e.getStandaloneInjector = t=>t.get(F0).getOrCreateStandaloneInjector(e)
        }
        function Qp(e, t, n) {
            const s = si() + e
              , o = xt();
            return o[s] === Fn ? Fr(o, s, n ? t.call(n) : t()) : Pa(o, s)
        }
        function qp(e, t, n, s) {
            return rg(xt(), si(), e, t, n, s)
        }
        function Xp(e, t, n, s, o) {
            return og(xt(), si(), e, t, n, s, o)
        }
        function eg(e, t, n, s, o, a) {
            return function ag(e, t, n, s, o, a, p, b) {
                const T = t + n;
                return fl(e, T, o, a, p) ? Fr(e, T + 3, b ? s.call(b, o, a, p) : s(o, a, p)) : Va(e, T + 3)
            }(xt(), si(), e, t, n, s, o, a)
        }
        function tg(e, t, n, s, o, a, p) {
            return function lg(e, t, n, s, o, a, p, b, T) {
                const F = t + n;
                return dr(e, F, o, a, p, b) ? Fr(e, F + 4, T ? s.call(T, o, a, p, b) : s(o, a, p, b)) : Va(e, F + 4)
            }(xt(), si(), e, t, n, s, o, a, p)
        }
        function ng(e, t, n, s, o, a, p, b) {
            const T = si() + e
              , F = xt()
              , ee = dr(F, T, n, s, o, a);
            return Is(F, T + 4, p) || ee ? Fr(F, T + 5, b ? t.call(b, n, s, o, a, p) : t(n, s, o, a, p)) : Pa(F, T + 5)
        }
        function ig(e, t, n, s, o, a, p, b, T) {
            const F = si() + e
              , ee = xt()
              , ge = dr(ee, F, n, s, o, a);
            return Po(ee, F + 4, p, b) || ge ? Fr(ee, F + 6, T ? t.call(T, n, s, o, a, p, b) : t(n, s, o, a, p, b)) : Pa(ee, F + 6)
        }
        function sg(e, t, n, s) {
            return function cg(e, t, n, s, o, a) {
                let p = t + n
                  , b = !1;
                for (let T = 0; T < o.length; T++)
                    Is(e, p++, o[T]) && (b = !0);
                return b ? Fr(e, p, s.apply(a, o)) : Va(e, p)
            }(xt(), si(), e, t, n, s)
        }
        function Va(e, t) {
            const n = e[t];
            return n === Fn ? void 0 : n
        }
        function rg(e, t, n, s, o, a) {
            const p = t + n;
            return Is(e, p, o) ? Fr(e, p + 1, a ? s.call(a, o) : s(o)) : Va(e, p + 1)
        }
        function og(e, t, n, s, o, a, p) {
            const b = t + n;
            return Po(e, b, o, a) ? Fr(e, b + 2, p ? s.call(p, o, a) : s(o, a)) : Va(e, b + 2)
        }
        function ug(e, t) {
            const n = On();
            let s;
            const o = e + 22;
            n.firstCreatePass ? (s = function Y0(e, t) {
                if (t)
                    for (let n = t.length - 1; n >= 0; n--) {
                        const s = t[n];
                        if (e === s.name)
                            return s
                    }
            }(t, n.pipeRegistry),
            n.data[o] = s,
            s.onDestroy && (n.destroyHooks || (n.destroyHooks = [])).push(o, s.onDestroy)) : s = n.data[o];
            const a = s.factory || (s.factory = Vi(s.type))
              , p = xn(Ko);
            try {
                const b = Ss(!1)
                  , T = a();
                return Ss(b),
                function Yy(e, t, n, s) {
                    n >= e.data.length && (e.data[n] = null,
                    e.blueprint[n] = null),
                    t[n] = s
                }(n, xt(), o, T),
                T
            } finally {
                xn(p)
            }
        }
        function dg(e, t, n) {
            const s = e + 22
              , o = xt()
              , a = ns(o, s);
            return Ba(o, s) ? rg(o, si(), t, a.transform, n, a) : a.transform(n)
        }
        function hg(e, t, n, s) {
            const o = e + 22
              , a = xt()
              , p = ns(a, o);
            return Ba(a, o) ? og(a, si(), t, p.transform, n, s, p) : p.transform(n, s)
        }
        function Ba(e, t) {
            return e[1].data[t].pure
        }
        function yu(e) {
            return t=>{
                setTimeout(e, void 0, t)
            }
        }
        const Vr = class Q0 extends i.x {
            constructor(t=!1) {
                super(),
                this.__isAsync = t
            }
            emit(t) {
                super.next(t)
            }
            subscribe(t, n, s) {
                let o = t
                  , a = n || (()=>null)
                  , p = s;
                if (t && "object" == typeof t) {
                    const T = t;
                    o = T.next?.bind(T),
                    a = T.error?.bind(T),
                    p = T.complete?.bind(T)
                }
                this.__isAsync && (a = yu(a),
                o && (o = yu(o)),
                p && (p = yu(p)));
                const b = super.subscribe({
                    next: o,
                    error: a,
                    complete: p
                });
                return t instanceof l.w0 && t.add(b),
                b
            }
        }
        ;
        function q0() {
            return this._results[Ao()]()
        }
        class wl {
            constructor(t=!1) {
                this._emitDistinctChangesOnly = t,
                this.dirty = !0,
                this._results = [],
                this._changesDetected = !1,
                this._changes = null,
                this.length = 0,
                this.first = void 0,
                this.last = void 0;
                const n = Ao()
                  , s = wl.prototype;
                s[n] || (s[n] = q0)
            }
            get changes() {
                return this._changes || (this._changes = new Vr)
            }
            get(t) {
                return this._results[t]
            }
            map(t) {
                return this._results.map(t)
            }
            filter(t) {
                return this._results.filter(t)
            }
            find(t) {
                return this._results.find(t)
            }
            reduce(t, n) {
                return this._results.reduce(t, n)
            }
            forEach(t) {
                this._results.forEach(t)
            }
            some(t) {
                return this._results.some(t)
            }
            toArray() {
                return this._results.slice()
            }
            toString() {
                return this._results.toString()
            }
            reset(t, n) {
                const s = this;
                s.dirty = !1;
                const o = Gn(t);
                (this._changesDetected = !function os(e, t, n) {
                    if (e.length !== t.length)
                        return !1;
                    for (let s = 0; s < e.length; s++) {
                        let o = e[s]
                          , a = t[s];
                        if (n && (o = n(o),
                        a = n(a)),
                        a !== o)
                            return !1
                    }
                    return !0
                }(s._results, o, n)) && (s._results = o,
                s.length = o.length,
                s.last = o[this.length - 1],
                s.first = o[0])
            }
            notifyOnChanges() {
                this._changes && (this._changesDetected || !this._emitDistinctChangesOnly) && this._changes.emit(this)
            }
            setDirty() {
                this.dirty = !0
            }
            destroy() {
                this.changes.complete(),
                this.changes.unsubscribe()
            }
        }
        let $a = (()=>{
            class e {
            }
            return e.__NG_ELEMENT_ID__ = tb,
            e
        }
        )();
        const X0 = $a
          , eb = class extends X0 {
            constructor(t, n, s) {
                super(),
                this._declarationLView = t,
                this._declarationTContainer = n,
                this.elementRef = s
            }
            createEmbeddedView(t, n) {
                const s = this._declarationTContainer.tViews
                  , o = ol(this._declarationLView, s, t, 16, null, s.declTNode, null, null, null, null, n || null);
                o[17] = this._declarationLView[this._declarationTContainer.index];
                const p = this._declarationLView[19];
                return null !== p && (o[19] = p.createEmbeddedView(s)),
                Rc(s, o, t),
                new Ia(o)
            }
        }
        ;
        function tb() {
            return Tl(Qn(), xt())
        }
        function Tl(e, t) {
            return 4 & e.type ? new eb(t,e,jo(e, t)) : null
        }
        let Ml = (()=>{
            class e {
            }
            return e.__NG_ELEMENT_ID__ = nb,
            e
        }
        )();
        function nb() {
            return gg(Qn(), xt())
        }
        const ib = Ml
          , fg = class extends ib {
            constructor(t, n, s) {
                super(),
                this._lContainer = t,
                this._hostTNode = n,
                this._hostLView = s
            }
            get element() {
                return jo(this._hostTNode, this._hostLView)
            }
            get injector() {
                return new ur(this._hostTNode,this._hostLView)
            }
            get parentInjector() {
                const t = Wr(this._hostTNode, this._hostLView);
                if (Pr(t)) {
                    const n = Xs(t, this._hostLView)
                      , s = qs(t);
                    return new ur(n[1].data[s + 8],n)
                }
                return new ur(null,this._hostLView)
            }
            clear() {
                for (; this.length > 0; )
                    this.remove(this.length - 1)
            }
            get(t) {
                const n = pg(this._lContainer);
                return null !== n && n[t] || null
            }
            get length() {
                return this._lContainer.length - 10
            }
            createEmbeddedView(t, n, s) {
                let o, a;
                "number" == typeof s ? o = s : null != s && (o = s.index,
                a = s.injector);
                const p = t.createEmbeddedView(n || {}, a);
                return this.insert(p, o),
                p
            }
            createComponent(t, n, s, o, a) {
                const p = t && !function Yn(e) {
                    return "function" == typeof e
                }(t);
                let b;
                if (p)
                    b = n;
                else {
                    const ge = n || {};
                    b = ge.index,
                    s = ge.injector,
                    o = ge.projectableNodes,
                    a = ge.environmentInjector || ge.ngModuleRef
                }
                const T = p ? t : new xa(He(t))
                  , F = s || this.parentInjector;
                if (!a && null == T.ngModule) {
                    const Ue = (p ? F : this.parentInjector).get(Mo, null);
                    Ue && (a = Ue)
                }
                const ee = T.create(F, o, void 0, a);
                return this.insert(ee.hostView, b),
                ee
            }
            insert(t, n) {
                const s = t._lView
                  , o = s[1];
                if (function Hr(e) {
                    return ti(e[3])
                }(s)) {
                    const ee = this.indexOf(t);
                    if (-1 !== ee)
                        this.detach(ee);
                    else {
                        const ge = s[3]
                          , Ue = new fg(ge,ge[6],ge[3]);
                        Ue.detach(Ue.indexOf(t))
                    }
                }
                const a = this._adjustIndex(n)
                  , p = this._lContainer;
                !function u_(e, t, n, s) {
                    const o = 10 + s
                      , a = n.length;
                    s > 0 && (n[o - 1][4] = t),
                    s < a - 10 ? (t[4] = n[o],
                    Rs(n, 10 + s, t)) : (n.push(t),
                    t[4] = null),
                    t[3] = n;
                    const p = t[17];
                    null !== p && n !== p && function d_(e, t) {
                        const n = e[9];
                        t[16] !== t[3][3][16] && (e[2] = !0),
                        null === n ? e[9] = [t] : n.push(t)
                    }(p, t);
                    const b = t[19];
                    null !== b && b.insertView(e),
                    t[2] |= 64
                }(o, s, p, a);
                const b = mc(a, p)
                  , T = s[11]
                  , F = Xa(T, p[7]);
                return null !== F && function a_(e, t, n, s, o, a) {
                    s[0] = o,
                    s[6] = t,
                    Ma(e, s, n, 1, o, a)
                }(o, p[6], T, s, F, b),
                t.attachToViewContainerRef(),
                Rs(Cu(p), a, t),
                t
            }
            move(t, n) {
                return this.insert(t, n)
            }
            indexOf(t) {
                const n = pg(this._lContainer);
                return null !== n ? n.indexOf(t) : -1
            }
            remove(t) {
                const n = this._adjustIndex(t, -1)
                  , s = fc(this._lContainer, n);
                s && (Pi(Cu(this._lContainer), n),
                Qd(s[1], s))
            }
            detach(t) {
                const n = this._adjustIndex(t, -1)
                  , s = fc(this._lContainer, n);
                return s && null != Pi(Cu(this._lContainer), n) ? new Ia(s) : null
            }
            _adjustIndex(t, n=0) {
                return t ?? this.length + n
            }
        }
        ;
        function pg(e) {
            return e[8]
        }
        function Cu(e) {
            return e[8] || (e[8] = [])
        }
        function gg(e, t) {
            let n;
            const s = t[e.index];
            if (ti(s))
                n = s;
            else {
                let o;
                if (8 & e.type)
                    o = ni(s);
                else {
                    const a = t[11];
                    o = a.createComment("");
                    const p = gi(e, t);
                    Io(a, Xa(a, p), o, function g_(e, t) {
                        return e.nextSibling(t)
                    }(a, p), !1)
                }
                t[e.index] = n = qh(s, t, o, e),
                ll(t, n)
            }
            return new fg(n,e,t)
        }
        class bu {
            constructor(t) {
                this.queryList = t,
                this.matches = null
            }
            clone() {
                return new bu(this.queryList)
            }
            setDirty() {
                this.queryList.setDirty()
            }
        }
        class Eu {
            constructor(t=[]) {
                this.queries = t
            }
            createEmbeddedView(t) {
                const n = t.queries;
                if (null !== n) {
                    const s = null !== t.contentQueries ? t.contentQueries[0] : n.length
                      , o = [];
                    for (let a = 0; a < s; a++) {
                        const p = n.getByIndex(a);
                        o.push(this.queries[p.indexInDeclarationView].clone())
                    }
                    return new Eu(o)
                }
                return null
            }
            insertView(t) {
                this.dirtyQueriesWithMatches(t)
            }
            detachView(t) {
                this.dirtyQueriesWithMatches(t)
            }
            dirtyQueriesWithMatches(t) {
                for (let n = 0; n < this.queries.length; n++)
                    null !== Sg(t, n).matches && this.queries[n].setDirty()
            }
        }
        class mg {
            constructor(t, n, s=null) {
                this.predicate = t,
                this.flags = n,
                this.read = s
            }
        }
        class Du {
            constructor(t=[]) {
                this.queries = t
            }
            elementStart(t, n) {
                for (let s = 0; s < this.queries.length; s++)
                    this.queries[s].elementStart(t, n)
            }
            elementEnd(t) {
                for (let n = 0; n < this.queries.length; n++)
                    this.queries[n].elementEnd(t)
            }
            embeddedTView(t) {
                let n = null;
                for (let s = 0; s < this.length; s++) {
                    const o = null !== n ? n.length : 0
                      , a = this.getByIndex(s).embeddedTView(t, o);
                    a && (a.indexInDeclarationView = s,
                    null !== n ? n.push(a) : n = [a])
                }
                return null !== n ? new Du(n) : null
            }
            template(t, n) {
                for (let s = 0; s < this.queries.length; s++)
                    this.queries[s].template(t, n)
            }
            getByIndex(t) {
                return this.queries[t]
            }
            get length() {
                return this.queries.length
            }
            track(t) {
                this.queries.push(t)
            }
        }
        class Su {
            constructor(t, n=-1) {
                this.metadata = t,
                this.matches = null,
                this.indexInDeclarationView = -1,
                this.crossesNgTemplate = !1,
                this._appliesToNextNode = !0,
                this._declarationNodeIndex = n
            }
            elementStart(t, n) {
                this.isApplyingToNode(n) && this.matchTNode(t, n)
            }
            elementEnd(t) {
                this._declarationNodeIndex === t.index && (this._appliesToNextNode = !1)
            }
            template(t, n) {
                this.elementStart(t, n)
            }
            embeddedTView(t, n) {
                return this.isApplyingToNode(t) ? (this.crossesNgTemplate = !0,
                this.addMatch(-t.index, n),
                new Su(this.metadata)) : null
            }
            isApplyingToNode(t) {
                if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
                    const n = this._declarationNodeIndex;
                    let s = t.parent;
                    for (; null !== s && 8 & s.type && s.index !== n; )
                        s = s.parent;
                    return n === (null !== s ? s.index : -1)
                }
                return this._appliesToNextNode
            }
            matchTNode(t, n) {
                const s = this.metadata.predicate;
                if (Array.isArray(s))
                    for (let o = 0; o < s.length; o++) {
                        const a = s[o];
                        this.matchTNodeWithReadOption(t, n, ob(n, a)),
                        this.matchTNodeWithReadOption(t, n, lo(n, t, a, !1, !1))
                    }
                else
                    s === $a ? 4 & n.type && this.matchTNodeWithReadOption(t, n, -1) : this.matchTNodeWithReadOption(t, n, lo(n, t, s, !1, !1))
            }
            matchTNodeWithReadOption(t, n, s) {
                if (null !== s) {
                    const o = this.metadata.read;
                    if (null !== o)
                        if (o === Da || o === Ml || o === $a && 4 & n.type)
                            this.addMatch(n.index, -2);
                        else {
                            const a = lo(n, t, o, !1, !1);
                            null !== a && this.addMatch(n.index, a)
                        }
                    else
                        this.addMatch(n.index, s)
                }
            }
            addMatch(t, n) {
                null === this.matches ? this.matches = [t, n] : this.matches.push(t, n)
            }
        }
        function ob(e, t) {
            const n = e.localNames;
            if (null !== n)
                for (let s = 0; s < n.length; s += 2)
                    if (n[s] === t)
                        return n[s + 1];
            return null
        }
        function lb(e, t, n, s) {
            return -1 === n ? function ab(e, t) {
                return 11 & e.type ? jo(e, t) : 4 & e.type ? Tl(e, t) : null
            }(t, e) : -2 === n ? function cb(e, t, n) {
                return n === Da ? jo(t, e) : n === $a ? Tl(t, e) : n === Ml ? gg(t, e) : void 0
            }(e, t, s) : Kr(e, e[1], n, t)
        }
        function vg(e, t, n, s) {
            const o = t[19].queries[s];
            if (null === o.matches) {
                const a = e.data
                  , p = n.matches
                  , b = [];
                for (let T = 0; T < p.length; T += 2) {
                    const F = p[T];
                    b.push(F < 0 ? null : lb(t, a[F], p[T + 1], n.metadata.read))
                }
                o.matches = b
            }
            return o.matches
        }
        function wu(e, t, n, s) {
            const o = e.queries.getByIndex(n)
              , a = o.matches;
            if (null !== a) {
                const p = vg(e, t, o, n);
                for (let b = 0; b < a.length; b += 2) {
                    const T = a[b];
                    if (T > 0)
                        s.push(p[b / 2]);
                    else {
                        const F = a[b + 1]
                          , ee = t[-T];
                        for (let ge = 10; ge < ee.length; ge++) {
                            const Ue = ee[ge];
                            Ue[17] === Ue[3] && wu(Ue[1], Ue, F, s)
                        }
                        if (null !== ee[9]) {
                            const ge = ee[9];
                            for (let Ue = 0; Ue < ge.length; Ue++) {
                                const tt = ge[Ue];
                                wu(tt[1], tt, F, s)
                            }
                        }
                    }
                }
            }
            return s
        }
        function _g(e) {
            const t = xt()
              , n = On()
              , s = y();
            _(s + 1);
            const o = Sg(n, s);
            if (e.dirty && function mr(e) {
                return 4 == (4 & e[2])
            }(t) === (2 == (2 & o.metadata.flags))) {
                if (null === o.matches)
                    e.reset([]);
                else {
                    const a = o.crossesNgTemplate ? wu(n, t, s, []) : vg(n, t, o, s);
                    e.reset(a, wv),
                    e.notifyOnChanges()
                }
                return !0
            }
            return !1
        }
        function yg(e, t, n) {
            const s = On();
            s.firstCreatePass && (Dg(s, new mg(e,t,n), -1),
            2 == (2 & t) && (s.staticViewQueries = !0)),
            Eg(s, xt(), t)
        }
        function Cg(e, t, n, s) {
            const o = On();
            if (o.firstCreatePass) {
                const a = Qn();
                Dg(o, new mg(t,n,s), a.index),
                function db(e, t) {
                    const n = e.contentQueries || (e.contentQueries = []);
                    t !== (n.length ? n[n.length - 1] : -1) && n.push(e.queries.length - 1, t)
                }(o, e),
                2 == (2 & n) && (o.staticContentQueries = !0)
            }
            Eg(o, xt(), n)
        }
        function bg() {
            return function ub(e, t) {
                return e[19].queries[t].queryList
            }(xt(), y())
        }
        function Eg(e, t, n) {
            const s = new wl(4 == (4 & n));
            zh(e, t, s, s.destroy),
            null === t[19] && (t[19] = new Eu),
            t[19].queries.push(new bu(s))
        }
        function Dg(e, t, n) {
            null === e.queries && (e.queries = new Du),
            e.queries.track(new Su(t,n))
        }
        function Sg(e, t) {
            return e.queries.getByIndex(t)
        }
        function wg(e, t) {
            return Tl(e, t)
        }
        function xl(...e) {}
        const jg = new L("Application Initializer");
        let Al = (()=>{
            class e {
                constructor(n) {
                    this.appInits = n,
                    this.resolve = xl,
                    this.reject = xl,
                    this.initialized = !1,
                    this.done = !1,
                    this.donePromise = new Promise((s,o)=>{
                        this.resolve = s,
                        this.reject = o
                    }
                    )
                }
                runInitializers() {
                    if (this.initialized)
                        return;
                    const n = []
                      , s = ()=>{
                        this.done = !0,
                        this.resolve()
                    }
                    ;
                    if (this.appInits)
                        for (let o = 0; o < this.appInits.length; o++) {
                            const a = this.appInits[o]();
                            if (Xc(a))
                                n.push(a);
                            else if (Cf(a)) {
                                const p = new Promise((b,T)=>{
                                    a.subscribe({
                                        complete: b,
                                        error: T
                                    })
                                }
                                );
                                n.push(p)
                            }
                        }
                    Promise.all(n).then(()=>{
                        s()
                    }
                    ).catch(o=>{
                        this.reject(o)
                    }
                    ),
                    0 === n.length && s(),
                    this.initialized = !0
                }
            }
            return e.\u0275fac = function(n) {
                return new (n || e)(Zi(jg, 8))
            }
            ,
            e.\u0275prov = Xt({
                token: e,
                factory: e.\u0275fac,
                providedIn: "root"
            }),
            e
        }
        )();
        const Gg = new L("AppId",{
            providedIn: "root",
            factory: function Wg() {
                return `${Au()}${Au()}${Au()}`
            }
        });
        function Au() {
            return String.fromCharCode(97 + Math.floor(25 * Math.random()))
        }
        const Yg = new L("Platform Initializer")
          , Pb = new L("Platform ID",{
            providedIn: "platform",
            factory: ()=>"unknown"
        })
          , Kg = new L("appBootstrapListener")
          , Ob = new L("AnimationModuleType");
        let Lb = (()=>{
            class e {
                log(n) {
                    console.log(n)
                }
                warn(n) {
                    console.warn(n)
                }
            }
            return e.\u0275fac = function(n) {
                return new (n || e)
            }
            ,
            e.\u0275prov = Xt({
                token: e,
                factory: e.\u0275fac,
                providedIn: "platform"
            }),
            e
        }
        )();
        const Pl = new L("LocaleId",{
            providedIn: "root",
            factory: ()=>Xu(Pl, $t.Optional | $t.SkipSelf) || function Rb() {
                return typeof $localize < "u" && $localize.locale || la
            }()
        })
          , Nb = new L("DefaultCurrencyCode",{
            providedIn: "root",
            factory: ()=>"USD"
        });
        class Fb {
            constructor(t, n) {
                this.ngModuleFactory = t,
                this.componentFactories = n
            }
        }
        let kb = (()=>{
            class e {
                compileModuleSync(n) {
                    return new mu(n)
                }
                compileModuleAsync(n) {
                    return Promise.resolve(this.compileModuleSync(n))
                }
                compileModuleAndAllComponentsSync(n) {
                    const s = this.compileModuleSync(n)
                      , a = Xr(Me(n).declarations).reduce((p,b)=>{
                        const T = He(b);
                        return T && p.push(new xa(T)),
                        p
                    }
                    , []);
                    return new Fb(s,a)
                }
                compileModuleAndAllComponentsAsync(n) {
                    return Promise.resolve(this.compileModuleAndAllComponentsSync(n))
                }
                clearCache() {}
                clearCacheFor(n) {}
                getModuleId(n) {}
            }
            return e.\u0275fac = function(n) {
                return new (n || e)
            }
            ,
            e.\u0275prov = Xt({
                token: e,
                factory: e.\u0275fac,
                providedIn: "root"
            }),
            e
        }
        )();
        const $b = (()=>Promise.resolve(0))();
        function Pu(e) {
            typeof Zone > "u" ? $b.then(()=>{
                e && e.apply(null, null)
            }
            ) : Zone.current.scheduleMicroTask("scheduleMicrotask", e)
        }
        class hr {
            constructor({enableLongStackTrace: t=!1, shouldCoalesceEventChangeDetection: n=!1, shouldCoalesceRunChangeDetection: s=!1}) {
                if (this.hasPendingMacrotasks = !1,
                this.hasPendingMicrotasks = !1,
                this.isStable = !0,
                this.onUnstable = new Vr(!1),
                this.onMicrotaskEmpty = new Vr(!1),
                this.onStable = new Vr(!1),
                this.onError = new Vr(!1),
                typeof Zone > "u")
                    throw new Be(908,!1);
                Zone.assertZonePatched();
                const o = this;
                if (o._nesting = 0,
                o._outer = o._inner = Zone.current,
                Zone.AsyncStackTaggingZoneSpec) {
                    const a = Zone.AsyncStackTaggingZoneSpec;
                    o._inner = o._inner.fork(new a("Angular"))
                }
                Zone.TaskTrackingZoneSpec && (o._inner = o._inner.fork(new Zone.TaskTrackingZoneSpec)),
                t && Zone.longStackTraceZoneSpec && (o._inner = o._inner.fork(Zone.longStackTraceZoneSpec)),
                o.shouldCoalesceEventChangeDetection = !s && n,
                o.shouldCoalesceRunChangeDetection = s,
                o.lastRequestAnimationFrameId = -1,
                o.nativeRequestAnimationFrame = function Hb() {
                    let e = Et.requestAnimationFrame
                      , t = Et.cancelAnimationFrame;
                    if (typeof Zone < "u" && e && t) {
                        const n = e[Zone.__symbol__("OriginalDelegate")];
                        n && (e = n);
                        const s = t[Zone.__symbol__("OriginalDelegate")];
                        s && (t = s)
                    }
                    return {
                        nativeRequestAnimationFrame: e,
                        nativeCancelAnimationFrame: t
                    }
                }().nativeRequestAnimationFrame,
                function jb(e) {
                    const t = ()=>{
                        !function zb(e) {
                            e.isCheckStableRunning || -1 !== e.lastRequestAnimationFrameId || (e.lastRequestAnimationFrameId = e.nativeRequestAnimationFrame.call(Et, ()=>{
                                e.fakeTopEventTask || (e.fakeTopEventTask = Zone.root.scheduleEventTask("fakeTopEventTask", ()=>{
                                    e.lastRequestAnimationFrameId = -1,
                                    Lu(e),
                                    e.isCheckStableRunning = !0,
                                    Ou(e),
                                    e.isCheckStableRunning = !1
                                }
                                , void 0, ()=>{}
                                , ()=>{}
                                )),
                                e.fakeTopEventTask.invoke()
                            }
                            ),
                            Lu(e))
                        }(e)
                    }
                    ;
                    e._inner = e._inner.fork({
                        name: "angular",
                        properties: {
                            isAngularZone: !0
                        },
                        onInvokeTask: (n,s,o,a,p,b)=>{
                            try {
                                return Qg(e),
                                n.invokeTask(o, a, p, b)
                            } finally {
                                (e.shouldCoalesceEventChangeDetection && "eventTask" === a.type || e.shouldCoalesceRunChangeDetection) && t(),
                                qg(e)
                            }
                        }
                        ,
                        onInvoke: (n,s,o,a,p,b,T)=>{
                            try {
                                return Qg(e),
                                n.invoke(o, a, p, b, T)
                            } finally {
                                e.shouldCoalesceRunChangeDetection && t(),
                                qg(e)
                            }
                        }
                        ,
                        onHasTask: (n,s,o,a)=>{
                            n.hasTask(o, a),
                            s === o && ("microTask" == a.change ? (e._hasPendingMicrotasks = a.microTask,
                            Lu(e),
                            Ou(e)) : "macroTask" == a.change && (e.hasPendingMacrotasks = a.macroTask))
                        }
                        ,
                        onHandleError: (n,s,o,a)=>(n.handleError(o, a),
                        e.runOutsideAngular(()=>e.onError.emit(a)),
                        !1)
                    })
                }(o)
            }
            static isInAngularZone() {
                return typeof Zone < "u" && !0 === Zone.current.get("isAngularZone")
            }
            static assertInAngularZone() {
                if (!hr.isInAngularZone())
                    throw new Be(909,!1)
            }
            static assertNotInAngularZone() {
                if (hr.isInAngularZone())
                    throw new Be(909,!1)
            }
            run(t, n, s) {
                return this._inner.run(t, n, s)
            }
            runTask(t, n, s, o) {
                const a = this._inner
                  , p = a.scheduleEventTask("NgZoneEvent: " + o, t, Ub, xl, xl);
                try {
                    return a.runTask(p, n, s)
                } finally {
                    a.cancelTask(p)
                }
            }
            runGuarded(t, n, s) {
                return this._inner.runGuarded(t, n, s)
            }
            runOutsideAngular(t) {
                return this._outer.run(t)
            }
        }
        const Ub = {};
        function Ou(e) {
            if (0 == e._nesting && !e.hasPendingMicrotasks && !e.isStable)
                try {
                    e._nesting++,
                    e.onMicrotaskEmpty.emit(null)
                } finally {
                    if (e._nesting--,
                    !e.hasPendingMicrotasks)
                        try {
                            e.runOutsideAngular(()=>e.onStable.emit(null))
                        } finally {
                            e.isStable = !0
                        }
                }
        }
        function Lu(e) {
            e.hasPendingMicrotasks = !!(e._hasPendingMicrotasks || (e.shouldCoalesceEventChangeDetection || e.shouldCoalesceRunChangeDetection) && -1 !== e.lastRequestAnimationFrameId)
        }
        function Qg(e) {
            e._nesting++,
            e.isStable && (e.isStable = !1,
            e.onUnstable.emit(null))
        }
        function qg(e) {
            e._nesting--,
            Ou(e)
        }
        class Gb {
            constructor() {
                this.hasPendingMicrotasks = !1,
                this.hasPendingMacrotasks = !1,
                this.isStable = !0,
                this.onUnstable = new Vr,
                this.onMicrotaskEmpty = new Vr,
                this.onStable = new Vr,
                this.onError = new Vr
            }
            run(t, n, s) {
                return t.apply(n, s)
            }
            runGuarded(t, n, s) {
                return t.apply(n, s)
            }
            runOutsideAngular(t) {
                return t()
            }
            runTask(t, n, s, o) {
                return t.apply(n, s)
            }
        }
        const Xg = new L("")
          , em = new L("");
        let Ru, Wb = (()=>{
            class e {
                constructor(n, s, o) {
                    this._ngZone = n,
                    this.registry = s,
                    this._pendingCount = 0,
                    this._isZoneStable = !0,
                    this._didWork = !1,
                    this._callbacks = [],
                    this.taskTrackingZone = null,
                    Ru || (function Yb(e) {
                        Ru = e
                    }(o),
                    o.addToWindow(s)),
                    this._watchAngularEvents(),
                    n.run(()=>{
                        this.taskTrackingZone = typeof Zone > "u" ? null : Zone.current.get("TaskTrackingZone")
                    }
                    )
                }
                _watchAngularEvents() {
                    this._ngZone.onUnstable.subscribe({
                        next: ()=>{
                            this._didWork = !0,
                            this._isZoneStable = !1
                        }
                    }),
                    this._ngZone.runOutsideAngular(()=>{
                        this._ngZone.onStable.subscribe({
                            next: ()=>{
                                hr.assertNotInAngularZone(),
                                Pu(()=>{
                                    this._isZoneStable = !0,
                                    this._runCallbacksIfReady()
                                }
                                )
                            }
                        })
                    }
                    )
                }
                increasePendingRequestCount() {
                    return this._pendingCount += 1,
                    this._didWork = !0,
                    this._pendingCount
                }
                decreasePendingRequestCount() {
                    if (this._pendingCount -= 1,
                    this._pendingCount < 0)
                        throw new Error("pending async requests below zero");
                    return this._runCallbacksIfReady(),
                    this._pendingCount
                }
                isStable() {
                    return this._isZoneStable && 0 === this._pendingCount && !this._ngZone.hasPendingMacrotasks
                }
                _runCallbacksIfReady() {
                    if (this.isStable())
                        Pu(()=>{
                            for (; 0 !== this._callbacks.length; ) {
                                let n = this._callbacks.pop();
                                clearTimeout(n.timeoutId),
                                n.doneCb(this._didWork)
                            }
                            this._didWork = !1
                        }
                        );
                    else {
                        let n = this.getPendingTasks();
                        this._callbacks = this._callbacks.filter(s=>!s.updateCb || !s.updateCb(n) || (clearTimeout(s.timeoutId),
                        !1)),
                        this._didWork = !0
                    }
                }
                getPendingTasks() {
                    return this.taskTrackingZone ? this.taskTrackingZone.macroTasks.map(n=>({
                        source: n.source,
                        creationLocation: n.creationLocation,
                        data: n.data
                    })) : []
                }
                addCallback(n, s, o) {
                    let a = -1;
                    s && s > 0 && (a = setTimeout(()=>{
                        this._callbacks = this._callbacks.filter(p=>p.timeoutId !== a),
                        n(this._didWork, this.getPendingTasks())
                    }
                    , s)),
                    this._callbacks.push({
                        doneCb: n,
                        timeoutId: a,
                        updateCb: o
                    })
                }
                whenStable(n, s, o) {
                    if (o && !this.taskTrackingZone)
                        throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?');
                    this.addCallback(n, s, o),
                    this._runCallbacksIfReady()
                }
                getPendingRequestCount() {
                    return this._pendingCount
                }
                registerApplication(n) {
                    this.registry.registerApplication(n, this)
                }
                unregisterApplication(n) {
                    this.registry.unregisterApplication(n)
                }
                findProviders(n, s, o) {
                    return []
                }
            }
            return e.\u0275fac = function(n) {
                return new (n || e)(Zi(hr),Zi(tm),Zi(em))
            }
            ,
            e.\u0275prov = Xt({
                token: e,
                factory: e.\u0275fac
            }),
            e
        }
        )(), tm = (()=>{
            class e {
                constructor() {
                    this._applications = new Map
                }
                registerApplication(n, s) {
                    this._applications.set(n, s)
                }
                unregisterApplication(n) {
                    this._applications.delete(n)
                }
                unregisterAllApplications() {
                    this._applications.clear()
                }
                getTestability(n) {
                    return this._applications.get(n) || null
                }
                getAllTestabilities() {
                    return Array.from(this._applications.values())
                }
                getAllRootElements() {
                    return Array.from(this._applications.keys())
                }
                findTestabilityInTree(n, s=!0) {
                    return Ru?.findTestabilityInTree(this, n, s) ?? null
                }
            }
            return e.\u0275fac = function(n) {
                return new (n || e)
            }
            ,
            e.\u0275prov = Xt({
                token: e,
                factory: e.\u0275fac,
                providedIn: "platform"
            }),
            e
        }
        )(), go = null;
        const nm = new L("AllowMultipleToken")
          , Nu = new L("PlatformDestroyListeners");
        class Jb {
            constructor(t, n) {
                this.name = t,
                this.token = n
            }
        }
        function sm(e, t, n=[]) {
            const s = `Platform: ${t}`
              , o = new L(s);
            return (a=[])=>{
                let p = Fu();
                if (!p || p.injector.get(nm, !1)) {
                    const b = [...n, ...a, {
                        provide: o,
                        useValue: !0
                    }];
                    e ? e(b) : function Qb(e) {
                        if (go && !go.get(nm, !1))
                            throw new Be(400,!1);
                        go = e;
                        const t = e.get(om);
                        (function im(e) {
                            const t = e.get(Yg, null);
                            t && t.forEach(n=>n())
                        }
                        )(e)
                    }(function rm(e=[], t) {
                        return xo.create({
                            name: t,
                            providers: [{
                                provide: Kl,
                                useValue: "platform"
                            }, {
                                provide: Nu,
                                useValue: new Set([()=>go = null])
                            }, ...e]
                        })
                    }(b, s))
                }
                return function Xb(e) {
                    const t = Fu();
                    if (!t)
                        throw new Be(401,!1);
                    return t
                }()
            }
        }
        function Fu() {
            return go?.get(om) ?? null
        }
        let om = (()=>{
            class e {
                constructor(n) {
                    this._injector = n,
                    this._modules = [],
                    this._destroyListeners = [],
                    this._destroyed = !1
                }
                bootstrapModuleFactory(n, s) {
                    const o = function lm(e, t) {
                        let n;
                        return n = "noop" === e ? new Gb : ("zone.js" === e ? void 0 : e) || new hr(t),
                        n
                    }(s?.ngZone, function am(e) {
                        return {
                            enableLongStackTrace: !1,
                            shouldCoalesceEventChangeDetection: !(!e || !e.ngZoneEventCoalescing) || !1,
                            shouldCoalesceRunChangeDetection: !(!e || !e.ngZoneRunCoalescing) || !1
                        }
                    }(s))
                      , a = [{
                        provide: hr,
                        useValue: o
                    }];
                    return o.run(()=>{
                        const p = xo.create({
                            providers: a,
                            parent: this.injector,
                            name: n.moduleType.name
                        })
                          , b = n.create(p)
                          , T = b.injector.get(Sa, null);
                        if (!T)
                            throw new Be(402,!1);
                        return o.runOutsideAngular(()=>{
                            const F = o.onError.subscribe({
                                next: ee=>{
                                    T.handleError(ee)
                                }
                            });
                            b.onDestroy(()=>{
                                Ll(this._modules, b),
                                F.unsubscribe()
                            }
                            )
                        }
                        ),
                        function cm(e, t, n) {
                            try {
                                const s = n();
                                return Xc(s) ? s.catch(o=>{
                                    throw t.runOutsideAngular(()=>e.handleError(o)),
                                    o
                                }
                                ) : s
                            } catch (s) {
                                throw t.runOutsideAngular(()=>e.handleError(s)),
                                s
                            }
                        }(T, o, ()=>{
                            const F = b.injector.get(Al);
                            return F.runInitializers(),
                            F.donePromise.then(()=>(function mp(e) {
                                be(e, "Expected localeId to be defined"),
                                "string" == typeof e && (gp = e.toLowerCase().replace(/_/g, "-"))
                            }(b.injector.get(Pl, la) || la),
                            this._moduleDoBootstrap(b),
                            b))
                        }
                        )
                    }
                    )
                }
                bootstrapModule(n, s=[]) {
                    const o = um({}, s);
                    return function Kb(e, t, n) {
                        const s = new mu(n);
                        return Promise.resolve(s)
                    }(0, 0, n).then(a=>this.bootstrapModuleFactory(a, o))
                }
                _moduleDoBootstrap(n) {
                    const s = n.injector.get(Ol);
                    if (n._bootstrapComponents.length > 0)
                        n._bootstrapComponents.forEach(o=>s.bootstrap(o));
                    else {
                        if (!n.instance.ngDoBootstrap)
                            throw new Be(403,!1);
                        n.instance.ngDoBootstrap(s)
                    }
                    this._modules.push(n)
                }
                onDestroy(n) {
                    this._destroyListeners.push(n)
                }
                get injector() {
                    return this._injector
                }
                destroy() {
                    if (this._destroyed)
                        throw new Be(404,!1);
                    this._modules.slice().forEach(s=>s.destroy()),
                    this._destroyListeners.forEach(s=>s());
                    const n = this._injector.get(Nu, null);
                    n && (n.forEach(s=>s()),
                    n.clear()),
                    this._destroyed = !0
                }
                get destroyed() {
                    return this._destroyed
                }
            }
            return e.\u0275fac = function(n) {
                return new (n || e)(Zi(xo))
            }
            ,
            e.\u0275prov = Xt({
                token: e,
                factory: e.\u0275fac,
                providedIn: "platform"
            }),
            e
        }
        )();
        function um(e, t) {
            return Array.isArray(t) ? t.reduce(um, e) : {
                ...e,
                ...t
            }
        }
        let Ol = (()=>{
            class e {
                constructor(n, s, o) {
                    this._zone = n,
                    this._injector = s,
                    this._exceptionHandler = o,
                    this._bootstrapListeners = [],
                    this._views = [],
                    this._runningTick = !1,
                    this._stable = !0,
                    this._destroyed = !1,
                    this._destroyListeners = [],
                    this.componentTypes = [],
                    this.components = [],
                    this._onMicrotaskEmptySubscription = this._zone.onMicrotaskEmpty.subscribe({
                        next: ()=>{
                            this._zone.run(()=>{
                                this.tick()
                            }
                            )
                        }
                    });
                    const a = new q.y(b=>{
                        this._stable = this._zone.isStable && !this._zone.hasPendingMacrotasks && !this._zone.hasPendingMicrotasks,
                        this._zone.runOutsideAngular(()=>{
                            b.next(this._stable),
                            b.complete()
                        }
                        )
                    }
                    )
                      , p = new q.y(b=>{
                        let T;
                        this._zone.runOutsideAngular(()=>{
                            T = this._zone.onStable.subscribe(()=>{
                                hr.assertNotInAngularZone(),
                                Pu(()=>{
                                    !this._stable && !this._zone.hasPendingMacrotasks && !this._zone.hasPendingMicrotasks && (this._stable = !0,
                                    b.next(!0))
                                }
                                )
                            }
                            )
                        }
                        );
                        const F = this._zone.onUnstable.subscribe(()=>{
                            hr.assertInAngularZone(),
                            this._stable && (this._stable = !1,
                            this._zone.runOutsideAngular(()=>{
                                b.next(!1)
                            }
                            ))
                        }
                        );
                        return ()=>{
                            T.unsubscribe(),
                            F.unsubscribe()
                        }
                    }
                    );
                    this.isStable = (0,
                    ue.T)(a, p.pipe((0,
                    H.B)()))
                }
                get destroyed() {
                    return this._destroyed
                }
                get injector() {
                    return this._injector
                }
                bootstrap(n, s) {
                    const o = n instanceof xd;
                    if (!this._injector.get(Al).done)
                        throw !o && oe(n),
                        new Be(405,false);
                    let p;
                    p = o ? n : this._injector.get(Ea).resolveComponentFactory(n),
                    this.componentTypes.push(p.componentType);
                    const b = function Zb(e) {
                        return e.isBoundToModule
                    }(p) ? void 0 : this._injector.get(ca)
                      , F = p.create(xo.NULL, [], s || p.selector, b)
                      , ee = F.location.nativeElement
                      , ge = F.injector.get(Xg, null);
                    return ge?.registerApplication(ee),
                    F.onDestroy(()=>{
                        this.detachView(F.hostView),
                        Ll(this.components, F),
                        ge?.unregisterApplication(ee)
                    }
                    ),
                    this._loadComponent(F),
                    F
                }
                tick() {
                    if (this._runningTick)
                        throw new Be(101,!1);
                    try {
                        this._runningTick = !0;
                        for (let n of this._views)
                            n.detectChanges()
                    } catch (n) {
                        this._zone.runOutsideAngular(()=>this._exceptionHandler.handleError(n))
                    } finally {
                        this._runningTick = !1
                    }
                }
                attachView(n) {
                    const s = n;
                    this._views.push(s),
                    s.attachToAppRef(this)
                }
                detachView(n) {
                    const s = n;
                    Ll(this._views, s),
                    s.detachFromAppRef()
                }
                _loadComponent(n) {
                    this.attachView(n.hostView),
                    this.tick(),
                    this.components.push(n),
                    this._injector.get(Kg, []).concat(this._bootstrapListeners).forEach(o=>o(n))
                }
                ngOnDestroy() {
                    if (!this._destroyed)
                        try {
                            this._destroyListeners.forEach(n=>n()),
                            this._views.slice().forEach(n=>n.destroy()),
                            this._onMicrotaskEmptySubscription.unsubscribe()
                        } finally {
                            this._destroyed = !0,
                            this._views = [],
                            this._bootstrapListeners = [],
                            this._destroyListeners = []
                        }
                }
                onDestroy(n) {
                    return this._destroyListeners.push(n),
                    ()=>Ll(this._destroyListeners, n)
                }
                destroy() {
                    if (this._destroyed)
                        throw new Be(406,!1);
                    const n = this._injector;
                    n.destroy && !n.destroyed && n.destroy()
                }
                get viewCount() {
                    return this._views.length
                }
                warnIfDestroyed() {}
            }
            return e.\u0275fac = function(n) {
                return new (n || e)(Zi(hr),Zi(Mo),Zi(Sa))
            }
            ,
            e.\u0275prov = Xt({
                token: e,
                factory: e.\u0275fac,
                providedIn: "root"
            }),
            e
        }
        )();
        function Ll(e, t) {
            const n = e.indexOf(t);
            n > -1 && e.splice(n, 1)
        }
        let hm = !0
          , fm = !1;
        function tE() {
            return fm = !0,
            hm
        }
        function nE() {
            if (fm)
                throw new Error("Cannot enable prod mode after platform setup.");
            hm = !1
        }
        let iE = (()=>{
            class e {
            }
            return e.__NG_ELEMENT_ID__ = sE,
            e
        }
        )();
        function sE(e) {
            return function rE(e, t, n) {
                if (vs(e) && !n) {
                    const s = Nn(e.index, t);
                    return new Ia(s,s)
                }
                return 47 & e.type ? new Ia(t[16],t) : null
            }(Qn(), xt(), 16 == (16 & e))
        }
        class vm {
            constructor() {}
            supports(t) {
                return Aa(t)
            }
            create(t) {
                return new dE(t)
            }
        }
        const uE = (e,t)=>t;
        class dE {
            constructor(t) {
                this.length = 0,
                this._linkedRecords = null,
                this._unlinkedRecords = null,
                this._previousItHead = null,
                this._itHead = null,
                this._itTail = null,
                this._additionsHead = null,
                this._additionsTail = null,
                this._movesHead = null,
                this._movesTail = null,
                this._removalsHead = null,
                this._removalsTail = null,
                this._identityChangesHead = null,
                this._identityChangesTail = null,
                this._trackByFn = t || uE
            }
            forEachItem(t) {
                let n;
                for (n = this._itHead; null !== n; n = n._next)
                    t(n)
            }
            forEachOperation(t) {
                let n = this._itHead
                  , s = this._removalsHead
                  , o = 0
                  , a = null;
                for (; n || s; ) {
                    const p = !s || n && n.currentIndex < ym(s, o, a) ? n : s
                      , b = ym(p, o, a)
                      , T = p.currentIndex;
                    if (p === s)
                        o--,
                        s = s._nextRemoved;
                    else if (n = n._next,
                    null == p.previousIndex)
                        o++;
                    else {
                        a || (a = []);
                        const F = b - o
                          , ee = T - o;
                        if (F != ee) {
                            for (let Ue = 0; Ue < F; Ue++) {
                                const tt = Ue < a.length ? a[Ue] : a[Ue] = 0
                                  , St = tt + Ue;
                                ee <= St && St < F && (a[Ue] = tt + 1)
                            }
                            a[p.previousIndex] = ee - F
                        }
                    }
                    b !== T && t(p, b, T)
                }
            }
            forEachPreviousItem(t) {
                let n;
                for (n = this._previousItHead; null !== n; n = n._nextPrevious)
                    t(n)
            }
            forEachAddedItem(t) {
                let n;
                for (n = this._additionsHead; null !== n; n = n._nextAdded)
                    t(n)
            }
            forEachMovedItem(t) {
                let n;
                for (n = this._movesHead; null !== n; n = n._nextMoved)
                    t(n)
            }
            forEachRemovedItem(t) {
                let n;
                for (n = this._removalsHead; null !== n; n = n._nextRemoved)
                    t(n)
            }
            forEachIdentityChange(t) {
                let n;
                for (n = this._identityChangesHead; null !== n; n = n._nextIdentityChange)
                    t(n)
            }
            diff(t) {
                if (null == t && (t = []),
                !Aa(t))
                    throw new Be(900,!1);
                return this.check(t) ? this : null
            }
            onDestroy() {}
            check(t) {
                this._reset();
                let o, a, p, n = this._itHead, s = !1;
                if (Array.isArray(t)) {
                    this.length = t.length;
                    for (let b = 0; b < this.length; b++)
                        a = t[b],
                        p = this._trackByFn(b, a),
                        null !== n && Object.is(n.trackById, p) ? (s && (n = this._verifyReinsertion(n, a, p, b)),
                        Object.is(n.item, a) || this._addIdentityChange(n, a)) : (n = this._mismatch(n, a, p, b),
                        s = !0),
                        n = n._next
                } else
                    o = 0,
                    function zy(e, t) {
                        if (Array.isArray(e))
                            for (let n = 0; n < e.length; n++)
                                t(e[n]);
                        else {
                            const n = e[Ao()]();
                            let s;
                            for (; !(s = n.next()).done; )
                                t(s.value)
                        }
                    }(t, b=>{
                        p = this._trackByFn(o, b),
                        null !== n && Object.is(n.trackById, p) ? (s && (n = this._verifyReinsertion(n, b, p, o)),
                        Object.is(n.item, b) || this._addIdentityChange(n, b)) : (n = this._mismatch(n, b, p, o),
                        s = !0),
                        n = n._next,
                        o++
                    }
                    ),
                    this.length = o;
                return this._truncate(n),
                this.collection = t,
                this.isDirty
            }
            get isDirty() {
                return null !== this._additionsHead || null !== this._movesHead || null !== this._removalsHead || null !== this._identityChangesHead
            }
            _reset() {
                if (this.isDirty) {
                    let t;
                    for (t = this._previousItHead = this._itHead; null !== t; t = t._next)
                        t._nextPrevious = t._next;
                    for (t = this._additionsHead; null !== t; t = t._nextAdded)
                        t.previousIndex = t.currentIndex;
                    for (this._additionsHead = this._additionsTail = null,
                    t = this._movesHead; null !== t; t = t._nextMoved)
                        t.previousIndex = t.currentIndex;
                    this._movesHead = this._movesTail = null,
                    this._removalsHead = this._removalsTail = null,
                    this._identityChangesHead = this._identityChangesTail = null
                }
            }
            _mismatch(t, n, s, o) {
                let a;
                return null === t ? a = this._itTail : (a = t._prev,
                this._remove(t)),
                null !== (t = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(s, null)) ? (Object.is(t.item, n) || this._addIdentityChange(t, n),
                this._reinsertAfter(t, a, o)) : null !== (t = null === this._linkedRecords ? null : this._linkedRecords.get(s, o)) ? (Object.is(t.item, n) || this._addIdentityChange(t, n),
                this._moveAfter(t, a, o)) : t = this._addAfter(new hE(n,s), a, o),
                t
            }
            _verifyReinsertion(t, n, s, o) {
                let a = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(s, null);
                return null !== a ? t = this._reinsertAfter(a, t._prev, o) : t.currentIndex != o && (t.currentIndex = o,
                this._addToMoves(t, o)),
                t
            }
            _truncate(t) {
                for (; null !== t; ) {
                    const n = t._next;
                    this._addToRemovals(this._unlink(t)),
                    t = n
                }
                null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
                null !== this._additionsTail && (this._additionsTail._nextAdded = null),
                null !== this._movesTail && (this._movesTail._nextMoved = null),
                null !== this._itTail && (this._itTail._next = null),
                null !== this._removalsTail && (this._removalsTail._nextRemoved = null),
                null !== this._identityChangesTail && (this._identityChangesTail._nextIdentityChange = null)
            }
            _reinsertAfter(t, n, s) {
                null !== this._unlinkedRecords && this._unlinkedRecords.remove(t);
                const o = t._prevRemoved
                  , a = t._nextRemoved;
                return null === o ? this._removalsHead = a : o._nextRemoved = a,
                null === a ? this._removalsTail = o : a._prevRemoved = o,
                this._insertAfter(t, n, s),
                this._addToMoves(t, s),
                t
            }
            _moveAfter(t, n, s) {
                return this._unlink(t),
                this._insertAfter(t, n, s),
                this._addToMoves(t, s),
                t
            }
            _addAfter(t, n, s) {
                return this._insertAfter(t, n, s),
                this._additionsTail = null === this._additionsTail ? this._additionsHead = t : this._additionsTail._nextAdded = t,
                t
            }
            _insertAfter(t, n, s) {
                const o = null === n ? this._itHead : n._next;
                return t._next = o,
                t._prev = n,
                null === o ? this._itTail = t : o._prev = t,
                null === n ? this._itHead = t : n._next = t,
                null === this._linkedRecords && (this._linkedRecords = new _m),
                this._linkedRecords.put(t),
                t.currentIndex = s,
                t
            }
            _remove(t) {
                return this._addToRemovals(this._unlink(t))
            }
            _unlink(t) {
                null !== this._linkedRecords && this._linkedRecords.remove(t);
                const n = t._prev
                  , s = t._next;
                return null === n ? this._itHead = s : n._next = s,
                null === s ? this._itTail = n : s._prev = n,
                t
            }
            _addToMoves(t, n) {
                return t.previousIndex === n || (this._movesTail = null === this._movesTail ? this._movesHead = t : this._movesTail._nextMoved = t),
                t
            }
            _addToRemovals(t) {
                return null === this._unlinkedRecords && (this._unlinkedRecords = new _m),
                this._unlinkedRecords.put(t),
                t.currentIndex = null,
                t._nextRemoved = null,
                null === this._removalsTail ? (this._removalsTail = this._removalsHead = t,
                t._prevRemoved = null) : (t._prevRemoved = this._removalsTail,
                this._removalsTail = this._removalsTail._nextRemoved = t),
                t
            }
            _addIdentityChange(t, n) {
                return t.item = n,
                this._identityChangesTail = null === this._identityChangesTail ? this._identityChangesHead = t : this._identityChangesTail._nextIdentityChange = t,
                t
            }
        }
        class hE {
            constructor(t, n) {
                this.item = t,
                this.trackById = n,
                this.currentIndex = null,
                this.previousIndex = null,
                this._nextPrevious = null,
                this._prev = null,
                this._next = null,
                this._prevDup = null,
                this._nextDup = null,
                this._prevRemoved = null,
                this._nextRemoved = null,
                this._nextAdded = null,
                this._nextMoved = null,
                this._nextIdentityChange = null
            }
        }
        class fE {
            constructor() {
                this._head = null,
                this._tail = null
            }
            add(t) {
                null === this._head ? (this._head = this._tail = t,
                t._nextDup = null,
                t._prevDup = null) : (this._tail._nextDup = t,
                t._prevDup = this._tail,
                t._nextDup = null,
                this._tail = t)
            }
            get(t, n) {
                let s;
                for (s = this._head; null !== s; s = s._nextDup)
                    if ((null === n || n <= s.currentIndex) && Object.is(s.trackById, t))
                        return s;
                return null
            }
            remove(t) {
                const n = t._prevDup
                  , s = t._nextDup;
                return null === n ? this._head = s : n._nextDup = s,
                null === s ? this._tail = n : s._prevDup = n,
                null === this._head
            }
        }
        class _m {
            constructor() {
                this.map = new Map
            }
            put(t) {
                const n = t.trackById;
                let s = this.map.get(n);
                s || (s = new fE,
                this.map.set(n, s)),
                s.add(t)
            }
            get(t, n) {
                const o = this.map.get(t);
                return o ? o.get(t, n) : null
            }
            remove(t) {
                const n = t.trackById;
                return this.map.get(n).remove(t) && this.map.delete(n),
                t
            }
            get isEmpty() {
                return 0 === this.map.size
            }
            clear() {
                this.map.clear()
            }
        }
        function ym(e, t, n) {
            const s = e.previousIndex;
            if (null === s)
                return s;
            let o = 0;
            return n && s < n.length && (o = n[s]),
            s + t + o
        }
        class Cm {
            constructor() {}
            supports(t) {
                return t instanceof Map || Yc(t)
            }
            create() {
                return new pE
            }
        }
        class pE {
            constructor() {
                this._records = new Map,
                this._mapHead = null,
                this._appendAfter = null,
                this._previousMapHead = null,
                this._changesHead = null,
                this._changesTail = null,
                this._additionsHead = null,
                this._additionsTail = null,
                this._removalsHead = null,
                this._removalsTail = null
            }
            get isDirty() {
                return null !== this._additionsHead || null !== this._changesHead || null !== this._removalsHead
            }
            forEachItem(t) {
                let n;
                for (n = this._mapHead; null !== n; n = n._next)
                    t(n)
            }
            forEachPreviousItem(t) {
                let n;
                for (n = this._previousMapHead; null !== n; n = n._nextPrevious)
                    t(n)
            }
            forEachChangedItem(t) {
                let n;
                for (n = this._changesHead; null !== n; n = n._nextChanged)
                    t(n)
            }
            forEachAddedItem(t) {
                let n;
                for (n = this._additionsHead; null !== n; n = n._nextAdded)
                    t(n)
            }
            forEachRemovedItem(t) {
                let n;
                for (n = this._removalsHead; null !== n; n = n._nextRemoved)
                    t(n)
            }
            diff(t) {
                if (t) {
                    if (!(t instanceof Map || Yc(t)))
                        throw new Be(900,!1)
                } else
                    t = new Map;
                return this.check(t) ? this : null
            }
            onDestroy() {}
            check(t) {
                this._reset();
                let n = this._mapHead;
                if (this._appendAfter = null,
                this._forEach(t, (s,o)=>{
                    if (n && n.key === o)
                        this._maybeAddToChanges(n, s),
                        this._appendAfter = n,
                        n = n._next;
                    else {
                        const a = this._getOrCreateRecordForKey(o, s);
                        n = this._insertBeforeOrAppend(n, a)
                    }
                }
                ),
                n) {
                    n._prev && (n._prev._next = null),
                    this._removalsHead = n;
                    for (let s = n; null !== s; s = s._nextRemoved)
                        s === this._mapHead && (this._mapHead = null),
                        this._records.delete(s.key),
                        s._nextRemoved = s._next,
                        s.previousValue = s.currentValue,
                        s.currentValue = null,
                        s._prev = null,
                        s._next = null
                }
                return this._changesTail && (this._changesTail._nextChanged = null),
                this._additionsTail && (this._additionsTail._nextAdded = null),
                this.isDirty
            }
            _insertBeforeOrAppend(t, n) {
                if (t) {
                    const s = t._prev;
                    return n._next = t,
                    n._prev = s,
                    t._prev = n,
                    s && (s._next = n),
                    t === this._mapHead && (this._mapHead = n),
                    this._appendAfter = t,
                    t
                }
                return this._appendAfter ? (this._appendAfter._next = n,
                n._prev = this._appendAfter) : this._mapHead = n,
                this._appendAfter = n,
                null
            }
            _getOrCreateRecordForKey(t, n) {
                if (this._records.has(t)) {
                    const o = this._records.get(t);
                    this._maybeAddToChanges(o, n);
                    const a = o._prev
                      , p = o._next;
                    return a && (a._next = p),
                    p && (p._prev = a),
                    o._next = null,
                    o._prev = null,
                    o
                }
                const s = new gE(t);
                return this._records.set(t, s),
                s.currentValue = n,
                this._addToAdditions(s),
                s
            }
            _reset() {
                if (this.isDirty) {
                    let t;
                    for (this._previousMapHead = this._mapHead,
                    t = this._previousMapHead; null !== t; t = t._next)
                        t._nextPrevious = t._next;
                    for (t = this._changesHead; null !== t; t = t._nextChanged)
                        t.previousValue = t.currentValue;
                    for (t = this._additionsHead; null != t; t = t._nextAdded)
                        t.previousValue = t.currentValue;
                    this._changesHead = this._changesTail = null,
                    this._additionsHead = this._additionsTail = null,
                    this._removalsHead = null
                }
            }
            _maybeAddToChanges(t, n) {
                Object.is(n, t.currentValue) || (t.previousValue = t.currentValue,
                t.currentValue = n,
                this._addToChanges(t))
            }
            _addToAdditions(t) {
                null === this._additionsHead ? this._additionsHead = this._additionsTail = t : (this._additionsTail._nextAdded = t,
                this._additionsTail = t)
            }
            _addToChanges(t) {
                null === this._changesHead ? this._changesHead = this._changesTail = t : (this._changesTail._nextChanged = t,
                this._changesTail = t)
            }
            _forEach(t, n) {
                t instanceof Map ? t.forEach(n) : Object.keys(t).forEach(s=>n(t[s], s))
            }
        }
        class gE {
            constructor(t) {
                this.key = t,
                this.previousValue = null,
                this.currentValue = null,
                this._nextPrevious = null,
                this._next = null,
                this._prev = null,
                this._nextAdded = null,
                this._nextRemoved = null,
                this._nextChanged = null
            }
        }
        function bm() {
            return new Hu([new vm])
        }
        let Hu = (()=>{
            class e {
                constructor(n) {
                    this.factories = n
                }
                static create(n, s) {
                    if (null != s) {
                        const o = s.factories.slice();
                        n = n.concat(o)
                    }
                    return new e(n)
                }
                static extend(n) {
                    return {
                        provide: e,
                        useFactory: s=>e.create(n, s || bm()),
                        deps: [[e, new va, new ma]]
                    }
                }
                find(n) {
                    const s = this.factories.find(o=>o.supports(n));
                    if (null != s)
                        return s;
                    throw new Be(901,!1)
                }
            }
            return e.\u0275prov = Xt({
                token: e,
                providedIn: "root",
                factory: bm
            }),
            e
        }
        )();
        function Em() {
            return new Uu([new Cm])
        }
        let Uu = (()=>{
            class e {
                constructor(n) {
                    this.factories = n
                }
                static create(n, s) {
                    if (s) {
                        const o = s.factories.slice();
                        n = n.concat(o)
                    }
                    return new e(n)
                }
                static extend(n) {
                    return {
                        provide: e,
                        useFactory: s=>e.create(n, s || Em()),
                        deps: [[e, new va, new ma]]
                    }
                }
                find(n) {
                    const s = this.factories.find(o=>o.supports(n));
                    if (s)
                        return s;
                    throw new Be(901,!1)
                }
            }
            return e.\u0275prov = Xt({
                token: e,
                providedIn: "root",
                factory: Em
            }),
            e
        }
        )();
        const _E = sm(null, "core", []);
        let yE = (()=>{
            class e {
                constructor(n) {}
            }
            return e.\u0275fac = function(n) {
                return new (n || e)(Zi(Ol))
            }
            ,
            e.\u0275mod = wi({
                type: e
            }),
            e.\u0275inj = Kt({}),
            e
        }
        )();
        function CE(e) {
            return "boolean" == typeof e ? e : null != e && "false" !== e
        }
    }
    ,
    2508: (Ot,je,D)=>{
        D.d(je, {
            F: ()=>ui,
            Fj: ()=>Ne,
            JJ: ()=>$t,
            JL: ()=>gn,
            JU: ()=>te,
            Kr: ()=>Us,
            NI: ()=>Dn,
            On: ()=>Ni,
            Q7: ()=>ci,
            UX: ()=>bs,
            Wl: ()=>W,
            YN: ()=>Ai,
            Zs: ()=>Cs,
            _Y: ()=>Vs,
            a5: ()=>Tt,
            c5: ()=>Gi,
            kI: ()=>Pe,
            nD: ()=>is,
            nJ: ()=>Lt,
            p4: ()=>Hn,
            qu: ()=>On,
            sg: ()=>es,
            u: ()=>Bi,
            u5: ()=>mi,
            wO: ()=>fs,
            wV: ()=>Fi
        });
        var i = D(2560)
          , l = D(4666)
          , q = D(2957)
          , ue = D(1640)
          , H = D(635);
        let U = (()=>{
            class R {
                constructor(I, ne) {
                    this._renderer = I,
                    this._elementRef = ne,
                    this.onChange = at=>{}
                    ,
                    this.onTouched = ()=>{}
                }
                setProperty(I, ne) {
                    this._renderer.setProperty(this._elementRef.nativeElement, I, ne)
                }
                registerOnTouched(I) {
                    this.onTouched = I
                }
                registerOnChange(I) {
                    this.onChange = I
                }
                setDisabledState(I) {
                    this.setProperty("disabled", I)
                }
            }
            return R.\u0275fac = function(I) {
                return new (I || R)(i.Y36(i.Qsj),i.Y36(i.SBq))
            }
            ,
            R.\u0275dir = i.lG2({
                type: R
            }),
            R
        }
        )()
          , z = (()=>{
            class R extends U {
            }
            return R.\u0275fac = function() {
                let P;
                return function(ne) {
                    return (P || (P = i.n5z(R)))(ne || R)
                }
            }(),
            R.\u0275dir = i.lG2({
                type: R,
                features: [i.qOj]
            }),
            R
        }
        )();
        const te = new i.OlP("NgValueAccessor")
          , le = {
            provide: te,
            useExisting: (0,
            i.Gpc)(()=>W),
            multi: !0
        };
        let W = (()=>{
            class R extends z {
                writeValue(I) {
                    this.setProperty("checked", I)
                }
            }
            return R.\u0275fac = function() {
                let P;
                return function(ne) {
                    return (P || (P = i.n5z(R)))(ne || R)
                }
            }(),
            R.\u0275dir = i.lG2({
                type: R,
                selectors: [["input", "type", "checkbox", "formControlName", ""], ["input", "type", "checkbox", "formControl", ""], ["input", "type", "checkbox", "ngModel", ""]],
                hostBindings: function(I, ne) {
                    1 & I && i.NdJ("change", function(nn) {
                        return ne.onChange(nn.target.checked)
                    })("blur", function() {
                        return ne.onTouched()
                    })
                },
                features: [i._Bn([le]), i.qOj]
            }),
            R
        }
        )();
        const fe = {
            provide: te,
            useExisting: (0,
            i.Gpc)(()=>Ne),
            multi: !0
        }
          , Ke = new i.OlP("CompositionEventMode");
        let Ne = (()=>{
            class R extends U {
                constructor(I, ne, at) {
                    super(I, ne),
                    this._compositionMode = at,
                    this._composing = !1,
                    null == this._compositionMode && (this._compositionMode = !function re() {
                        const R = (0,
                        l.q)() ? (0,
                        l.q)().getUserAgent() : "";
                        return /android (\d+)/.test(R.toLowerCase())
                    }())
                }
                writeValue(I) {
                    this.setProperty("value", I ?? "")
                }
                _handleInput(I) {
                    (!this._compositionMode || this._compositionMode && !this._composing) && this.onChange(I)
                }
                _compositionStart() {
                    this._composing = !0
                }
                _compositionEnd(I) {
                    this._composing = !1,
                    this._compositionMode && this.onChange(I)
                }
            }
            return R.\u0275fac = function(I) {
                return new (I || R)(i.Y36(i.Qsj),i.Y36(i.SBq),i.Y36(Ke, 8))
            }
            ,
            R.\u0275dir = i.lG2({
                type: R,
                selectors: [["input", "formControlName", "", 3, "type", "checkbox"], ["textarea", "formControlName", ""], ["input", "formControl", "", 3, "type", "checkbox"], ["textarea", "formControl", ""], ["input", "ngModel", "", 3, "type", "checkbox"], ["textarea", "ngModel", ""], ["", "ngDefaultControl", ""]],
                hostBindings: function(I, ne) {
                    1 & I && i.NdJ("input", function(nn) {
                        return ne._handleInput(nn.target.value)
                    })("blur", function() {
                        return ne.onTouched()
                    })("compositionstart", function() {
                        return ne._compositionStart()
                    })("compositionend", function(nn) {
                        return ne._compositionEnd(nn.target.value)
                    })
                },
                features: [i._Bn([fe]), i.qOj]
            }),
            R
        }
        )();
        function ot(R) {
            return null == R || ("string" == typeof R || Array.isArray(R)) && 0 === R.length
        }
        function $e(R) {
            return null != R && "number" == typeof R.length
        }
        const Fe = new i.OlP("NgValidators")
          , et = new i.OlP("NgAsyncValidators")
          , st = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
        class Pe {
            static min(P) {
                return function Q(R) {
                    return P=>{
                        if (ot(P.value) || ot(R))
                            return null;
                        const I = parseFloat(P.value);
                        return !isNaN(I) && I < R ? {
                            min: {
                                min: R,
                                actual: P.value
                            }
                        } : null
                    }
                }(P)
            }
            static max(P) {
                return function ze(R) {
                    return P=>{
                        if (ot(P.value) || ot(R))
                            return null;
                        const I = parseFloat(P.value);
                        return !isNaN(I) && I > R ? {
                            max: {
                                max: R,
                                actual: P.value
                            }
                        } : null
                    }
                }(P)
            }
            static required(P) {
                return ye(P)
            }
            static requiredTrue(P) {
                return Re(P)
            }
            static email(P) {
                return function ut(R) {
                    return ot(R.value) || st.test(R.value) ? null : {
                        email: !0
                    }
                }(P)
            }
            static minLength(P) {
                return Ce(P)
            }
            static maxLength(P) {
                return Oe(P)
            }
            static pattern(P) {
                return Ze(P)
            }
            static nullValidator(P) {
                return null
            }
            static compose(P) {
                return pe(P)
            }
            static composeAsync(P) {
                return Mt(P)
            }
        }
        function ye(R) {
            return ot(R.value) ? {
                required: !0
            } : null
        }
        function Re(R) {
            return !0 === R.value ? null : {
                required: !0
            }
        }
        function Ce(R) {
            return P=>ot(P.value) || !$e(P.value) ? null : P.value.length < R ? {
                minlength: {
                    requiredLength: R,
                    actualLength: P.value.length
                }
            } : null
        }
        function Oe(R) {
            return P=>$e(P.value) && P.value.length > R ? {
                maxlength: {
                    requiredLength: R,
                    actualLength: P.value.length
                }
            } : null
        }
        function Ze(R) {
            if (!R)
                return _t;
            let P, I;
            return "string" == typeof R ? (I = "",
            "^" !== R.charAt(0) && (I += "^"),
            I += R,
            "$" !== R.charAt(R.length - 1) && (I += "$"),
            P = new RegExp(I)) : (I = R.toString(),
            P = R),
            ne=>{
                if (ot(ne.value))
                    return null;
                const at = ne.value;
                return P.test(at) ? null : {
                    pattern: {
                        requiredPattern: I,
                        actualValue: at
                    }
                }
            }
        }
        function _t(R) {
            return null
        }
        function rt(R) {
            return null != R
        }
        function It(R) {
            return (0,
            i.QGY)(R) ? (0,
            q.D)(R) : R
        }
        function qt(R) {
            let P = {};
            return R.forEach(I=>{
                P = null != I ? {
                    ...P,
                    ...I
                } : P
            }
            ),
            0 === Object.keys(P).length ? null : P
        }
        function ft(R, P) {
            return P.map(I=>I(R))
        }
        function be(R) {
            return R.map(P=>function qe(R) {
                return !R.validate
            }(P) ? P : I=>P.validate(I))
        }
        function pe(R) {
            if (!R)
                return null;
            const P = R.filter(rt);
            return 0 == P.length ? null : function(I) {
                return qt(ft(I, P))
            }
        }
        function pt(R) {
            return null != R ? pe(be(R)) : null
        }
        function Mt(R) {
            if (!R)
                return null;
            const P = R.filter(rt);
            return 0 == P.length ? null : function(I) {
                const ne = ft(I, P).map(It);
                return (0,
                ue.D)(ne).pipe((0,
                H.U)(qt))
            }
        }
        function kt(R) {
            return null != R ? Mt(be(R)) : null
        }
        function Xt(R, P) {
            return null === R ? [P] : Array.isArray(R) ? [...R, P] : [R, P]
        }
        function bt(R) {
            return R._rawValidators
        }
        function Kt(R) {
            return R._rawAsyncValidators
        }
        function k(R) {
            return R ? Array.isArray(R) ? R : [R] : []
        }
        function de(R, P) {
            return Array.isArray(R) ? R.includes(P) : R === P
        }
        function he(R, P) {
            const I = k(P);
            return k(R).forEach(at=>{
                de(I, at) || I.push(at)
            }
            ),
            I
        }
        function Ie(R, P) {
            return k(P).filter(I=>!de(R, I))
        }
        class gt {
            constructor() {
                this._rawValidators = [],
                this._rawAsyncValidators = [],
                this._onDestroyCallbacks = []
            }
            get value() {
                return this.control ? this.control.value : null
            }
            get valid() {
                return this.control ? this.control.valid : null
            }
            get invalid() {
                return this.control ? this.control.invalid : null
            }
            get pending() {
                return this.control ? this.control.pending : null
            }
            get disabled() {
                return this.control ? this.control.disabled : null
            }
            get enabled() {
                return this.control ? this.control.enabled : null
            }
            get errors() {
                return this.control ? this.control.errors : null
            }
            get pristine() {
                return this.control ? this.control.pristine : null
            }
            get dirty() {
                return this.control ? this.control.dirty : null
            }
            get touched() {
                return this.control ? this.control.touched : null
            }
            get status() {
                return this.control ? this.control.status : null
            }
            get untouched() {
                return this.control ? this.control.untouched : null
            }
            get statusChanges() {
                return this.control ? this.control.statusChanges : null
            }
            get valueChanges() {
                return this.control ? this.control.valueChanges : null
            }
            get path() {
                return null
            }
            _setValidators(P) {
                this._rawValidators = P || [],
                this._composedValidatorFn = pt(this._rawValidators)
            }
            _setAsyncValidators(P) {
                this._rawAsyncValidators = P || [],
                this._composedAsyncValidatorFn = kt(this._rawAsyncValidators)
            }
            get validator() {
                return this._composedValidatorFn || null
            }
            get asyncValidator() {
                return this._composedAsyncValidatorFn || null
            }
            _registerOnDestroy(P) {
                this._onDestroyCallbacks.push(P)
            }
            _invokeOnDestroyCallbacks() {
                this._onDestroyCallbacks.forEach(P=>P()),
                this._onDestroyCallbacks = []
            }
            reset(P) {
                this.control && this.control.reset(P)
            }
            hasError(P, I) {
                return !!this.control && this.control.hasError(P, I)
            }
            getError(P, I) {
                return this.control ? this.control.getError(P, I) : null
            }
        }
        class Qe extends gt {
            get formDirective() {
                return null
            }
            get path() {
                return null
            }
        }
        class Tt extends gt {
            constructor() {
                super(...arguments),
                this._parent = null,
                this.name = null,
                this.valueAccessor = null
            }
        }
        class wn {
            constructor(P) {
                this._cd = P
            }
            get isTouched() {
                return !!this._cd?.control?.touched
            }
            get isUntouched() {
                return !!this._cd?.control?.untouched
            }
            get isPristine() {
                return !!this._cd?.control?.pristine
            }
            get isDirty() {
                return !!this._cd?.control?.dirty
            }
            get isValid() {
                return !!this._cd?.control?.valid
            }
            get isInvalid() {
                return !!this._cd?.control?.invalid
            }
            get isPending() {
                return !!this._cd?.control?.pending
            }
            get isSubmitted() {
                return !!this._cd?.submitted
            }
        }
        let $t = (()=>{
            class R extends wn {
                constructor(I) {
                    super(I)
                }
            }
            return R.\u0275fac = function(I) {
                return new (I || R)(i.Y36(Tt, 2))
            }
            ,
            R.\u0275dir = i.lG2({
                type: R,
                selectors: [["", "formControlName", ""], ["", "ngModel", ""], ["", "formControl", ""]],
                hostVars: 14,
                hostBindings: function(I, ne) {
                    2 & I && i.ekj("ng-untouched", ne.isUntouched)("ng-touched", ne.isTouched)("ng-pristine", ne.isPristine)("ng-dirty", ne.isDirty)("ng-valid", ne.isValid)("ng-invalid", ne.isInvalid)("ng-pending", ne.isPending)
                },
                features: [i.qOj]
            }),
            R
        }
        )()
          , gn = (()=>{
            class R extends wn {
                constructor(I) {
                    super(I)
                }
            }
            return R.\u0275fac = function(I) {
                return new (I || R)(i.Y36(Qe, 10))
            }
            ,
            R.\u0275dir = i.lG2({
                type: R,
                selectors: [["", "formGroupName", ""], ["", "formArrayName", ""], ["", "ngModelGroup", ""], ["", "formGroup", ""], ["form", 3, "ngNoForm", ""], ["", "ngForm", ""]],
                hostVars: 16,
                hostBindings: function(I, ne) {
                    2 & I && i.ekj("ng-untouched", ne.isUntouched)("ng-touched", ne.isTouched)("ng-pristine", ne.isPristine)("ng-dirty", ne.isDirty)("ng-valid", ne.isValid)("ng-invalid", ne.isInvalid)("ng-pending", ne.isPending)("ng-submitted", ne.isSubmitted)
                },
                features: [i.qOj]
            }),
            R
        }
        )();
        const jt = "VALID"
          , yn = "INVALID"
          , ai = "PENDING"
          , Zt = "DISABLED";
        function ei(R) {
            return (Ti(R) ? R.validators : R) || null
        }
        function Si(R) {
            return Array.isArray(R) ? pt(R) : R || null
        }
        function _i(R, P) {
            return (Ti(P) ? P.asyncValidators : R) || null
        }
        function wi(R) {
            return Array.isArray(R) ? kt(R) : R || null
        }
        function Ti(R) {
            return null != R && !Array.isArray(R) && "object" == typeof R
        }
        function zi(R, P, I) {
            const ne = R.controls;
            if (!(P ? Object.keys(ne) : ne).length)
                throw new i.vHH(1e3,"");
            if (!ne[I])
                throw new i.vHH(1001,"")
        }
        function Ji(R, P, I) {
            R._forEachChild((ne,at)=>{
                if (void 0 === I[at])
                    throw new i.vHH(1002,"")
            }
            )
        }
        class Li {
            constructor(P, I) {
                this._pendingDirty = !1,
                this._hasOwnPendingAsyncValidator = !1,
                this._pendingTouched = !1,
                this._onCollectionChange = ()=>{}
                ,
                this._parent = null,
                this.pristine = !0,
                this.touched = !1,
                this._onDisabledChange = [],
                this._rawValidators = P,
                this._rawAsyncValidators = I,
                this._composedValidatorFn = Si(this._rawValidators),
                this._composedAsyncValidatorFn = wi(this._rawAsyncValidators)
            }
            get validator() {
                return this._composedValidatorFn
            }
            set validator(P) {
                this._rawValidators = this._composedValidatorFn = P
            }
            get asyncValidator() {
                return this._composedAsyncValidatorFn
            }
            set asyncValidator(P) {
                this._rawAsyncValidators = this._composedAsyncValidatorFn = P
            }
            get parent() {
                return this._parent
            }
            get valid() {
                return this.status === jt
            }
            get invalid() {
                return this.status === yn
            }
            get pending() {
                return this.status == ai
            }
            get disabled() {
                return this.status === Zt
            }
            get enabled() {
                return this.status !== Zt
            }
            get dirty() {
                return !this.pristine
            }
            get untouched() {
                return !this.touched
            }
            get updateOn() {
                return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : "change"
            }
            setValidators(P) {
                this._rawValidators = P,
                this._composedValidatorFn = Si(P)
            }
            setAsyncValidators(P) {
                this._rawAsyncValidators = P,
                this._composedAsyncValidatorFn = wi(P)
            }
            addValidators(P) {
                this.setValidators(he(P, this._rawValidators))
            }
            addAsyncValidators(P) {
                this.setAsyncValidators(he(P, this._rawAsyncValidators))
            }
            removeValidators(P) {
                this.setValidators(Ie(P, this._rawValidators))
            }
            removeAsyncValidators(P) {
                this.setAsyncValidators(Ie(P, this._rawAsyncValidators))
            }
            hasValidator(P) {
                return de(this._rawValidators, P)
            }
            hasAsyncValidator(P) {
                return de(this._rawAsyncValidators, P)
            }
            clearValidators() {
                this.validator = null
            }
            clearAsyncValidators() {
                this.asyncValidator = null
            }
            markAsTouched(P={}) {
                this.touched = !0,
                this._parent && !P.onlySelf && this._parent.markAsTouched(P)
            }
            markAllAsTouched() {
                this.markAsTouched({
                    onlySelf: !0
                }),
                this._forEachChild(P=>P.markAllAsTouched())
            }
            markAsUntouched(P={}) {
                this.touched = !1,
                this._pendingTouched = !1,
                this._forEachChild(I=>{
                    I.markAsUntouched({
                        onlySelf: !0
                    })
                }
                ),
                this._parent && !P.onlySelf && this._parent._updateTouched(P)
            }
            markAsDirty(P={}) {
                this.pristine = !1,
                this._parent && !P.onlySelf && this._parent.markAsDirty(P)
            }
            markAsPristine(P={}) {
                this.pristine = !0,
                this._pendingDirty = !1,
                this._forEachChild(I=>{
                    I.markAsPristine({
                        onlySelf: !0
                    })
                }
                ),
                this._parent && !P.onlySelf && this._parent._updatePristine(P)
            }
            markAsPending(P={}) {
                this.status = ai,
                !1 !== P.emitEvent && this.statusChanges.emit(this.status),
                this._parent && !P.onlySelf && this._parent.markAsPending(P)
            }
            disable(P={}) {
                const I = this._parentMarkedDirty(P.onlySelf);
                this.status = Zt,
                this.errors = null,
                this._forEachChild(ne=>{
                    ne.disable({
                        ...P,
                        onlySelf: !0
                    })
                }
                ),
                this._updateValue(),
                !1 !== P.emitEvent && (this.valueChanges.emit(this.value),
                this.statusChanges.emit(this.status)),
                this._updateAncestors({
                    ...P,
                    skipPristineCheck: I
                }),
                this._onDisabledChange.forEach(ne=>ne(!0))
            }
            enable(P={}) {
                const I = this._parentMarkedDirty(P.onlySelf);
                this.status = jt,
                this._forEachChild(ne=>{
                    ne.enable({
                        ...P,
                        onlySelf: !0
                    })
                }
                ),
                this.updateValueAndValidity({
                    onlySelf: !0,
                    emitEvent: P.emitEvent
                }),
                this._updateAncestors({
                    ...P,
                    skipPristineCheck: I
                }),
                this._onDisabledChange.forEach(ne=>ne(!1))
            }
            _updateAncestors(P) {
                this._parent && !P.onlySelf && (this._parent.updateValueAndValidity(P),
                P.skipPristineCheck || this._parent._updatePristine(),
                this._parent._updateTouched())
            }
            setParent(P) {
                this._parent = P
            }
            getRawValue() {
                return this.value
            }
            updateValueAndValidity(P={}) {
                this._setInitialStatus(),
                this._updateValue(),
                this.enabled && (this._cancelExistingSubscription(),
                this.errors = this._runValidator(),
                this.status = this._calculateStatus(),
                (this.status === jt || this.status === ai) && this._runAsyncValidator(P.emitEvent)),
                !1 !== P.emitEvent && (this.valueChanges.emit(this.value),
                this.statusChanges.emit(this.status)),
                this._parent && !P.onlySelf && this._parent.updateValueAndValidity(P)
            }
            _updateTreeValidity(P={
                emitEvent: !0
            }) {
                this._forEachChild(I=>I._updateTreeValidity(P)),
                this.updateValueAndValidity({
                    onlySelf: !0,
                    emitEvent: P.emitEvent
                })
            }
            _setInitialStatus() {
                this.status = this._allControlsDisabled() ? Zt : jt
            }
            _runValidator() {
                return this.validator ? this.validator(this) : null
            }
            _runAsyncValidator(P) {
                if (this.asyncValidator) {
                    this.status = ai,
                    this._hasOwnPendingAsyncValidator = !0;
                    const I = It(this.asyncValidator(this));
                    this._asyncValidationSubscription = I.subscribe(ne=>{
                        this._hasOwnPendingAsyncValidator = !1,
                        this.setErrors(ne, {
                            emitEvent: P
                        })
                    }
                    )
                }
            }
            _cancelExistingSubscription() {
                this._asyncValidationSubscription && (this._asyncValidationSubscription.unsubscribe(),
                this._hasOwnPendingAsyncValidator = !1)
            }
            setErrors(P, I={}) {
                this.errors = P,
                this._updateControlsErrors(!1 !== I.emitEvent)
            }
            get(P) {
                let I = P;
                return null == I || (Array.isArray(I) || (I = I.split(".")),
                0 === I.length) ? null : I.reduce((ne,at)=>ne && ne._find(at), this)
            }
            getError(P, I) {
                const ne = I ? this.get(I) : this;
                return ne && ne.errors ? ne.errors[P] : null
            }
            hasError(P, I) {
                return !!this.getError(P, I)
            }
            get root() {
                let P = this;
                for (; P._parent; )
                    P = P._parent;
                return P
            }
            _updateControlsErrors(P) {
                this.status = this._calculateStatus(),
                P && this.statusChanges.emit(this.status),
                this._parent && this._parent._updateControlsErrors(P)
            }
            _initObservables() {
                this.valueChanges = new i.vpe,
                this.statusChanges = new i.vpe
            }
            _calculateStatus() {
                return this._allControlsDisabled() ? Zt : this.errors ? yn : this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(ai) ? ai : this._anyControlsHaveStatus(yn) ? yn : jt
            }
            _anyControlsHaveStatus(P) {
                return this._anyControls(I=>I.status === P)
            }
            _anyControlsDirty() {
                return this._anyControls(P=>P.dirty)
            }
            _anyControlsTouched() {
                return this._anyControls(P=>P.touched)
            }
            _updatePristine(P={}) {
                this.pristine = !this._anyControlsDirty(),
                this._parent && !P.onlySelf && this._parent._updatePristine(P)
            }
            _updateTouched(P={}) {
                this.touched = this._anyControlsTouched(),
                this._parent && !P.onlySelf && this._parent._updateTouched(P)
            }
            _registerOnCollectionChange(P) {
                this._onCollectionChange = P
            }
            _setUpdateStrategy(P) {
                Ti(P) && null != P.updateOn && (this._updateOn = P.updateOn)
            }
            _parentMarkedDirty(P) {
                return !P && !(!this._parent || !this._parent.dirty) && !this._parent._anyControlsDirty()
            }
            _find(P) {
                return null
            }
        }
        class He extends Li {
            constructor(P, I, ne) {
                super(ei(I), _i(ne, I)),
                this.controls = P,
                this._initObservables(),
                this._setUpdateStrategy(I),
                this._setUpControls(),
                this.updateValueAndValidity({
                    onlySelf: !0,
                    emitEvent: !!this.asyncValidator
                })
            }
            registerControl(P, I) {
                return this.controls[P] ? this.controls[P] : (this.controls[P] = I,
                I.setParent(this),
                I._registerOnCollectionChange(this._onCollectionChange),
                I)
            }
            addControl(P, I, ne={}) {
                this.registerControl(P, I),
                this.updateValueAndValidity({
                    emitEvent: ne.emitEvent
                }),
                this._onCollectionChange()
            }
            removeControl(P, I={}) {
                this.controls[P] && this.controls[P]._registerOnCollectionChange(()=>{}
                ),
                delete this.controls[P],
                this.updateValueAndValidity({
                    emitEvent: I.emitEvent
                }),
                this._onCollectionChange()
            }
            setControl(P, I, ne={}) {
                this.controls[P] && this.controls[P]._registerOnCollectionChange(()=>{}
                ),
                delete this.controls[P],
                I && this.registerControl(P, I),
                this.updateValueAndValidity({
                    emitEvent: ne.emitEvent
                }),
                this._onCollectionChange()
            }
            contains(P) {
                return this.controls.hasOwnProperty(P) && this.controls[P].enabled
            }
            setValue(P, I={}) {
                Ji(this, 0, P),
                Object.keys(P).forEach(ne=>{
                    zi(this, !0, ne),
                    this.controls[ne].setValue(P[ne], {
                        onlySelf: !0,
                        emitEvent: I.emitEvent
                    })
                }
                ),
                this.updateValueAndValidity(I)
            }
            patchValue(P, I={}) {
                null != P && (Object.keys(P).forEach(ne=>{
                    const at = this.controls[ne];
                    at && at.patchValue(P[ne], {
                        onlySelf: !0,
                        emitEvent: I.emitEvent
                    })
                }
                ),
                this.updateValueAndValidity(I))
            }
            reset(P={}, I={}) {
                this._forEachChild((ne,at)=>{
                    ne.reset(P[at], {
                        onlySelf: !0,
                        emitEvent: I.emitEvent
                    })
                }
                ),
                this._updatePristine(I),
                this._updateTouched(I),
                this.updateValueAndValidity(I)
            }
            getRawValue() {
                return this._reduceChildren({}, (P,I,ne)=>(P[ne] = I.getRawValue(),
                P))
            }
            _syncPendingControls() {
                let P = this._reduceChildren(!1, (I,ne)=>!!ne._syncPendingControls() || I);
                return P && this.updateValueAndValidity({
                    onlySelf: !0
                }),
                P
            }
            _forEachChild(P) {
                Object.keys(this.controls).forEach(I=>{
                    const ne = this.controls[I];
                    ne && P(ne, I)
                }
                )
            }
            _setUpControls() {
                this._forEachChild(P=>{
                    P.setParent(this),
                    P._registerOnCollectionChange(this._onCollectionChange)
                }
                )
            }
            _updateValue() {
                this.value = this._reduceValue()
            }
            _anyControls(P) {
                for (const [I,ne] of Object.entries(this.controls))
                    if (this.contains(I) && P(ne))
                        return !0;
                return !1
            }
            _reduceValue() {
                return this._reduceChildren({}, (I,ne,at)=>((ne.enabled || this.disabled) && (I[at] = ne.value),
                I))
            }
            _reduceChildren(P, I) {
                let ne = P;
                return this._forEachChild((at,nn)=>{
                    ne = I(ne, at, nn)
                }
                ),
                ne
            }
            _allControlsDisabled() {
                for (const P of Object.keys(this.controls))
                    if (this.controls[P].enabled)
                        return !1;
                return Object.keys(this.controls).length > 0 || this.disabled
            }
            _find(P) {
                return this.controls.hasOwnProperty(P) ? this.controls[P] : null
            }
        }
        const Lt = He;
        class oe extends He {
        }
        function Ge(R, P) {
            return [...P.path, R]
        }
        function K(R, P) {
            nt(R, P),
            P.valueAccessor.writeValue(R.value),
            R.disabled && P.valueAccessor.setDisabledState?.(!0),
            function rn(R, P) {
                P.valueAccessor.registerOnChange(I=>{
                    R._pendingValue = I,
                    R._pendingChange = !0,
                    R._pendingDirty = !0,
                    "change" === R.updateOn && Wn(R, P)
                }
                )
            }(R, P),
            function hi(R, P) {
                const I = (ne,at)=>{
                    P.valueAccessor.writeValue(ne),
                    at && P.viewToModelUpdate(ne)
                }
                ;
                R.registerOnChange(I),
                P._registerOnDestroy(()=>{
                    R._unregisterOnChange(I)
                }
                )
            }(R, P),
            function fn(R, P) {
                P.valueAccessor.registerOnTouched(()=>{
                    R._pendingTouched = !0,
                    "blur" === R.updateOn && R._pendingChange && Wn(R, P),
                    "submit" !== R.updateOn && R.markAsTouched()
                }
                )
            }(R, P),
            function Te(R, P) {
                if (P.valueAccessor.setDisabledState) {
                    const I = ne=>{
                        P.valueAccessor.setDisabledState(ne)
                    }
                    ;
                    R.registerOnDisabledChange(I),
                    P._registerOnDestroy(()=>{
                        R._unregisterOnDisabledChange(I)
                    }
                    )
                }
            }(R, P)
        }
        function J(R, P, I=!0) {
            const ne = ()=>{}
            ;
            P.valueAccessor && (P.valueAccessor.registerOnChange(ne),
            P.valueAccessor.registerOnTouched(ne)),
            Rt(R, P),
            R && (P._invokeOnDestroyCallbacks(),
            R._registerOnCollectionChange(()=>{}
            ))
        }
        function Y(R, P) {
            R.forEach(I=>{
                I.registerOnValidatorChange && I.registerOnValidatorChange(P)
            }
            )
        }
        function nt(R, P) {
            const I = bt(R);
            null !== P.validator ? R.setValidators(Xt(I, P.validator)) : "function" == typeof I && R.setValidators([I]);
            const ne = Kt(R);
            null !== P.asyncValidator ? R.setAsyncValidators(Xt(ne, P.asyncValidator)) : "function" == typeof ne && R.setAsyncValidators([ne]);
            const at = ()=>R.updateValueAndValidity();
            Y(P._rawValidators, at),
            Y(P._rawAsyncValidators, at)
        }
        function Rt(R, P) {
            let I = !1;
            if (null !== R) {
                if (null !== P.validator) {
                    const at = bt(R);
                    if (Array.isArray(at) && at.length > 0) {
                        const nn = at.filter(di=>di !== P.validator);
                        nn.length !== at.length && (I = !0,
                        R.setValidators(nn))
                    }
                }
                if (null !== P.asyncValidator) {
                    const at = Kt(R);
                    if (Array.isArray(at) && at.length > 0) {
                        const nn = at.filter(di=>di !== P.asyncValidator);
                        nn.length !== at.length && (I = !0,
                        R.setAsyncValidators(nn))
                    }
                }
            }
            const ne = ()=>{}
            ;
            return Y(P._rawValidators, ne),
            Y(P._rawAsyncValidators, ne),
            I
        }
        function Wn(R, P) {
            R._pendingDirty && R.markAsDirty(),
            R.setValue(R._pendingValue, {
                emitModelToViewChange: !1
            }),
            P.viewToModelUpdate(R._pendingValue),
            R._pendingChange = !1
        }
        function Gt(R, P) {
            nt(R, P)
        }
        function We(R, P) {
            if (!R.hasOwnProperty("model"))
                return !1;
            const I = R.model;
            return !!I.isFirstChange() || !Object.is(P, I.currentValue)
        }
        function Jt(R, P) {
            R._syncPendingControls(),
            P.forEach(I=>{
                const ne = I.control;
                "submit" === ne.updateOn && ne._pendingChange && (I.viewToModelUpdate(ne._pendingValue),
                ne._pendingChange = !1)
            }
            )
        }
        function Bn(R, P) {
            if (!P)
                return null;
            let I, ne, at;
            return Array.isArray(P),
            P.forEach(nn=>{
                nn.constructor === Ne ? I = nn : function Ft(R) {
                    return Object.getPrototypeOf(R.constructor) === z
                }(nn) ? ne = nn : at = nn
            }
            ),
            at || ne || I || null
        }
        const Ri = {
            provide: Qe,
            useExisting: (0,
            i.Gpc)(()=>ui)
        }
          , Zn = (()=>Promise.resolve())();
        let ui = (()=>{
            class R extends Qe {
                constructor(I, ne) {
                    super(),
                    this.submitted = !1,
                    this._directives = new Set,
                    this.ngSubmit = new i.vpe,
                    this.form = new He({},pt(I),kt(ne))
                }
                ngAfterViewInit() {
                    this._setUpdateStrategy()
                }
                get formDirective() {
                    return this
                }
                get control() {
                    return this.form
                }
                get path() {
                    return []
                }
                get controls() {
                    return this.form.controls
                }
                addControl(I) {
                    Zn.then(()=>{
                        const ne = this._findContainer(I.path);
                        I.control = ne.registerControl(I.name, I.control),
                        K(I.control, I),
                        I.control.updateValueAndValidity({
                            emitEvent: !1
                        }),
                        this._directives.add(I)
                    }
                    )
                }
                getControl(I) {
                    return this.form.get(I.path)
                }
                removeControl(I) {
                    Zn.then(()=>{
                        const ne = this._findContainer(I.path);
                        ne && ne.removeControl(I.name),
                        this._directives.delete(I)
                    }
                    )
                }
                addFormGroup(I) {
                    Zn.then(()=>{
                        const ne = this._findContainer(I.path)
                          , at = new He({});
                        Gt(at, I),
                        ne.registerControl(I.name, at),
                        at.updateValueAndValidity({
                            emitEvent: !1
                        })
                    }
                    )
                }
                removeFormGroup(I) {
                    Zn.then(()=>{
                        const ne = this._findContainer(I.path);
                        ne && ne.removeControl(I.name)
                    }
                    )
                }
                getFormGroup(I) {
                    return this.form.get(I.path)
                }
                updateModel(I, ne) {
                    Zn.then(()=>{
                        this.form.get(I.path).setValue(ne)
                    }
                    )
                }
                setValue(I) {
                    this.control.setValue(I)
                }
                onSubmit(I) {
                    return this.submitted = !0,
                    Jt(this.form, this._directives),
                    this.ngSubmit.emit(I),
                    "dialog" === I?.target?.method
                }
                onReset() {
                    this.resetForm()
                }
                resetForm(I) {
                    this.form.reset(I),
                    this.submitted = !1
                }
                _setUpdateStrategy() {
                    this.options && null != this.options.updateOn && (this.form._updateOn = this.options.updateOn)
                }
                _findContainer(I) {
                    return I.pop(),
                    I.length ? this.form.get(I) : this.form
                }
            }
            return R.\u0275fac = function(I) {
                return new (I || R)(i.Y36(Fe, 10),i.Y36(et, 10))
            }
            ,
            R.\u0275dir = i.lG2({
                type: R,
                selectors: [["form", 3, "ngNoForm", "", 3, "formGroup", ""], ["ng-form"], ["", "ngForm", ""]],
                hostBindings: function(I, ne) {
                    1 & I && i.NdJ("submit", function(nn) {
                        return ne.onSubmit(nn)
                    })("reset", function() {
                        return ne.onReset()
                    })
                },
                inputs: {
                    options: ["ngFormOptions", "options"]
                },
                outputs: {
                    ngSubmit: "ngSubmit"
                },
                exportAs: ["ngForm"],
                features: [i._Bn([Ri]), i.qOj]
            }),
            R
        }
        )();
        function ji(R, P) {
            const I = R.indexOf(P);
            I > -1 && R.splice(I, 1)
        }
        function li(R) {
            return "object" == typeof R && null !== R && 2 === Object.keys(R).length && "value"in R && "disabled"in R
        }
        const Dn = class extends Li {
            constructor(P=null, I, ne) {
                super(ei(I), _i(ne, I)),
                this.defaultValue = null,
                this._onChange = [],
                this._pendingChange = !1,
                this._applyFormState(P),
                this._setUpdateStrategy(I),
                this._initObservables(),
                this.updateValueAndValidity({
                    onlySelf: !0,
                    emitEvent: !!this.asyncValidator
                }),
                Ti(I) && (I.nonNullable || I.initialValueIsDefault) && (this.defaultValue = li(P) ? P.value : P)
            }
            setValue(P, I={}) {
                this.value = this._pendingValue = P,
                this._onChange.length && !1 !== I.emitModelToViewChange && this._onChange.forEach(ne=>ne(this.value, !1 !== I.emitViewToModelChange)),
                this.updateValueAndValidity(I)
            }
            patchValue(P, I={}) {
                this.setValue(P, I)
            }
            reset(P=this.defaultValue, I={}) {
                this._applyFormState(P),
                this.markAsPristine(I),
                this.markAsUntouched(I),
                this.setValue(this.value, I),
                this._pendingChange = !1
            }
            _updateValue() {}
            _anyControls(P) {
                return !1
            }
            _allControlsDisabled() {
                return this.disabled
            }
            registerOnChange(P) {
                this._onChange.push(P)
            }
            _unregisterOnChange(P) {
                ji(this._onChange, P)
            }
            registerOnDisabledChange(P) {
                this._onDisabledChange.push(P)
            }
            _unregisterOnDisabledChange(P) {
                ji(this._onDisabledChange, P)
            }
            _forEachChild(P) {}
            _syncPendingControls() {
                return !("submit" !== this.updateOn || (this._pendingDirty && this.markAsDirty(),
                this._pendingTouched && this.markAsTouched(),
                !this._pendingChange) || (this.setValue(this._pendingValue, {
                    onlySelf: !0,
                    emitModelToViewChange: !1
                }),
                0))
            }
            _applyFormState(P) {
                li(P) ? (this.value = this._pendingValue = P.value,
                P.disabled ? this.disable({
                    onlySelf: !0,
                    emitEvent: !1
                }) : this.enable({
                    onlySelf: !0,
                    emitEvent: !1
                })) : this.value = this._pendingValue = P
            }
        }
          , Hn = Dn
          , Xi = {
            provide: Tt,
            useExisting: (0,
            i.Gpc)(()=>Ni)
        }
          , ks = (()=>Promise.resolve())();
        let Ni = (()=>{
            class R extends Tt {
                constructor(I, ne, at, nn, di) {
                    super(),
                    this._changeDetectorRef = di,
                    this.control = new Dn,
                    this._registered = !1,
                    this.update = new i.vpe,
                    this._parent = I,
                    this._setValidators(ne),
                    this._setAsyncValidators(at),
                    this.valueAccessor = Bn(0, nn)
                }
                ngOnChanges(I) {
                    if (this._checkForErrors(),
                    !this._registered || "name"in I) {
                        if (this._registered && (this._checkName(),
                        this.formDirective)) {
                            const ne = I.name.previousValue;
                            this.formDirective.removeControl({
                                name: ne,
                                path: this._getPath(ne)
                            })
                        }
                        this._setUpControl()
                    }
                    "isDisabled"in I && this._updateDisabled(I),
                    We(I, this.viewModel) && (this._updateValue(this.model),
                    this.viewModel = this.model)
                }
                ngOnDestroy() {
                    this.formDirective && this.formDirective.removeControl(this)
                }
                get path() {
                    return this._getPath(this.name)
                }
                get formDirective() {
                    return this._parent ? this._parent.formDirective : null
                }
                viewToModelUpdate(I) {
                    this.viewModel = I,
                    this.update.emit(I)
                }
                _setUpControl() {
                    this._setUpdateStrategy(),
                    this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this),
                    this._registered = !0
                }
                _setUpdateStrategy() {
                    this.options && null != this.options.updateOn && (this.control._updateOn = this.options.updateOn)
                }
                _isStandalone() {
                    return !this._parent || !(!this.options || !this.options.standalone)
                }
                _setUpStandalone() {
                    K(this.control, this),
                    this.control.updateValueAndValidity({
                        emitEvent: !1
                    })
                }
                _checkForErrors() {
                    this._isStandalone() || this._checkParentType(),
                    this._checkName()
                }
                _checkParentType() {}
                _checkName() {
                    this.options && this.options.name && (this.name = this.options.name),
                    this._isStandalone()
                }
                _updateValue(I) {
                    ks.then(()=>{
                        this.control.setValue(I, {
                            emitViewToModelChange: !1
                        }),
                        this._changeDetectorRef?.markForCheck()
                    }
                    )
                }
                _updateDisabled(I) {
                    const ne = I.isDisabled.currentValue
                      , at = 0 !== ne && (0,
                    i.D6c)(ne);
                    ks.then(()=>{
                        at && !this.control.disabled ? this.control.disable() : !at && this.control.disabled && this.control.enable(),
                        this._changeDetectorRef?.markForCheck()
                    }
                    )
                }
                _getPath(I) {
                    return this._parent ? Ge(I, this._parent) : [I]
                }
            }
            return R.\u0275fac = function(I) {
                return new (I || R)(i.Y36(Qe, 9),i.Y36(Fe, 10),i.Y36(et, 10),i.Y36(te, 10),i.Y36(i.sBO, 8))
            }
            ,
            R.\u0275dir = i.lG2({
                type: R,
                selectors: [["", "ngModel", "", 3, "formControlName", "", 3, "formControl", ""]],
                inputs: {
                    name: "name",
                    isDisabled: ["disabled", "isDisabled"],
                    model: ["ngModel", "model"],
                    options: ["ngModelOptions", "options"]
                },
                outputs: {
                    update: "ngModelChange"
                },
                exportAs: ["ngModel"],
                features: [i._Bn([Xi]), i.qOj, i.TTD]
            }),
            R
        }
        )()
          , Vs = (()=>{
            class R {
            }
            return R.\u0275fac = function(I) {
                return new (I || R)
            }
            ,
            R.\u0275dir = i.lG2({
                type: R,
                selectors: [["form", 3, "ngNoForm", "", 3, "ngNativeValidate", ""]],
                hostAttrs: ["novalidate", ""]
            }),
            R
        }
        )();
        const Br = {
            provide: te,
            useExisting: (0,
            i.Gpc)(()=>Fi),
            multi: !0
        };
        let Fi = (()=>{
            class R extends z {
                writeValue(I) {
                    this.setProperty("value", I ?? "")
                }
                registerOnChange(I) {
                    this.onChange = ne=>{
                        I("" == ne ? null : parseFloat(ne))
                    }
                }
            }
            return R.\u0275fac = function() {
                let P;
                return function(ne) {
                    return (P || (P = i.n5z(R)))(ne || R)
                }
            }(),
            R.\u0275dir = i.lG2({
                type: R,
                selectors: [["input", "type", "number", "formControlName", ""], ["input", "type", "number", "formControl", ""], ["input", "type", "number", "ngModel", ""]],
                hostBindings: function(I, ne) {
                    1 & I && i.NdJ("input", function(nn) {
                        return ne.onChange(nn.target.value)
                    })("blur", function() {
                        return ne.onTouched()
                    })
                },
                features: [i._Bn([Br]), i.qOj]
            }),
            R
        }
        )()
          , sr = (()=>{
            class R {
            }
            return R.\u0275fac = function(I) {
                return new (I || R)
            }
            ,
            R.\u0275mod = i.oAB({
                type: R
            }),
            R.\u0275inj = i.cJS({}),
            R
        }
        )();
        const Bs = new i.OlP("NgModelWithFormControlWarning")
          , xs = {
            provide: Qe,
            useExisting: (0,
            i.Gpc)(()=>es)
        };
        let es = (()=>{
            class R extends Qe {
                constructor(I, ne) {
                    super(),
                    this.submitted = !1,
                    this._onCollectionChange = ()=>this._updateDomValue(),
                    this.directives = [],
                    this.form = null,
                    this.ngSubmit = new i.vpe,
                    this._setValidators(I),
                    this._setAsyncValidators(ne)
                }
                ngOnChanges(I) {
                    this._checkFormPresent(),
                    I.hasOwnProperty("form") && (this._updateValidators(),
                    this._updateDomValue(),
                    this._updateRegistrations(),
                    this._oldForm = this.form)
                }
                ngOnDestroy() {
                    this.form && (Rt(this.form, this),
                    this.form._onCollectionChange === this._onCollectionChange && this.form._registerOnCollectionChange(()=>{}
                    ))
                }
                get formDirective() {
                    return this
                }
                get control() {
                    return this.form
                }
                get path() {
                    return []
                }
                addControl(I) {
                    const ne = this.form.get(I.path);
                    return K(ne, I),
                    ne.updateValueAndValidity({
                        emitEvent: !1
                    }),
                    this.directives.push(I),
                    ne
                }
                getControl(I) {
                    return this.form.get(I.path)
                }
                removeControl(I) {
                    J(I.control || null, I, !1),
                    function Rn(R, P) {
                        const I = R.indexOf(P);
                        I > -1 && R.splice(I, 1)
                    }(this.directives, I)
                }
                addFormGroup(I) {
                    this._setUpFormContainer(I)
                }
                removeFormGroup(I) {
                    this._cleanUpFormContainer(I)
                }
                getFormGroup(I) {
                    return this.form.get(I.path)
                }
                addFormArray(I) {
                    this._setUpFormContainer(I)
                }
                removeFormArray(I) {
                    this._cleanUpFormContainer(I)
                }
                getFormArray(I) {
                    return this.form.get(I.path)
                }
                updateModel(I, ne) {
                    this.form.get(I.path).setValue(ne)
                }
                onSubmit(I) {
                    return this.submitted = !0,
                    Jt(this.form, this.directives),
                    this.ngSubmit.emit(I),
                    "dialog" === I?.target?.method
                }
                onReset() {
                    this.resetForm()
                }
                resetForm(I) {
                    this.form.reset(I),
                    this.submitted = !1
                }
                _updateDomValue() {
                    this.directives.forEach(I=>{
                        const ne = I.control
                          , at = this.form.get(I.path);
                        ne !== at && (J(ne || null, I),
                        (R=>R instanceof Dn)(at) && (K(at, I),
                        I.control = at))
                    }
                    ),
                    this.form._updateTreeValidity({
                        emitEvent: !1
                    })
                }
                _setUpFormContainer(I) {
                    const ne = this.form.get(I.path);
                    Gt(ne, I),
                    ne.updateValueAndValidity({
                        emitEvent: !1
                    })
                }
                _cleanUpFormContainer(I) {
                    if (this.form) {
                        const ne = this.form.get(I.path);
                        ne && function xe(R, P) {
                            return Rt(R, P)
                        }(ne, I) && ne.updateValueAndValidity({
                            emitEvent: !1
                        })
                    }
                }
                _updateRegistrations() {
                    this.form._registerOnCollectionChange(this._onCollectionChange),
                    this._oldForm && this._oldForm._registerOnCollectionChange(()=>{}
                    )
                }
                _updateValidators() {
                    nt(this.form, this),
                    this._oldForm && Rt(this._oldForm, this)
                }
                _checkFormPresent() {}
            }
            return R.\u0275fac = function(I) {
                return new (I || R)(i.Y36(Fe, 10),i.Y36(et, 10))
            }
            ,
            R.\u0275dir = i.lG2({
                type: R,
                selectors: [["", "formGroup", ""]],
                hostBindings: function(I, ne) {
                    1 & I && i.NdJ("submit", function(nn) {
                        return ne.onSubmit(nn)
                    })("reset", function() {
                        return ne.onReset()
                    })
                },
                inputs: {
                    form: ["formGroup", "form"]
                },
                outputs: {
                    ngSubmit: "ngSubmit"
                },
                exportAs: ["ngForm"],
                features: [i._Bn([xs]), i.qOj, i.TTD]
            }),
            R
        }
        )();
        const Vi = {
            provide: Tt,
            useExisting: (0,
            i.Gpc)(()=>Bi)
        };
        let Bi = (()=>{
            class R extends Tt {
                constructor(I, ne, at, nn, di) {
                    super(),
                    this._ngModelWarningConfig = di,
                    this._added = !1,
                    this.update = new i.vpe,
                    this._ngModelWarningSent = !1,
                    this._parent = I,
                    this._setValidators(ne),
                    this._setAsyncValidators(at),
                    this.valueAccessor = Bn(0, nn)
                }
                set isDisabled(I) {}
                ngOnChanges(I) {
                    this._added || this._setUpControl(),
                    We(I, this.viewModel) && (this.viewModel = this.model,
                    this.formDirective.updateModel(this, this.model))
                }
                ngOnDestroy() {
                    this.formDirective && this.formDirective.removeControl(this)
                }
                viewToModelUpdate(I) {
                    this.viewModel = I,
                    this.update.emit(I)
                }
                get path() {
                    return Ge(null == this.name ? this.name : this.name.toString(), this._parent)
                }
                get formDirective() {
                    return this._parent ? this._parent.formDirective : null
                }
                _checkParentType() {}
                _setUpControl() {
                    this._checkParentType(),
                    this.control = this.formDirective.addControl(this),
                    this._added = !0
                }
            }
            return R._ngModelWarningSentOnce = !1,
            R.\u0275fac = function(I) {
                return new (I || R)(i.Y36(Qe, 13),i.Y36(Fe, 10),i.Y36(et, 10),i.Y36(te, 10),i.Y36(Bs, 8))
            }
            ,
            R.\u0275dir = i.lG2({
                type: R,
                selectors: [["", "formControlName", ""]],
                inputs: {
                    name: ["formControlName", "name"],
                    isDisabled: ["disabled", "isDisabled"],
                    model: ["ngModel", "model"]
                },
                outputs: {
                    update: "ngModelChange"
                },
                features: [i._Bn([Vi]), i.qOj, i.TTD]
            }),
            R
        }
        )();
        const ts = {
            provide: te,
            useExisting: (0,
            i.Gpc)(()=>ds),
            multi: !0
        };
        function Hs(R, P) {
            return null == R ? `${P}` : (P && "object" == typeof P && (P = "Object"),
            `${R}: ${P}`.slice(0, 50))
        }
        let ds = (()=>{
            class R extends z {
                constructor() {
                    super(...arguments),
                    this._optionMap = new Map,
                    this._idCounter = 0,
                    this._compareWith = Object.is
                }
                set compareWith(I) {
                    this._compareWith = I
                }
                writeValue(I) {
                    this.value = I;
                    const at = Hs(this._getOptionId(I), I);
                    this.setProperty("value", at)
                }
                registerOnChange(I) {
                    this.onChange = ne=>{
                        this.value = this._getOptionValue(ne),
                        I(this.value)
                    }
                }
                _registerOption() {
                    return (this._idCounter++).toString()
                }
                _getOptionId(I) {
                    for (const ne of Array.from(this._optionMap.keys()))
                        if (this._compareWith(this._optionMap.get(ne), I))
                            return ne;
                    return null
                }
                _getOptionValue(I) {
                    const ne = function _s(R) {
                        return R.split(":")[0]
                    }(I);
                    return this._optionMap.has(ne) ? this._optionMap.get(ne) : I
                }
            }
            return R.\u0275fac = function() {
                let P;
                return function(ne) {
                    return (P || (P = i.n5z(R)))(ne || R)
                }
            }(),
            R.\u0275dir = i.lG2({
                type: R,
                selectors: [["select", "formControlName", "", 3, "multiple", ""], ["select", "formControl", "", 3, "multiple", ""], ["select", "ngModel", "", 3, "multiple", ""]],
                hostBindings: function(I, ne) {
                    1 & I && i.NdJ("change", function(nn) {
                        return ne.onChange(nn.target.value)
                    })("blur", function() {
                        return ne.onTouched()
                    })
                },
                inputs: {
                    compareWith: "compareWith"
                },
                features: [i._Bn([ts]), i.qOj]
            }),
            R
        }
        )()
          , Ai = (()=>{
            class R {
                constructor(I, ne, at) {
                    this._element = I,
                    this._renderer = ne,
                    this._select = at,
                    this._select && (this.id = this._select._registerOption())
                }
                set ngValue(I) {
                    null != this._select && (this._select._optionMap.set(this.id, I),
                    this._setElementValue(Hs(this.id, I)),
                    this._select.writeValue(this._select.value))
                }
                set value(I) {
                    this._setElementValue(I),
                    this._select && this._select.writeValue(this._select.value)
                }
                _setElementValue(I) {
                    this._renderer.setProperty(this._element.nativeElement, "value", I)
                }
                ngOnDestroy() {
                    this._select && (this._select._optionMap.delete(this.id),
                    this._select.writeValue(this._select.value))
                }
            }
            return R.\u0275fac = function(I) {
                return new (I || R)(i.Y36(i.SBq),i.Y36(i.Qsj),i.Y36(ds, 9))
            }
            ,
            R.\u0275dir = i.lG2({
                type: R,
                selectors: [["option"]],
                inputs: {
                    ngValue: "ngValue",
                    value: "value"
                }
            }),
            R
        }
        )();
        const Zs = {
            provide: te,
            useExisting: (0,
            i.Gpc)(()=>Jn),
            multi: !0
        };
        function As(R, P) {
            return null == R ? `${P}` : ("string" == typeof P && (P = `'${P}'`),
            P && "object" == typeof P && (P = "Object"),
            `${R}: ${P}`.slice(0, 50))
        }
        let Jn = (()=>{
            class R extends z {
                constructor() {
                    super(...arguments),
                    this._optionMap = new Map,
                    this._idCounter = 0,
                    this._compareWith = Object.is
                }
                set compareWith(I) {
                    this._compareWith = I
                }
                writeValue(I) {
                    let ne;
                    if (this.value = I,
                    Array.isArray(I)) {
                        const at = I.map(nn=>this._getOptionId(nn));
                        ne = (nn,di)=>{
                            nn._setSelected(at.indexOf(di.toString()) > -1)
                        }
                    } else
                        ne = (at,nn)=>{
                            at._setSelected(!1)
                        }
                        ;
                    this._optionMap.forEach(ne)
                }
                registerOnChange(I) {
                    this.onChange = ne=>{
                        const at = []
                          , nn = ne.selectedOptions;
                        if (void 0 !== nn) {
                            const di = nn;
                            for (let Ls = 0; Ls < di.length; Ls++) {
                                const si = this._getOptionValue(di[Ls].value);
                                at.push(si)
                            }
                        } else {
                            const di = ne.options;
                            for (let Ls = 0; Ls < di.length; Ls++) {
                                const Es = di[Ls];
                                if (Es.selected) {
                                    const si = this._getOptionValue(Es.value);
                                    at.push(si)
                                }
                            }
                        }
                        this.value = at,
                        I(at)
                    }
                }
                _registerOption(I) {
                    const ne = (this._idCounter++).toString();
                    return this._optionMap.set(ne, I),
                    ne
                }
                _getOptionId(I) {
                    for (const ne of Array.from(this._optionMap.keys()))
                        if (this._compareWith(this._optionMap.get(ne)._value, I))
                            return ne;
                    return null
                }
                _getOptionValue(I) {
                    const ne = function pi(R) {
                        return R.split(":")[0]
                    }(I);
                    return this._optionMap.has(ne) ? this._optionMap.get(ne)._value : I
                }
            }
            return R.\u0275fac = function() {
                let P;
                return function(ne) {
                    return (P || (P = i.n5z(R)))(ne || R)
                }
            }(),
            R.\u0275dir = i.lG2({
                type: R,
                selectors: [["select", "multiple", "", "formControlName", ""], ["select", "multiple", "", "formControl", ""], ["select", "multiple", "", "ngModel", ""]],
                hostBindings: function(I, ne) {
                    1 & I && i.NdJ("change", function(nn) {
                        return ne.onChange(nn.target)
                    })("blur", function() {
                        return ne.onTouched()
                    })
                },
                inputs: {
                    compareWith: "compareWith"
                },
                features: [i._Bn([Zs]), i.qOj]
            }),
            R
        }
        )()
          , Us = (()=>{
            class R {
                constructor(I, ne, at) {
                    this._element = I,
                    this._renderer = ne,
                    this._select = at,
                    this._select && (this.id = this._select._registerOption(this))
                }
                set ngValue(I) {
                    null != this._select && (this._value = I,
                    this._setElementValue(As(this.id, I)),
                    this._select.writeValue(this._select.value))
                }
                set value(I) {
                    this._select ? (this._value = I,
                    this._setElementValue(As(this.id, I)),
                    this._select.writeValue(this._select.value)) : this._setElementValue(I)
                }
                _setElementValue(I) {
                    this._renderer.setProperty(this._element.nativeElement, "value", I)
                }
                _setSelected(I) {
                    this._renderer.setProperty(this._element.nativeElement, "selected", I)
                }
                ngOnDestroy() {
                    this._select && (this._select._optionMap.delete(this.id),
                    this._select.writeValue(this._select.value))
                }
            }
            return R.\u0275fac = function(I) {
                return new (I || R)(i.Y36(i.SBq),i.Y36(i.Qsj),i.Y36(Jn, 9))
            }
            ,
            R.\u0275dir = i.lG2({
                type: R,
                selectors: [["option"]],
                inputs: {
                    ngValue: "ngValue",
                    value: "value"
                }
            }),
            R
        }
        )();
        function Ps(R) {
            return "number" == typeof R ? R : parseInt(R, 10)
        }
        let $i = (()=>{
            class R {
                constructor() {
                    this._validator = _t
                }
                ngOnChanges(I) {
                    if (this.inputName in I) {
                        const ne = this.normalizeInput(I[this.inputName].currentValue);
                        this._enabled = this.enabled(ne),
                        this._validator = this._enabled ? this.createValidator(ne) : _t,
                        this._onChange && this._onChange()
                    }
                }
                validate(I) {
                    return this._validator(I)
                }
                registerOnValidatorChange(I) {
                    this._onChange = I
                }
                enabled(I) {
                    return null != I
                }
            }
            return R.\u0275fac = function(I) {
                return new (I || R)
            }
            ,
            R.\u0275dir = i.lG2({
                type: R,
                features: [i.TTD]
            }),
            R
        }
        )();
        const Qi = {
            provide: Fe,
            useExisting: (0,
            i.Gpc)(()=>ci),
            multi: !0
        }
          , gi = {
            provide: Fe,
            useExisting: (0,
            i.Gpc)(()=>Cs),
            multi: !0
        };
        let ci = (()=>{
            class R extends $i {
                constructor() {
                    super(...arguments),
                    this.inputName = "required",
                    this.normalizeInput = i.D6c,
                    this.createValidator = I=>ye
                }
                enabled(I) {
                    return I
                }
            }
            return R.\u0275fac = function() {
                let P;
                return function(ne) {
                    return (P || (P = i.n5z(R)))(ne || R)
                }
            }(),
            R.\u0275dir = i.lG2({
                type: R,
                selectors: [["", "required", "", "formControlName", "", 3, "type", "checkbox"], ["", "required", "", "formControl", "", 3, "type", "checkbox"], ["", "required", "", "ngModel", "", 3, "type", "checkbox"]],
                hostVars: 1,
                hostBindings: function(I, ne) {
                    2 & I && i.uIk("required", ne._enabled ? "" : null)
                },
                inputs: {
                    required: "required"
                },
                features: [i._Bn([Qi]), i.qOj]
            }),
            R
        }
        )()
          , Cs = (()=>{
            class R extends ci {
                constructor() {
                    super(...arguments),
                    this.createValidator = I=>Re
                }
            }
            return R.\u0275fac = function() {
                let P;
                return function(ne) {
                    return (P || (P = i.n5z(R)))(ne || R)
                }
            }(),
            R.\u0275dir = i.lG2({
                type: R,
                selectors: [["input", "type", "checkbox", "required", "", "formControlName", ""], ["input", "type", "checkbox", "required", "", "formControl", ""], ["input", "type", "checkbox", "required", "", "ngModel", ""]],
                hostVars: 1,
                hostBindings: function(I, ne) {
                    2 & I && i.uIk("required", ne._enabled ? "" : null)
                },
                features: [i._Bn([gi]), i.qOj]
            }),
            R
        }
        )();
        const mr = {
            provide: Fe,
            useExisting: (0,
            i.Gpc)(()=>fs),
            multi: !0
        };
        let fs = (()=>{
            class R extends $i {
                constructor() {
                    super(...arguments),
                    this.inputName = "minlength",
                    this.normalizeInput = I=>Ps(I),
                    this.createValidator = I=>Ce(I)
                }
            }
            return R.\u0275fac = function() {
                let P;
                return function(ne) {
                    return (P || (P = i.n5z(R)))(ne || R)
                }
            }(),
            R.\u0275dir = i.lG2({
                type: R,
                selectors: [["", "minlength", "", "formControlName", ""], ["", "minlength", "", "formControl", ""], ["", "minlength", "", "ngModel", ""]],
                hostVars: 1,
                hostBindings: function(I, ne) {
                    2 & I && i.uIk("minlength", ne._enabled ? ne.minlength : null)
                },
                inputs: {
                    minlength: "minlength"
                },
                features: [i._Bn([mr]), i.qOj]
            }),
            R
        }
        )();
        const Hr = {
            provide: Fe,
            useExisting: (0,
            i.Gpc)(()=>is),
            multi: !0
        };
        let is = (()=>{
            class R extends $i {
                constructor() {
                    super(...arguments),
                    this.inputName = "maxlength",
                    this.normalizeInput = I=>Ps(I),
                    this.createValidator = I=>Oe(I)
                }
            }
            return R.\u0275fac = function() {
                let P;
                return function(ne) {
                    return (P || (P = i.n5z(R)))(ne || R)
                }
            }(),
            R.\u0275dir = i.lG2({
                type: R,
                selectors: [["", "maxlength", "", "formControlName", ""], ["", "maxlength", "", "formControl", ""], ["", "maxlength", "", "ngModel", ""]],
                hostVars: 1,
                hostBindings: function(I, ne) {
                    2 & I && i.uIk("maxlength", ne._enabled ? ne.maxlength : null)
                },
                inputs: {
                    maxlength: "maxlength"
                },
                features: [i._Bn([Hr]), i.qOj]
            }),
            R
        }
        )();
        const xr = {
            provide: Fe,
            useExisting: (0,
            i.Gpc)(()=>Gi),
            multi: !0
        };
        let Gi = (()=>{
            class R extends $i {
                constructor() {
                    super(...arguments),
                    this.inputName = "pattern",
                    this.normalizeInput = I=>I,
                    this.createValidator = I=>Ze(I)
                }
            }
            return R.\u0275fac = function() {
                let P;
                return function(ne) {
                    return (P || (P = i.n5z(R)))(ne || R)
                }
            }(),
            R.\u0275dir = i.lG2({
                type: R,
                selectors: [["", "pattern", "", "formControlName", ""], ["", "pattern", "", "formControl", ""], ["", "pattern", "", "ngModel", ""]],
                hostVars: 1,
                hostBindings: function(I, ne) {
                    2 & I && i.uIk("pattern", ne._enabled ? ne.pattern : null)
                },
                inputs: {
                    pattern: "pattern"
                },
                features: [i._Bn([xr]), i.qOj]
            }),
            R
        }
        )()
          , ss = (()=>{
            class R {
            }
            return R.\u0275fac = function(I) {
                return new (I || R)
            }
            ,
            R.\u0275mod = i.oAB({
                type: R
            }),
            R.\u0275inj = i.cJS({
                imports: [sr]
            }),
            R
        }
        )()
          , mi = (()=>{
            class R {
            }
            return R.\u0275fac = function(I) {
                return new (I || R)
            }
            ,
            R.\u0275mod = i.oAB({
                type: R
            }),
            R.\u0275inj = i.cJS({
                imports: [ss]
            }),
            R
        }
        )()
          , bs = (()=>{
            class R {
                static withConfig(I) {
                    return {
                        ngModule: R,
                        providers: [{
                            provide: Bs,
                            useValue: I.warnOnNgModelWithFormControl
                        }]
                    }
                }
            }
            return R.\u0275fac = function(I) {
                return new (I || R)
            }
            ,
            R.\u0275mod = i.oAB({
                type: R
            }),
            R.\u0275inj = i.cJS({
                imports: [ss]
            }),
            R
        }
        )();
        class Ii extends Li {
            constructor(P, I, ne) {
                super(ei(I), _i(ne, I)),
                this.controls = P,
                this._initObservables(),
                this._setUpdateStrategy(I),
                this._setUpControls(),
                this.updateValueAndValidity({
                    onlySelf: !0,
                    emitEvent: !!this.asyncValidator
                })
            }
            at(P) {
                return this.controls[this._adjustIndex(P)]
            }
            push(P, I={}) {
                this.controls.push(P),
                this._registerControl(P),
                this.updateValueAndValidity({
                    emitEvent: I.emitEvent
                }),
                this._onCollectionChange()
            }
            insert(P, I, ne={}) {
                this.controls.splice(P, 0, I),
                this._registerControl(I),
                this.updateValueAndValidity({
                    emitEvent: ne.emitEvent
                })
            }
            removeAt(P, I={}) {
                let ne = this._adjustIndex(P);
                ne < 0 && (ne = 0),
                this.controls[ne] && this.controls[ne]._registerOnCollectionChange(()=>{}
                ),
                this.controls.splice(ne, 1),
                this.updateValueAndValidity({
                    emitEvent: I.emitEvent
                })
            }
            setControl(P, I, ne={}) {
                let at = this._adjustIndex(P);
                at < 0 && (at = 0),
                this.controls[at] && this.controls[at]._registerOnCollectionChange(()=>{}
                ),
                this.controls.splice(at, 1),
                I && (this.controls.splice(at, 0, I),
                this._registerControl(I)),
                this.updateValueAndValidity({
                    emitEvent: ne.emitEvent
                }),
                this._onCollectionChange()
            }
            get length() {
                return this.controls.length
            }
            setValue(P, I={}) {
                Ji(this, 0, P),
                P.forEach((ne,at)=>{
                    zi(this, !1, at),
                    this.at(at).setValue(ne, {
                        onlySelf: !0,
                        emitEvent: I.emitEvent
                    })
                }
                ),
                this.updateValueAndValidity(I)
            }
            patchValue(P, I={}) {
                null != P && (P.forEach((ne,at)=>{
                    this.at(at) && this.at(at).patchValue(ne, {
                        onlySelf: !0,
                        emitEvent: I.emitEvent
                    })
                }
                ),
                this.updateValueAndValidity(I))
            }
            reset(P=[], I={}) {
                this._forEachChild((ne,at)=>{
                    ne.reset(P[at], {
                        onlySelf: !0,
                        emitEvent: I.emitEvent
                    })
                }
                ),
                this._updatePristine(I),
                this._updateTouched(I),
                this.updateValueAndValidity(I)
            }
            getRawValue() {
                return this.controls.map(P=>P.getRawValue())
            }
            clear(P={}) {
                this.controls.length < 1 || (this._forEachChild(I=>I._registerOnCollectionChange(()=>{}
                )),
                this.controls.splice(0),
                this.updateValueAndValidity({
                    emitEvent: P.emitEvent
                }))
            }
            _adjustIndex(P) {
                return P < 0 ? P + this.length : P
            }
            _syncPendingControls() {
                let P = this.controls.reduce((I,ne)=>!!ne._syncPendingControls() || I, !1);
                return P && this.updateValueAndValidity({
                    onlySelf: !0
                }),
                P
            }
            _forEachChild(P) {
                this.controls.forEach((I,ne)=>{
                    P(I, ne)
                }
                )
            }
            _updateValue() {
                this.value = this.controls.filter(P=>P.enabled || this.disabled).map(P=>P.value)
            }
            _anyControls(P) {
                return this.controls.some(I=>I.enabled && P(I))
            }
            _setUpControls() {
                this._forEachChild(P=>this._registerControl(P))
            }
            _allControlsDisabled() {
                for (const P of this.controls)
                    if (P.enabled)
                        return !1;
                return this.controls.length > 0 || this.disabled
            }
            _registerControl(P) {
                P.setParent(this),
                P._registerOnCollectionChange(this._onCollectionChange)
            }
            _find(P) {
                return this.at(P) ?? null
            }
        }
        function xt(R) {
            return !!R && (void 0 !== R.asyncValidators || void 0 !== R.validators || void 0 !== R.updateOn)
        }
        let On = (()=>{
            class R {
                constructor() {
                    this.useNonNullable = !1
                }
                get nonNullable() {
                    const I = new R;
                    return I.useNonNullable = !0,
                    I
                }
                group(I, ne=null) {
                    const at = this._reduceControls(I);
                    let nn = {};
                    return xt(ne) ? nn = ne : null !== ne && (nn.validators = ne.validator,
                    nn.asyncValidators = ne.asyncValidator),
                    new He(at,nn)
                }
                record(I, ne=null) {
                    const at = this._reduceControls(I);
                    return new oe(at,ne)
                }
                control(I, ne, at) {
                    let nn = {};
                    return this.useNonNullable ? (xt(ne) ? nn = ne : (nn.validators = ne,
                    nn.asyncValidators = at),
                    new Dn(I,{
                        ...nn,
                        nonNullable: !0
                    })) : new Dn(I,ne,at)
                }
                array(I, ne, at) {
                    const nn = I.map(di=>this._createControl(di));
                    return new Ii(nn,ne,at)
                }
                _reduceControls(I) {
                    const ne = {};
                    return Object.keys(I).forEach(at=>{
                        ne[at] = this._createControl(I[at])
                    }
                    ),
                    ne
                }
                _createControl(I) {
                    return I instanceof Dn || I instanceof Li ? I : Array.isArray(I) ? this.control(I[0], I.length > 1 ? I[1] : null, I.length > 2 ? I[2] : null) : this.control(I)
                }
            }
            return R.\u0275fac = function(I) {
                return new (I || R)
            }
            ,
            R.\u0275prov = i.Yz7({
                token: R,
                factory: R.\u0275fac,
                providedIn: bs
            }),
            R
        }
        )()
    }
    ,
    4497: (Ot,je,D)=>{
        D.d(je, {
            Dx: ()=>vt,
            H7: ()=>x,
            Qz: ()=>Be,
            b2: ()=>qn,
            h_: ()=>Xn,
            q6: ()=>an,
            se: ()=>rt
        });
        var i = D(4666)
          , l = D(2560);
        class q extends i.w_ {
            constructor() {
                super(...arguments),
                this.supportsDOMEvents = !0
            }
        }
        class ue extends q {
            static makeCurrent() {
                (0,
                i.HT)(new ue)
            }
            onAndCancel(J, Y, Te) {
                return J.addEventListener(Y, Te, !1),
                ()=>{
                    J.removeEventListener(Y, Te, !1)
                }
            }
            dispatchEvent(J, Y) {
                J.dispatchEvent(Y)
            }
            remove(J) {
                J.parentNode && J.parentNode.removeChild(J)
            }
            createElement(J, Y) {
                return (Y = Y || this.getDefaultDocument()).createElement(J)
            }
            createHtmlDocument() {
                return document.implementation.createHTMLDocument("fakeTitle")
            }
            getDefaultDocument() {
                return document
            }
            isElementNode(J) {
                return J.nodeType === Node.ELEMENT_NODE
            }
            isShadowRoot(J) {
                return J instanceof DocumentFragment
            }
            getGlobalEventTarget(J, Y) {
                return "window" === Y ? window : "document" === Y ? J : "body" === Y ? J.body : null
            }
            getBaseHref(J) {
                const Y = function U() {
                    return H = H || document.querySelector("base"),
                    H ? H.getAttribute("href") : null
                }();
                return null == Y ? null : function te(K) {
                    z = z || document.createElement("a"),
                    z.setAttribute("href", K);
                    const J = z.pathname;
                    return "/" === J.charAt(0) ? J : `/${J}`
                }(Y)
            }
            resetBaseElement() {
                H = null
            }
            getUserAgent() {
                return window.navigator.userAgent
            }
            getCookie(J) {
                return (0,
                i.Mx)(document.cookie, J)
            }
        }
        let z, H = null;
        const le = new l.OlP("TRANSITION_ID")
          , fe = [{
            provide: l.ip1,
            useFactory: function W(K, J, Y) {
                return ()=>{
                    Y.get(l.CZH).donePromise.then(()=>{
                        const Te = (0,
                        i.q)()
                          , nt = J.querySelectorAll(`style[ng-transition="${K}"]`);
                        for (let Rt = 0; Rt < nt.length; Rt++)
                            Te.remove(nt[Rt])
                    }
                    )
                }
            },
            deps: [le, i.K0, l.zs3],
            multi: !0
        }];
        let Ke = (()=>{
            class K {
                build() {
                    return new XMLHttpRequest
                }
            }
            return K.\u0275fac = function(Y) {
                return new (Y || K)
            }
            ,
            K.\u0275prov = l.Yz7({
                token: K,
                factory: K.\u0275fac
            }),
            K
        }
        )();
        const Ne = new l.OlP("EventManagerPlugins");
        let Be = (()=>{
            class K {
                constructor(Y, Te) {
                    this._zone = Te,
                    this._eventNameToPlugin = new Map,
                    Y.forEach(nt=>nt.manager = this),
                    this._plugins = Y.slice().reverse()
                }
                addEventListener(Y, Te, nt) {
                    return this._findPluginFor(Te).addEventListener(Y, Te, nt)
                }
                addGlobalEventListener(Y, Te, nt) {
                    return this._findPluginFor(Te).addGlobalEventListener(Y, Te, nt)
                }
                getZone() {
                    return this._zone
                }
                _findPluginFor(Y) {
                    const Te = this._eventNameToPlugin.get(Y);
                    if (Te)
                        return Te;
                    const nt = this._plugins;
                    for (let Rt = 0; Rt < nt.length; Rt++) {
                        const rn = nt[Rt];
                        if (rn.supports(Y))
                            return this._eventNameToPlugin.set(Y, rn),
                            rn
                    }
                    throw new Error(`No event manager plugin found for event ${Y}`)
                }
            }
            return K.\u0275fac = function(Y) {
                return new (Y || K)(l.LFG(Ne),l.LFG(l.R0b))
            }
            ,
            K.\u0275prov = l.Yz7({
                token: K,
                factory: K.\u0275fac
            }),
            K
        }
        )();
        class ot {
            constructor(J) {
                this._doc = J
            }
            addGlobalEventListener(J, Y, Te) {
                const nt = (0,
                i.q)().getGlobalEventTarget(this._doc, J);
                if (!nt)
                    throw new Error(`Unsupported event target ${nt} for event ${Y}`);
                return this.addEventListener(nt, Y, Te)
            }
        }
        let $e = (()=>{
            class K {
                constructor() {
                    this._stylesSet = new Set
                }
                addStyles(Y) {
                    const Te = new Set;
                    Y.forEach(nt=>{
                        this._stylesSet.has(nt) || (this._stylesSet.add(nt),
                        Te.add(nt))
                    }
                    ),
                    this.onStylesAdded(Te)
                }
                onStylesAdded(Y) {}
                getAllStyles() {
                    return Array.from(this._stylesSet)
                }
            }
            return K.\u0275fac = function(Y) {
                return new (Y || K)
            }
            ,
            K.\u0275prov = l.Yz7({
                token: K,
                factory: K.\u0275fac
            }),
            K
        }
        )()
          , Fe = (()=>{
            class K extends $e {
                constructor(Y) {
                    super(),
                    this._doc = Y,
                    this._hostNodes = new Map,
                    this._hostNodes.set(Y.head, [])
                }
                _addStylesToHost(Y, Te, nt) {
                    Y.forEach(Rt=>{
                        const rn = this._doc.createElement("style");
                        rn.textContent = Rt,
                        nt.push(Te.appendChild(rn))
                    }
                    )
                }
                addHost(Y) {
                    const Te = [];
                    this._addStylesToHost(this._stylesSet, Y, Te),
                    this._hostNodes.set(Y, Te)
                }
                removeHost(Y) {
                    const Te = this._hostNodes.get(Y);
                    Te && Te.forEach(et),
                    this._hostNodes.delete(Y)
                }
                onStylesAdded(Y) {
                    this._hostNodes.forEach((Te,nt)=>{
                        this._addStylesToHost(Y, nt, Te)
                    }
                    )
                }
                ngOnDestroy() {
                    this._hostNodes.forEach(Y=>Y.forEach(et))
                }
            }
            return K.\u0275fac = function(Y) {
                return new (Y || K)(l.LFG(i.K0))
            }
            ,
            K.\u0275prov = l.Yz7({
                token: K,
                factory: K.\u0275fac
            }),
            K
        }
        )();
        function et(K) {
            (0,
            i.q)().remove(K)
        }
        const st = {
            svg: "http://www.w3.org/2000/svg",
            xhtml: "http://www.w3.org/1999/xhtml",
            xlink: "http://www.w3.org/1999/xlink",
            xml: "http://www.w3.org/XML/1998/namespace",
            xmlns: "http://www.w3.org/2000/xmlns/",
            math: "http://www.w3.org/1998/MathML/"
        }
          , Pe = /%COMP%/g;
        function Oe(K, J, Y) {
            for (let Te = 0; Te < J.length; Te++) {
                let nt = J[Te];
                Array.isArray(nt) ? Oe(K, nt, Y) : (nt = nt.replace(Pe, K),
                Y.push(nt))
            }
            return Y
        }
        function Ze(K) {
            return J=>{
                if ("__ngUnwrap__" === J)
                    return K;
                !1 === K(J) && (J.preventDefault(),
                J.returnValue = !1)
            }
        }
        let rt = (()=>{
            class K {
                constructor(Y, Te, nt) {
                    this.eventManager = Y,
                    this.sharedStylesHost = Te,
                    this.appId = nt,
                    this.rendererByCompId = new Map,
                    this.defaultRenderer = new It(Y)
                }
                createRenderer(Y, Te) {
                    if (!Y || !Te)
                        return this.defaultRenderer;
                    switch (Te.encapsulation) {
                    case l.ifc.Emulated:
                        {
                            let nt = this.rendererByCompId.get(Te.id);
                            return nt || (nt = new be(this.eventManager,this.sharedStylesHost,Te,this.appId),
                            this.rendererByCompId.set(Te.id, nt)),
                            nt.applyToHost(Y),
                            nt
                        }
                    case 1:
                    case l.ifc.ShadowDom:
                        return new pe(this.eventManager,this.sharedStylesHost,Y,Te);
                    default:
                        if (!this.rendererByCompId.has(Te.id)) {
                            const nt = Oe(Te.id, Te.styles, []);
                            this.sharedStylesHost.addStyles(nt),
                            this.rendererByCompId.set(Te.id, this.defaultRenderer)
                        }
                        return this.defaultRenderer
                    }
                }
                begin() {}
                end() {}
            }
            return K.\u0275fac = function(Y) {
                return new (Y || K)(l.LFG(Be),l.LFG(Fe),l.LFG(l.AFp))
            }
            ,
            K.\u0275prov = l.Yz7({
                token: K,
                factory: K.\u0275fac
            }),
            K
        }
        )();
        class It {
            constructor(J) {
                this.eventManager = J,
                this.data = Object.create(null),
                this.destroyNode = null
            }
            destroy() {}
            createElement(J, Y) {
                return Y ? document.createElementNS(st[Y] || Y, J) : document.createElement(J)
            }
            createComment(J) {
                return document.createComment(J)
            }
            createText(J) {
                return document.createTextNode(J)
            }
            appendChild(J, Y) {
                (qe(J) ? J.content : J).appendChild(Y)
            }
            insertBefore(J, Y, Te) {
                J && (qe(J) ? J.content : J).insertBefore(Y, Te)
            }
            removeChild(J, Y) {
                J && J.removeChild(Y)
            }
            selectRootElement(J, Y) {
                let Te = "string" == typeof J ? document.querySelector(J) : J;
                if (!Te)
                    throw new Error(`The selector "${J}" did not match any elements`);
                return Y || (Te.textContent = ""),
                Te
            }
            parentNode(J) {
                return J.parentNode
            }
            nextSibling(J) {
                return J.nextSibling
            }
            setAttribute(J, Y, Te, nt) {
                if (nt) {
                    Y = nt + ":" + Y;
                    const Rt = st[nt];
                    Rt ? J.setAttributeNS(Rt, Y, Te) : J.setAttribute(Y, Te)
                } else
                    J.setAttribute(Y, Te)
            }
            removeAttribute(J, Y, Te) {
                if (Te) {
                    const nt = st[Te];
                    nt ? J.removeAttributeNS(nt, Y) : J.removeAttribute(`${Te}:${Y}`)
                } else
                    J.removeAttribute(Y)
            }
            addClass(J, Y) {
                J.classList.add(Y)
            }
            removeClass(J, Y) {
                J.classList.remove(Y)
            }
            setStyle(J, Y, Te, nt) {
                nt & (l.JOm.DashCase | l.JOm.Important) ? J.style.setProperty(Y, Te, nt & l.JOm.Important ? "important" : "") : J.style[Y] = Te
            }
            removeStyle(J, Y, Te) {
                Te & l.JOm.DashCase ? J.style.removeProperty(Y) : J.style[Y] = ""
            }
            setProperty(J, Y, Te) {
                J[Y] = Te
            }
            setValue(J, Y) {
                J.nodeValue = Y
            }
            listen(J, Y, Te) {
                return "string" == typeof J ? this.eventManager.addGlobalEventListener(J, Y, Ze(Te)) : this.eventManager.addEventListener(J, Y, Ze(Te))
            }
        }
        function qe(K) {
            return "TEMPLATE" === K.tagName && void 0 !== K.content
        }
        class be extends It {
            constructor(J, Y, Te, nt) {
                super(J),
                this.component = Te;
                const Rt = Oe(nt + "-" + Te.id, Te.styles, []);
                Y.addStyles(Rt),
                this.contentAttr = function ut(K) {
                    return "_ngcontent-%COMP%".replace(Pe, K)
                }(nt + "-" + Te.id),
                this.hostAttr = function Ce(K) {
                    return "_nghost-%COMP%".replace(Pe, K)
                }(nt + "-" + Te.id)
            }
            applyToHost(J) {
                super.setAttribute(J, this.hostAttr, "")
            }
            createElement(J, Y) {
                const Te = super.createElement(J, Y);
                return super.setAttribute(Te, this.contentAttr, ""),
                Te
            }
        }
        class pe extends It {
            constructor(J, Y, Te, nt) {
                super(J),
                this.sharedStylesHost = Y,
                this.hostEl = Te,
                this.shadowRoot = Te.attachShadow({
                    mode: "open"
                }),
                this.sharedStylesHost.addHost(this.shadowRoot);
                const Rt = Oe(nt.id, nt.styles, []);
                for (let rn = 0; rn < Rt.length; rn++) {
                    const fn = document.createElement("style");
                    fn.textContent = Rt[rn],
                    this.shadowRoot.appendChild(fn)
                }
            }
            nodeOrShadowRoot(J) {
                return J === this.hostEl ? this.shadowRoot : J
            }
            destroy() {
                this.sharedStylesHost.removeHost(this.shadowRoot)
            }
            appendChild(J, Y) {
                return super.appendChild(this.nodeOrShadowRoot(J), Y)
            }
            insertBefore(J, Y, Te) {
                return super.insertBefore(this.nodeOrShadowRoot(J), Y, Te)
            }
            removeChild(J, Y) {
                return super.removeChild(this.nodeOrShadowRoot(J), Y)
            }
            parentNode(J) {
                return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(J)))
            }
        }
        let pt = (()=>{
            class K extends ot {
                constructor(Y) {
                    super(Y)
                }
                supports(Y) {
                    return !0
                }
                addEventListener(Y, Te, nt) {
                    return Y.addEventListener(Te, nt, !1),
                    ()=>this.removeEventListener(Y, Te, nt)
                }
                removeEventListener(Y, Te, nt) {
                    return Y.removeEventListener(Te, nt)
                }
            }
            return K.\u0275fac = function(Y) {
                return new (Y || K)(l.LFG(i.K0))
            }
            ,
            K.\u0275prov = l.Yz7({
                token: K,
                factory: K.\u0275fac
            }),
            K
        }
        )();
        const Mt = ["alt", "control", "meta", "shift"]
          , kt = {
            "\b": "Backspace",
            "\t": "Tab",
            "\x7f": "Delete",
            "\x1b": "Escape",
            Del: "Delete",
            Esc: "Escape",
            Left: "ArrowLeft",
            Right: "ArrowRight",
            Up: "ArrowUp",
            Down: "ArrowDown",
            Menu: "ContextMenu",
            Scroll: "ScrollLock",
            Win: "OS"
        }
          , Xt = {
            alt: K=>K.altKey,
            control: K=>K.ctrlKey,
            meta: K=>K.metaKey,
            shift: K=>K.shiftKey
        };
        let bt = (()=>{
            class K extends ot {
                constructor(Y) {
                    super(Y)
                }
                supports(Y) {
                    return null != K.parseEventName(Y)
                }
                addEventListener(Y, Te, nt) {
                    const Rt = K.parseEventName(Te)
                      , rn = K.eventCallback(Rt.fullKey, nt, this.manager.getZone());
                    return this.manager.getZone().runOutsideAngular(()=>(0,
                    i.q)().onAndCancel(Y, Rt.domEventName, rn))
                }
                static parseEventName(Y) {
                    const Te = Y.toLowerCase().split(".")
                      , nt = Te.shift();
                    if (0 === Te.length || "keydown" !== nt && "keyup" !== nt)
                        return null;
                    const Rt = K._normalizeKey(Te.pop());
                    let rn = ""
                      , fn = Te.indexOf("code");
                    if (fn > -1 && (Te.splice(fn, 1),
                    rn = "code."),
                    Mt.forEach(hi=>{
                        const Gt = Te.indexOf(hi);
                        Gt > -1 && (Te.splice(Gt, 1),
                        rn += hi + ".")
                    }
                    ),
                    rn += Rt,
                    0 != Te.length || 0 === Rt.length)
                        return null;
                    const Wn = {};
                    return Wn.domEventName = nt,
                    Wn.fullKey = rn,
                    Wn
                }
                static matchEventFullKeyCode(Y, Te) {
                    let nt = kt[Y.key] || Y.key
                      , Rt = "";
                    return Te.indexOf("code.") > -1 && (nt = Y.code,
                    Rt = "code."),
                    !(null == nt || !nt) && (nt = nt.toLowerCase(),
                    " " === nt ? nt = "space" : "." === nt && (nt = "dot"),
                    Mt.forEach(rn=>{
                        rn !== nt && (0,
                        Xt[rn])(Y) && (Rt += rn + ".")
                    }
                    ),
                    Rt += nt,
                    Rt === Te)
                }
                static eventCallback(Y, Te, nt) {
                    return Rt=>{
                        K.matchEventFullKeyCode(Rt, Y) && nt.runGuarded(()=>Te(Rt))
                    }
                }
                static _normalizeKey(Y) {
                    return "esc" === Y ? "escape" : Y
                }
            }
            return K.\u0275fac = function(Y) {
                return new (Y || K)(l.LFG(i.K0))
            }
            ,
            K.\u0275prov = l.Yz7({
                token: K,
                factory: K.\u0275fac
            }),
            K
        }
        )();
        const an = (0,
        l.eFA)(l._c5, "browser", [{
            provide: l.Lbi,
            useValue: i.bD
        }, {
            provide: l.g9A,
            useValue: function gt() {
                ue.makeCurrent()
            },
            multi: !0
        }, {
            provide: i.K0,
            useFactory: function Tt() {
                return (0,
                l.RDi)(document),
                document
            },
            deps: []
        }])
          , In = new l.OlP("")
          , $t = [{
            provide: l.rWj,
            useClass: class re {
                addToWindow(J) {
                    l.dqk.getAngularTestability = (Te,nt=!0)=>{
                        const Rt = J.findTestabilityInTree(Te, nt);
                        if (null == Rt)
                            throw new Error("Could not find testability for element.");
                        return Rt
                    }
                    ,
                    l.dqk.getAllAngularTestabilities = ()=>J.getAllTestabilities(),
                    l.dqk.getAllAngularRootElements = ()=>J.getAllRootElements(),
                    l.dqk.frameworkStabilizers || (l.dqk.frameworkStabilizers = []),
                    l.dqk.frameworkStabilizers.push(Te=>{
                        const nt = l.dqk.getAllAngularTestabilities();
                        let Rt = nt.length
                          , rn = !1;
                        const fn = function(Wn) {
                            rn = rn || Wn,
                            Rt--,
                            0 == Rt && Te(rn)
                        };
                        nt.forEach(function(Wn) {
                            Wn.whenStable(fn)
                        })
                    }
                    )
                }
                findTestabilityInTree(J, Y, Te) {
                    return null == Y ? null : J.getTestability(Y) ?? (Te ? (0,
                    i.q)().isShadowRoot(Y) ? this.findTestabilityInTree(J, Y.host, !0) : this.findTestabilityInTree(J, Y.parentElement, !0) : null)
                }
            }
            ,
            deps: []
        }, {
            provide: l.lri,
            useClass: l.dDg,
            deps: [l.R0b, l.eoX, l.rWj]
        }, {
            provide: l.dDg,
            useClass: l.dDg,
            deps: [l.R0b, l.eoX, l.rWj]
        }]
          , gn = [{
            provide: l.zSh,
            useValue: "root"
        }, {
            provide: l.qLn,
            useFactory: function Qe() {
                return new l.qLn
            },
            deps: []
        }, {
            provide: Ne,
            useClass: pt,
            multi: !0,
            deps: [i.K0, l.R0b, l.Lbi]
        }, {
            provide: Ne,
            useClass: bt,
            multi: !0,
            deps: [i.K0]
        }, {
            provide: rt,
            useClass: rt,
            deps: [Be, Fe, l.AFp]
        }, {
            provide: l.FYo,
            useExisting: rt
        }, {
            provide: $e,
            useExisting: Fe
        }, {
            provide: Fe,
            useClass: Fe,
            deps: [i.K0]
        }, {
            provide: Be,
            useClass: Be,
            deps: [Ne, l.R0b]
        }, {
            provide: i.JF,
            useClass: Ke,
            deps: []
        }, []];
        let qn = (()=>{
            class K {
                constructor(Y) {}
                static withServerTransition(Y) {
                    return {
                        ngModule: K,
                        providers: [{
                            provide: l.AFp,
                            useValue: Y.appId
                        }, {
                            provide: le,
                            useExisting: l.AFp
                        }, fe]
                    }
                }
            }
            return K.\u0275fac = function(Y) {
                return new (Y || K)(l.LFG(In, 12))
            }
            ,
            K.\u0275mod = l.oAB({
                type: K
            }),
            K.\u0275inj = l.cJS({
                providers: [...gn, ...$t],
                imports: [i.ez, l.hGG]
            }),
            K
        }
        )()
          , Xn = (()=>{
            class K {
                constructor(Y) {
                    this._doc = Y,
                    this._dom = (0,
                    i.q)()
                }
                addTag(Y, Te=!1) {
                    return Y ? this._getOrCreateElement(Y, Te) : null
                }
                addTags(Y, Te=!1) {
                    return Y ? Y.reduce((nt,Rt)=>(Rt && nt.push(this._getOrCreateElement(Rt, Te)),
                    nt), []) : []
                }
                getTag(Y) {
                    return Y && this._doc.querySelector(`meta[${Y}]`) || null
                }
                getTags(Y) {
                    if (!Y)
                        return [];
                    const Te = this._doc.querySelectorAll(`meta[${Y}]`);
                    return Te ? [].slice.call(Te) : []
                }
                updateTag(Y, Te) {
                    if (!Y)
                        return null;
                    Te = Te || this._parseSelector(Y);
                    const nt = this.getTag(Te);
                    return nt ? this._setMetaElementAttributes(Y, nt) : this._getOrCreateElement(Y, !0)
                }
                removeTag(Y) {
                    this.removeTagElement(this.getTag(Y))
                }
                removeTagElement(Y) {
                    Y && this._dom.remove(Y)
                }
                _getOrCreateElement(Y, Te=!1) {
                    if (!Te) {
                        const rn = this._parseSelector(Y)
                          , fn = this.getTags(rn).filter(Wn=>this._containsAttributes(Y, Wn))[0];
                        if (void 0 !== fn)
                            return fn
                    }
                    const nt = this._dom.createElement("meta");
                    return this._setMetaElementAttributes(Y, nt),
                    this._doc.getElementsByTagName("head")[0].appendChild(nt),
                    nt
                }
                _setMetaElementAttributes(Y, Te) {
                    return Object.keys(Y).forEach(nt=>Te.setAttribute(this._getMetaKeyMap(nt), Y[nt])),
                    Te
                }
                _parseSelector(Y) {
                    const Te = Y.name ? "name" : "property";
                    return `${Te}="${Y[Te]}"`
                }
                _containsAttributes(Y, Te) {
                    return Object.keys(Y).every(nt=>Te.getAttribute(this._getMetaKeyMap(nt)) === Y[nt])
                }
                _getMetaKeyMap(Y) {
                    return vi[Y] || Y
                }
            }
            return K.\u0275fac = function(Y) {
                return new (Y || K)(l.LFG(i.K0))
            }
            ,
            K.\u0275prov = l.Yz7({
                token: K,
                factory: function(Y) {
                    let Te = null;
                    return Te = Y ? new Y : function xn() {
                        return new Xn((0,
                        l.LFG)(i.K0))
                    }(),
                    Te
                },
                providedIn: "root"
            }),
            K
        }
        )();
        const vi = {
            httpEquiv: "http-equiv"
        };
        let vt = (()=>{
            class K {
                constructor(Y) {
                    this._doc = Y
                }
                getTitle() {
                    return this._doc.title
                }
                setTitle(Y) {
                    this._doc.title = Y || ""
                }
            }
            return K.\u0275fac = function(Y) {
                return new (Y || K)(l.LFG(i.K0))
            }
            ,
            K.\u0275prov = l.Yz7({
                token: K,
                factory: function(Y) {
                    let Te = null;
                    return Te = Y ? new Y : function Tn() {
                        return new vt((0,
                        l.LFG)(i.K0))
                    }(),
                    Te
                },
                providedIn: "root"
            }),
            K
        }
        )();
        typeof window < "u" && window;
        let x = (()=>{
            class K {
            }
            return K.\u0275fac = function(Y) {
                return new (Y || K)
            }
            ,
            K.\u0275prov = l.Yz7({
                token: K,
                factory: function(Y) {
                    let Te = null;
                    return Te = Y ? new (Y || K) : l.LFG(Me),
                    Te
                },
                providedIn: "root"
            }),
            K
        }
        )()
          , Me = (()=>{
            class K extends x {
                constructor(Y) {
                    super(),
                    this._doc = Y
                }
                sanitize(Y, Te) {
                    if (null == Te)
                        return null;
                    switch (Y) {
                    case l.q3G.NONE:
                        return Te;
                    case l.q3G.HTML:
                        return (0,
                        l.qzn)(Te, "HTML") ? (0,
                        l.z3N)(Te) : (0,
                        l.EiD)(this._doc, String(Te)).toString();
                    case l.q3G.STYLE:
                        return (0,
                        l.qzn)(Te, "Style") ? (0,
                        l.z3N)(Te) : Te;
                    case l.q3G.SCRIPT:
                        if ((0,
                        l.qzn)(Te, "Script"))
                            return (0,
                            l.z3N)(Te);
                        throw new Error("unsafe value used in a script context");
                    case l.q3G.URL:
                        return (0,
                        l.qzn)(Te, "URL") ? (0,
                        l.z3N)(Te) : (0,
                        l.mCW)(String(Te));
                    case l.q3G.RESOURCE_URL:
                        if ((0,
                        l.qzn)(Te, "ResourceURL"))
                            return (0,
                            l.z3N)(Te);
                        throw new Error("unsafe value used in a resource URL context (see https://g.co/ng/security#xss)");
                    default:
                        throw new Error(`Unexpected SecurityContext ${Y} (see https://g.co/ng/security#xss)`)
                    }
                }
                bypassSecurityTrustHtml(Y) {
                    return (0,
                    l.JVY)(Y)
                }
                bypassSecurityTrustStyle(Y) {
                    return (0,
                    l.L6k)(Y)
                }
                bypassSecurityTrustScript(Y) {
                    return (0,
                    l.eBb)(Y)
                }
                bypassSecurityTrustUrl(Y) {
                    return (0,
                    l.LAX)(Y)
                }
                bypassSecurityTrustResourceUrl(Y) {
                    return (0,
                    l.pB0)(Y)
                }
            }
            return K.\u0275fac = function(Y) {
                return new (Y || K)(l.LFG(i.K0))
            }
            ,
            K.\u0275prov = l.Yz7({
                token: K,
                factory: function(Y) {
                    let Te = null;
                    return Te = Y ? new Y : function oe(K) {
                        return new Me(K.get(i.K0))
                    }(l.LFG(l.zs3)),
                    Te
                },
                providedIn: "root"
            }),
            K
        }
        )()
    }
    ,
    9297: (Ot,je,D)=>{
        D.d(je, {
            gz: ()=>Bi,
            m2: ()=>Xi,
            F0: ()=>xi,
            rH: ()=>Eo,
            Od: ()=>uo,
            yS: ()=>Zr,
            Bz: ()=>Pi,
            lC: ()=>ci
        });
        var i = D(2560)
          , l = D(2957)
          , q = D(745)
          , ue = D(6317)
          , H = D(4423)
          , U = D(833)
          , z = D(5756)
          , te = D(9173)
          , le = D(8385)
          , W = D(420)
          , fe = D(1054)
          , re = D(3945)
          , Ke = D(1817);
        function Ne(...g) {
            const v = (0,
            W.yG)(g)
              , f = (0,
            W.jO)(g)
              , {args: w, keys: A} = (0,
            z.D)(g);
            if (0 === w.length)
                return (0,
                l.D)([], v);
            const Z = new U.y(function Be(g, v, f=te.y) {
                return w=>{
                    ot(v, ()=>{
                        const {length: A} = g
                          , Z = new Array(A);
                        let ve = A
                          , De = A;
                        for (let it = 0; it < A; it++)
                            ot(v, ()=>{
                                const Wt = (0,
                                l.D)(g[it], v);
                                let Sn = !1;
                                Wt.subscribe(new re.Q(w,Ht=>{
                                    Z[it] = Ht,
                                    Sn || (Sn = !0,
                                    De--),
                                    De || w.next(f(Z.slice()))
                                }
                                ,()=>{
                                    --ve || w.complete()
                                }
                                ))
                            }
                            , w)
                    }
                    , w)
                }
            }(w, v, A ? ve=>(0,
            fe.n)(A, ve) : te.y));
            return f ? Z.pipe((0,
            le.Z)(f)) : Z
        }
        function ot(g, v, f) {
            g ? (0,
            Ke.f)(f, g, v) : v()
        }
        var $e = D(9319)
          , Fe = D(1954)
          , et = D(4800)
          , st = D(5474)
          , Pe = D(591)
          , Q = D(7714)
          , ze = D(1944);
        function ye() {
            return (0,
            ze.e)((g,v)=>{
                let f = null;
                g._refCount++;
                const w = new re.Q(v,void 0,void 0,void 0,()=>{
                    if (!g || g._refCount <= 0 || 0 < --g._refCount)
                        return void (f = null);
                    const A = g._connection
                      , Z = f;
                    f = null,
                    A && (!Z || A === Z) && A.unsubscribe(),
                    v.unsubscribe()
                }
                );
                g.subscribe(w),
                w.closed || (f = g.connect())
            }
            )
        }
        class Re extends U.y {
            constructor(v, f) {
                super(),
                this.source = v,
                this.subjectFactory = f,
                this._subject = null,
                this._refCount = 0,
                this._connection = null,
                (0,
                ze.A)(v) && (this.lift = v.lift)
            }
            _subscribe(v) {
                return this.getSubject().subscribe(v)
            }
            getSubject() {
                const v = this._subject;
                return (!v || v.isStopped) && (this._subject = this.subjectFactory()),
                this._subject
            }
            _teardown() {
                this._refCount = 0;
                const {_connection: v} = this;
                this._subject = this._connection = null,
                v?.unsubscribe()
            }
            connect() {
                let v = this._connection;
                if (!v) {
                    v = this._connection = new Q.w0;
                    const f = this.getSubject();
                    v.add(this.source.subscribe(new re.Q(f,void 0,()=>{
                        this._teardown(),
                        f.complete()
                    }
                    ,w=>{
                        this._teardown(),
                        f.error(w)
                    }
                    ,()=>this._teardown()))),
                    v.closed && (this._connection = null,
                    v = Q.w0.EMPTY)
                }
                return v
            }
            refCount() {
                return ye()(this)
            }
        }
        var ut = D(253)
          , Ce = D(4666)
          , Oe = D(635)
          , Ze = D(2673)
          , _t = D(9295)
          , rt = D(4874)
          , It = D(116)
          , qt = D(9525)
          , ft = D(155)
          , qe = D(3853)
          , be = D(9337)
          , pe = D(3158)
          , pt = D(4382);
        function Mt(g, v) {
            return (0,
            ze.e)((0,
            pt.U)(g, v, arguments.length >= 2, !0))
        }
        function kt(g) {
            return g <= 0 ? ()=>Pe.E : (0,
            ze.e)((v,f)=>{
                let w = [];
                v.subscribe(new re.Q(f,A=>{
                    w.push(A),
                    g < w.length && w.shift()
                }
                ,()=>{
                    for (const A of w)
                        f.next(A);
                    f.complete()
                }
                ,void 0,()=>{
                    w = null
                }
                ))
            }
            )
        }
        var Xt = D(7354)
          , bt = D(4744);
        function Kt(g, v) {
            const f = arguments.length >= 2;
            return w=>w.pipe(g ? (0,
            It.h)((A,Z)=>g(A, Z, w)) : te.y, kt(1), f ? (0,
            bt.d)(v) : (0,
            Xt.T)(()=>new H.K))
        }
        var de = D(73)
          , he = D(2313)
          , Ie = D(1308)
          , gt = D(4497);
        const Qe = "primary"
          , Tt = Symbol("RouteTitle");
        class wn {
            constructor(v) {
                this.params = v || {}
            }
            has(v) {
                return Object.prototype.hasOwnProperty.call(this.params, v)
            }
            get(v) {
                if (this.has(v)) {
                    const f = this.params[v];
                    return Array.isArray(f) ? f[0] : f
                }
                return null
            }
            getAll(v) {
                if (this.has(v)) {
                    const f = this.params[v];
                    return Array.isArray(f) ? f : [f]
                }
                return []
            }
            get keys() {
                return Object.keys(this.params)
            }
        }
        function an(g) {
            return new wn(g)
        }
        function In(g, v, f) {
            const w = f.path.split("/");
            if (w.length > g.length || "full" === f.pathMatch && (v.hasChildren() || w.length < g.length))
                return null;
            const A = {};
            for (let Z = 0; Z < w.length; Z++) {
                const ve = w[Z]
                  , De = g[Z];
                if (ve.startsWith(":"))
                    A[ve.substring(1)] = De;
                else if (ve !== De.path)
                    return null
            }
            return {
                consumed: g.slice(0, w.length),
                posParams: A
            }
        }
        function gn(g, v) {
            const f = g ? Object.keys(g) : void 0
              , w = v ? Object.keys(v) : void 0;
            if (!f || !w || f.length != w.length)
                return !1;
            let A;
            for (let Z = 0; Z < f.length; Z++)
                if (A = f[Z],
                !qn(g[A], v[A]))
                    return !1;
            return !0
        }
        function qn(g, v) {
            if (Array.isArray(g) && Array.isArray(v)) {
                if (g.length !== v.length)
                    return !1;
                const f = [...g].sort()
                  , w = [...v].sort();
                return f.every((A,Z)=>w[Z] === A)
            }
            return g === v
        }
        function xn(g) {
            return Array.prototype.concat.apply([], g)
        }
        function Xn(g) {
            return g.length > 0 ? g[g.length - 1] : null
        }
        function Tn(g, v) {
            for (const f in g)
                g.hasOwnProperty(f) && v(g[f], f)
        }
        function vt(g) {
            return (0,
            i.CqO)(g) ? g : (0,
            i.QGY)(g) ? (0,
            l.D)(Promise.resolve(g)) : (0,
            q.of)(g)
        }
        const dt = {
            exact: function Pn(g, v, f) {
                if (!Zt(g.segments, v.segments) || !oi(g.segments, v.segments, f) || g.numberOfChildren !== v.numberOfChildren)
                    return !1;
                for (const w in v.children)
                    if (!g.children[w] || !Pn(g.children[w], v.children[w], f))
                        return !1;
                return !0
            },
            subset: $n
        }
          , Et = {
            exact: function pn(g, v) {
                return gn(g, v)
            },
            subset: function Vt(g, v) {
                return Object.keys(v).length <= Object.keys(g).length && Object.keys(v).every(f=>qn(g[f], v[f]))
            },
            ignored: ()=>!0
        };
        function ln(g, v, f) {
            return dt[f.paths](g.root, v.root, f.matrixParams) && Et[f.queryParams](g.queryParams, v.queryParams) && !("exact" === f.fragment && g.fragment !== v.fragment)
        }
        function $n(g, v, f) {
            return An(g, v, v.segments, f)
        }
        function An(g, v, f, w) {
            if (g.segments.length > f.length) {
                const A = g.segments.slice(0, f.length);
                return !(!Zt(A, f) || v.hasChildren() || !oi(A, f, w))
            }
            if (g.segments.length === f.length) {
                if (!Zt(g.segments, f) || !oi(g.segments, f, w))
                    return !1;
                for (const A in v.children)
                    if (!g.children[A] || !$n(g.children[A], v.children[A], w))
                        return !1;
                return !0
            }
            {
                const A = f.slice(0, g.segments.length)
                  , Z = f.slice(g.segments.length);
                return !!(Zt(g.segments, A) && oi(g.segments, A, w) && g.children[Qe]) && An(g.children[Qe], v, Z, w)
            }
        }
        function oi(g, v, f) {
            return v.every((w,A)=>Et[f](g[A].parameters, w.parameters))
        }
        class un {
            constructor(v, f, w) {
                this.root = v,
                this.queryParams = f,
                this.fragment = w
            }
            get queryParamMap() {
                return this._queryParamMap || (this._queryParamMap = an(this.queryParams)),
                this._queryParamMap
            }
            toString() {
                return wi.serialize(this)
            }
        }
        class jt {
            constructor(v, f) {
                this.segments = v,
                this.children = f,
                this.parent = null,
                Tn(f, (w,A)=>w.parent = this)
            }
            hasChildren() {
                return this.numberOfChildren > 0
            }
            get numberOfChildren() {
                return Object.keys(this.children).length
            }
            toString() {
                return Ti(this)
            }
        }
        class yn {
            constructor(v, f) {
                this.path = v,
                this.parameters = f
            }
            get parameterMap() {
                return this._parameterMap || (this._parameterMap = an(this.parameters)),
                this._parameterMap
            }
            toString() {
                return Me(this)
            }
        }
        function Zt(g, v) {
            return g.length === v.length && g.every((f,w)=>f.path === v[w].path)
        }
        let Si = (()=>{
            class g {
            }
            return g.\u0275fac = function(f) {
                return new (f || g)
            }
            ,
            g.\u0275prov = i.Yz7({
                token: g,
                factory: function() {
                    return new _i
                },
                providedIn: "root"
            }),
            g
        }
        )();
        class _i {
            parse(v) {
                const f = new fn(v);
                return new un(f.parseRootSegment(),f.parseQueryParams(),f.parseFragment())
            }
            serialize(v) {
                const f = `/${zi(v.root, !0)}`
                  , w = function K(g) {
                    const v = Object.keys(g).map(f=>{
                        const w = g[f];
                        return Array.isArray(w) ? w.map(A=>`${Li(f)}=${Li(A)}`).join("&") : `${Li(f)}=${Li(w)}`
                    }
                    ).filter(f=>!!f);
                    return v.length ? `?${v.join("&")}` : ""
                }(v.queryParams);
                return `${f}${w}${"string" == typeof v.fragment ? `#${function He(g) {
                    return encodeURI(g)
                }(v.fragment)}` : ""}`
            }
        }
        const wi = new _i;
        function Ti(g) {
            return g.segments.map(v=>Me(v)).join("/")
        }
        function zi(g, v) {
            if (!g.hasChildren())
                return Ti(g);
            if (v) {
                const f = g.children[Qe] ? zi(g.children[Qe], !1) : ""
                  , w = [];
                return Tn(g.children, (A,Z)=>{
                    Z !== Qe && w.push(`${Z}:${zi(A, !1)}`)
                }
                ),
                w.length > 0 ? `${f}(${w.join("//")})` : f
            }
            {
                const f = function ei(g, v) {
                    let f = [];
                    return Tn(g.children, (w,A)=>{
                        A === Qe && (f = f.concat(v(w, A)))
                    }
                    ),
                    Tn(g.children, (w,A)=>{
                        A !== Qe && (f = f.concat(v(w, A)))
                    }
                    ),
                    f
                }(g, (w,A)=>A === Qe ? [zi(g.children[Qe], !1)] : [`${A}:${zi(w, !1)}`]);
                return 1 === Object.keys(g.children).length && null != g.children[Qe] ? `${Ti(g)}/${f[0]}` : `${Ti(g)}/(${f.join("//")})`
            }
        }
        function Ji(g) {
            return encodeURIComponent(g).replace(/%40/g, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",")
        }
        function Li(g) {
            return Ji(g).replace(/%3B/gi, ";")
        }
        function Lt(g) {
            return Ji(g).replace(/\(/g, "%28").replace(/\)/g, "%29").replace(/%26/gi, "&")
        }
        function x(g) {
            return decodeURIComponent(g)
        }
        function oe(g) {
            return x(g.replace(/\+/g, "%20"))
        }
        function Me(g) {
            return `${Lt(g.path)}${function Ge(g) {
                return Object.keys(g).map(v=>`;${Lt(v)}=${Lt(g[v])}`).join("")
            }(g.parameters)}`
        }
        const J = /^[^\/()?;=#]+/;
        function Y(g) {
            const v = g.match(J);
            return v ? v[0] : ""
        }
        const Te = /^[^=?&#]+/
          , Rt = /^[^&#]+/;
        class fn {
            constructor(v) {
                this.url = v,
                this.remaining = v
            }
            parseRootSegment() {
                return this.consumeOptional("/"),
                "" === this.remaining || this.peekStartsWith("?") || this.peekStartsWith("#") ? new jt([],{}) : new jt([],this.parseChildren())
            }
            parseQueryParams() {
                const v = {};
                if (this.consumeOptional("?"))
                    do {
                        this.parseQueryParam(v)
                    } while (this.consumeOptional("&"));
                return v
            }
            parseFragment() {
                return this.consumeOptional("#") ? decodeURIComponent(this.remaining) : null
            }
            parseChildren() {
                if ("" === this.remaining)
                    return {};
                this.consumeOptional("/");
                const v = [];
                for (this.peekStartsWith("(") || v.push(this.parseSegment()); this.peekStartsWith("/") && !this.peekStartsWith("//") && !this.peekStartsWith("/("); )
                    this.capture("/"),
                    v.push(this.parseSegment());
                let f = {};
                this.peekStartsWith("/(") && (this.capture("/"),
                f = this.parseParens(!0));
                let w = {};
                return this.peekStartsWith("(") && (w = this.parseParens(!1)),
                (v.length > 0 || Object.keys(f).length > 0) && (w[Qe] = new jt(v,f)),
                w
            }
            parseSegment() {
                const v = Y(this.remaining);
                if ("" === v && this.peekStartsWith(";"))
                    throw new i.vHH(4009,!1);
                return this.capture(v),
                new yn(x(v),this.parseMatrixParams())
            }
            parseMatrixParams() {
                const v = {};
                for (; this.consumeOptional(";"); )
                    this.parseParam(v);
                return v
            }
            parseParam(v) {
                const f = Y(this.remaining);
                if (!f)
                    return;
                this.capture(f);
                let w = "";
                if (this.consumeOptional("=")) {
                    const A = Y(this.remaining);
                    A && (w = A,
                    this.capture(w))
                }
                v[x(f)] = x(w)
            }
            parseQueryParam(v) {
                const f = function nt(g) {
                    const v = g.match(Te);
                    return v ? v[0] : ""
                }(this.remaining);
                if (!f)
                    return;
                this.capture(f);
                let w = "";
                if (this.consumeOptional("=")) {
                    const ve = function rn(g) {
                        const v = g.match(Rt);
                        return v ? v[0] : ""
                    }(this.remaining);
                    ve && (w = ve,
                    this.capture(w))
                }
                const A = oe(f)
                  , Z = oe(w);
                if (v.hasOwnProperty(A)) {
                    let ve = v[A];
                    Array.isArray(ve) || (ve = [ve],
                    v[A] = ve),
                    ve.push(Z)
                } else
                    v[A] = Z
            }
            parseParens(v) {
                const f = {};
                for (this.capture("("); !this.consumeOptional(")") && this.remaining.length > 0; ) {
                    const w = Y(this.remaining)
                      , A = this.remaining[w.length];
                    if ("/" !== A && ")" !== A && ";" !== A)
                        throw new i.vHH(4010,!1);
                    let Z;
                    w.indexOf(":") > -1 ? (Z = w.slice(0, w.indexOf(":")),
                    this.capture(Z),
                    this.capture(":")) : v && (Z = Qe);
                    const ve = this.parseChildren();
                    f[Z] = 1 === Object.keys(ve).length ? ve[Qe] : new jt([],ve),
                    this.consumeOptional("//")
                }
                return f
            }
            peekStartsWith(v) {
                return this.remaining.startsWith(v)
            }
            consumeOptional(v) {
                return !!this.peekStartsWith(v) && (this.remaining = this.remaining.substring(v.length),
                !0)
            }
            capture(v) {
                if (!this.consumeOptional(v))
                    throw new i.vHH(4011,!1)
            }
        }
        function Wn(g) {
            return g.segments.length > 0 ? new jt([],{
                [Qe]: g
            }) : g
        }
        function hi(g) {
            const v = {};
            for (const w of Object.keys(g.children)) {
                const Z = hi(g.children[w]);
                (Z.segments.length > 0 || Z.hasChildren()) && (v[w] = Z)
            }
            return function Gt(g) {
                if (1 === g.numberOfChildren && g.children[Qe]) {
                    const v = g.children[Qe];
                    return new jt(g.segments.concat(v.segments),v.children)
                }
                return g
            }(new jt(g.segments,v))
        }
        function xe(g) {
            return g instanceof un
        }
        function We(g, v, f, w, A) {
            if (0 === f.length)
                return Bn(v.root, v.root, v.root, w, A);
            const Z = function Ri(g) {
                if ("string" == typeof g[0] && 1 === g.length && "/" === g[0])
                    return new dn(!0,0,g);
                let v = 0
                  , f = !1;
                const w = g.reduce((A,Z,ve)=>{
                    if ("object" == typeof Z && null != Z) {
                        if (Z.outlets) {
                            const De = {};
                            return Tn(Z.outlets, (it,Wt)=>{
                                De[Wt] = "string" == typeof it ? it.split("/") : it
                            }
                            ),
                            [...A, {
                                outlets: De
                            }]
                        }
                        if (Z.segmentPath)
                            return [...A, Z.segmentPath]
                    }
                    return "string" != typeof Z ? [...A, Z] : 0 === ve ? (Z.split("/").forEach((De,it)=>{
                        0 == it && "." === De || (0 == it && "" === De ? f = !0 : ".." === De ? v++ : "" != De && A.push(De))
                    }
                    ),
                    A) : [...A, Z]
                }
                , []);
                return new dn(f,v,w)
            }(f);
            return Z.toRoot() ? Bn(v.root, v.root, new jt([],{}), w, A) : function ve(it) {
                const Wt = function ji(g, v, f, w) {
                    if (g.isAbsolute)
                        return new Zn(v.root,!0,0);
                    if (-1 === w)
                        return new Zn(f,f === v.root,0);
                    return function li(g, v, f) {
                        let w = g
                          , A = v
                          , Z = f;
                        for (; Z > A; ) {
                            if (Z -= A,
                            w = w.parent,
                            !w)
                                throw new i.vHH(4005,!1);
                            A = w.segments.length
                        }
                        return new Zn(w,!1,A - Z)
                    }(f, w + (Ft(g.commands[0]) ? 0 : 1), g.numberOfDoubleDots)
                }(Z, v, g.snapshot?._urlSegment, it)
                  , Sn = Wt.processChildren ? bn(Wt.segmentGroup, Wt.index, Z.commands) : Hn(Wt.segmentGroup, Wt.index, Z.commands);
                return Bn(v.root, Wt.segmentGroup, Sn, w, A)
            }(g.snapshot?._lastPathIndex)
        }
        function Ft(g) {
            return "object" == typeof g && null != g && !g.outlets && !g.segmentPath
        }
        function Jt(g) {
            return "object" == typeof g && null != g && g.outlets
        }
        function Bn(g, v, f, w, A) {
            let ve, Z = {};
            w && Tn(w, (it,Wt)=>{
                Z[Wt] = Array.isArray(it) ? it.map(Sn=>`${Sn}`) : `${it}`
            }
            ),
            ve = g === v ? f : Rn(g, v, f);
            const De = Wn(hi(ve));
            return new un(De,Z,A)
        }
        function Rn(g, v, f) {
            const w = {};
            return Tn(g.children, (A,Z)=>{
                w[Z] = A === v ? f : Rn(A, v, f)
            }
            ),
            new jt(g.segments,w)
        }
        class dn {
            constructor(v, f, w) {
                if (this.isAbsolute = v,
                this.numberOfDoubleDots = f,
                this.commands = w,
                v && w.length > 0 && Ft(w[0]))
                    throw new i.vHH(4003,!1);
                const A = w.find(Jt);
                if (A && A !== Xn(w))
                    throw new i.vHH(4004,!1)
            }
            toRoot() {
                return this.isAbsolute && 1 === this.commands.length && "/" == this.commands[0]
            }
        }
        class Zn {
            constructor(v, f, w) {
                this.segmentGroup = v,
                this.processChildren = f,
                this.index = w
            }
        }
        function Hn(g, v, f) {
            if (g || (g = new jt([],{})),
            0 === g.segments.length && g.hasChildren())
                return bn(g, v, f);
            const w = function yi(g, v, f) {
                let w = 0
                  , A = v;
                const Z = {
                    match: !1,
                    pathIndex: 0,
                    commandIndex: 0
                };
                for (; A < g.segments.length; ) {
                    if (w >= f.length)
                        return Z;
                    const ve = g.segments[A]
                      , De = f[w];
                    if (Jt(De))
                        break;
                    const it = `${De}`
                      , Wt = w < f.length - 1 ? f[w + 1] : null;
                    if (A > 0 && void 0 === it)
                        break;
                    if (it && Wt && "object" == typeof Wt && void 0 === Wt.outlets) {
                        if (!vs(it, Wt, ve))
                            return Z;
                        w += 2
                    } else {
                        if (!vs(it, {}, ve))
                            return Z;
                        w++
                    }
                    A++
                }
                return {
                    match: !0,
                    pathIndex: A,
                    commandIndex: w
                }
            }(g, v, f)
              , A = f.slice(w.commandIndex);
            if (w.match && w.pathIndex < g.segments.length) {
                const Z = new jt(g.segments.slice(0, w.pathIndex),{});
                return Z.children[Qe] = new jt(g.segments.slice(w.pathIndex),g.children),
                bn(Z, 0, A)
            }
            return w.match && 0 === A.length ? new jt(g.segments,{}) : w.match && !g.hasChildren() ? Mn(g, v, f) : w.match ? bn(g, 0, A) : Mn(g, v, f)
        }
        function bn(g, v, f) {
            if (0 === f.length)
                return new jt(g.segments,{});
            {
                const w = function Dn(g) {
                    return Jt(g[0]) ? g[0].outlets : {
                        [Qe]: g
                    }
                }(f)
                  , A = {};
                return Tn(w, (Z,ve)=>{
                    "string" == typeof Z && (Z = [Z]),
                    null !== Z && (A[ve] = Hn(g.children[ve], v, Z))
                }
                ),
                Tn(g.children, (Z,ve)=>{
                    void 0 === w[ve] && (A[ve] = Z)
                }
                ),
                new jt(g.segments,A)
            }
        }
        function Mn(g, v, f) {
            const w = g.segments.slice(0, v);
            let A = 0;
            for (; A < f.length; ) {
                const Z = f[A];
                if (Jt(Z)) {
                    const it = ti(Z.outlets);
                    return new jt(w,it)
                }
                if (0 === A && Ft(f[0])) {
                    w.push(new yn(g.segments[v].path,Mi(f[0]))),
                    A++;
                    continue
                }
                const ve = Jt(Z) ? Z.outlets[Qe] : `${Z}`
                  , De = A < f.length - 1 ? f[A + 1] : null;
                ve && De && Ft(De) ? (w.push(new yn(ve,Mi(De))),
                A += 2) : (w.push(new yn(ve,{})),
                A++)
            }
            return new jt(w,{})
        }
        function ti(g) {
            const v = {};
            return Tn(g, (f,w)=>{
                "string" == typeof f && (f = [f]),
                null !== f && (v[w] = Mn(new jt([],{}), 0, f))
            }
            ),
            v
        }
        function Mi(g) {
            const v = {};
            return Tn(g, (f,w)=>v[w] = `${f}`),
            v
        }
        function vs(g, v, f) {
            return g == f.path && gn(v, f.parameters)
        }
        class Ci {
            constructor(v, f) {
                this.id = v,
                this.url = f
            }
        }
        class fi extends Ci {
            constructor(v, f, w="imperative", A=null) {
                super(v, f),
                this.type = 0,
                this.navigationTrigger = w,
                this.restoredState = A
            }
            toString() {
                return `NavigationStart(id: ${this.id}, url: '${this.url}')`
            }
        }
        class Xi extends Ci {
            constructor(v, f, w) {
                super(v, f),
                this.urlAfterRedirects = w,
                this.type = 1
            }
            toString() {
                return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`
            }
        }
        class ks extends Ci {
            constructor(v, f, w, A) {
                super(v, f),
                this.reason = w,
                this.code = A,
                this.type = 2
            }
            toString() {
                return `NavigationCancel(id: ${this.id}, url: '${this.url}')`
            }
        }
        class Ni extends Ci {
            constructor(v, f, w, A) {
                super(v, f),
                this.error = w,
                this.target = A,
                this.type = 3
            }
            toString() {
                return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`
            }
        }
        class Vs extends Ci {
            constructor(v, f, w, A) {
                super(v, f),
                this.urlAfterRedirects = w,
                this.state = A,
                this.type = 4
            }
            toString() {
                return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`
            }
        }
        class Br extends Ci {
            constructor(v, f, w, A) {
                super(v, f),
                this.urlAfterRedirects = w,
                this.state = A,
                this.type = 7
            }
            toString() {
                return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`
            }
        }
        class Fi extends Ci {
            constructor(v, f, w, A, Z) {
                super(v, f),
                this.urlAfterRedirects = w,
                this.state = A,
                this.shouldActivate = Z,
                this.type = 8
            }
            toString() {
                return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`
            }
        }
        class Mr extends Ci {
            constructor(v, f, w, A) {
                super(v, f),
                this.urlAfterRedirects = w,
                this.state = A,
                this.type = 5
            }
            toString() {
                return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`
            }
        }
        class Ir extends Ci {
            constructor(v, f, w, A) {
                super(v, f),
                this.urlAfterRedirects = w,
                this.state = A,
                this.type = 6
            }
            toString() {
                return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`
            }
        }
        class sr {
            constructor(v) {
                this.route = v,
                this.type = 9
            }
            toString() {
                return `RouteConfigLoadStart(path: ${this.route.path})`
            }
        }
        class $r {
            constructor(v) {
                this.route = v,
                this.type = 10
            }
            toString() {
                return `RouteConfigLoadEnd(path: ${this.route.path})`
            }
        }
        class Ys {
            constructor(v) {
                this.snapshot = v,
                this.type = 11
            }
            toString() {
                return `ChildActivationStart(path: '${this.snapshot.routeConfig && this.snapshot.routeConfig.path || ""}')`
            }
        }
        class rr {
            constructor(v) {
                this.snapshot = v,
                this.type = 12
            }
            toString() {
                return `ChildActivationEnd(path: '${this.snapshot.routeConfig && this.snapshot.routeConfig.path || ""}')`
            }
        }
        class fr {
            constructor(v) {
                this.snapshot = v,
                this.type = 13
            }
            toString() {
                return `ActivationStart(path: '${this.snapshot.routeConfig && this.snapshot.routeConfig.path || ""}')`
            }
        }
        class Bs {
            constructor(v) {
                this.snapshot = v,
                this.type = 14
            }
            toString() {
                return `ActivationEnd(path: '${this.snapshot.routeConfig && this.snapshot.routeConfig.path || ""}')`
            }
        }
        class pr {
            constructor(v, f, w) {
                this.routerEvent = v,
                this.position = f,
                this.anchor = w,
                this.type = 15
            }
            toString() {
                return `Scroll(anchor: '${this.anchor}', position: '${this.position ? `${this.position[0]}, ${this.position[1]}` : null}')`
            }
        }
        class xs {
            constructor(v) {
                this._root = v
            }
            get root() {
                return this._root.value
            }
            parent(v) {
                const f = this.pathFromRoot(v);
                return f.length > 1 ? f[f.length - 2] : null
            }
            children(v) {
                const f = es(v, this._root);
                return f ? f.children.map(w=>w.value) : []
            }
            firstChild(v) {
                const f = es(v, this._root);
                return f && f.children.length > 0 ? f.children[0].value : null
            }
            siblings(v) {
                const f = cs(v, this._root);
                return f.length < 2 ? [] : f[f.length - 2].children.map(A=>A.value).filter(A=>A !== v)
            }
            pathFromRoot(v) {
                return cs(v, this._root).map(f=>f.value)
            }
        }
        function es(g, v) {
            if (g === v.value)
                return v;
            for (const f of v.children) {
                const w = es(g, f);
                if (w)
                    return w
            }
            return null
        }
        function cs(g, v) {
            if (g === v.value)
                return [v];
            for (const f of v.children) {
                const w = cs(g, f);
                if (w.length)
                    return w.unshift(v),
                    w
            }
            return []
        }
        class bi {
            constructor(v, f) {
                this.value = v,
                this.children = f
            }
            toString() {
                return `TreeNode(${this.value})`
            }
        }
        function us(g) {
            const v = {};
            return g && g.children.forEach(f=>v[f.value.outlet] = f),
            v
        }
        class ki extends xs {
            constructor(v, f) {
                super(v),
                this.snapshot = f,
                Ai(this, v)
            }
            toString() {
                return this.snapshot.toString()
            }
        }
        function $s(g, v) {
            const f = function Vi(g, v) {
                const ve = new _s([],{},{},"",{},Qe,v,null,g.root,-1,{});
                return new ds("",new bi(ve,[]))
            }(g, v)
              , w = new ue.X([new yn("",{})])
              , A = new ue.X({})
              , Z = new ue.X({})
              , ve = new ue.X({})
              , De = new ue.X("")
              , it = new Bi(w,A,ve,De,Z,Qe,v,f.root);
            return it.snapshot = f.root,
            new ki(new bi(it,[]),f)
        }
        class Bi {
            constructor(v, f, w, A, Z, ve, De, it) {
                this.url = v,
                this.params = f,
                this.queryParams = w,
                this.fragment = A,
                this.data = Z,
                this.outlet = ve,
                this.component = De,
                this.title = this.data?.pipe((0,
                Oe.U)(Wt=>Wt[Tt])) ?? (0,
                q.of)(void 0),
                this._futureSnapshot = it
            }
            get routeConfig() {
                return this._futureSnapshot.routeConfig
            }
            get root() {
                return this._routerState.root
            }
            get parent() {
                return this._routerState.parent(this)
            }
            get firstChild() {
                return this._routerState.firstChild(this)
            }
            get children() {
                return this._routerState.children(this)
            }
            get pathFromRoot() {
                return this._routerState.pathFromRoot(this)
            }
            get paramMap() {
                return this._paramMap || (this._paramMap = this.params.pipe((0,
                Oe.U)(v=>an(v)))),
                this._paramMap
            }
            get queryParamMap() {
                return this._queryParamMap || (this._queryParamMap = this.queryParams.pipe((0,
                Oe.U)(v=>an(v)))),
                this._queryParamMap
            }
            toString() {
                return this.snapshot ? this.snapshot.toString() : `Future(${this._futureSnapshot})`
            }
        }
        function ts(g, v="emptyOnly") {
            const f = g.pathFromRoot;
            let w = 0;
            if ("always" !== v)
                for (w = f.length - 1; w >= 1; ) {
                    const A = f[w]
                      , Z = f[w - 1];
                    if (A.routeConfig && "" === A.routeConfig.path)
                        w--;
                    else {
                        if (Z.component)
                            break;
                        w--
                    }
                }
            return function Hs(g) {
                return g.reduce((v,f)=>({
                    params: {
                        ...v.params,
                        ...f.params
                    },
                    data: {
                        ...v.data,
                        ...f.data
                    },
                    resolve: {
                        ...f.data,
                        ...v.resolve,
                        ...f.routeConfig?.data,
                        ...f._resolvedData
                    }
                }), {
                    params: {},
                    data: {},
                    resolve: {}
                })
            }(f.slice(w))
        }
        class _s {
            constructor(v, f, w, A, Z, ve, De, it, Wt, Sn, Ht, zn) {
                this.url = v,
                this.params = f,
                this.queryParams = w,
                this.fragment = A,
                this.data = Z,
                this.outlet = ve,
                this.component = De,
                this.title = this.data?.[Tt],
                this.routeConfig = it,
                this._urlSegment = Wt,
                this._lastPathIndex = Sn,
                this._correctedLastPathIndex = zn ?? Sn,
                this._resolve = Ht
            }
            get root() {
                return this._routerState.root
            }
            get parent() {
                return this._routerState.parent(this)
            }
            get firstChild() {
                return this._routerState.firstChild(this)
            }
            get children() {
                return this._routerState.children(this)
            }
            get pathFromRoot() {
                return this._routerState.pathFromRoot(this)
            }
            get paramMap() {
                return this._paramMap || (this._paramMap = an(this.params)),
                this._paramMap
            }
            get queryParamMap() {
                return this._queryParamMap || (this._queryParamMap = an(this.queryParams)),
                this._queryParamMap
            }
            toString() {
                return `Route(url:'${this.url.map(w=>w.toString()).join("/")}', path:'${this.routeConfig ? this.routeConfig.path : ""}')`
            }
        }
        class ds extends xs {
            constructor(v, f) {
                super(f),
                this.url = v,
                Ai(this, f)
            }
            toString() {
                return Zs(this._root)
            }
        }
        function Ai(g, v) {
            v.value._routerState = g,
            v.children.forEach(f=>Ai(g, f))
        }
        function Zs(g) {
            const v = g.children.length > 0 ? ` { ${g.children.map(Zs).join(", ")} } ` : "";
            return `${g.value}${v}`
        }
        function As(g) {
            if (g.snapshot) {
                const v = g.snapshot
                  , f = g._futureSnapshot;
                g.snapshot = f,
                gn(v.queryParams, f.queryParams) || g.queryParams.next(f.queryParams),
                v.fragment !== f.fragment && g.fragment.next(f.fragment),
                gn(v.params, f.params) || g.params.next(f.params),
                function $t(g, v) {
                    if (g.length !== v.length)
                        return !1;
                    for (let f = 0; f < g.length; ++f)
                        if (!gn(g[f], v[f]))
                            return !1;
                    return !0
                }(v.url, f.url) || g.url.next(f.url),
                gn(v.data, f.data) || g.data.next(f.data)
            } else
                g.snapshot = g._futureSnapshot,
                g.data.next(g._futureSnapshot.data)
        }
        function pi(g, v) {
            const f = gn(g.params, v.params) && function ai(g, v) {
                return Zt(g, v) && g.every((f,w)=>gn(f.parameters, v[w].parameters))
            }(g.url, v.url);
            return f && !(!g.parent != !v.parent) && (!g.parent || pi(g.parent, v.parent))
        }
        function Jn(g, v, f) {
            if (f && g.shouldReuseRoute(v.value, f.value.snapshot)) {
                const w = f.value;
                w._futureSnapshot = v.value;
                const A = function Us(g, v, f) {
                    return v.children.map(w=>{
                        for (const A of f.children)
                            if (g.shouldReuseRoute(w.value, A.value.snapshot))
                                return Jn(g, w, A);
                        return Jn(g, w)
                    }
                    )
                }(g, v, f);
                return new bi(w,A)
            }
            {
                if (g.shouldAttach(v.value)) {
                    const Z = g.retrieve(v.value);
                    if (null !== Z) {
                        const ve = Z.route;
                        return ve.value._futureSnapshot = v.value,
                        ve.children = v.children.map(De=>Jn(g, De)),
                        ve
                    }
                }
                const w = function Ps(g) {
                    return new Bi(new ue.X(g.url),new ue.X(g.params),new ue.X(g.queryParams),new ue.X(g.fragment),new ue.X(g.data),g.outlet,g.component,g)
                }(v.value)
                  , A = v.children.map(Z=>Jn(g, Z));
                return new bi(w,A)
            }
        }
        const hs = "ngNavigationCancelingError";
        function $i(g, v) {
            const {redirectTo: f, navigationBehaviorOptions: w} = xe(v) ? {
                redirectTo: v,
                navigationBehaviorOptions: void 0
            } : v
              , A = zs(!1, 0, v);
            return A.url = f,
            A.navigationBehaviorOptions = w,
            A
        }
        function zs(g, v, f) {
            const w = new Error("NavigationCancelingError: " + (g || ""));
            return w[hs] = !0,
            w.cancellationCode = v,
            f && (w.url = f),
            w
        }
        function ni(g) {
            return Os(g) && xe(g.url)
        }
        function Os(g) {
            return g && g[hs]
        }
        class gr {
            constructor() {
                this.outlet = null,
                this.route = null,
                this.resolver = null,
                this.injector = null,
                this.children = new Qi,
                this.attachRef = null
            }
        }
        let Qi = (()=>{
            class g {
                constructor() {
                    this.contexts = new Map
                }
                onChildOutletCreated(f, w) {
                    const A = this.getOrCreateContext(f);
                    A.outlet = w,
                    this.contexts.set(f, A)
                }
                onChildOutletDestroyed(f) {
                    const w = this.getContext(f);
                    w && (w.outlet = null,
                    w.attachRef = null)
                }
                onOutletDeactivated() {
                    const f = this.contexts;
                    return this.contexts = new Map,
                    f
                }
                onOutletReAttached(f) {
                    this.contexts = f
                }
                getOrCreateContext(f) {
                    let w = this.getContext(f);
                    return w || (w = new gr,
                    this.contexts.set(f, w)),
                    w
                }
                getContext(f) {
                    return this.contexts.get(f) || null
                }
            }
            return g.\u0275fac = function(f) {
                return new (f || g)
            }
            ,
            g.\u0275prov = i.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )();
        const gi = !1;
        let ci = (()=>{
            class g {
                constructor(f, w, A, Z, ve) {
                    this.parentContexts = f,
                    this.location = w,
                    this.changeDetector = Z,
                    this.environmentInjector = ve,
                    this.activated = null,
                    this._activatedRoute = null,
                    this.activateEvents = new i.vpe,
                    this.deactivateEvents = new i.vpe,
                    this.attachEvents = new i.vpe,
                    this.detachEvents = new i.vpe,
                    this.name = A || Qe,
                    f.onChildOutletCreated(this.name, this)
                }
                ngOnDestroy() {
                    this.parentContexts.getContext(this.name)?.outlet === this && this.parentContexts.onChildOutletDestroyed(this.name)
                }
                ngOnInit() {
                    if (!this.activated) {
                        const f = this.parentContexts.getContext(this.name);
                        f && f.route && (f.attachRef ? this.attach(f.attachRef, f.route) : this.activateWith(f.route, f.injector))
                    }
                }
                get isActivated() {
                    return !!this.activated
                }
                get component() {
                    if (!this.activated)
                        throw new i.vHH(4012,gi);
                    return this.activated.instance
                }
                get activatedRoute() {
                    if (!this.activated)
                        throw new i.vHH(4012,gi);
                    return this._activatedRoute
                }
                get activatedRouteData() {
                    return this._activatedRoute ? this._activatedRoute.snapshot.data : {}
                }
                detach() {
                    if (!this.activated)
                        throw new i.vHH(4012,gi);
                    this.location.detach();
                    const f = this.activated;
                    return this.activated = null,
                    this._activatedRoute = null,
                    this.detachEvents.emit(f.instance),
                    f
                }
                attach(f, w) {
                    this.activated = f,
                    this._activatedRoute = w,
                    this.location.insert(f.hostView),
                    this.attachEvents.emit(f.instance)
                }
                deactivate() {
                    if (this.activated) {
                        const f = this.component;
                        this.activated.destroy(),
                        this.activated = null,
                        this._activatedRoute = null,
                        this.deactivateEvents.emit(f)
                    }
                }
                activateWith(f, w) {
                    if (this.isActivated)
                        throw new i.vHH(4013,gi);
                    this._activatedRoute = f;
                    const A = this.location
                      , ve = f._futureSnapshot.component
                      , De = this.parentContexts.getOrCreateContext(this.name).children
                      , it = new Cs(f,De,A.injector);
                    if (w && function ns(g) {
                        return !!g.resolveComponentFactory
                    }(w)) {
                        const Wt = w.resolveComponentFactory(ve);
                        this.activated = A.createComponent(Wt, A.length, it)
                    } else
                        this.activated = A.createComponent(ve, {
                            index: A.length,
                            injector: it,
                            environmentInjector: w ?? this.environmentInjector
                        });
                    this.changeDetector.markForCheck(),
                    this.activateEvents.emit(this.activated.instance)
                }
            }
            return g.\u0275fac = function(f) {
                return new (f || g)(i.Y36(Qi),i.Y36(i.s_b),i.$8M("name"),i.Y36(i.sBO),i.Y36(i.lqb))
            }
            ,
            g.\u0275dir = i.lG2({
                type: g,
                selectors: [["router-outlet"]],
                outputs: {
                    activateEvents: "activate",
                    deactivateEvents: "deactivate",
                    attachEvents: "attach",
                    detachEvents: "detach"
                },
                exportAs: ["outlet"],
                standalone: !0
            }),
            g
        }
        )();
        class Cs {
            constructor(v, f, w) {
                this.route = v,
                this.childContexts = f,
                this.parent = w
            }
            get(v, f) {
                return v === Bi ? this.route : v === Qi ? this.childContexts : this.parent.get(v, f)
            }
        }
        let Nn = (()=>{
            class g {
            }
            return g.\u0275fac = function(f) {
                return new (f || g)
            }
            ,
            g.\u0275cmp = i.Xpm({
                type: g,
                selectors: [["ng-component"]],
                standalone: !0,
                features: [i.jDz],
                decls: 1,
                vars: 0,
                template: function(f, w) {
                    1 & f && i._UZ(0, "router-outlet")
                },
                dependencies: [ci],
                encapsulation: 2
            }),
            g
        }
        )();
        function mr(g, v) {
            return g.providers && !g._injector && (g._injector = (0,
            i.MMx)(g.providers, v, `Route: ${g.path}`)),
            g._injector ?? v
        }
        function ss(g) {
            const v = g.children && g.children.map(ss)
              , f = v ? {
                ...g,
                children: v
            } : {
                ...g
            };
            return !f.component && !f.loadComponent && (v || f.loadChildren) && f.outlet && f.outlet !== Qe && (f.component = Nn),
            f
        }
        function mi(g) {
            return g.outlet || Qe
        }
        function bs(g, v) {
            const f = g.filter(w=>mi(w) === v);
            return f.push(...g.filter(w=>mi(w) !== v)),
            f
        }
        function Ii(g) {
            if (!g)
                return null;
            if (g.routeConfig?._injector)
                return g.routeConfig._injector;
            for (let v = g.parent; v; v = v.parent) {
                const f = v.routeConfig;
                if (f?._loadedInjector)
                    return f._loadedInjector;
                if (f?._injector)
                    return f._injector
            }
            return null
        }
        class or {
            constructor(v, f, w, A) {
                this.routeReuseStrategy = v,
                this.futureState = f,
                this.currState = w,
                this.forwardEvent = A
            }
            activate(v) {
                const f = this.futureState._root
                  , w = this.currState ? this.currState._root : null;
                this.deactivateChildRoutes(f, w, v),
                As(this.futureState.root),
                this.activateChildRoutes(f, w, v)
            }
            deactivateChildRoutes(v, f, w) {
                const A = us(f);
                v.children.forEach(Z=>{
                    const ve = Z.value.outlet;
                    this.deactivateRoutes(Z, A[ve], w),
                    delete A[ve]
                }
                ),
                Tn(A, (Z,ve)=>{
                    this.deactivateRouteAndItsChildren(Z, w)
                }
                )
            }
            deactivateRoutes(v, f, w) {
                const A = v.value
                  , Z = f ? f.value : null;
                if (A === Z)
                    if (A.component) {
                        const ve = w.getContext(A.outlet);
                        ve && this.deactivateChildRoutes(v, f, ve.children)
                    } else
                        this.deactivateChildRoutes(v, f, w);
                else
                    Z && this.deactivateRouteAndItsChildren(f, w)
            }
            deactivateRouteAndItsChildren(v, f) {
                v.value.component && this.routeReuseStrategy.shouldDetach(v.value.snapshot) ? this.detachAndStoreRouteSubtree(v, f) : this.deactivateRouteAndOutlet(v, f)
            }
            detachAndStoreRouteSubtree(v, f) {
                const w = f.getContext(v.value.outlet)
                  , A = w && v.value.component ? w.children : f
                  , Z = us(v);
                for (const ve of Object.keys(Z))
                    this.deactivateRouteAndItsChildren(Z[ve], A);
                if (w && w.outlet) {
                    const ve = w.outlet.detach()
                      , De = w.children.onOutletDeactivated();
                    this.routeReuseStrategy.store(v.value.snapshot, {
                        componentRef: ve,
                        route: v,
                        contexts: De
                    })
                }
            }
            deactivateRouteAndOutlet(v, f) {
                const w = f.getContext(v.value.outlet)
                  , A = w && v.value.component ? w.children : f
                  , Z = us(v);
                for (const ve of Object.keys(Z))
                    this.deactivateRouteAndItsChildren(Z[ve], A);
                w && w.outlet && (w.outlet.deactivate(),
                w.children.onOutletDeactivated(),
                w.attachRef = null,
                w.resolver = null,
                w.route = null)
            }
            activateChildRoutes(v, f, w) {
                const A = us(f);
                v.children.forEach(Z=>{
                    this.activateRoutes(Z, A[Z.value.outlet], w),
                    this.forwardEvent(new Bs(Z.value.snapshot))
                }
                ),
                v.children.length && this.forwardEvent(new rr(v.value.snapshot))
            }
            activateRoutes(v, f, w) {
                const A = v.value
                  , Z = f ? f.value : null;
                if (As(A),
                A === Z)
                    if (A.component) {
                        const ve = w.getOrCreateContext(A.outlet);
                        this.activateChildRoutes(v, f, ve.children)
                    } else
                        this.activateChildRoutes(v, f, w);
                else if (A.component) {
                    const ve = w.getOrCreateContext(A.outlet);
                    if (this.routeReuseStrategy.shouldAttach(A.snapshot)) {
                        const De = this.routeReuseStrategy.retrieve(A.snapshot);
                        this.routeReuseStrategy.store(A.snapshot, null),
                        ve.children.onOutletReAttached(De.contexts),
                        ve.attachRef = De.componentRef,
                        ve.route = De.route.value,
                        ve.outlet && ve.outlet.attach(De.componentRef, De.route.value),
                        As(De.route.value),
                        this.activateChildRoutes(v, null, ve.children)
                    } else {
                        const De = Ii(A.snapshot)
                          , it = De?.get(i._Vd) ?? null;
                        ve.attachRef = null,
                        ve.route = A,
                        ve.resolver = it,
                        ve.injector = De,
                        ve.outlet && ve.outlet.activateWith(A, ve.injector),
                        this.activateChildRoutes(v, null, ve.children)
                    }
                } else
                    this.activateChildRoutes(v, null, w)
            }
        }
        class xt {
            constructor(v) {
                this.path = v,
                this.route = this.path[this.path.length - 1]
            }
        }
        class On {
            constructor(v, f) {
                this.component = v,
                this.route = f
            }
        }
        function Ur(g, v, f) {
            const w = g._root;
            return R(w, v ? v._root : null, f, [w.value])
        }
        function Qn(g, v) {
            const f = Symbol()
              , w = v.get(g, f);
            return w === f ? "function" != typeof g || (0,
            i.Z0I)(g) ? v.get(g) : g : w
        }
        function R(g, v, f, w, A={
            canDeactivateChecks: [],
            canActivateChecks: []
        }) {
            const Z = us(v);
            return g.children.forEach(ve=>{
                (function P(g, v, f, w, A={
                    canDeactivateChecks: [],
                    canActivateChecks: []
                }) {
                    const Z = g.value
                      , ve = v ? v.value : null
                      , De = f ? f.getContext(g.value.outlet) : null;
                    if (ve && Z.routeConfig === ve.routeConfig) {
                        const it = function I(g, v, f) {
                            if ("function" == typeof f)
                                return f(g, v);
                            switch (f) {
                            case "pathParamsChange":
                                return !Zt(g.url, v.url);
                            case "pathParamsOrQueryParamsChange":
                                return !Zt(g.url, v.url) || !gn(g.queryParams, v.queryParams);
                            case "always":
                                return !0;
                            case "paramsOrQueryParamsChange":
                                return !pi(g, v) || !gn(g.queryParams, v.queryParams);
                            default:
                                return !pi(g, v)
                            }
                        }(ve, Z, Z.routeConfig.runGuardsAndResolvers);
                        it ? A.canActivateChecks.push(new xt(w)) : (Z.data = ve.data,
                        Z._resolvedData = ve._resolvedData),
                        R(g, v, Z.component ? De ? De.children : null : f, w, A),
                        it && De && De.outlet && De.outlet.isActivated && A.canDeactivateChecks.push(new On(De.outlet.component,ve))
                    } else
                        ve && ne(v, De, A),
                        A.canActivateChecks.push(new xt(w)),
                        R(g, null, Z.component ? De ? De.children : null : f, w, A)
                }
                )(ve, Z[ve.value.outlet], f, w.concat([ve.value]), A),
                delete Z[ve.value.outlet]
            }
            ),
            Tn(Z, (ve,De)=>ne(ve, f.getContext(De), A)),
            A
        }
        function ne(g, v, f) {
            const w = us(g)
              , A = g.value;
            Tn(w, (Z,ve)=>{
                ne(Z, A.component ? v ? v.children.getContext(ve) : null : v, f)
            }
            ),
            f.canDeactivateChecks.push(new On(A.component && v && v.outlet && v.outlet.isActivated ? v.outlet.component : null,A))
        }
        function at(g) {
            return "function" == typeof g
        }
        function Wi(g) {
            return g instanceof H.K || "EmptyError" === g?.name
        }
        const cr = Symbol("INITIAL_VALUE");
        function Ds() {
            return (0,
            Ze.w)(g=>Ne(g.map(v=>v.pipe((0,
            _t.q)(1), (0,
            rt.O)(cr)))).pipe((0,
            Oe.U)(v=>{
                for (const f of v)
                    if (!0 !== f) {
                        if (f === cr)
                            return cr;
                        if (!1 === f || f instanceof un)
                            return f
                    }
                return !0
            }
            ), (0,
            It.h)(v=>v !== cr), (0,
            _t.q)(1)))
        }
        function se(g) {
            return (0,
            et.z)((0,
            be.b)(v=>{
                if (xe(v))
                    throw $i(0, v)
            }
            ), (0,
            Oe.U)(v=>!0 === v))
        }
        const G = {
            matched: !1,
            consumedSegments: [],
            remainingSegments: [],
            parameters: {},
            positionalParamSegments: {}
        };
        function u(g, v, f, w, A) {
            const Z = m(g, v, f);
            return Z.matched ? function ce(g, v, f, w) {
                const A = v.canMatch;
                if (!A || 0 === A.length)
                    return (0,
                    q.of)(!0);
                const Z = A.map(ve=>{
                    const De = Qn(ve, g);
                    return vt(function rs(g) {
                        return g && at(g.canMatch)
                    }(De) ? De.canMatch(v, f) : g.runInContext(()=>De(v, f)))
                }
                );
                return (0,
                q.of)(Z).pipe(Ds(), se())
            }(w = mr(v, w), v, f).pipe((0,
            Oe.U)(ve=>!0 === ve ? Z : {
                ...G
            })) : (0,
            q.of)(Z)
        }
        function m(g, v, f) {
            if ("" === v.path)
                return "full" === v.pathMatch && (g.hasChildren() || f.length > 0) ? {
                    ...G
                } : {
                    matched: !0,
                    consumedSegments: [],
                    remainingSegments: f,
                    parameters: {},
                    positionalParamSegments: {}
                };
            const A = (v.matcher || In)(f, g, v);
            if (!A)
                return {
                    ...G
                };
            const Z = {};
            Tn(A.posParams, (De,it)=>{
                Z[it] = De.path
            }
            );
            const ve = A.consumed.length > 0 ? {
                ...Z,
                ...A.consumed[A.consumed.length - 1].parameters
            } : Z;
            return {
                matched: !0,
                consumedSegments: A.consumed,
                remainingSegments: f.slice(A.consumed.length),
                parameters: ve,
                positionalParamSegments: A.posParams ?? {}
            }
        }
        function d(g, v, f, w, A="corrected") {
            if (f.length > 0 && function X(g, v, f) {
                return f.some(w=>ae(g, v, w) && mi(w) !== Qe)
            }(g, f, w)) {
                const ve = new jt(v,function V(g, v, f, w) {
                    const A = {};
                    A[Qe] = w,
                    w._sourceSegment = g,
                    w._segmentIndexShift = v.length;
                    for (const Z of f)
                        if ("" === Z.path && mi(Z) !== Qe) {
                            const ve = new jt([],{});
                            ve._sourceSegment = g,
                            ve._segmentIndexShift = v.length,
                            A[mi(Z)] = ve
                        }
                    return A
                }(g, v, w, new jt(f,g.children)));
                return ve._sourceSegment = g,
                ve._segmentIndexShift = v.length,
                {
                    segmentGroup: ve,
                    slicedSegments: []
                }
            }
            if (0 === f.length && function j(g, v, f) {
                return f.some(w=>ae(g, v, w))
            }(g, f, w)) {
                const ve = new jt(g.segments,function S(g, v, f, w, A, Z) {
                    const ve = {};
                    for (const De of w)
                        if (ae(g, f, De) && !A[mi(De)]) {
                            const it = new jt([],{});
                            it._sourceSegment = g,
                            it._segmentIndexShift = "legacy" === Z ? g.segments.length : v.length,
                            ve[mi(De)] = it
                        }
                    return {
                        ...A,
                        ...ve
                    }
                }(g, v, f, w, g.children, A));
                return ve._sourceSegment = g,
                ve._segmentIndexShift = v.length,
                {
                    segmentGroup: ve,
                    slicedSegments: f
                }
            }
            const Z = new jt(g.segments,g.children);
            return Z._sourceSegment = g,
            Z._segmentIndexShift = v.length,
            {
                segmentGroup: Z,
                slicedSegments: f
            }
        }
        function ae(g, v, f) {
            return (!(g.hasChildren() || v.length > 0) || "full" !== f.pathMatch) && "" === f.path
        }
        function Ae(g, v, f, w) {
            return !!(mi(g) === w || w !== Qe && ae(v, f, g)) && ("**" === g.path || m(v, g, f).matched)
        }
        function Se(g, v, f) {
            return 0 === v.length && !g.children[f]
        }
        const ke = !1;
        class lt {
            constructor(v) {
                this.segmentGroup = v || null
            }
        }
        class yt {
            constructor(v) {
                this.urlTree = v
            }
        }
        function mt(g) {
            return (0,
            st._)(new lt(g))
        }
        function Ct(g) {
            return (0,
            st._)(new yt(g))
        }
        class Xe {
            constructor(v, f, w, A, Z) {
                this.injector = v,
                this.configLoader = f,
                this.urlSerializer = w,
                this.urlTree = A,
                this.config = Z,
                this.allowRedirects = !0
            }
            apply() {
                const v = d(this.urlTree.root, [], [], this.config).segmentGroup
                  , f = new jt(v.segments,v.children);
                return this.expandSegmentGroup(this.injector, this.config, f, Qe).pipe((0,
                Oe.U)(Z=>this.createUrlTree(hi(Z), this.urlTree.queryParams, this.urlTree.fragment))).pipe((0,
                pe.K)(Z=>{
                    if (Z instanceof yt)
                        return this.allowRedirects = !1,
                        this.match(Z.urlTree);
                    throw Z instanceof lt ? this.noMatchError(Z) : Z
                }
                ))
            }
            match(v) {
                return this.expandSegmentGroup(this.injector, this.config, v.root, Qe).pipe((0,
                Oe.U)(A=>this.createUrlTree(hi(A), v.queryParams, v.fragment))).pipe((0,
                pe.K)(A=>{
                    throw A instanceof lt ? this.noMatchError(A) : A
                }
                ))
            }
            noMatchError(v) {
                return new i.vHH(4002,ke)
            }
            createUrlTree(v, f, w) {
                const A = Wn(v);
                return new un(A,f,w)
            }
            expandSegmentGroup(v, f, w, A) {
                return 0 === w.segments.length && w.hasChildren() ? this.expandChildren(v, f, w).pipe((0,
                Oe.U)(Z=>new jt([],Z))) : this.expandSegment(v, w, f, w.segments, A, !0)
            }
            expandChildren(v, f, w) {
                const A = [];
                for (const Z of Object.keys(w.children))
                    "primary" === Z ? A.unshift(Z) : A.push(Z);
                return (0,
                l.D)(A).pipe((0,
                qe.b)(Z=>{
                    const ve = w.children[Z]
                      , De = bs(f, Z);
                    return this.expandSegmentGroup(v, De, ve, Z).pipe((0,
                    Oe.U)(it=>({
                        segment: it,
                        outlet: Z
                    })))
                }
                ), Mt((Z,ve)=>(Z[ve.outlet] = ve.segment,
                Z), {}), Kt())
            }
            expandSegment(v, f, w, A, Z, ve) {
                return (0,
                l.D)(w).pipe((0,
                qe.b)(De=>this.expandSegmentAgainstRoute(v, f, w, De, A, Z, ve).pipe((0,
                pe.K)(Wt=>{
                    if (Wt instanceof lt)
                        return (0,
                        q.of)(null);
                    throw Wt
                }
                ))), (0,
                ft.P)(De=>!!De), (0,
                pe.K)((De,it)=>{
                    if (Wi(De))
                        return Se(f, A, Z) ? (0,
                        q.of)(new jt([],{})) : mt(f);
                    throw De
                }
                ))
            }
            expandSegmentAgainstRoute(v, f, w, A, Z, ve, De) {
                return Ae(A, f, Z, ve) ? void 0 === A.redirectTo ? this.matchSegmentAgainstRoute(v, f, A, Z, ve) : De && this.allowRedirects ? this.expandSegmentAgainstRouteUsingRedirect(v, f, w, A, Z, ve) : mt(f) : mt(f)
            }
            expandSegmentAgainstRouteUsingRedirect(v, f, w, A, Z, ve) {
                return "**" === A.path ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(v, w, A, ve) : this.expandRegularSegmentAgainstRouteUsingRedirect(v, f, w, A, Z, ve)
            }
            expandWildCardWithParamsAgainstRouteUsingRedirect(v, f, w, A) {
                const Z = this.applyRedirectCommands([], w.redirectTo, {});
                return w.redirectTo.startsWith("/") ? Ct(Z) : this.lineralizeSegments(w, Z).pipe((0,
                qt.z)(ve=>{
                    const De = new jt(ve,{});
                    return this.expandSegment(v, De, f, ve, A, !1)
                }
                ))
            }
            expandRegularSegmentAgainstRouteUsingRedirect(v, f, w, A, Z, ve) {
                const {matched: De, consumedSegments: it, remainingSegments: Wt, positionalParamSegments: Sn} = m(f, A, Z);
                if (!De)
                    return mt(f);
                const Ht = this.applyRedirectCommands(it, A.redirectTo, Sn);
                return A.redirectTo.startsWith("/") ? Ct(Ht) : this.lineralizeSegments(A, Ht).pipe((0,
                qt.z)(zn=>this.expandSegment(v, f, w, zn.concat(Wt), ve, !1)))
            }
            matchSegmentAgainstRoute(v, f, w, A, Z) {
                return "**" === w.path ? (v = mr(w, v),
                w.loadChildren ? (w._loadedRoutes ? (0,
                q.of)({
                    routes: w._loadedRoutes,
                    injector: w._loadedInjector
                }) : this.configLoader.loadChildren(v, w)).pipe((0,
                Oe.U)(De=>(w._loadedRoutes = De.routes,
                w._loadedInjector = De.injector,
                new jt(A,{})))) : (0,
                q.of)(new jt(A,{}))) : u(f, w, A, v).pipe((0,
                Ze.w)(({matched: ve, consumedSegments: De, remainingSegments: it})=>ve ? this.getChildConfig(v = w._injector ?? v, w, A).pipe((0,
                qt.z)(Sn=>{
                    const Ht = Sn.injector ?? v
                      , zn = Sn.routes
                      , {segmentGroup: Kn, slicedSegments: ls} = d(f, De, it, zn)
                      , Ts = new jt(Kn.segments,Kn.children);
                    if (0 === ls.length && Ts.hasChildren())
                        return this.expandChildren(Ht, zn, Ts).pipe((0,
                        Oe.U)(ja=>new jt(De,ja)));
                    if (0 === zn.length && 0 === ls.length)
                        return (0,
                        q.of)(new jt(De,{}));
                    const nr = mi(w) === Z;
                    return this.expandSegment(Ht, Ts, zn, ls, nr ? Qe : Z, !0).pipe((0,
                    Oe.U)(So=>new jt(De.concat(So.segments),So.children)))
                }
                )) : mt(f)))
            }
            getChildConfig(v, f, w) {
                return f.children ? (0,
                q.of)({
                    routes: f.children,
                    injector: v
                }) : f.loadChildren ? void 0 !== f._loadedRoutes ? (0,
                q.of)({
                    routes: f._loadedRoutes,
                    injector: f._loadedInjector
                }) : function B(g, v, f, w) {
                    const A = v.canLoad;
                    if (void 0 === A || 0 === A.length)
                        return (0,
                        q.of)(!0);
                    const Z = A.map(ve=>{
                        const De = Qn(ve, g);
                        return vt(function di(g) {
                            return g && at(g.canLoad)
                        }(De) ? De.canLoad(v, f) : g.runInContext(()=>De(v, f)))
                    }
                    );
                    return (0,
                    q.of)(Z).pipe(Ds(), se())
                }(v, f, w).pipe((0,
                qt.z)(A=>A ? this.configLoader.loadChildren(v, f).pipe((0,
                be.b)(Z=>{
                    f._loadedRoutes = Z.routes,
                    f._loadedInjector = Z.injector
                }
                )) : function Ut(g) {
                    return (0,
                    st._)(zs(ke, 3))
                }())) : (0,
                q.of)({
                    routes: [],
                    injector: v
                })
            }
            lineralizeSegments(v, f) {
                let w = []
                  , A = f.root;
                for (; ; ) {
                    if (w = w.concat(A.segments),
                    0 === A.numberOfChildren)
                        return (0,
                        q.of)(w);
                    if (A.numberOfChildren > 1 || !A.children[Qe])
                        return (0,
                        st._)(new i.vHH(4e3,ke));
                    A = A.children[Qe]
                }
            }
            applyRedirectCommands(v, f, w) {
                return this.applyRedirectCreateUrlTree(f, this.urlSerializer.parse(f), v, w)
            }
            applyRedirectCreateUrlTree(v, f, w, A) {
                const Z = this.createSegmentGroup(v, f.root, w, A);
                return new un(Z,this.createQueryParams(f.queryParams, this.urlTree.queryParams),f.fragment)
            }
            createQueryParams(v, f) {
                const w = {};
                return Tn(v, (A,Z)=>{
                    if ("string" == typeof A && A.startsWith(":")) {
                        const De = A.substring(1);
                        w[Z] = f[De]
                    } else
                        w[Z] = A
                }
                ),
                w
            }
            createSegmentGroup(v, f, w, A) {
                const Z = this.createSegments(v, f.segments, w, A);
                let ve = {};
                return Tn(f.children, (De,it)=>{
                    ve[it] = this.createSegmentGroup(v, De, w, A)
                }
                ),
                new jt(Z,ve)
            }
            createSegments(v, f, w, A) {
                return f.map(Z=>Z.path.startsWith(":") ? this.findPosParam(v, Z, A) : this.findOrReturn(Z, w))
            }
            findPosParam(v, f, w) {
                const A = w[f.path.substring(1)];
                if (!A)
                    throw new i.vHH(4001,ke);
                return A
            }
            findOrReturn(v, f) {
                let w = 0;
                for (const A of f) {
                    if (A.path === v.path)
                        return f.splice(w),
                        A;
                    w++
                }
                return v
            }
        }
        class en {
        }
        class Yt {
            constructor(v, f, w, A, Z, ve, De, it) {
                this.injector = v,
                this.rootComponentType = f,
                this.config = w,
                this.urlTree = A,
                this.url = Z,
                this.paramsInheritanceStrategy = ve,
                this.relativeLinkResolution = De,
                this.urlSerializer = it
            }
            recognize() {
                const v = d(this.urlTree.root, [], [], this.config.filter(f=>void 0 === f.redirectTo), this.relativeLinkResolution).segmentGroup;
                return this.processSegmentGroup(this.injector, this.config, v, Qe).pipe((0,
                Oe.U)(f=>{
                    if (null === f)
                        return null;
                    const w = new _s([],Object.freeze({}),Object.freeze({
                        ...this.urlTree.queryParams
                    }),this.urlTree.fragment,{},Qe,this.rootComponentType,null,this.urlTree.root,-1,{})
                      , A = new bi(w,f)
                      , Z = new ds(this.url,A);
                    return this.inheritParamsAndData(Z._root),
                    Z
                }
                ))
            }
            inheritParamsAndData(v) {
                const f = v.value
                  , w = ts(f, this.paramsInheritanceStrategy);
                f.params = Object.freeze(w.params),
                f.data = Object.freeze(w.data),
                v.children.forEach(A=>this.inheritParamsAndData(A))
            }
            processSegmentGroup(v, f, w, A) {
                return 0 === w.segments.length && w.hasChildren() ? this.processChildren(v, f, w) : this.processSegment(v, f, w, w.segments, A)
            }
            processChildren(v, f, w) {
                return (0,
                l.D)(Object.keys(w.children)).pipe((0,
                qe.b)(A=>{
                    const Z = w.children[A]
                      , ve = bs(f, A);
                    return this.processSegmentGroup(v, ve, Z, A)
                }
                ), Mt((A,Z)=>A && Z ? (A.push(...Z),
                A) : null), function k(g, v=!1) {
                    return (0,
                    ze.e)((f,w)=>{
                        let A = 0;
                        f.subscribe(new re.Q(w,Z=>{
                            const ve = g(Z, A++);
                            (ve || v) && w.next(Z),
                            !ve && w.complete()
                        }
                        ))
                    }
                    )
                }(A=>null !== A), (0,
                bt.d)(null), Kt(), (0,
                Oe.U)(A=>{
                    if (null === A)
                        return null;
                    const Z = Yi(A);
                    return function zt(g) {
                        g.sort((v,f)=>v.value.outlet === Qe ? -1 : f.value.outlet === Qe ? 1 : v.value.outlet.localeCompare(f.value.outlet))
                    }(Z),
                    Z
                }
                ))
            }
            processSegment(v, f, w, A, Z) {
                return (0,
                l.D)(f).pipe((0,
                qe.b)(ve=>this.processSegmentAgainstRoute(ve._injector ?? v, ve, w, A, Z)), (0,
                ft.P)(ve=>!!ve), (0,
                pe.K)(ve=>{
                    if (Wi(ve))
                        return Se(w, A, Z) ? (0,
                        q.of)([]) : (0,
                        q.of)(null);
                    throw ve
                }
                ))
            }
            processSegmentAgainstRoute(v, f, w, A, Z) {
                if (f.redirectTo || !Ae(f, w, A, Z))
                    return (0,
                    q.of)(null);
                let ve;
                if ("**" === f.path) {
                    const De = A.length > 0 ? Xn(A).parameters : {}
                      , it = Qs(w) + A.length
                      , Wt = new _s(A,De,Object.freeze({
                        ...this.urlTree.queryParams
                    }),this.urlTree.fragment,Ki(f),mi(f),f.component ?? f._loadedComponent ?? null,f,Js(w),it,Pr(f),it);
                    ve = (0,
                    q.of)({
                        snapshot: Wt,
                        consumedSegments: [],
                        remainingSegments: []
                    })
                } else
                    ve = u(w, f, A, v).pipe((0,
                    Oe.U)(({matched: De, consumedSegments: it, remainingSegments: Wt, parameters: Sn})=>{
                        if (!De)
                            return null;
                        const Ht = Qs(w) + it.length;
                        return {
                            snapshot: new _s(it,Sn,Object.freeze({
                                ...this.urlTree.queryParams
                            }),this.urlTree.fragment,Ki(f),mi(f),f.component ?? f._loadedComponent ?? null,f,Js(w),Ht,Pr(f),Ht),
                            consumedSegments: it,
                            remainingSegments: Wt
                        }
                    }
                    ));
                return ve.pipe((0,
                Ze.w)(De=>{
                    if (null === De)
                        return (0,
                        q.of)(null);
                    const {snapshot: it, consumedSegments: Wt, remainingSegments: Sn} = De;
                    v = f._injector ?? v;
                    const Ht = f._loadedInjector ?? v
                      , zn = function Vn(g) {
                        return g.children ? g.children : g.loadChildren ? g._loadedRoutes : []
                    }(f)
                      , {segmentGroup: Kn, slicedSegments: ls} = d(w, Wt, Sn, zn.filter(nr=>void 0 === nr.redirectTo), this.relativeLinkResolution);
                    if (0 === ls.length && Kn.hasChildren())
                        return this.processChildren(Ht, zn, Kn).pipe((0,
                        Oe.U)(nr=>null === nr ? null : [new bi(it,nr)]));
                    if (0 === zn.length && 0 === ls.length)
                        return (0,
                        q.of)([new bi(it,[])]);
                    const Ts = mi(f) === Z;
                    return this.processSegment(Ht, zn, Kn, ls, Ts ? Qe : Z).pipe((0,
                    Oe.U)(nr=>null === nr ? null : [new bi(it,nr)]))
                }
                ))
            }
        }
        function Un(g) {
            const v = g.value.routeConfig;
            return v && "" === v.path && void 0 === v.redirectTo
        }
        function Yi(g) {
            const v = []
              , f = new Set;
            for (const w of g) {
                if (!Un(w)) {
                    v.push(w);
                    continue
                }
                const A = v.find(Z=>w.value.routeConfig === Z.value.routeConfig);
                void 0 !== A ? (A.children.push(...w.children),
                f.add(A)) : v.push(w)
            }
            for (const w of f) {
                const A = Yi(w.children);
                v.push(new bi(w.value,A))
            }
            return v.filter(w=>!f.has(w))
        }
        function Js(g) {
            let v = g;
            for (; v._sourceSegment; )
                v = v._sourceSegment;
            return v
        }
        function Qs(g) {
            let v = g
              , f = v._segmentIndexShift ?? 0;
            for (; v._sourceSegment; )
                v = v._sourceSegment,
                f += v._segmentIndexShift ?? 0;
            return f - 1
        }
        function Ki(g) {
            return g.data || {}
        }
        function Pr(g) {
            return g.resolve || {}
        }
        function _r(g) {
            return "string" == typeof g.title || null === g.title
        }
        function js(g) {
            return (0,
            Ze.w)(v=>{
                const f = g(v);
                return f ? (0,
                l.D)(f).pipe((0,
                Oe.U)(()=>v)) : (0,
                q.of)(v)
            }
            )
        }
        let Or = (()=>{
            class g {
                buildTitle(f) {
                    let w, A = f.root;
                    for (; void 0 !== A; )
                        w = this.getResolvedTitleForRoute(A) ?? w,
                        A = A.children.find(Z=>Z.outlet === Qe);
                    return w
                }
                getResolvedTitleForRoute(f) {
                    return f.data[Tt]
                }
            }
            return g.\u0275fac = function(f) {
                return new (f || g)
            }
            ,
            g.\u0275prov = i.Yz7({
                token: g,
                factory: function() {
                    return (0,
                    i.f3M)(ws)
                },
                providedIn: "root"
            }),
            g
        }
        )()
          , ws = (()=>{
            class g extends Or {
                constructor(f) {
                    super(),
                    this.title = f
                }
                updateTitle(f) {
                    const w = this.buildTitle(f);
                    void 0 !== w && this.title.setTitle(w)
                }
            }
            return g.\u0275fac = function(f) {
                return new (f || g)(i.LFG(gt.Dx))
            }
            ,
            g.\u0275prov = i.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )();
        class Gr {
        }
        class _o extends class vo {
            shouldDetach(v) {
                return !1
            }
            store(v, f) {}
            shouldAttach(v) {
                return !1
            }
            retrieve(v) {
                return null
            }
            shouldReuseRoute(v, f) {
                return v.routeConfig === f.routeConfig
            }
        }
        {
        }
        const Gs = new i.OlP("",{
            providedIn: "root",
            factory: ()=>({})
        })
          , oo = new i.OlP("ROUTES");
        let Yr = (()=>{
            class g {
                constructor(f, w) {
                    this.injector = f,
                    this.compiler = w,
                    this.componentLoaders = new WeakMap,
                    this.childrenLoaders = new WeakMap
                }
                loadComponent(f) {
                    if (this.componentLoaders.get(f))
                        return this.componentLoaders.get(f);
                    if (f._loadedComponent)
                        return (0,
                        q.of)(f._loadedComponent);
                    this.onLoadStartListener && this.onLoadStartListener(f);
                    const w = vt(f.loadComponent()).pipe((0,
                    be.b)(Z=>{
                        this.onLoadEndListener && this.onLoadEndListener(f),
                        f._loadedComponent = Z
                    }
                    ), (0,
                    he.x)(()=>{
                        this.componentLoaders.delete(f)
                    }
                    ))
                      , A = new Re(w,()=>new ut.x).pipe(ye());
                    return this.componentLoaders.set(f, A),
                    A
                }
                loadChildren(f, w) {
                    if (this.childrenLoaders.get(w))
                        return this.childrenLoaders.get(w);
                    if (w._loadedRoutes)
                        return (0,
                        q.of)({
                            routes: w._loadedRoutes,
                            injector: w._loadedInjector
                        });
                    this.onLoadStartListener && this.onLoadStartListener(w);
                    const Z = this.loadModuleFactoryOrRoutes(w.loadChildren).pipe((0,
                    Oe.U)(De=>{
                        this.onLoadEndListener && this.onLoadEndListener(w);
                        let it, Wt, Sn = !1;
                        Array.isArray(De) ? Wt = De : (it = De.create(f).injector,
                        Wt = xn(it.get(oo, [], i.XFs.Self | i.XFs.Optional)));
                        return {
                            routes: Wt.map(ss),
                            injector: it
                        }
                    }
                    ), (0,
                    he.x)(()=>{
                        this.childrenLoaders.delete(w)
                    }
                    ))
                      , ve = new Re(Z,()=>new ut.x).pipe(ye());
                    return this.childrenLoaders.set(w, ve),
                    ve
                }
                loadModuleFactoryOrRoutes(f) {
                    return vt(f()).pipe((0,
                    qt.z)(w=>w instanceof i.YKP || Array.isArray(w) ? (0,
                    q.of)(w) : (0,
                    l.D)(this.compiler.compileModuleAsync(w))))
                }
            }
            return g.\u0275fac = function(f) {
                return new (f || g)(i.LFG(i.zs3),i.LFG(i.Sil))
            }
            ,
            g.\u0275prov = i.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )();
        class No {
        }
        class Fo {
            shouldProcessUrl(v) {
                return !0
            }
            extract(v) {
                return v
            }
            merge(v, f) {
                return v
            }
        }
        function lo(g) {
            throw g
        }
        function Kr(g, v, f) {
            return v.parse("/")
        }
        const ha = {
            paths: "exact",
            fragment: "ignored",
            matrixParams: "ignored",
            queryParams: "exact"
        }
          , Co = {
            paths: "subset",
            fragment: "ignored",
            matrixParams: "ignored",
            queryParams: "subset"
        };
        function ur() {
            const g = (0,
            i.f3M)(Si)
              , v = (0,
            i.f3M)(Qi)
              , f = (0,
            i.f3M)(Ce.Ye)
              , w = (0,
            i.f3M)(i.zs3)
              , A = (0,
            i.f3M)(i.Sil)
              , Z = (0,
            i.f3M)(oo, {
                optional: !0
            }) ?? []
              , ve = (0,
            i.f3M)(Gs, {
                optional: !0
            }) ?? {}
              , De = (0,
            i.f3M)(ws)
              , it = (0,
            i.f3M)(Or, {
                optional: !0
            })
              , Wt = (0,
            i.f3M)(No, {
                optional: !0
            })
              , Sn = (0,
            i.f3M)(Gr, {
                optional: !0
            })
              , Ht = new xi(null,g,v,f,w,A,xn(Z));
            return Wt && (Ht.urlHandlingStrategy = Wt),
            Sn && (Ht.routeReuseStrategy = Sn),
            Ht.titleStrategy = it ?? De,
            function co(g, v) {
                g.errorHandler && (v.errorHandler = g.errorHandler),
                g.malformedUriErrorHandler && (v.malformedUriErrorHandler = g.malformedUriErrorHandler),
                g.onSameUrlNavigation && (v.onSameUrlNavigation = g.onSameUrlNavigation),
                g.paramsInheritanceStrategy && (v.paramsInheritanceStrategy = g.paramsInheritanceStrategy),
                g.relativeLinkResolution && (v.relativeLinkResolution = g.relativeLinkResolution),
                g.urlUpdateStrategy && (v.urlUpdateStrategy = g.urlUpdateStrategy),
                g.canceledNavigationResolution && (v.canceledNavigationResolution = g.canceledNavigationResolution)
            }(ve, Ht),
            Ht
        }
        let xi = (()=>{
            class g {
                constructor(f, w, A, Z, ve, De, it) {
                    this.rootComponentType = f,
                    this.urlSerializer = w,
                    this.rootContexts = A,
                    this.location = Z,
                    this.config = it,
                    this.lastSuccessfulNavigation = null,
                    this.currentNavigation = null,
                    this.disposed = !1,
                    this.navigationId = 0,
                    this.currentPageId = 0,
                    this.isNgZoneEnabled = !1,
                    this.events = new ut.x,
                    this.errorHandler = lo,
                    this.malformedUriErrorHandler = Kr,
                    this.navigated = !1,
                    this.lastSuccessfulId = -1,
                    this.afterPreactivation = ()=>(0,
                    q.of)(void 0),
                    this.urlHandlingStrategy = new Fo,
                    this.routeReuseStrategy = new _o,
                    this.onSameUrlNavigation = "ignore",
                    this.paramsInheritanceStrategy = "emptyOnly",
                    this.urlUpdateStrategy = "deferred",
                    this.relativeLinkResolution = "corrected",
                    this.canceledNavigationResolution = "replace",
                    this.configLoader = ve.get(Yr),
                    this.configLoader.onLoadEndListener = zn=>this.triggerEvent(new $r(zn)),
                    this.configLoader.onLoadStartListener = zn=>this.triggerEvent(new sr(zn)),
                    this.ngModule = ve.get(i.h0i),
                    this.console = ve.get(i.c2e);
                    const Ht = ve.get(i.R0b);
                    this.isNgZoneEnabled = Ht instanceof i.R0b && i.R0b.isInAngularZone(),
                    this.resetConfig(it),
                    this.currentUrlTree = function Ee() {
                        return new un(new jt([],{}),{},null)
                    }(),
                    this.rawUrlTree = this.currentUrlTree,
                    this.browserUrlTree = this.currentUrlTree,
                    this.routerState = $s(this.currentUrlTree, this.rootComponentType),
                    this.transitions = new ue.X({
                        id: 0,
                        targetPageId: 0,
                        currentUrlTree: this.currentUrlTree,
                        currentRawUrl: this.currentUrlTree,
                        extractedUrl: this.urlHandlingStrategy.extract(this.currentUrlTree),
                        urlAfterRedirects: this.urlHandlingStrategy.extract(this.currentUrlTree),
                        rawUrl: this.currentUrlTree,
                        extras: {},
                        resolve: null,
                        reject: null,
                        promise: Promise.resolve(!0),
                        source: "imperative",
                        restoredState: null,
                        currentSnapshot: this.routerState.snapshot,
                        targetSnapshot: null,
                        currentRouterState: this.routerState,
                        targetRouterState: null,
                        guards: {
                            canActivateChecks: [],
                            canDeactivateChecks: []
                        },
                        guardsResult: null
                    }),
                    this.navigations = this.setupNavigations(this.transitions),
                    this.processNavigations()
                }
                get browserPageId() {
                    return this.location.getState()?.\u0275routerPageId
                }
                setupNavigations(f) {
                    const w = this.events;
                    return f.pipe((0,
                    It.h)(A=>0 !== A.id), (0,
                    Oe.U)(A=>({
                        ...A,
                        extractedUrl: this.urlHandlingStrategy.extract(A.rawUrl)
                    })), (0,
                    Ze.w)(A=>{
                        let Z = !1
                          , ve = !1;
                        return (0,
                        q.of)(A).pipe((0,
                        be.b)(De=>{
                            this.currentNavigation = {
                                id: De.id,
                                initialUrl: De.rawUrl,
                                extractedUrl: De.extractedUrl,
                                trigger: De.source,
                                extras: De.extras,
                                previousNavigation: this.lastSuccessfulNavigation ? {
                                    ...this.lastSuccessfulNavigation,
                                    previousNavigation: null
                                } : null
                            }
                        }
                        ), (0,
                        Ze.w)(De=>{
                            const it = this.browserUrlTree.toString()
                              , Wt = !this.navigated || De.extractedUrl.toString() !== it || it !== this.currentUrlTree.toString();
                            if (("reload" === this.onSameUrlNavigation || Wt) && this.urlHandlingStrategy.shouldProcessUrl(De.rawUrl))
                                return bo(De.source) && (this.browserUrlTree = De.extractedUrl),
                                (0,
                                q.of)(De).pipe((0,
                                Ze.w)(Ht=>{
                                    const zn = this.transitions.getValue();
                                    return w.next(new fi(Ht.id,this.serializeUrl(Ht.extractedUrl),Ht.source,Ht.restoredState)),
                                    zn !== this.transitions.getValue() ? Pe.E : Promise.resolve(Ht)
                                }
                                ), function Ye(g, v, f, w) {
                                    return (0,
                                    Ze.w)(A=>function At(g, v, f, w, A) {
                                        return new Xe(g,v,f,w,A).apply()
                                    }(g, v, f, A.extractedUrl, w).pipe((0,
                                    Oe.U)(Z=>({
                                        ...A,
                                        urlAfterRedirects: Z
                                    }))))
                                }(this.ngModule.injector, this.configLoader, this.urlSerializer, this.config), (0,
                                be.b)(Ht=>{
                                    this.currentNavigation = {
                                        ...this.currentNavigation,
                                        finalUrl: Ht.urlAfterRedirects
                                    },
                                    A.urlAfterRedirects = Ht.urlAfterRedirects
                                }
                                ), function qs(g, v, f, w, A, Z) {
                                    return (0,
                                    qt.z)(ve=>function ht(g, v, f, w, A, Z, ve="emptyOnly", De="legacy") {
                                        return new Yt(g,v,f,w,A,ve,De,Z).recognize().pipe((0,
                                        Ze.w)(it=>null === it ? function hn(g) {
                                            return new U.y(v=>v.error(g))
                                        }(new en) : (0,
                                        q.of)(it)))
                                    }(g, v, f, ve.urlAfterRedirects, w.serialize(ve.urlAfterRedirects), w, A, Z).pipe((0,
                                    Oe.U)(De=>({
                                        ...ve,
                                        targetSnapshot: De
                                    }))))
                                }(this.ngModule.injector, this.rootComponentType, this.config, this.urlSerializer, this.paramsInheritanceStrategy, this.relativeLinkResolution), (0,
                                be.b)(Ht=>{
                                    if (A.targetSnapshot = Ht.targetSnapshot,
                                    "eager" === this.urlUpdateStrategy) {
                                        if (!Ht.extras.skipLocationChange) {
                                            const Kn = this.urlHandlingStrategy.merge(Ht.urlAfterRedirects, Ht.rawUrl);
                                            this.setBrowserUrl(Kn, Ht)
                                        }
                                        this.browserUrlTree = Ht.urlAfterRedirects
                                    }
                                    const zn = new Vs(Ht.id,this.serializeUrl(Ht.extractedUrl),this.serializeUrl(Ht.urlAfterRedirects),Ht.targetSnapshot);
                                    w.next(zn)
                                }
                                ));
                            if (Wt && this.rawUrlTree && this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {
                                const {id: zn, extractedUrl: Kn, source: ls, restoredState: Ts, extras: nr} = De
                                  , za = new fi(zn,this.serializeUrl(Kn),ls,Ts);
                                w.next(za);
                                const So = $s(Kn, this.rootComponentType).snapshot;
                                return A = {
                                    ...De,
                                    targetSnapshot: So,
                                    urlAfterRedirects: Kn,
                                    extras: {
                                        ...nr,
                                        skipLocationChange: !1,
                                        replaceUrl: !1
                                    }
                                },
                                (0,
                                q.of)(A)
                            }
                            return this.rawUrlTree = De.rawUrl,
                            De.resolve(null),
                            Pe.E
                        }
                        ), (0,
                        be.b)(De=>{
                            const it = new Br(De.id,this.serializeUrl(De.extractedUrl),this.serializeUrl(De.urlAfterRedirects),De.targetSnapshot);
                            this.triggerEvent(it)
                        }
                        ), (0,
                        Oe.U)(De=>A = {
                            ...De,
                            guards: Ur(De.targetSnapshot, De.currentSnapshot, this.rootContexts)
                        }), function mo(g, v) {
                            return (0,
                            qt.z)(f=>{
                                const {targetSnapshot: w, currentSnapshot: A, guards: {canActivateChecks: Z, canDeactivateChecks: ve}} = f;
                                return 0 === ve.length && 0 === Z.length ? (0,
                                q.of)({
                                    ...f,
                                    guardsResult: !0
                                }) : function so(g, v, f, w) {
                                    return (0,
                                    l.D)(g).pipe((0,
                                    qt.z)(A=>function O(g, v, f, w, A) {
                                        const Z = v && v.routeConfig ? v.routeConfig.canDeactivate : null;
                                        if (!Z || 0 === Z.length)
                                            return (0,
                                            q.of)(!0);
                                        const ve = Z.map(De=>{
                                            const it = Ii(v) ?? A
                                              , Wt = Qn(De, it);
                                            return vt(function si(g) {
                                                return g && at(g.canDeactivate)
                                            }(Wt) ? Wt.canDeactivate(g, v, f, w) : it.runInContext(()=>Wt(g, v, f, w))).pipe((0,
                                            ft.P)())
                                        }
                                        );
                                        return (0,
                                        q.of)(ve).pipe(Ds())
                                    }(A.component, A.route, f, v, w)), (0,
                                    ft.P)(A=>!0 !== A, !0))
                                }(ve, w, A, g).pipe((0,
                                qt.z)(De=>De && function nn(g) {
                                    return "boolean" == typeof g
                                }(De) ? function zr(g, v, f, w) {
                                    return (0,
                                    l.D)(v).pipe((0,
                                    qe.b)(A=>(0,
                                    $e.z)(function y(g, v) {
                                        return null !== g && v && v(new Ys(g)),
                                        (0,
                                        q.of)(!0)
                                    }(A.route.parent, w), function r(g, v) {
                                        return null !== g && v && v(new fr(g)),
                                        (0,
                                        q.of)(!0)
                                    }(A.route, w), function E(g, v, f) {
                                        const w = v[v.length - 1]
                                          , Z = v.slice(0, v.length - 1).reverse().map(ve=>function ar(g) {
                                            const v = g.routeConfig ? g.routeConfig.canActivateChild : null;
                                            return v && 0 !== v.length ? {
                                                node: g,
                                                guards: v
                                            } : null
                                        }(ve)).filter(ve=>null !== ve).map(ve=>(0,
                                        Fe.P)(()=>{
                                            const De = ve.guards.map(it=>{
                                                const Wt = Ii(ve.node) ?? f
                                                  , Sn = Qn(it, Wt);
                                                return vt(function Es(g) {
                                                    return g && at(g.canActivateChild)
                                                }(Sn) ? Sn.canActivateChild(w, g) : Wt.runInContext(()=>Sn(w, g))).pipe((0,
                                                ft.P)())
                                            }
                                            );
                                            return (0,
                                            q.of)(De).pipe(Ds())
                                        }
                                        ));
                                        return (0,
                                        q.of)(Z).pipe(Ds())
                                    }(g, A.path, f), function _(g, v, f) {
                                        const w = v.routeConfig ? v.routeConfig.canActivate : null;
                                        if (!w || 0 === w.length)
                                            return (0,
                                            q.of)(!0);
                                        const A = w.map(Z=>(0,
                                        Fe.P)(()=>{
                                            const ve = Ii(v) ?? f
                                              , De = Qn(Z, ve);
                                            return vt(function Ls(g) {
                                                return g && at(g.canActivate)
                                            }(De) ? De.canActivate(v, g) : ve.runInContext(()=>De(v, g))).pipe((0,
                                            ft.P)())
                                        }
                                        ));
                                        return (0,
                                        q.of)(A).pipe(Ds())
                                    }(g, A.route, f))), (0,
                                    ft.P)(A=>!0 !== A, !0))
                                }(w, Z, g, v) : (0,
                                q.of)(De)), (0,
                                Oe.U)(De=>({
                                    ...f,
                                    guardsResult: De
                                })))
                            }
                            )
                        }(this.ngModule.injector, De=>this.triggerEvent(De)), (0,
                        be.b)(De=>{
                            if (A.guardsResult = De.guardsResult,
                            xe(De.guardsResult))
                                throw $i(0, De.guardsResult);
                            const it = new Fi(De.id,this.serializeUrl(De.extractedUrl),this.serializeUrl(De.urlAfterRedirects),De.targetSnapshot,!!De.guardsResult);
                            this.triggerEvent(it)
                        }
                        ), (0,
                        It.h)(De=>!!De.guardsResult || (this.restoreHistory(De),
                        this.cancelNavigationTransition(De, "", 3),
                        !1)), js(De=>{
                            if (De.guards.canActivateChecks.length)
                                return (0,
                                q.of)(De).pipe((0,
                                be.b)(it=>{
                                    const Wt = new Mr(it.id,this.serializeUrl(it.extractedUrl),this.serializeUrl(it.urlAfterRedirects),it.targetSnapshot);
                                    this.triggerEvent(Wt)
                                }
                                ), (0,
                                Ze.w)(it=>{
                                    let Wt = !1;
                                    return (0,
                                    q.of)(it).pipe(function jr(g, v) {
                                        return (0,
                                        qt.z)(f=>{
                                            const {targetSnapshot: w, guards: {canActivateChecks: A}} = f;
                                            if (!A.length)
                                                return (0,
                                                q.of)(f);
                                            let Z = 0;
                                            return (0,
                                            l.D)(A).pipe((0,
                                            qe.b)(ve=>function Xs(g, v, f, w) {
                                                const A = g.routeConfig
                                                  , Z = g._resolve;
                                                return void 0 !== A?.title && !_r(A) && (Z[Tt] = A.title),
                                                function er(g, v, f, w) {
                                                    const A = function Ss(g) {
                                                        return [...Object.keys(g), ...Object.getOwnPropertySymbols(g)]
                                                    }(g);
                                                    if (0 === A.length)
                                                        return (0,
                                                        q.of)({});
                                                    const Z = {};
                                                    return (0,
                                                    l.D)(A).pipe((0,
                                                    qt.z)(ve=>function ro(g, v, f, w) {
                                                        const A = Ii(v) ?? w
                                                          , Z = Qn(g, A);
                                                        return vt(Z.resolve ? Z.resolve(v, f) : A.runInContext(()=>Z(v, f)))
                                                    }(g[ve], v, f, w).pipe((0,
                                                    ft.P)(), (0,
                                                    be.b)(De=>{
                                                        Z[ve] = De
                                                    }
                                                    ))), kt(1), (0,
                                                    de.h)(Z), (0,
                                                    pe.K)(ve=>Wi(ve) ? Pe.E : (0,
                                                    st._)(ve)))
                                                }(Z, g, v, w).pipe((0,
                                                Oe.U)(ve=>(g._resolvedData = ve,
                                                g.data = ts(g, f).resolve,
                                                A && _r(A) && (g.data[Tt] = A.title),
                                                null)))
                                            }(ve.route, w, g, v)), (0,
                                            be.b)(()=>Z++), kt(1), (0,
                                            qt.z)(ve=>Z === A.length ? (0,
                                            q.of)(f) : Pe.E))
                                        }
                                        )
                                    }(this.paramsInheritanceStrategy, this.ngModule.injector), (0,
                                    be.b)({
                                        next: ()=>Wt = !0,
                                        complete: ()=>{
                                            Wt || (this.restoreHistory(it),
                                            this.cancelNavigationTransition(it, "", 2))
                                        }
                                    }))
                                }
                                ), (0,
                                be.b)(it=>{
                                    const Wt = new Ir(it.id,this.serializeUrl(it.extractedUrl),this.serializeUrl(it.urlAfterRedirects),it.targetSnapshot);
                                    this.triggerEvent(Wt)
                                }
                                ))
                        }
                        ), js(De=>{
                            const it = Wt=>{
                                const Sn = [];
                                Wt.routeConfig?.loadComponent && !Wt.routeConfig._loadedComponent && Sn.push(this.configLoader.loadComponent(Wt.routeConfig).pipe((0,
                                be.b)(Ht=>{
                                    Wt.component = Ht
                                }
                                ), (0,
                                Oe.U)(()=>{}
                                )));
                                for (const Ht of Wt.children)
                                    Sn.push(...it(Ht));
                                return Sn
                            }
                            ;
                            return Ne(it(De.targetSnapshot.root)).pipe((0,
                            bt.d)(), (0,
                            _t.q)(1))
                        }
                        ), js(()=>this.afterPreactivation()), (0,
                        Oe.U)(De=>{
                            const it = function ys(g, v, f) {
                                const w = Jn(g, v._root, f ? f._root : void 0);
                                return new ki(w,v)
                            }(this.routeReuseStrategy, De.targetSnapshot, De.currentRouterState);
                            return A = {
                                ...De,
                                targetRouterState: it
                            }
                        }
                        ), (0,
                        be.b)(De=>{
                            this.currentUrlTree = De.urlAfterRedirects,
                            this.rawUrlTree = this.urlHandlingStrategy.merge(De.urlAfterRedirects, De.rawUrl),
                            this.routerState = De.targetRouterState,
                            "deferred" === this.urlUpdateStrategy && (De.extras.skipLocationChange || this.setBrowserUrl(this.rawUrlTree, De),
                            this.browserUrlTree = De.urlAfterRedirects)
                        }
                        ), ((g,v,f)=>(0,
                        Oe.U)(w=>(new or(v,w.targetRouterState,w.currentRouterState,f).activate(g),
                        w)))(this.rootContexts, this.routeReuseStrategy, De=>this.triggerEvent(De)), (0,
                        be.b)({
                            next() {
                                Z = !0
                            },
                            complete() {
                                Z = !0
                            }
                        }), (0,
                        he.x)(()=>{
                            Z || ve || this.cancelNavigationTransition(A, "", 1),
                            this.currentNavigation?.id === A.id && (this.currentNavigation = null)
                        }
                        ), (0,
                        pe.K)(De=>{
                            if (ve = !0,
                            Os(De)) {
                                ni(De) || (this.navigated = !0,
                                this.restoreHistory(A, !0));
                                const it = new ks(A.id,this.serializeUrl(A.extractedUrl),De.message,De.cancellationCode);
                                if (w.next(it),
                                ni(De)) {
                                    const Wt = this.urlHandlingStrategy.merge(De.url, this.rawUrlTree)
                                      , Sn = {
                                        skipLocationChange: A.extras.skipLocationChange,
                                        replaceUrl: "eager" === this.urlUpdateStrategy || bo(A.source)
                                    };
                                    this.scheduleNavigation(Wt, "imperative", null, Sn, {
                                        resolve: A.resolve,
                                        reject: A.reject,
                                        promise: A.promise
                                    })
                                } else
                                    A.resolve(!1)
                            } else {
                                this.restoreHistory(A, !0);
                                const it = new Ni(A.id,this.serializeUrl(A.extractedUrl),De,A.targetSnapshot ?? void 0);
                                w.next(it);
                                try {
                                    A.resolve(this.errorHandler(De))
                                } catch (Wt) {
                                    A.reject(Wt)
                                }
                            }
                            return Pe.E
                        }
                        ))
                    }
                    ))
                }
                resetRootComponentType(f) {
                    this.rootComponentType = f,
                    this.routerState.root.component = this.rootComponentType
                }
                setTransition(f) {
                    this.transitions.next({
                        ...this.transitions.value,
                        ...f
                    })
                }
                initialNavigation() {
                    this.setUpLocationChangeListener(),
                    0 === this.navigationId && this.navigateByUrl(this.location.path(!0), {
                        replaceUrl: !0
                    })
                }
                setUpLocationChangeListener() {
                    this.locationSubscription || (this.locationSubscription = this.location.subscribe(f=>{
                        const w = "popstate" === f.type ? "popstate" : "hashchange";
                        "popstate" === w && setTimeout(()=>{
                            const A = {
                                replaceUrl: !0
                            }
                              , Z = f.state?.navigationId ? f.state : null;
                            if (Z) {
                                const De = {
                                    ...Z
                                };
                                delete De.navigationId,
                                delete De.\u0275routerPageId,
                                0 !== Object.keys(De).length && (A.state = De)
                            }
                            const ve = this.parseUrl(f.url);
                            this.scheduleNavigation(ve, w, Z, A)
                        }
                        , 0)
                    }
                    ))
                }
                get url() {
                    return this.serializeUrl(this.currentUrlTree)
                }
                getCurrentNavigation() {
                    return this.currentNavigation
                }
                triggerEvent(f) {
                    this.events.next(f)
                }
                resetConfig(f) {
                    this.config = f.map(ss),
                    this.navigated = !1,
                    this.lastSuccessfulId = -1
                }
                ngOnDestroy() {
                    this.dispose()
                }
                dispose() {
                    this.transitions.complete(),
                    this.locationSubscription && (this.locationSubscription.unsubscribe(),
                    this.locationSubscription = void 0),
                    this.disposed = !0
                }
                createUrlTree(f, w={}) {
                    const {relativeTo: A, queryParams: Z, fragment: ve, queryParamsHandling: De, preserveFragment: it} = w
                      , Wt = A || this.routerState.root
                      , Sn = it ? this.currentUrlTree.fragment : ve;
                    let Ht = null;
                    switch (De) {
                    case "merge":
                        Ht = {
                            ...this.currentUrlTree.queryParams,
                            ...Z
                        };
                        break;
                    case "preserve":
                        Ht = this.currentUrlTree.queryParams;
                        break;
                    default:
                        Ht = Z || null
                    }
                    return null !== Ht && (Ht = this.removeEmptyProps(Ht)),
                    We(Wt, this.currentUrlTree, f, Ht, Sn ?? null)
                }
                navigateByUrl(f, w={
                    skipLocationChange: !1
                }) {
                    const A = xe(f) ? f : this.parseUrl(f)
                      , Z = this.urlHandlingStrategy.merge(A, this.rawUrlTree);
                    return this.scheduleNavigation(Z, "imperative", null, w)
                }
                navigate(f, w={
                    skipLocationChange: !1
                }) {
                    return function fa(g) {
                        for (let v = 0; v < g.length; v++) {
                            if (null == g[v])
                                throw new i.vHH(4008,false)
                        }
                    }(f),
                    this.navigateByUrl(this.createUrlTree(f, w), w)
                }
                serializeUrl(f) {
                    return this.urlSerializer.serialize(f)
                }
                parseUrl(f) {
                    let w;
                    try {
                        w = this.urlSerializer.parse(f)
                    } catch (A) {
                        w = this.malformedUriErrorHandler(A, this.urlSerializer, f)
                    }
                    return w
                }
                isActive(f, w) {
                    let A;
                    if (A = !0 === w ? {
                        ...ha
                    } : !1 === w ? {
                        ...Co
                    } : w,
                    xe(f))
                        return ln(this.currentUrlTree, f, A);
                    const Z = this.parseUrl(f);
                    return ln(this.currentUrlTree, Z, A)
                }
                removeEmptyProps(f) {
                    return Object.keys(f).reduce((w,A)=>{
                        const Z = f[A];
                        return null != Z && (w[A] = Z),
                        w
                    }
                    , {})
                }
                processNavigations() {
                    this.navigations.subscribe(f=>{
                        this.navigated = !0,
                        this.lastSuccessfulId = f.id,
                        this.currentPageId = f.targetPageId,
                        this.events.next(new Xi(f.id,this.serializeUrl(f.extractedUrl),this.serializeUrl(this.currentUrlTree))),
                        this.lastSuccessfulNavigation = this.currentNavigation,
                        this.titleStrategy?.updateTitle(this.routerState.snapshot),
                        f.resolve(!0)
                    }
                    , f=>{
                        this.console.warn(`Unhandled Navigation Error: ${f}`)
                    }
                    )
                }
                scheduleNavigation(f, w, A, Z, ve) {
                    if (this.disposed)
                        return Promise.resolve(!1);
                    let De, it, Wt;
                    ve ? (De = ve.resolve,
                    it = ve.reject,
                    Wt = ve.promise) : Wt = new Promise((zn,Kn)=>{
                        De = zn,
                        it = Kn
                    }
                    );
                    const Sn = ++this.navigationId;
                    let Ht;
                    return "computed" === this.canceledNavigationResolution ? (0 === this.currentPageId && (A = this.location.getState()),
                    Ht = A && A.\u0275routerPageId ? A.\u0275routerPageId : Z.replaceUrl || Z.skipLocationChange ? this.browserPageId ?? 0 : (this.browserPageId ?? 0) + 1) : Ht = 0,
                    this.setTransition({
                        id: Sn,
                        targetPageId: Ht,
                        source: w,
                        restoredState: A,
                        currentUrlTree: this.currentUrlTree,
                        currentRawUrl: this.rawUrlTree,
                        rawUrl: f,
                        extras: Z,
                        resolve: De,
                        reject: it,
                        promise: Wt,
                        currentSnapshot: this.routerState.snapshot,
                        currentRouterState: this.routerState
                    }),
                    Wt.catch(zn=>Promise.reject(zn))
                }
                setBrowserUrl(f, w) {
                    const A = this.urlSerializer.serialize(f)
                      , Z = {
                        ...w.extras.state,
                        ...this.generateNgRouterState(w.id, w.targetPageId)
                    };
                    this.location.isCurrentPathEqualTo(A) || w.extras.replaceUrl ? this.location.replaceState(A, "", Z) : this.location.go(A, "", Z)
                }
                restoreHistory(f, w=!1) {
                    if ("computed" === this.canceledNavigationResolution) {
                        const A = this.currentPageId - f.targetPageId;
                        "popstate" !== f.source && "eager" !== this.urlUpdateStrategy && this.currentUrlTree !== this.currentNavigation?.finalUrl || 0 === A ? this.currentUrlTree === this.currentNavigation?.finalUrl && 0 === A && (this.resetState(f),
                        this.browserUrlTree = f.currentUrlTree,
                        this.resetUrlToCurrentUrlTree()) : this.location.historyGo(A)
                    } else
                        "replace" === this.canceledNavigationResolution && (w && this.resetState(f),
                        this.resetUrlToCurrentUrlTree())
                }
                resetState(f) {
                    this.routerState = f.currentRouterState,
                    this.currentUrlTree = f.currentUrlTree,
                    this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, f.rawUrl)
                }
                resetUrlToCurrentUrlTree() {
                    this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), "", this.generateNgRouterState(this.lastSuccessfulId, this.currentPageId))
                }
                cancelNavigationTransition(f, w, A) {
                    const Z = new ks(f.id,this.serializeUrl(f.extractedUrl),w,A);
                    this.triggerEvent(Z),
                    f.resolve(!1)
                }
                generateNgRouterState(f, w) {
                    return "computed" === this.canceledNavigationResolution ? {
                        navigationId: f,
                        \u0275routerPageId: w
                    } : {
                        navigationId: f
                    }
                }
            }
            return g.\u0275fac = function(f) {
                i.$Z()
            }
            ,
            g.\u0275prov = i.Yz7({
                token: g,
                factory: function() {
                    return ur()
                },
                providedIn: "root"
            }),
            g
        }
        )();
        function bo(g) {
            return "imperative" !== g
        }
        let Eo = (()=>{
            class g {
                constructor(f, w, A, Z, ve) {
                    this.router = f,
                    this.route = w,
                    this.tabIndexAttribute = A,
                    this.renderer = Z,
                    this.el = ve,
                    this._preserveFragment = !1,
                    this._skipLocationChange = !1,
                    this._replaceUrl = !1,
                    this.commands = null,
                    this.onChanges = new ut.x,
                    this.setTabIndexIfNotOnNativeEl("0")
                }
                set preserveFragment(f) {
                    this._preserveFragment = (0,
                    i.D6c)(f)
                }
                get preserveFragment() {
                    return this._preserveFragment
                }
                set skipLocationChange(f) {
                    this._skipLocationChange = (0,
                    i.D6c)(f)
                }
                get skipLocationChange() {
                    return this._skipLocationChange
                }
                set replaceUrl(f) {
                    this._replaceUrl = (0,
                    i.D6c)(f)
                }
                get replaceUrl() {
                    return this._replaceUrl
                }
                setTabIndexIfNotOnNativeEl(f) {
                    if (null != this.tabIndexAttribute)
                        return;
                    const w = this.renderer
                      , A = this.el.nativeElement;
                    null !== f ? w.setAttribute(A, "tabindex", f) : w.removeAttribute(A, "tabindex")
                }
                ngOnChanges(f) {
                    this.onChanges.next(this)
                }
                set routerLink(f) {
                    null != f ? (this.commands = Array.isArray(f) ? f : [f],
                    this.setTabIndexIfNotOnNativeEl("0")) : (this.commands = null,
                    this.setTabIndexIfNotOnNativeEl(null))
                }
                onClick() {
                    return null === this.urlTree || this.router.navigateByUrl(this.urlTree, {
                        skipLocationChange: this.skipLocationChange,
                        replaceUrl: this.replaceUrl,
                        state: this.state
                    }),
                    !0
                }
                get urlTree() {
                    return null === this.commands ? null : this.router.createUrlTree(this.commands, {
                        relativeTo: void 0 !== this.relativeTo ? this.relativeTo : this.route,
                        queryParams: this.queryParams,
                        fragment: this.fragment,
                        queryParamsHandling: this.queryParamsHandling,
                        preserveFragment: this.preserveFragment
                    })
                }
            }
            return g.\u0275fac = function(f) {
                return new (f || g)(i.Y36(xi),i.Y36(Bi),i.$8M("tabindex"),i.Y36(i.Qsj),i.Y36(i.SBq))
            }
            ,
            g.\u0275dir = i.lG2({
                type: g,
                selectors: [["", "routerLink", "", 5, "a", 5, "area"]],
                hostBindings: function(f, w) {
                    1 & f && i.NdJ("click", function() {
                        return w.onClick()
                    })
                },
                inputs: {
                    queryParams: "queryParams",
                    fragment: "fragment",
                    queryParamsHandling: "queryParamsHandling",
                    state: "state",
                    relativeTo: "relativeTo",
                    preserveFragment: "preserveFragment",
                    skipLocationChange: "skipLocationChange",
                    replaceUrl: "replaceUrl",
                    routerLink: "routerLink"
                },
                standalone: !0,
                features: [i.TTD]
            }),
            g
        }
        )()
          , Zr = (()=>{
            class g {
                constructor(f, w, A) {
                    this.router = f,
                    this.route = w,
                    this.locationStrategy = A,
                    this._preserveFragment = !1,
                    this._skipLocationChange = !1,
                    this._replaceUrl = !1,
                    this.commands = null,
                    this.href = null,
                    this.onChanges = new ut.x,
                    this.subscription = f.events.subscribe(Z=>{
                        Z instanceof Xi && this.updateTargetUrlAndHref()
                    }
                    )
                }
                set preserveFragment(f) {
                    this._preserveFragment = (0,
                    i.D6c)(f)
                }
                get preserveFragment() {
                    return this._preserveFragment
                }
                set skipLocationChange(f) {
                    this._skipLocationChange = (0,
                    i.D6c)(f)
                }
                get skipLocationChange() {
                    return this._skipLocationChange
                }
                set replaceUrl(f) {
                    this._replaceUrl = (0,
                    i.D6c)(f)
                }
                get replaceUrl() {
                    return this._replaceUrl
                }
                set routerLink(f) {
                    this.commands = null != f ? Array.isArray(f) ? f : [f] : null
                }
                ngOnChanges(f) {
                    this.updateTargetUrlAndHref(),
                    this.onChanges.next(this)
                }
                ngOnDestroy() {
                    this.subscription.unsubscribe()
                }
                onClick(f, w, A, Z, ve) {
                    return !!(0 !== f || w || A || Z || ve || "string" == typeof this.target && "_self" != this.target || null === this.urlTree) || (this.router.navigateByUrl(this.urlTree, {
                        skipLocationChange: this.skipLocationChange,
                        replaceUrl: this.replaceUrl,
                        state: this.state
                    }),
                    !1)
                }
                updateTargetUrlAndHref() {
                    this.href = null !== this.urlTree ? this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree)) : null
                }
                get urlTree() {
                    return null === this.commands ? null : this.router.createUrlTree(this.commands, {
                        relativeTo: void 0 !== this.relativeTo ? this.relativeTo : this.route,
                        queryParams: this.queryParams,
                        fragment: this.fragment,
                        queryParamsHandling: this.queryParamsHandling,
                        preserveFragment: this.preserveFragment
                    })
                }
            }
            return g.\u0275fac = function(f) {
                return new (f || g)(i.Y36(xi),i.Y36(Bi),i.Y36(Ce.S$))
            }
            ,
            g.\u0275dir = i.lG2({
                type: g,
                selectors: [["a", "routerLink", ""], ["area", "routerLink", ""]],
                hostVars: 2,
                hostBindings: function(f, w) {
                    1 & f && i.NdJ("click", function(Z) {
                        return w.onClick(Z.button, Z.ctrlKey, Z.shiftKey, Z.altKey, Z.metaKey)
                    }),
                    2 & f && i.uIk("target", w.target)("href", w.href, i.LSH)
                },
                inputs: {
                    target: "target",
                    queryParams: "queryParams",
                    fragment: "fragment",
                    queryParamsHandling: "queryParamsHandling",
                    state: "state",
                    relativeTo: "relativeTo",
                    preserveFragment: "preserveFragment",
                    skipLocationChange: "skipLocationChange",
                    replaceUrl: "replaceUrl",
                    routerLink: "routerLink"
                },
                standalone: !0,
                features: [i.TTD]
            }),
            g
        }
        )()
          , uo = (()=>{
            class g {
                constructor(f, w, A, Z, ve, De) {
                    this.router = f,
                    this.element = w,
                    this.renderer = A,
                    this.cdr = Z,
                    this.link = ve,
                    this.linkWithHref = De,
                    this.classes = [],
                    this.isActive = !1,
                    this.routerLinkActiveOptions = {
                        exact: !1
                    },
                    this.isActiveChange = new i.vpe,
                    this.routerEventsSubscription = f.events.subscribe(it=>{
                        it instanceof Xi && this.update()
                    }
                    )
                }
                ngAfterContentInit() {
                    (0,
                    q.of)(this.links.changes, this.linksWithHrefs.changes, (0,
                    q.of)(null)).pipe((0,
                    Ie.J)()).subscribe(f=>{
                        this.update(),
                        this.subscribeToEachLinkOnChanges()
                    }
                    )
                }
                subscribeToEachLinkOnChanges() {
                    this.linkInputChangesSubscription?.unsubscribe();
                    const f = [...this.links.toArray(), ...this.linksWithHrefs.toArray(), this.link, this.linkWithHref].filter(w=>!!w).map(w=>w.onChanges);
                    this.linkInputChangesSubscription = (0,
                    l.D)(f).pipe((0,
                    Ie.J)()).subscribe(w=>{
                        this.isActive !== this.isLinkActive(this.router)(w) && this.update()
                    }
                    )
                }
                set routerLinkActive(f) {
                    const w = Array.isArray(f) ? f : f.split(" ");
                    this.classes = w.filter(A=>!!A)
                }
                ngOnChanges(f) {
                    this.update()
                }
                ngOnDestroy() {
                    this.routerEventsSubscription.unsubscribe(),
                    this.linkInputChangesSubscription?.unsubscribe()
                }
                update() {
                    !this.links || !this.linksWithHrefs || !this.router.navigated || Promise.resolve().then(()=>{
                        const f = this.hasActiveLinks();
                        this.isActive !== f && (this.isActive = f,
                        this.cdr.markForCheck(),
                        this.classes.forEach(w=>{
                            f ? this.renderer.addClass(this.element.nativeElement, w) : this.renderer.removeClass(this.element.nativeElement, w)
                        }
                        ),
                        f && void 0 !== this.ariaCurrentWhenActive ? this.renderer.setAttribute(this.element.nativeElement, "aria-current", this.ariaCurrentWhenActive.toString()) : this.renderer.removeAttribute(this.element.nativeElement, "aria-current"),
                        this.isActiveChange.emit(f))
                    }
                    )
                }
                isLinkActive(f) {
                    const w = function Lr(g) {
                        return !!g.paths
                    }(this.routerLinkActiveOptions) ? this.routerLinkActiveOptions : this.routerLinkActiveOptions.exact || !1;
                    return A=>!!A.urlTree && f.isActive(A.urlTree, w)
                }
                hasActiveLinks() {
                    const f = this.isLinkActive(this.router);
                    return this.link && f(this.link) || this.linkWithHref && f(this.linkWithHref) || this.links.some(f) || this.linksWithHrefs.some(f)
                }
            }
            return g.\u0275fac = function(f) {
                return new (f || g)(i.Y36(xi),i.Y36(i.SBq),i.Y36(i.Qsj),i.Y36(i.sBO),i.Y36(Eo, 8),i.Y36(Zr, 8))
            }
            ,
            g.\u0275dir = i.lG2({
                type: g,
                selectors: [["", "routerLinkActive", ""]],
                contentQueries: function(f, w, A) {
                    if (1 & f && (i.Suo(A, Eo, 5),
                    i.Suo(A, Zr, 5)),
                    2 & f) {
                        let Z;
                        i.iGM(Z = i.CRH()) && (w.links = Z),
                        i.iGM(Z = i.CRH()) && (w.linksWithHrefs = Z)
                    }
                },
                inputs: {
                    routerLinkActiveOptions: "routerLinkActiveOptions",
                    ariaCurrentWhenActive: "ariaCurrentWhenActive",
                    routerLinkActive: "routerLinkActive"
                },
                outputs: {
                    isActiveChange: "isActiveChange"
                },
                exportAs: ["routerLinkActive"],
                standalone: !0,
                features: [i.TTD]
            }),
            g
        }
        )();
        class yr {
        }
        let M = (()=>{
            class g {
                constructor(f, w, A, Z, ve) {
                    this.router = f,
                    this.injector = A,
                    this.preloadingStrategy = Z,
                    this.loader = ve
                }
                setUpPreloading() {
                    this.subscription = this.router.events.pipe((0,
                    It.h)(f=>f instanceof Xi), (0,
                    qe.b)(()=>this.preload())).subscribe(()=>{}
                    )
                }
                preload() {
                    return this.processRoutes(this.injector, this.router.config)
                }
                ngOnDestroy() {
                    this.subscription && this.subscription.unsubscribe()
                }
                processRoutes(f, w) {
                    const A = [];
                    for (const Z of w) {
                        Z.providers && !Z._injector && (Z._injector = (0,
                        i.MMx)(Z.providers, f, `Route: ${Z.path}`));
                        const ve = Z._injector ?? f
                          , De = Z._loadedInjector ?? ve;
                        Z.loadChildren && !Z._loadedRoutes && void 0 === Z.canLoad || Z.loadComponent && !Z._loadedComponent ? A.push(this.preloadConfig(ve, Z)) : (Z.children || Z._loadedRoutes) && A.push(this.processRoutes(De, Z.children ?? Z._loadedRoutes))
                    }
                    return (0,
                    l.D)(A).pipe((0,
                    Ie.J)())
                }
                preloadConfig(f, w) {
                    return this.preloadingStrategy.preload(w, ()=>{
                        let A;
                        A = w.loadChildren && void 0 === w.canLoad ? this.loader.loadChildren(f, w) : (0,
                        q.of)(null);
                        const Z = A.pipe((0,
                        qt.z)(ve=>null === ve ? (0,
                        q.of)(void 0) : (w._loadedRoutes = ve.routes,
                        w._loadedInjector = ve.injector,
                        this.processRoutes(ve.injector ?? f, ve.routes))));
                        if (w.loadComponent && !w._loadedComponent) {
                            const ve = this.loader.loadComponent(w);
                            return (0,
                            l.D)([Z, ve]).pipe((0,
                            Ie.J)())
                        }
                        return Z
                    }
                    )
                }
            }
            return g.\u0275fac = function(f) {
                return new (f || g)(i.LFG(xi),i.LFG(i.Sil),i.LFG(i.lqb),i.LFG(yr),i.LFG(Yr))
            }
            ,
            g.\u0275prov = i.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )();
        const h = new i.OlP("");
        let c = (()=>{
            class g {
                constructor(f, w, A={}) {
                    this.router = f,
                    this.viewportScroller = w,
                    this.options = A,
                    this.lastId = 0,
                    this.lastSource = "imperative",
                    this.restoredId = 0,
                    this.store = {},
                    A.scrollPositionRestoration = A.scrollPositionRestoration || "disabled",
                    A.anchorScrolling = A.anchorScrolling || "disabled"
                }
                init() {
                    "disabled" !== this.options.scrollPositionRestoration && this.viewportScroller.setHistoryScrollRestoration("manual"),
                    this.routerEventsSubscription = this.createScrollEvents(),
                    this.scrollEventsSubscription = this.consumeScrollEvents()
                }
                createScrollEvents() {
                    return this.router.events.subscribe(f=>{
                        f instanceof fi ? (this.store[this.lastId] = this.viewportScroller.getScrollPosition(),
                        this.lastSource = f.navigationTrigger,
                        this.restoredId = f.restoredState ? f.restoredState.navigationId : 0) : f instanceof Xi && (this.lastId = f.id,
                        this.scheduleScrollEvent(f, this.router.parseUrl(f.urlAfterRedirects).fragment))
                    }
                    )
                }
                consumeScrollEvents() {
                    return this.router.events.subscribe(f=>{
                        f instanceof pr && (f.position ? "top" === this.options.scrollPositionRestoration ? this.viewportScroller.scrollToPosition([0, 0]) : "enabled" === this.options.scrollPositionRestoration && this.viewportScroller.scrollToPosition(f.position) : f.anchor && "enabled" === this.options.anchorScrolling ? this.viewportScroller.scrollToAnchor(f.anchor) : "disabled" !== this.options.scrollPositionRestoration && this.viewportScroller.scrollToPosition([0, 0]))
                    }
                    )
                }
                scheduleScrollEvent(f, w) {
                    this.router.triggerEvent(new pr(f,"popstate" === this.lastSource ? this.store[this.restoredId] : null,w))
                }
                ngOnDestroy() {
                    this.routerEventsSubscription && this.routerEventsSubscription.unsubscribe(),
                    this.scrollEventsSubscription && this.scrollEventsSubscription.unsubscribe()
                }
            }
            return g.\u0275fac = function(f) {
                i.$Z()
            }
            ,
            g.\u0275prov = i.Yz7({
                token: g,
                factory: g.\u0275fac
            }),
            g
        }
        )();
        function _e(g, v) {
            return {
                \u0275kind: g,
                \u0275providers: v
            }
        }
        function we(g) {
            return [{
                provide: oo,
                multi: !0,
                useValue: g
            }]
        }
        function Dt() {
            const g = (0,
            i.f3M)(i.zs3);
            return v=>{
                const f = g.get(i.z2F);
                if (v !== f.components[0])
                    return;
                const w = g.get(xi)
                  , A = g.get(tn);
                1 === g.get(sn) && w.initialNavigation(),
                g.get(on, null, i.XFs.Optional)?.setUpPreloading(),
                g.get(h, null, i.XFs.Optional)?.init(),
                w.resetRootComponentType(f.componentTypes[0]),
                A.next(),
                A.complete()
            }
        }
        const tn = new i.OlP("",{
            factory: ()=>new ut.x
        })
          , sn = new i.OlP("",{
            providedIn: "root",
            factory: ()=>1
        });
        const on = new i.OlP("");
        function jn(g) {
            return _e(0, [{
                provide: on,
                useExisting: M
            }, {
                provide: yr,
                useExisting: g
            }])
        }
        const Gn = new i.OlP("ROUTER_FORROOT_GUARD")
          , as = [Ce.Ye, {
            provide: Si,
            useClass: _i
        }, {
            provide: xi,
            useFactory: ur
        }, Qi, {
            provide: Bi,
            useFactory: function ie(g) {
                return g.routerState.root
            },
            deps: [xi]
        }, Yr];
        function Rs() {
            return new i.PXZ("Router",xi)
        }
        let Pi = (()=>{
            class g {
                constructor(f) {}
                static forRoot(f, w) {
                    return {
                        ngModule: g,
                        providers: [as, [], we(f), {
                            provide: Gn,
                            useFactory: Vo,
                            deps: [[xi, new i.FiY, new i.tp0]]
                        }, {
                            provide: Gs,
                            useValue: w || {}
                        }, w?.useHash ? {
                            provide: Ce.S$,
                            useClass: Ce.Do
                        } : {
                            provide: Ce.S$,
                            useClass: Ce.b0
                        }, {
                            provide: h,
                            useFactory: ()=>{
                                const g = (0,
                                i.f3M)(xi)
                                  , v = (0,
                                i.f3M)(Ce.EM)
                                  , f = (0,
                                i.f3M)(Gs);
                                return f.scrollOffset && v.setOffset(f.scrollOffset),
                                new c(g,v,f)
                            }
                        }, w?.preloadingStrategy ? jn(w.preloadingStrategy).\u0275providers : [], {
                            provide: i.PXZ,
                            multi: !0,
                            useFactory: Rs
                        }, w?.initialNavigation ? ho(w) : [], [{
                            provide: Cr,
                            useFactory: Dt
                        }, {
                            provide: i.tb,
                            multi: !0,
                            useExisting: Cr
                        }]]
                    }
                }
                static forChild(f) {
                    return {
                        ngModule: g,
                        providers: [we(f)]
                    }
                }
            }
            return g.\u0275fac = function(f) {
                return new (f || g)(i.LFG(Gn, 8))
            }
            ,
            g.\u0275mod = i.oAB({
                type: g
            }),
            g.\u0275inj = i.cJS({
                imports: [Nn]
            }),
            g
        }
        )();
        function Vo(g) {
            return "guarded"
        }
        function ho(g) {
            return ["disabled" === g.initialNavigation ? _e(3, [{
                provide: i.ip1,
                multi: !0,
                useFactory: ()=>{
                    const v = (0,
                    i.f3M)(xi);
                    return ()=>{
                        v.setUpLocationChangeListener()
                    }
                }
            }, {
                provide: sn,
                useValue: 2
            }]).\u0275providers : [], "enabledBlocking" === g.initialNavigation ? _e(2, [{
                provide: sn,
                useValue: 0
            }, {
                provide: i.ip1,
                multi: !0,
                deps: [i.zs3],
                useFactory: v=>{
                    const f = v.get(Ce.V_, Promise.resolve());
                    let w = !1;
                    return ()=>f.then(()=>new Promise(Z=>{
                        const ve = v.get(xi)
                          , De = v.get(tn);
                        (function A(Z) {
                            v.get(xi).events.pipe((0,
                            It.h)(De=>De instanceof Xi || De instanceof ks || De instanceof Ni), (0,
                            Oe.U)(De=>De instanceof Xi || De instanceof ks && (0 === De.code || 1 === De.code) && null), (0,
                            It.h)(De=>null !== De), (0,
                            _t.q)(1)).subscribe(()=>{
                                Z()
                            }
                            )
                        }
                        )(()=>{
                            Z(!0),
                            w = !0
                        }
                        ),
                        ve.afterPreactivation = ()=>(Z(!0),
                        w || De.closed ? (0,
                        q.of)(void 0) : De),
                        ve.initialNavigation()
                    }
                    ))
                }
            }]).\u0275providers : []]
        }
        const Cr = new i.OlP("")
    }
    ,
    4344: (Ot,je,D)=>{
        D.d(je, {
            Zw: ()=>Ne,
            aw: ()=>ft,
            X$: ()=>qt,
            sK: ()=>rt
        });
        var i = D(2560)
          , l = D(745)
          , q = D(833)
          , ue = D(2971);
        function H(qe) {
            return !!qe && (qe instanceof q.y || (0,
            ue.m)(qe.lift) && (0,
            ue.m)(qe.subscribe))
        }
        var U = D(1640)
          , z = D(9319)
          , te = D(1954)
          , le = D(9295)
          , W = D(9196)
          , fe = D(635)
          , re = D(3853)
          , Ke = D(2673);
        class Ne {
        }
        let Be = (()=>{
            class qe extends Ne {
                getTranslation(pe) {
                    return (0,
                    l.of)({})
                }
            }
            return qe.\u0275fac = function() {
                let be;
                return function(pt) {
                    return (be || (be = i.n5z(qe)))(pt || qe)
                }
            }(),
            qe.\u0275prov = i.Yz7({
                token: qe,
                factory: qe.\u0275fac
            }),
            qe
        }
        )();
        class ot {
        }
        let $e = (()=>{
            class qe {
                handle(pe) {
                    return pe.key
                }
            }
            return qe.\u0275fac = function(pe) {
                return new (pe || qe)
            }
            ,
            qe.\u0275prov = i.Yz7({
                token: qe,
                factory: qe.\u0275fac
            }),
            qe
        }
        )();
        function Fe(qe, be) {
            if (qe === be)
                return !0;
            if (null === qe || null === be)
                return !1;
            if (qe != qe && be != be)
                return !0;
            let Mt, kt, Xt, pe = typeof qe;
            if (pe == typeof be && "object" == pe) {
                if (!Array.isArray(qe)) {
                    if (Array.isArray(be))
                        return !1;
                    for (kt in Xt = Object.create(null),
                    qe) {
                        if (!Fe(qe[kt], be[kt]))
                            return !1;
                        Xt[kt] = !0
                    }
                    for (kt in be)
                        if (!(kt in Xt) && typeof be[kt] < "u")
                            return !1;
                    return !0
                }
                if (!Array.isArray(be))
                    return !1;
                if ((Mt = qe.length) == be.length) {
                    for (kt = 0; kt < Mt; kt++)
                        if (!Fe(qe[kt], be[kt]))
                            return !1;
                    return !0
                }
            }
            return !1
        }
        function et(qe) {
            return typeof qe < "u" && null !== qe
        }
        function st(qe) {
            return qe && "object" == typeof qe && !Array.isArray(qe)
        }
        function Pe(qe, be) {
            let pe = Object.assign({}, qe);
            return st(qe) && st(be) && Object.keys(be).forEach(pt=>{
                st(be[pt]) ? pt in qe ? pe[pt] = Pe(qe[pt], be[pt]) : Object.assign(pe, {
                    [pt]: be[pt]
                }) : Object.assign(pe, {
                    [pt]: be[pt]
                })
            }
            ),
            pe
        }
        class Q {
        }
        let ze = (()=>{
            class qe extends Q {
                constructor() {
                    super(...arguments),
                    this.templateMatcher = /{{\s?([^{}\s]*)\s?}}/g
                }
                interpolate(pe, pt) {
                    let Mt;
                    return Mt = "string" == typeof pe ? this.interpolateString(pe, pt) : "function" == typeof pe ? this.interpolateFunction(pe, pt) : pe,
                    Mt
                }
                getValue(pe, pt) {
                    let Mt = "string" == typeof pt ? pt.split(".") : [pt];
                    pt = "";
                    do {
                        pt += Mt.shift(),
                        !et(pe) || !et(pe[pt]) || "object" != typeof pe[pt] && Mt.length ? Mt.length ? pt += "." : pe = void 0 : (pe = pe[pt],
                        pt = "")
                    } while (Mt.length);
                    return pe
                }
                interpolateFunction(pe, pt) {
                    return pe(pt)
                }
                interpolateString(pe, pt) {
                    return pt ? pe.replace(this.templateMatcher, (Mt,kt)=>{
                        let Xt = this.getValue(pt, kt);
                        return et(Xt) ? Xt : Mt
                    }
                    ) : pe
                }
            }
            return qe.\u0275fac = function() {
                let be;
                return function(pt) {
                    return (be || (be = i.n5z(qe)))(pt || qe)
                }
            }(),
            qe.\u0275prov = i.Yz7({
                token: qe,
                factory: qe.\u0275fac
            }),
            qe
        }
        )();
        class ye {
        }
        let Re = (()=>{
            class qe extends ye {
                compile(pe, pt) {
                    return pe
                }
                compileTranslations(pe, pt) {
                    return pe
                }
            }
            return qe.\u0275fac = function() {
                let be;
                return function(pt) {
                    return (be || (be = i.n5z(qe)))(pt || qe)
                }
            }(),
            qe.\u0275prov = i.Yz7({
                token: qe,
                factory: qe.\u0275fac
            }),
            qe
        }
        )();
        class ut {
            constructor() {
                this.currentLang = this.defaultLang,
                this.translations = {},
                this.langs = [],
                this.onTranslationChange = new i.vpe,
                this.onLangChange = new i.vpe,
                this.onDefaultLangChange = new i.vpe
            }
        }
        const Ce = new i.OlP("USE_STORE")
          , Oe = new i.OlP("USE_DEFAULT_LANG")
          , Ze = new i.OlP("DEFAULT_LANGUAGE")
          , _t = new i.OlP("USE_EXTEND");
        let rt = (()=>{
            class qe {
                constructor(pe, pt, Mt, kt, Xt, bt=!0, Kt=!1, k=!1, de) {
                    this.store = pe,
                    this.currentLoader = pt,
                    this.compiler = Mt,
                    this.parser = kt,
                    this.missingTranslationHandler = Xt,
                    this.useDefaultLang = bt,
                    this.isolate = Kt,
                    this.extend = k,
                    this.pending = !1,
                    this._onTranslationChange = new i.vpe,
                    this._onLangChange = new i.vpe,
                    this._onDefaultLangChange = new i.vpe,
                    this._langs = [],
                    this._translations = {},
                    this._translationRequests = {},
                    de && this.setDefaultLang(de)
                }
                get onTranslationChange() {
                    return this.isolate ? this._onTranslationChange : this.store.onTranslationChange
                }
                get onLangChange() {
                    return this.isolate ? this._onLangChange : this.store.onLangChange
                }
                get onDefaultLangChange() {
                    return this.isolate ? this._onDefaultLangChange : this.store.onDefaultLangChange
                }
                get defaultLang() {
                    return this.isolate ? this._defaultLang : this.store.defaultLang
                }
                set defaultLang(pe) {
                    this.isolate ? this._defaultLang = pe : this.store.defaultLang = pe
                }
                get currentLang() {
                    return this.isolate ? this._currentLang : this.store.currentLang
                }
                set currentLang(pe) {
                    this.isolate ? this._currentLang = pe : this.store.currentLang = pe
                }
                get langs() {
                    return this.isolate ? this._langs : this.store.langs
                }
                set langs(pe) {
                    this.isolate ? this._langs = pe : this.store.langs = pe
                }
                get translations() {
                    return this.isolate ? this._translations : this.store.translations
                }
                set translations(pe) {
                    this.isolate ? this._translations = pe : this.store.translations = pe
                }
                setDefaultLang(pe) {
                    if (pe === this.defaultLang)
                        return;
                    let pt = this.retrieveTranslations(pe);
                    typeof pt < "u" ? (null == this.defaultLang && (this.defaultLang = pe),
                    pt.pipe((0,
                    le.q)(1)).subscribe(Mt=>{
                        this.changeDefaultLang(pe)
                    }
                    )) : this.changeDefaultLang(pe)
                }
                getDefaultLang() {
                    return this.defaultLang
                }
                use(pe) {
                    if (pe === this.currentLang)
                        return (0,
                        l.of)(this.translations[pe]);
                    let pt = this.retrieveTranslations(pe);
                    return typeof pt < "u" ? (this.currentLang || (this.currentLang = pe),
                    pt.pipe((0,
                    le.q)(1)).subscribe(Mt=>{
                        this.changeLang(pe)
                    }
                    ),
                    pt) : (this.changeLang(pe),
                    (0,
                    l.of)(this.translations[pe]))
                }
                retrieveTranslations(pe) {
                    let pt;
                    return (typeof this.translations[pe] > "u" || this.extend) && (this._translationRequests[pe] = this._translationRequests[pe] || this.getTranslation(pe),
                    pt = this._translationRequests[pe]),
                    pt
                }
                getTranslation(pe) {
                    this.pending = !0;
                    const pt = this.currentLoader.getTranslation(pe).pipe((0,
                    W.d)(1), (0,
                    le.q)(1));
                    return this.loadingTranslations = pt.pipe((0,
                    fe.U)(Mt=>this.compiler.compileTranslations(Mt, pe)), (0,
                    W.d)(1), (0,
                    le.q)(1)),
                    this.loadingTranslations.subscribe({
                        next: Mt=>{
                            this.translations[pe] = this.extend && this.translations[pe] ? {
                                ...Mt,
                                ...this.translations[pe]
                            } : Mt,
                            this.updateLangs(),
                            this.pending = !1
                        }
                        ,
                        error: Mt=>{
                            this.pending = !1
                        }
                    }),
                    pt
                }
                setTranslation(pe, pt, Mt=!1) {
                    pt = this.compiler.compileTranslations(pt, pe),
                    this.translations[pe] = (Mt || this.extend) && this.translations[pe] ? Pe(this.translations[pe], pt) : pt,
                    this.updateLangs(),
                    this.onTranslationChange.emit({
                        lang: pe,
                        translations: this.translations[pe]
                    })
                }
                getLangs() {
                    return this.langs
                }
                addLangs(pe) {
                    pe.forEach(pt=>{
                        -1 === this.langs.indexOf(pt) && this.langs.push(pt)
                    }
                    )
                }
                updateLangs() {
                    this.addLangs(Object.keys(this.translations))
                }
                getParsedResult(pe, pt, Mt) {
                    let kt;
                    if (pt instanceof Array) {
                        let Xt = {}
                          , bt = !1;
                        for (let Kt of pt)
                            Xt[Kt] = this.getParsedResult(pe, Kt, Mt),
                            H(Xt[Kt]) && (bt = !0);
                        if (bt) {
                            const Kt = pt.map(k=>H(Xt[k]) ? Xt[k] : (0,
                            l.of)(Xt[k]));
                            return (0,
                            U.D)(Kt).pipe((0,
                            fe.U)(k=>{
                                let de = {};
                                return k.forEach((he,Ie)=>{
                                    de[pt[Ie]] = he
                                }
                                ),
                                de
                            }
                            ))
                        }
                        return Xt
                    }
                    if (pe && (kt = this.parser.interpolate(this.parser.getValue(pe, pt), Mt)),
                    typeof kt > "u" && null != this.defaultLang && this.defaultLang !== this.currentLang && this.useDefaultLang && (kt = this.parser.interpolate(this.parser.getValue(this.translations[this.defaultLang], pt), Mt)),
                    typeof kt > "u") {
                        let Xt = {
                            key: pt,
                            translateService: this
                        };
                        typeof Mt < "u" && (Xt.interpolateParams = Mt),
                        kt = this.missingTranslationHandler.handle(Xt)
                    }
                    return typeof kt < "u" ? kt : pt
                }
                get(pe, pt) {
                    if (!et(pe) || !pe.length)
                        throw new Error('Parameter "key" required');
                    if (this.pending)
                        return this.loadingTranslations.pipe((0,
                        re.b)(Mt=>H(Mt = this.getParsedResult(Mt, pe, pt)) ? Mt : (0,
                        l.of)(Mt)));
                    {
                        let Mt = this.getParsedResult(this.translations[this.currentLang], pe, pt);
                        return H(Mt) ? Mt : (0,
                        l.of)(Mt)
                    }
                }
                getStreamOnTranslationChange(pe, pt) {
                    if (!et(pe) || !pe.length)
                        throw new Error('Parameter "key" required');
                    return (0,
                    z.z)((0,
                    te.P)(()=>this.get(pe, pt)), this.onTranslationChange.pipe((0,
                    Ke.w)(Mt=>{
                        const kt = this.getParsedResult(Mt.translations, pe, pt);
                        return "function" == typeof kt.subscribe ? kt : (0,
                        l.of)(kt)
                    }
                    )))
                }
                stream(pe, pt) {
                    if (!et(pe) || !pe.length)
                        throw new Error('Parameter "key" required');
                    return (0,
                    z.z)((0,
                    te.P)(()=>this.get(pe, pt)), this.onLangChange.pipe((0,
                    Ke.w)(Mt=>{
                        const kt = this.getParsedResult(Mt.translations, pe, pt);
                        return H(kt) ? kt : (0,
                        l.of)(kt)
                    }
                    )))
                }
                instant(pe, pt) {
                    if (!et(pe) || !pe.length)
                        throw new Error('Parameter "key" required');
                    let Mt = this.getParsedResult(this.translations[this.currentLang], pe, pt);
                    if (H(Mt)) {
                        if (pe instanceof Array) {
                            let kt = {};
                            return pe.forEach((Xt,bt)=>{
                                kt[pe[bt]] = pe[bt]
                            }
                            ),
                            kt
                        }
                        return pe
                    }
                    return Mt
                }
                set(pe, pt, Mt=this.currentLang) {
                    this.translations[Mt][pe] = this.compiler.compile(pt, Mt),
                    this.updateLangs(),
                    this.onTranslationChange.emit({
                        lang: Mt,
                        translations: this.translations[Mt]
                    })
                }
                changeLang(pe) {
                    this.currentLang = pe,
                    this.onLangChange.emit({
                        lang: pe,
                        translations: this.translations[pe]
                    }),
                    null == this.defaultLang && this.changeDefaultLang(pe)
                }
                changeDefaultLang(pe) {
                    this.defaultLang = pe,
                    this.onDefaultLangChange.emit({
                        lang: pe,
                        translations: this.translations[pe]
                    })
                }
                reloadLang(pe) {
                    return this.resetLang(pe),
                    this.getTranslation(pe)
                }
                resetLang(pe) {
                    this._translationRequests[pe] = void 0,
                    this.translations[pe] = void 0
                }
                getBrowserLang() {
                    if (typeof window > "u" || typeof window.navigator > "u")
                        return;
                    let pe = window.navigator.languages ? window.navigator.languages[0] : null;
                    return pe = pe || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage,
                    typeof pe > "u" ? void 0 : (-1 !== pe.indexOf("-") && (pe = pe.split("-")[0]),
                    -1 !== pe.indexOf("_") && (pe = pe.split("_")[0]),
                    pe)
                }
                getBrowserCultureLang() {
                    if (typeof window > "u" || typeof window.navigator > "u")
                        return;
                    let pe = window.navigator.languages ? window.navigator.languages[0] : null;
                    return pe = pe || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage,
                    pe
                }
            }
            return qe.\u0275fac = function(pe) {
                return new (pe || qe)(i.LFG(ut),i.LFG(Ne),i.LFG(ye),i.LFG(Q),i.LFG(ot),i.LFG(Oe),i.LFG(Ce),i.LFG(_t),i.LFG(Ze))
            }
            ,
            qe.\u0275prov = i.Yz7({
                token: qe,
                factory: qe.\u0275fac
            }),
            qe
        }
        )()
          , qt = (()=>{
            class qe {
                constructor(pe, pt) {
                    this.translate = pe,
                    this._ref = pt,
                    this.value = "",
                    this.lastKey = null,
                    this.lastParams = []
                }
                updateValue(pe, pt, Mt) {
                    let kt = Xt=>{
                        this.value = void 0 !== Xt ? Xt : pe,
                        this.lastKey = pe,
                        this._ref.markForCheck()
                    }
                    ;
                    if (Mt) {
                        let Xt = this.translate.getParsedResult(Mt, pe, pt);
                        H(Xt.subscribe) ? Xt.subscribe(kt) : kt(Xt)
                    }
                    this.translate.get(pe, pt).subscribe(kt)
                }
                transform(pe, ...pt) {
                    if (!pe || !pe.length)
                        return pe;
                    if (Fe(pe, this.lastKey) && Fe(pt, this.lastParams))
                        return this.value;
                    let Mt;
                    if (et(pt[0]) && pt.length)
                        if ("string" == typeof pt[0] && pt[0].length) {
                            let kt = pt[0].replace(/(\')?([a-zA-Z0-9_]+)(\')?(\s)?:/g, '"$2":').replace(/:(\s)?(\')(.*?)(\')/g, ':"$3"');
                            try {
                                Mt = JSON.parse(kt)
                            } catch {
                                throw new SyntaxError(`Wrong parameter in TranslatePipe. Expected a valid Object, received: ${pt[0]}`)
                            }
                        } else
                            "object" == typeof pt[0] && !Array.isArray(pt[0]) && (Mt = pt[0]);
                    return this.lastKey = pe,
                    this.lastParams = pt,
                    this.updateValue(pe, Mt),
                    this._dispose(),
                    this.onTranslationChange || (this.onTranslationChange = this.translate.onTranslationChange.subscribe(kt=>{
                        this.lastKey && kt.lang === this.translate.currentLang && (this.lastKey = null,
                        this.updateValue(pe, Mt, kt.translations))
                    }
                    )),
                    this.onLangChange || (this.onLangChange = this.translate.onLangChange.subscribe(kt=>{
                        this.lastKey && (this.lastKey = null,
                        this.updateValue(pe, Mt, kt.translations))
                    }
                    )),
                    this.onDefaultLangChange || (this.onDefaultLangChange = this.translate.onDefaultLangChange.subscribe(()=>{
                        this.lastKey && (this.lastKey = null,
                        this.updateValue(pe, Mt))
                    }
                    )),
                    this.value
                }
                _dispose() {
                    typeof this.onTranslationChange < "u" && (this.onTranslationChange.unsubscribe(),
                    this.onTranslationChange = void 0),
                    typeof this.onLangChange < "u" && (this.onLangChange.unsubscribe(),
                    this.onLangChange = void 0),
                    typeof this.onDefaultLangChange < "u" && (this.onDefaultLangChange.unsubscribe(),
                    this.onDefaultLangChange = void 0)
                }
                ngOnDestroy() {
                    this._dispose()
                }
            }
            return qe.\u0275fac = function(pe) {
                return new (pe || qe)(i.Y36(rt, 16),i.Y36(i.sBO, 16))
            }
            ,
            qe.\u0275pipe = i.Yjl({
                name: "translate",
                type: qe,
                pure: !1
            }),
            qe.\u0275prov = i.Yz7({
                token: qe,
                factory: qe.\u0275fac
            }),
            qe
        }
        )()
          , ft = (()=>{
            class qe {
                static forRoot(pe={}) {
                    return {
                        ngModule: qe,
                        providers: [pe.loader || {
                            provide: Ne,
                            useClass: Be
                        }, pe.compiler || {
                            provide: ye,
                            useClass: Re
                        }, pe.parser || {
                            provide: Q,
                            useClass: ze
                        }, pe.missingTranslationHandler || {
                            provide: ot,
                            useClass: $e
                        }, ut, {
                            provide: Ce,
                            useValue: pe.isolate
                        }, {
                            provide: Oe,
                            useValue: pe.useDefaultLang
                        }, {
                            provide: _t,
                            useValue: pe.extend
                        }, {
                            provide: Ze,
                            useValue: pe.defaultLanguage
                        }, rt]
                    }
                }
                static forChild(pe={}) {
                    return {
                        ngModule: qe,
                        providers: [pe.loader || {
                            provide: Ne,
                            useClass: Be
                        }, pe.compiler || {
                            provide: ye,
                            useClass: Re
                        }, pe.parser || {
                            provide: Q,
                            useClass: ze
                        }, pe.missingTranslationHandler || {
                            provide: ot,
                            useClass: $e
                        }, {
                            provide: Ce,
                            useValue: pe.isolate
                        }, {
                            provide: Oe,
                            useValue: pe.useDefaultLang
                        }, {
                            provide: _t,
                            useValue: pe.extend
                        }, {
                            provide: Ze,
                            useValue: pe.defaultLanguage
                        }, rt]
                    }
                }
            }
            return qe.\u0275fac = function(pe) {
                return new (pe || qe)
            }
            ,
            qe.\u0275mod = i.oAB({
                type: qe
            }),
            qe.\u0275inj = i.cJS({}),
            qe
        }
        )()
    }
    ,
    3886: (Ot,je,D)=>{
        D.d(je, {
            Fy: ()=>ei,
            bB: ()=>Ji,
            Mp: ()=>yn
        });
        var i = D(2560)
          , l = D(4666)
          , q = D(253)
          , ue = D(6646)
          , H = D(745)
          , U = D(2957)
          , z = D(9337)
          , te = D(116)
          , le = D(2673)
          , W = D(155)
          , fe = D(9295)
          , re = D(7260)
          , Ke = D(635)
          , Ne = D(4382)
          , Be = D(1944);
        const $e = (He,Lt)=>(He.push(Lt),
        He);
        var et = D(5044)
          , st = D(9319)
          , Pe = D(3945)
          , Q = D(9635)
          , ye = D(73)
          , Re = D(9525);
        function ut(He, Lt) {
            return Lt ? x=>(0,
            st.z)(Lt.pipe((0,
            fe.q)(1), function ze() {
                return (0,
                Be.e)((He,Lt)=>{
                    He.subscribe(new Pe.Q(Lt,Q.Z))
                }
                )
            }()), x.pipe(ut(He))) : (0,
            Re.z)((x,oe)=>He(x, oe).pipe((0,
            fe.q)(1), (0,
            ye.h)(x)))
        }
        var Ce = D(5524)
          , Ze = D(9297)
          , _t = D(4497)
          , rt = D(4851);
        function It(He, Lt) {}
        const qt = function(He, Lt) {
            return {
                $implicit: He,
                index: Lt
            }
        };
        function ft(He, Lt) {
            if (1 & He && i.YNc(0, It, 0, 0, "ng-template", 4),
            2 & He) {
                const x = i.oxw()
                  , oe = x.$implicit
                  , Me = x.index
                  , Ge = i.oxw();
                i.Q6J("ngTemplateOutlet", oe.tplRef)("ngTemplateOutletContext", i.WLB(2, qt, Ge.preparePublicSlide(oe), Me))
            }
        }
        const qe = function(He, Lt, x, oe) {
            return {
                width: He,
                "margin-left": Lt,
                "margin-right": x,
                left: oe
            }
        };
        function be(He, Lt) {
            if (1 & He) {
                const x = i.EpF();
                i.ynx(0),
                i.TgZ(1, "div", 2),
                i.NdJ("animationend", function() {
                    const Ge = i.CHM(x).$implicit
                      , K = i.oxw();
                    return i.KtG(K.clear(Ge.id))
                }),
                i.YNc(2, ft, 1, 5, null, 3),
                i.qZA(),
                i.BQk()
            }
            if (2 & He) {
                const x = Lt.$implicit;
                i.xp6(1),
                i.Q6J("ngClass", x.classes)("ngStyle", i.l5B(4, qe, x.width + "px", x.marginL ? x.marginL + "px" : "", x.marginR ? x.marginR + "px" : "", x.left))("@autoHeight", x.heightState),
                i.xp6(1),
                i.Q6J("ngIf", x.load)
            }
        }
        const pe = function(He, Lt, x, oe, Me) {
            return {
                width: He,
                transform: Lt,
                transition: x,
                "padding-left": oe,
                "padding-right": Me
            }
        }
          , pt = function(He, Lt) {
            return {
                isMouseDragable: He,
                isTouchDragable: Lt
            }
        };
        function Mt(He, Lt) {
            if (1 & He && (i.TgZ(0, "div", 4),
            i._UZ(1, "owl-stage", 5),
            i.qZA()),
            2 & He) {
                const x = i.oxw();
                i.xp6(1),
                i.Q6J("owlDraggable", i.WLB(3, pt, null == x.owlDOMData ? null : x.owlDOMData.isMouseDragable, null == x.owlDOMData ? null : x.owlDOMData.isTouchDragable))("stageData", x.stageData)("slidesData", x.slidesData)
            }
        }
        const kt = function(He, Lt) {
            return {
                active: He,
                "owl-dot-text": Lt
            }
        };
        function Xt(He, Lt) {
            if (1 & He) {
                const x = i.EpF();
                i.TgZ(0, "div", 11),
                i.NdJ("click", function() {
                    const Ge = i.CHM(x).$implicit
                      , K = i.oxw(2);
                    return i.KtG(K.moveByDot(Ge.id))
                }),
                i._UZ(1, "span", 12),
                i.qZA()
            }
            if (2 & He) {
                const x = Lt.$implicit;
                i.Q6J("ngClass", i.WLB(2, kt, x.active, x.showInnerContent)),
                i.xp6(1),
                i.Q6J("innerHTML", x.innerContent, i.oJD)
            }
        }
        const bt = function(He) {
            return {
                disabled: He
            }
        };
        function Kt(He, Lt) {
            if (1 & He) {
                const x = i.EpF();
                i.ynx(0),
                i.TgZ(1, "div", 6)(2, "div", 7),
                i.NdJ("click", function() {
                    i.CHM(x);
                    const Me = i.oxw();
                    return i.KtG(Me.prev())
                }),
                i.qZA(),
                i.TgZ(3, "div", 8),
                i.NdJ("click", function() {
                    i.CHM(x);
                    const Me = i.oxw();
                    return i.KtG(Me.next())
                }),
                i.qZA()(),
                i.TgZ(4, "div", 9),
                i.YNc(5, Xt, 2, 5, "div", 10),
                i.qZA(),
                i.BQk()
            }
            if (2 & He) {
                const x = i.oxw();
                i.xp6(1),
                i.Q6J("ngClass", i.VKq(7, bt, null == x.navData ? null : x.navData.disabled)),
                i.xp6(1),
                i.Q6J("ngClass", i.VKq(9, bt, null == x.navData || null == x.navData.prev ? null : x.navData.prev.disabled))("innerHTML", null == x.navData || null == x.navData.prev ? null : x.navData.prev.htmlText, i.oJD),
                i.xp6(1),
                i.Q6J("ngClass", i.VKq(11, bt, null == x.navData || null == x.navData.next ? null : x.navData.next.disabled))("innerHTML", null == x.navData || null == x.navData.next ? null : x.navData.next.htmlText, i.oJD),
                i.xp6(1),
                i.Q6J("ngClass", i.VKq(13, bt, null == x.dotsData ? null : x.dotsData.disabled)),
                i.xp6(1),
                i.Q6J("ngForOf", null == x.dotsData ? null : x.dotsData.dots)
            }
        }
        const k = function(He, Lt, x, oe, Me) {
            return {
                "owl-rtl": He,
                "owl-loaded": Lt,
                "owl-responsive": x,
                "owl-drag": oe,
                "owl-grab": Me
            }
        };
        class de {
            constructor() {
                this.items = 3,
                this.skip_validateItems = !1,
                this.loop = !1,
                this.center = !1,
                this.rewind = !1,
                this.mouseDrag = !0,
                this.touchDrag = !0,
                this.pullDrag = !0,
                this.freeDrag = !1,
                this.margin = 0,
                this.stagePadding = 0,
                this.merge = !1,
                this.mergeFit = !0,
                this.autoWidth = !1,
                this.startPosition = 0,
                this.rtl = !1,
                this.smartSpeed = 250,
                this.fluidSpeed = !1,
                this.dragEndSpeed = !1,
                this.responsive = {},
                this.responsiveRefreshRate = 200,
                this.nav = !1,
                this.navText = ["prev", "next"],
                this.navSpeed = !1,
                this.slideBy = 1,
                this.dots = !0,
                this.dotsEach = !1,
                this.dotsData = !1,
                this.dotsSpeed = !1,
                this.autoplay = !1,
                this.autoplayTimeout = 5e3,
                this.autoplayHoverPause = !1,
                this.autoplaySpeed = !1,
                this.autoplayMouseleaveTimeout = 1,
                this.lazyLoad = !1,
                this.lazyLoadEager = 0,
                this.slideTransition = "",
                this.animateOut = !1,
                this.animateIn = !1,
                this.autoHeight = !1,
                this.URLhashListener = !1
            }
        }
        class he {
            constructor() {
                this.items = "number",
                this.skip_validateItems = "boolean",
                this.loop = "boolean",
                this.center = "boolean",
                this.rewind = "boolean",
                this.mouseDrag = "boolean",
                this.touchDrag = "boolean",
                this.pullDrag = "boolean",
                this.freeDrag = "boolean",
                this.margin = "number",
                this.stagePadding = "number",
                this.merge = "boolean",
                this.mergeFit = "boolean",
                this.autoWidth = "boolean",
                this.startPosition = "number|string",
                this.rtl = "boolean",
                this.smartSpeed = "number",
                this.fluidSpeed = "boolean",
                this.dragEndSpeed = "number|boolean",
                this.responsive = {},
                this.responsiveRefreshRate = "number",
                this.nav = "boolean",
                this.navText = "string[]",
                this.navSpeed = "number|boolean",
                this.slideBy = "number|string",
                this.dots = "boolean",
                this.dotsEach = "number|boolean",
                this.dotsData = "boolean",
                this.dotsSpeed = "number|boolean",
                this.autoplay = "boolean",
                this.autoplayTimeout = "number",
                this.autoplayHoverPause = "boolean",
                this.autoplaySpeed = "number|boolean",
                this.autoplayMouseleaveTimeout = "number",
                this.lazyLoad = "boolean",
                this.lazyLoadEager = "number",
                this.slideTransition = "string",
                this.animateOut = "string|boolean",
                this.animateIn = "string|boolean",
                this.autoHeight = "boolean",
                this.URLhashListener = "boolean"
            }
        }
        let Ie = (()=>{
            class He {
                constructor(x) {
                    this.errorHandler = x
                }
                log(x, ...oe) {
                    (0,
                    i.X6Q)() && console.log(x, ...oe)
                }
                error(x) {
                    this.errorHandler.handleError(x)
                }
                warn(x, ...oe) {
                    console.warn(x, ...oe)
                }
            }
            return He.\u0275fac = function(x) {
                return new (x || He)(i.LFG(i.qLn))
            }
            ,
            He.\u0275prov = i.Yz7({
                token: He,
                factory: He.\u0275fac
            }),
            He
        }
        )();
        var Qe = (()=>{
            return (He = Qe || (Qe = {})).Event = "event",
            He.State = "state",
            Qe;
            var He
        }
        )()
          , Tt = (()=>{
            return (He = Tt || (Tt = {})).Default = "default",
            He.Inner = "inner",
            He.Outer = "outer",
            Tt;
            var He
        }
        )();
        let In = (()=>{
            class He {
                constructor(x) {
                    this.logger = x,
                    this._viewSettingsShipper$ = new q.x,
                    this._initializedCarousel$ = new q.x,
                    this._changeSettingsCarousel$ = new q.x,
                    this._changedSettingsCarousel$ = new q.x,
                    this._translateCarousel$ = new q.x,
                    this._translatedCarousel$ = new q.x,
                    this._resizeCarousel$ = new q.x,
                    this._resizedCarousel$ = new q.x,
                    this._refreshCarousel$ = new q.x,
                    this._refreshedCarousel$ = new q.x,
                    this._dragCarousel$ = new q.x,
                    this._draggedCarousel$ = new q.x,
                    this.settings = {
                        items: 0
                    },
                    this.owlDOMData = {
                        rtl: !1,
                        isResponsive: !1,
                        isRefreshed: !1,
                        isLoaded: !1,
                        isLoading: !1,
                        isMouseDragable: !1,
                        isGrab: !1,
                        isTouchDragable: !1
                    },
                    this.stageData = {
                        transform: "translate3d(0px,0px,0px)",
                        transition: "0s",
                        width: 0,
                        paddingL: 0,
                        paddingR: 0
                    },
                    this._items = [],
                    this._widths = [],
                    this._supress = {},
                    this._plugins = {},
                    this._current = null,
                    this._clones = [],
                    this._mergers = [],
                    this._speed = null,
                    this._coordinates = [],
                    this._breakpoint = null,
                    this.clonedIdPrefix = "cloned-",
                    this._options = {},
                    this._invalidated = {},
                    this._states = {
                        current: {},
                        tags: {
                            initializing: ["busy"],
                            animating: ["busy"],
                            dragging: ["interacting"]
                        }
                    },
                    this._pipe = [{
                        filter: ["width", "items", "settings"],
                        run: oe=>{
                            oe.current = this._items && this._items[this.relative(this._current)].id
                        }
                    }, {
                        filter: ["width", "items", "settings"],
                        run: oe=>{
                            const Me = this.settings.margin || ""
                              , K = this.settings.rtl
                              , J = {
                                "margin-left": K ? Me : "",
                                "margin-right": K ? "" : Me
                            };
                            !this.settings.autoWidth || this.slidesData.forEach(Y=>{
                                Y.marginL = J["margin-left"],
                                Y.marginR = J["margin-right"]
                            }
                            ),
                            oe.css = J
                        }
                    }, {
                        filter: ["width", "items", "settings"],
                        run: oe=>{
                            const Me = +(this.width() / this.settings.items).toFixed(3) - this.settings.margin
                              , Ge = !this.settings.autoWidth
                              , K = [];
                            let J = null
                              , Y = this._items.length;
                            for (oe.items = {
                                merge: !1,
                                width: Me
                            }; Y-- > 0; )
                                J = this._mergers[Y],
                                J = this.settings.mergeFit && Math.min(J, this.settings.items) || J,
                                oe.items.merge = J > 1 || oe.items.merge,
                                K[Y] = Ge ? Me * J : this._items[Y].width ? this._items[Y].width : Me;
                            this._widths = K,
                            this.slidesData.forEach((Te,nt)=>{
                                Te.width = this._widths[nt],
                                Te.marginR = oe.css["margin-right"],
                                Te.marginL = oe.css["margin-left"]
                            }
                            )
                        }
                    }, {
                        filter: ["items", "settings"],
                        run: ()=>{
                            const oe = []
                              , Me = this._items
                              , Ge = this.settings
                              , K = Math.max(2 * Ge.items, 4)
                              , J = 2 * Math.ceil(Me.length / 2);
                            let Y = []
                              , Te = []
                              , nt = Ge.loop && Me.length ? Ge.rewind ? K : Math.max(K, J) : 0;
                            for (nt /= 2; nt-- > 0; )
                                oe.push(this.normalize(oe.length / 2, !0)),
                                Y.push({
                                    ...this.slidesData[oe[oe.length - 1]]
                                }),
                                oe.push(this.normalize(Me.length - 1 - (oe.length - 1) / 2, !0)),
                                Te.unshift({
                                    ...this.slidesData[oe[oe.length - 1]]
                                });
                            this._clones = oe,
                            Y = Y.map(Rt=>(Rt.id = `${this.clonedIdPrefix}${Rt.id}`,
                            Rt.isActive = !1,
                            Rt.isCloned = !0,
                            Rt)),
                            Te = Te.map(Rt=>(Rt.id = `${this.clonedIdPrefix}${Rt.id}`,
                            Rt.isActive = !1,
                            Rt.isCloned = !0,
                            Rt)),
                            this.slidesData = Te.concat(this.slidesData).concat(Y)
                        }
                    }, {
                        filter: ["width", "items", "settings"],
                        run: ()=>{
                            const oe = this.settings.rtl ? 1 : -1
                              , Me = this._clones.length + this._items.length
                              , Ge = [];
                            let K = -1
                              , J = 0
                              , Y = 0;
                            for (; ++K < Me; )
                                J = Ge[K - 1] || 0,
                                Y = this._widths[this.relative(K)] + this.settings.margin,
                                Ge.push(J + Y * oe);
                            this._coordinates = Ge
                        }
                    }, {
                        filter: ["width", "items", "settings"],
                        run: ()=>{
                            const oe = this.settings.stagePadding
                              , Me = this._coordinates
                              , Ge = {
                                width: Math.ceil(Math.abs(Me[Me.length - 1])) + 2 * oe,
                                "padding-left": oe || "",
                                "padding-right": oe || ""
                            };
                            this.stageData.width = Ge.width,
                            this.stageData.paddingL = Ge["padding-left"],
                            this.stageData.paddingR = Ge["padding-right"]
                        }
                    }, {
                        filter: ["width", "items", "settings"],
                        run: oe=>{
                            let Me = oe.current ? this.slidesData.findIndex(Ge=>Ge.id === oe.current) : 0;
                            Me = Math.max(this.minimum(), Math.min(this.maximum(), Me)),
                            this.reset(Me)
                        }
                    }, {
                        filter: ["position"],
                        run: ()=>{
                            this.animate(this.coordinates(this._current))
                        }
                    }, {
                        filter: ["width", "position", "items", "settings"],
                        run: ()=>{
                            const oe = this.settings.rtl ? 1 : -1
                              , Me = 2 * this.settings.stagePadding
                              , Ge = [];
                            let K, J, Y, Te, nt, Rt;
                            if (K = this.coordinates(this.current()),
                            "number" == typeof K ? K += Me : K = 0,
                            J = K + this.width() * oe,
                            -1 === oe && this.settings.center) {
                                const rn = this._coordinates.filter(fn=>this.settings.items % 2 == 1 ? fn >= K : fn > K);
                                K = rn.length ? rn[rn.length - 1] : K
                            }
                            for (nt = 0,
                            Rt = this._coordinates.length; nt < Rt; nt++)
                                Y = Math.ceil(this._coordinates[nt - 1] || 0),
                                Te = Math.ceil(Math.abs(this._coordinates[nt]) + Me * oe),
                                (this._op(Y, "<=", K) && this._op(Y, ">", J) || this._op(Te, "<", K) && this._op(Te, ">", J)) && Ge.push(nt);
                            this.slidesData.forEach(rn=>(rn.isActive = !1,
                            rn)),
                            Ge.forEach(rn=>{
                                this.slidesData[rn].isActive = !0
                            }
                            ),
                            this.settings.center && (this.slidesData.forEach(rn=>(rn.isCentered = !1,
                            rn)),
                            this.slidesData[this.current()].isCentered = !0)
                        }
                    }]
                }
                get invalidated() {
                    return this._invalidated
                }
                get states() {
                    return this._states
                }
                getViewCurSettings() {
                    return this._viewSettingsShipper$.asObservable()
                }
                getInitializedState() {
                    return this._initializedCarousel$.asObservable()
                }
                getChangeState() {
                    return this._changeSettingsCarousel$.asObservable()
                }
                getChangedState() {
                    return this._changedSettingsCarousel$.asObservable()
                }
                getTranslateState() {
                    return this._translateCarousel$.asObservable()
                }
                getTranslatedState() {
                    return this._translatedCarousel$.asObservable()
                }
                getResizeState() {
                    return this._resizeCarousel$.asObservable()
                }
                getResizedState() {
                    return this._resizedCarousel$.asObservable()
                }
                getRefreshState() {
                    return this._refreshCarousel$.asObservable()
                }
                getRefreshedState() {
                    return this._refreshedCarousel$.asObservable()
                }
                getDragState() {
                    return this._dragCarousel$.asObservable()
                }
                getDraggedState() {
                    return this._draggedCarousel$.asObservable()
                }
                setOptions(x) {
                    const oe = new de
                      , Me = this._validateOptions(x, oe);
                    this._options = {
                        ...oe,
                        ...Me
                    }
                }
                _validateOptions(x, oe) {
                    const Me = {
                        ...x
                    }
                      , Ge = new he
                      , K = (J,Y)=>(this.logger.log(`options.${Y} must be type of ${J}; ${Y}=${x[Y]} skipped to defaults: ${Y}=${oe[Y]}`),
                    oe[Y]);
                    for (const J in Me)
                        if (Me.hasOwnProperty(J))
                            if ("number" === Ge[J])
                                this._isNumeric(Me[J]) ? (Me[J] = +Me[J],
                                Me[J] = "items" === J ? this._validateItems(Me[J], Me.skip_validateItems) : Me[J]) : Me[J] = K(Ge[J], J);
                            else if ("boolean" === Ge[J] && "boolean" != typeof Me[J])
                                Me[J] = K(Ge[J], J);
                            else if ("number|boolean" !== Ge[J] || this._isNumberOrBoolean(Me[J]))
                                if ("number|string" !== Ge[J] || this._isNumberOrString(Me[J]))
                                    if ("string|boolean" !== Ge[J] || this._isStringOrBoolean(Me[J])) {
                                        if ("string[]" === Ge[J])
                                            if (Array.isArray(Me[J])) {
                                                let Y = !1;
                                                Me[J].forEach(Te=>{
                                                    Y = "string" == typeof Te
                                                }
                                                ),
                                                Y || (Me[J] = K(Ge[J], J))
                                            } else
                                                Me[J] = K(Ge[J], J)
                                    } else
                                        Me[J] = K(Ge[J], J);
                                else
                                    Me[J] = K(Ge[J], J);
                            else
                                Me[J] = K(Ge[J], J);
                    return Me
                }
                _validateItems(x, oe) {
                    let Me = x;
                    return x > this._items.length ? oe ? this.logger.log("The option 'items' in your options is bigger than the number of slides. The navigation got disabled") : (Me = this._items.length,
                    this.logger.log("The option 'items' in your options is bigger than the number of slides. This option is updated to the current number of slides and the navigation got disabled")) : x === this._items.length && (this.settings.dots || this.settings.nav) && this.logger.log("Option 'items' in your options is equal to the number of slides. So the navigation got disabled"),
                    Me
                }
                setCarouselWidth(x) {
                    this._width = x
                }
                setup(x, oe, Me) {
                    this.setCarouselWidth(x),
                    this.setItems(oe),
                    this._defineSlidesData(),
                    this.setOptions(Me),
                    this.settings = {
                        ...this._options
                    },
                    this.setOptionsForViewport(),
                    this._trigger("change", {
                        property: {
                            name: "settings",
                            value: this.settings
                        }
                    }),
                    this.invalidate("settings"),
                    this._trigger("changed", {
                        property: {
                            name: "settings",
                            value: this.settings
                        }
                    })
                }
                setOptionsForViewport() {
                    const x = this._width
                      , oe = this._options.responsive;
                    let Me = -1;
                    if (!Object.keys(oe).length)
                        return;
                    if (!x)
                        return void (this.settings.items = 1);
                    for (const K in oe)
                        oe.hasOwnProperty(K) && +K <= x && +K > Me && (Me = Number(K));
                    this.settings = {
                        ...this._options,
                        ...oe[Me],
                        items: oe[Me] && oe[Me].items ? this._validateItems(oe[Me].items, this._options.skip_validateItems) : this._options.items
                    },
                    delete this.settings.responsive,
                    this.owlDOMData.isResponsive = !0,
                    this.owlDOMData.isMouseDragable = this.settings.mouseDrag,
                    this.owlDOMData.isTouchDragable = this.settings.touchDrag;
                    const Ge = [];
                    this._items.forEach(K=>{
                        Ge.push(this.settings.merge ? K.dataMerge : 1)
                    }
                    ),
                    this._mergers = Ge,
                    this._breakpoint = Me,
                    this.invalidate("settings")
                }
                initialize(x) {
                    this.enter("initializing"),
                    this.owlDOMData.rtl = this.settings.rtl,
                    this._mergers.length && (this._mergers = []),
                    x.forEach(oe=>{
                        this._mergers.push(this.settings.merge ? oe.dataMerge : 1)
                    }
                    ),
                    this._clones = [],
                    this.reset(this._isNumeric(this.settings.startPosition) ? +this.settings.startPosition : 0),
                    this.invalidate("items"),
                    this.refresh(),
                    this.owlDOMData.isLoaded = !0,
                    this.owlDOMData.isMouseDragable = this.settings.mouseDrag,
                    this.owlDOMData.isTouchDragable = this.settings.touchDrag,
                    this.sendChanges(),
                    this.leave("initializing"),
                    this._trigger("initialized")
                }
                sendChanges() {
                    this._viewSettingsShipper$.next({
                        owlDOMData: this.owlDOMData,
                        stageData: this.stageData,
                        slidesData: this.slidesData,
                        navData: this.navData,
                        dotsData: this.dotsData
                    })
                }
                _optionsLogic() {
                    this.settings.autoWidth && (this.settings.stagePadding = 0,
                    this.settings.merge = !1)
                }
                update() {
                    let x = 0;
                    const oe = this._pipe.length
                      , Me = K=>this._invalidated[K]
                      , Ge = {};
                    for (; x < oe; ) {
                        const K = this._pipe[x].filter.filter(Me);
                        (this._invalidated.all || K.length > 0) && this._pipe[x].run(Ge),
                        x++
                    }
                    this.slidesData.forEach(K=>K.classes = this.setCurSlideClasses(K)),
                    this.sendChanges(),
                    this._invalidated = {},
                    this.is("valid") || this.enter("valid")
                }
                width(x) {
                    switch (x = x || Tt.Default) {
                    case Tt.Inner:
                    case Tt.Outer:
                        return this._width;
                    default:
                        return this._width - 2 * this.settings.stagePadding + this.settings.margin
                    }
                }
                refresh() {
                    this.enter("refreshing"),
                    this._trigger("refresh"),
                    this._defineSlidesData(),
                    this.setOptionsForViewport(),
                    this._optionsLogic(),
                    this.update(),
                    this.leave("refreshing"),
                    this._trigger("refreshed")
                }
                onResize(x) {
                    if (!this._items.length)
                        return !1;
                    this.setCarouselWidth(x),
                    this.enter("resizing"),
                    this._trigger("resize"),
                    this.invalidate("width"),
                    this.refresh(),
                    this.leave("resizing"),
                    this._trigger("resized")
                }
                prepareDragging(x) {
                    let Me, oe = null;
                    return Me = this.stageData.transform.replace(/.*\(|\)| |[^,-\d]\w|\)/g, "").split(","),
                    oe = {
                        x: +Me[0],
                        y: +Me[1]
                    },
                    this.is("animating") && this.invalidate("position"),
                    "mousedown" === x.type && (this.owlDOMData.isGrab = !0),
                    this.speed(0),
                    oe
                }
                enterDragging() {
                    this.enter("dragging"),
                    this._trigger("drag")
                }
                defineNewCoordsDrag(x, oe) {
                    let Me = null
                      , Ge = null
                      , K = null;
                    const J = this.difference(oe.pointer, this.pointer(x))
                      , Y = this.difference(oe.stage.start, J);
                    return !!this.is("dragging") && (this.settings.loop ? (Me = this.coordinates(this.minimum()),
                    Ge = +this.coordinates(this.maximum() + 1) - Me,
                    Y.x = ((Y.x - Me) % Ge + Ge) % Ge + Me) : (Me = this.coordinates(this.settings.rtl ? this.maximum() : this.minimum()),
                    Ge = this.coordinates(this.settings.rtl ? this.minimum() : this.maximum()),
                    K = this.settings.pullDrag ? -1 * J.x / 5 : 0,
                    Y.x = Math.max(Math.min(Y.x, Me + K), Ge + K)),
                    Y)
                }
                finishDragging(x, oe, Me) {
                    const K = this.difference(oe.pointer, this.pointer(x))
                      , J = oe.stage.current
                      , Y = ["right", "left"][+(this.settings.rtl ? K.x < +this.settings.rtl : K.x > +this.settings.rtl)];
                    let Te, nt, Rt;
                    (0 !== K.x && this.is("dragging") || !this.is("valid")) && (this.speed(+this.settings.dragEndSpeed || this.settings.smartSpeed),
                    Te = this.closest(J.x, 0 !== K.x ? Y : oe.direction),
                    nt = this.current(),
                    Rt = this.current(-1 === Te ? void 0 : Te),
                    nt !== Rt && (this.invalidate("position"),
                    this.update()),
                    oe.direction = Y,
                    (Math.abs(K.x) > 3 || (new Date).getTime() - oe.time > 300) && Me()),
                    this.is("dragging") && (this.leave("dragging"),
                    this._trigger("dragged"))
                }
                closest(x, oe) {
                    const Ge = this.width();
                    let K = this.coordinates()
                      , J = -1;
                    this.settings.center && (K = K.map(Y=>(0 === Y && (Y += 1e-6),
                    Y)));
                    for (let Y = 0; Y < K.length && ("left" === oe && x > K[Y] - 30 && x < K[Y] + 30 ? J = Y : "right" === oe && x > K[Y] - Ge - 30 && x < K[Y] - Ge + 30 ? J = Y + 1 : this._op(x, "<", K[Y]) && this._op(x, ">", K[Y + 1] || K[Y] - Ge) ? J = "left" === oe ? Y + 1 : Y : null === oe && x > K[Y] - 30 && x < K[Y] + 30 && (J = Y),
                    -1 === J); Y++)
                        ;
                    return this.settings.loop || (this._op(x, ">", K[this.minimum()]) ? J = x = this.minimum() : this._op(x, "<", K[this.maximum()]) && (J = x = this.maximum())),
                    J
                }
                animate(x) {
                    const oe = this.speed() > 0;
                    this.is("animating") && this.onTransitionEnd(),
                    oe && (this.enter("animating"),
                    this._trigger("translate")),
                    this.stageData.transform = "translate3d(" + x + "px,0px,0px)",
                    this.stageData.transition = this.speed() / 1e3 + "s" + (this.settings.slideTransition ? " " + this.settings.slideTransition : "")
                }
                is(x) {
                    return this._states.current[x] && this._states.current[x] > 0
                }
                current(x) {
                    return void 0 === x ? this._current : 0 !== this._items.length ? (x = this.normalize(x),
                    this._current !== x && (this._trigger("change", {
                        property: {
                            name: "position",
                            value: x
                        }
                    }),
                    this._current = x,
                    this.invalidate("position"),
                    this._trigger("changed", {
                        property: {
                            name: "position",
                            value: this._current
                        }
                    })),
                    this._current) : void 0
                }
                invalidate(x) {
                    return "string" == typeof x && (this._invalidated[x] = !0,
                    this.is("valid") && this.leave("valid")),
                    Object.keys(this._invalidated)
                }
                reset(x) {
                    void 0 !== (x = this.normalize(x)) && (this._speed = 0,
                    this._current = x,
                    this._suppress(["translate", "translated"]),
                    this.animate(this.coordinates(x)),
                    this._release(["translate", "translated"]))
                }
                normalize(x, oe) {
                    const Me = this._items.length
                      , Ge = oe ? 0 : this._clones.length;
                    return !this._isNumeric(x) || Me < 1 ? x = void 0 : (x < 0 || x >= Me + Ge) && (x = ((x - Ge / 2) % Me + Me) % Me + Ge / 2),
                    x
                }
                relative(x) {
                    return this.normalize(x -= this._clones.length / 2, !0)
                }
                maximum(x=!1) {
                    const oe = this.settings;
                    let Ge, K, J, Me = this._coordinates.length;
                    if (oe.loop)
                        Me = this._clones.length / 2 + this._items.length - 1;
                    else if (oe.autoWidth || oe.merge) {
                        for (Ge = this._items.length,
                        K = this.slidesData[--Ge].width,
                        J = this._width; Ge-- > 0 && (K += +this.slidesData[Ge].width + this.settings.margin,
                        !(K > J)); )
                            ;
                        Me = Ge + 1
                    } else
                        Me = oe.center ? this._items.length - 1 : this._items.length - oe.items;
                    return x && (Me -= this._clones.length / 2),
                    Math.max(Me, 0)
                }
                minimum(x=!1) {
                    return x ? 0 : this._clones.length / 2
                }
                items(x) {
                    return void 0 === x ? this._items.slice() : (x = this.normalize(x, !0),
                    [this._items[x]])
                }
                mergers(x) {
                    return void 0 === x ? this._mergers.slice() : (x = this.normalize(x, !0),
                    this._mergers[x])
                }
                clones(x) {
                    const oe = this._clones.length / 2
                      , Me = oe + this._items.length
                      , Ge = K=>K % 2 == 0 ? Me + K / 2 : oe - (K + 1) / 2;
                    return void 0 === x ? this._clones.map((K,J)=>Ge(J)) : this._clones.map((K,J)=>K === x ? Ge(J) : null).filter(K=>K)
                }
                speed(x) {
                    return void 0 !== x && (this._speed = x),
                    this._speed
                }
                coordinates(x) {
                    let Ge, K, oe = 1, Me = x - 1;
                    return void 0 === x ? (K = this._coordinates.map((J,Y)=>this.coordinates(Y)),
                    K) : (this.settings.center ? (this.settings.rtl && (oe = -1,
                    Me = x + 1),
                    Ge = this._coordinates[x],
                    Ge += (this.width() - Ge + (this._coordinates[Me] || 0)) / 2 * oe) : Ge = this._coordinates[Me] || 0,
                    Ge = Math.ceil(Ge),
                    Ge)
                }
                _duration(x, oe, Me) {
                    return 0 === Me ? 0 : Math.min(Math.max(Math.abs(oe - x), 1), 6) * Math.abs(+Me || this.settings.smartSpeed)
                }
                to(x, oe) {
                    let Me = this.current()
                      , Ge = null
                      , K = x - this.relative(Me)
                      , J = this.maximum()
                      , Y = 0;
                    const Te = +(K > 0) - +(K < 0)
                      , nt = this._items.length
                      , Rt = this.minimum();
                    this.settings.loop ? (!this.settings.rewind && Math.abs(K) > nt / 2 && (K += -1 * Te * nt),
                    Ge = (((x = Me + K) - Rt) % nt + nt) % nt + Rt,
                    Ge !== x && Ge - K <= J && Ge - K > 0 && (Me = Ge - K,
                    x = Ge,
                    Y = 30,
                    this.reset(Me),
                    this.sendChanges())) : this.settings.rewind ? (J += 1,
                    x = (x % J + J) % J) : x = Math.max(Rt, Math.min(J, x)),
                    setTimeout(()=>{
                        this.speed(this._duration(Me, x, oe)),
                        this.current(x),
                        this.update()
                    }
                    , Y)
                }
                next(x) {
                    x = x || !1,
                    this.to(this.relative(this.current()) + 1, x)
                }
                prev(x) {
                    x = x || !1,
                    this.to(this.relative(this.current()) - 1, x)
                }
                onTransitionEnd(x) {
                    if (void 0 !== x)
                        return !1;
                    this.leave("animating"),
                    this._trigger("translated")
                }
                _viewport() {
                    let x;
                    return this._width ? x = this._width : this.logger.log("Can not detect viewport width."),
                    x
                }
                setItems(x) {
                    this._items = x
                }
                _defineSlidesData() {
                    let x;
                    this.slidesData && this.slidesData.length && (x = new Map,
                    this.slidesData.forEach(oe=>{
                        oe.load && x.set(oe.id, oe.load)
                    }
                    )),
                    this.slidesData = this._items.map(oe=>({
                        id: `${oe.id}`,
                        isActive: !1,
                        tplRef: oe.tplRef,
                        dataMerge: oe.dataMerge,
                        width: 0,
                        isCloned: !1,
                        load: !!x && x.get(oe.id),
                        hashFragment: oe.dataHash
                    }))
                }
                setCurSlideClasses(x) {
                    const oe = {
                        active: x.isActive,
                        center: x.isCentered,
                        cloned: x.isCloned,
                        animated: x.isAnimated,
                        "owl-animated-in": x.isDefAnimatedIn,
                        "owl-animated-out": x.isDefAnimatedOut
                    };
                    return this.settings.animateIn && (oe[this.settings.animateIn] = x.isCustomAnimatedIn),
                    this.settings.animateOut && (oe[this.settings.animateOut] = x.isCustomAnimatedOut),
                    oe
                }
                _op(x, oe, Me) {
                    const Ge = this.settings.rtl;
                    switch (oe) {
                    case "<":
                        return Ge ? x > Me : x < Me;
                    case ">":
                        return Ge ? x < Me : x > Me;
                    case ">=":
                        return Ge ? x <= Me : x >= Me;
                    case "<=":
                        return Ge ? x >= Me : x <= Me
                    }
                }
                _trigger(x, oe, Me, Ge, K) {
                    switch (x) {
                    case "initialized":
                        this._initializedCarousel$.next(x);
                        break;
                    case "change":
                        this._changeSettingsCarousel$.next(oe);
                        break;
                    case "changed":
                        this._changedSettingsCarousel$.next(oe);
                        break;
                    case "drag":
                        this._dragCarousel$.next(x);
                        break;
                    case "dragged":
                        this._draggedCarousel$.next(x);
                        break;
                    case "resize":
                        this._resizeCarousel$.next(x);
                        break;
                    case "resized":
                        this._resizedCarousel$.next(x);
                        break;
                    case "refresh":
                        this._refreshCarousel$.next(x);
                        break;
                    case "refreshed":
                        this._refreshedCarousel$.next(x);
                        break;
                    case "translate":
                        this._translateCarousel$.next(x);
                        break;
                    case "translated":
                        this._translatedCarousel$.next(x)
                    }
                }
                enter(x) {
                    [x].concat(this._states.tags[x] || []).forEach(oe=>{
                        void 0 === this._states.current[oe] && (this._states.current[oe] = 0),
                        this._states.current[oe]++
                    }
                    )
                }
                leave(x) {
                    [x].concat(this._states.tags[x] || []).forEach(oe=>{
                        (0 === this._states.current[oe] || this._states.current[oe]) && this._states.current[oe]--
                    }
                    )
                }
                register(x) {
                    x.type === Qe.State && (this._states.tags[x.name] = this._states.tags[x.name] ? this._states.tags[x.name].concat(x.tags) : x.tags,
                    this._states.tags[x.name] = this._states.tags[x.name].filter((oe,Me)=>this._states.tags[x.name].indexOf(oe) === Me))
                }
                _suppress(x) {
                    x.forEach(oe=>{
                        this._supress[oe] = !0
                    }
                    )
                }
                _release(x) {
                    x.forEach(oe=>{
                        delete this._supress[oe]
                    }
                    )
                }
                pointer(x) {
                    const oe = {
                        x: null,
                        y: null
                    };
                    return (x = (x = x.originalEvent || x || window.event).touches && x.touches.length ? x.touches[0] : x.changedTouches && x.changedTouches.length ? x.changedTouches[0] : x).pageX ? (oe.x = x.pageX,
                    oe.y = x.pageY) : (oe.x = x.clientX,
                    oe.y = x.clientY),
                    oe
                }
                _isNumeric(x) {
                    return !isNaN(parseFloat(x))
                }
                _isNumberOrBoolean(x) {
                    return this._isNumeric(x) || "boolean" == typeof x
                }
                _isNumberOrString(x) {
                    return this._isNumeric(x) || "string" == typeof x
                }
                _isStringOrBoolean(x) {
                    return "string" == typeof x || "boolean" == typeof x
                }
                difference(x, oe) {
                    return null === x || null === oe ? {
                        x: 0,
                        y: 0
                    } : {
                        x: x.x - oe.x,
                        y: x.y - oe.y
                    }
                }
            }
            return He.\u0275fac = function(x) {
                return new (x || He)(i.LFG(Ie))
            }
            ,
            He.\u0275prov = i.Yz7({
                token: He,
                factory: He.\u0275fac
            }),
            He
        }
        )()
          , $t = (()=>{
            class He {
                constructor(x) {
                    this.carouselService = x,
                    this._initialized = !1,
                    this._pages = [],
                    this._navData = {
                        disabled: !1,
                        prev: {
                            disabled: !1,
                            htmlText: ""
                        },
                        next: {
                            disabled: !1,
                            htmlText: ""
                        }
                    },
                    this._dotsData = {
                        disabled: !1,
                        dots: []
                    },
                    this.spyDataStreams()
                }
                ngOnDestroy() {
                    this.navSubscription.unsubscribe()
                }
                spyDataStreams() {
                    const x = this.carouselService.getInitializedState().pipe((0,
                    z.b)(K=>{
                        this.initialize(),
                        this._updateNavPages(),
                        this.draw(),
                        this.update(),
                        this.carouselService.sendChanges()
                    }
                    ))
                      , oe = this.carouselService.getChangedState().pipe((0,
                    te.h)(K=>"position" === K.property.name), (0,
                    z.b)(K=>{
                        this.update()
                    }
                    ))
                      , Me = this.carouselService.getRefreshedState().pipe((0,
                    z.b)(()=>{
                        this._updateNavPages(),
                        this.draw(),
                        this.update(),
                        this.carouselService.sendChanges()
                    }
                    ))
                      , Ge = (0,
                    ue.T)(x, oe, Me);
                    this.navSubscription = Ge.subscribe(()=>{}
                    )
                }
                initialize() {
                    this._navData.disabled = !0,
                    this._navData.prev.htmlText = this.carouselService.settings.navText[0],
                    this._navData.next.htmlText = this.carouselService.settings.navText[1],
                    this._dotsData.disabled = !0,
                    this.carouselService.navData = this._navData,
                    this.carouselService.dotsData = this._dotsData
                }
                _updateNavPages() {
                    let x, oe, Me;
                    const Ge = this.carouselService.clones().length / 2
                      , K = Ge + this.carouselService.items().length
                      , J = this.carouselService.maximum(!0)
                      , Y = []
                      , Te = this.carouselService.settings;
                    let nt = Te.center || Te.autoWidth || Te.dotsData ? 1 : Math.floor(Number(Te.dotsEach)) || Math.floor(Te.items);
                    if (nt = +nt,
                    "page" !== Te.slideBy && (Te.slideBy = Math.min(+Te.slideBy, Te.items)),
                    Te.dots || "page" === Te.slideBy)
                        for (x = Ge,
                        oe = 0,
                        Me = 0; x < K; x++) {
                            if (oe >= nt || 0 === oe) {
                                if (Y.push({
                                    start: Math.min(J, x - Ge),
                                    end: x - Ge + nt - 1
                                }),
                                Math.min(J, x - Ge) === J)
                                    break;
                                oe = 0,
                                ++Me
                            }
                            oe += this.carouselService.mergers(this.carouselService.relative(x))
                        }
                    this._pages = Y
                }
                draw() {
                    let x;
                    const oe = this.carouselService.settings
                      , Me = this.carouselService.items()
                      , Ge = Me.length <= oe.items;
                    if (this._navData.disabled = !oe.nav || Ge,
                    this._dotsData.disabled = !oe.dots || Ge,
                    oe.dots)
                        if (x = this._pages.length - this._dotsData.dots.length,
                        oe.dotsData && 0 !== x)
                            this._dotsData.dots = [],
                            Me.forEach(K=>{
                                this._dotsData.dots.push({
                                    active: !1,
                                    id: `dot-${K.id}`,
                                    innerContent: K.dotContent,
                                    showInnerContent: !0
                                })
                            }
                            );
                        else if (x > 0) {
                            const K = this._dotsData.dots.length > 0 ? this._dotsData.dots.length : 0;
                            for (let J = 0; J < x; J++)
                                this._dotsData.dots.push({
                                    active: !1,
                                    id: `dot-${J + K}`,
                                    innerContent: "",
                                    showInnerContent: !1
                                })
                        } else
                            x < 0 && this._dotsData.dots.splice(x, Math.abs(x));
                    this.carouselService.navData = this._navData,
                    this.carouselService.dotsData = this._dotsData
                }
                update() {
                    this._updateNavButtons(),
                    this._updateDots()
                }
                _updateNavButtons() {
                    const x = this.carouselService.settings
                      , oe = x.loop || x.rewind
                      , Me = this.carouselService.relative(this.carouselService.current());
                    x.nav && (this._navData.prev.disabled = !oe && Me <= this.carouselService.minimum(!0),
                    this._navData.next.disabled = !oe && Me >= this.carouselService.maximum(!0)),
                    this.carouselService.navData = this._navData
                }
                _updateDots() {
                    let x;
                    !this.carouselService.settings.dots || (this._dotsData.dots.forEach(oe=>{
                        !0 === oe.active && (oe.active = !1)
                    }
                    ),
                    x = this._current(),
                    this._dotsData.dots.length && (this._dotsData.dots[x].active = !0),
                    this.carouselService.dotsData = this._dotsData)
                }
                _current() {
                    const x = this.carouselService.relative(this.carouselService.current());
                    let oe;
                    const Me = this._pages.filter((Ge,K)=>Ge.start <= x && Ge.end >= x).pop();
                    return oe = this._pages.findIndex(Ge=>Ge.start === Me.start && Ge.end === Me.end),
                    oe
                }
                _getPosition(x) {
                    let oe, Me;
                    const Ge = this.carouselService.settings;
                    return "page" === Ge.slideBy ? (oe = this._current(),
                    Me = this._pages.length,
                    x ? ++oe : --oe,
                    oe = this._pages[(oe % Me + Me) % Me].start) : (oe = this.carouselService.relative(this.carouselService.current()),
                    Me = this.carouselService.items().length,
                    x ? oe += +Ge.slideBy : oe -= +Ge.slideBy),
                    oe
                }
                next(x) {
                    this.carouselService.to(this._getPosition(!0), x)
                }
                prev(x) {
                    this.carouselService.to(this._getPosition(!1), x)
                }
                to(x, oe, Me) {
                    let Ge;
                    !Me && this._pages.length ? (Ge = this._pages.length,
                    this.carouselService.to(this._pages[(x % Ge + Ge) % Ge].start, oe)) : this.carouselService.to(x, oe)
                }
                moveByDot(x) {
                    const oe = this._dotsData.dots.findIndex(Me=>x === Me.id);
                    this.to(oe, this.carouselService.settings.dotsSpeed)
                }
                toSlideById(x) {
                    const oe = this.carouselService.slidesData.findIndex(Me=>Me.id === x && !1 === Me.isCloned);
                    -1 === oe || oe === this.carouselService.current() || this.carouselService.to(this.carouselService.relative(oe), !1)
                }
            }
            return He.\u0275fac = function(x) {
                return new (x || He)(i.LFG(In))
            }
            ,
            He.\u0275prov = i.Yz7({
                token: He,
                factory: He.\u0275fac
            }),
            He
        }
        )();
        const gn = new i.OlP("WindowToken");
        class qn {
            get nativeWindow() {
                throw new Error("Not implemented.")
            }
        }
        const vt = [{
            provide: qn,
            useClass: (()=>{
                class He extends qn {
                    constructor() {
                        super()
                    }
                    get nativeWindow() {
                        return window
                    }
                }
                return He.\u0275fac = function(x) {
                    return new (x || He)
                }
                ,
                He.\u0275prov = i.Yz7({
                    token: He,
                    factory: He.\u0275fac
                }),
                He
            }
            )()
        }, {
            provide: gn,
            useFactory: function Xn(He, Lt) {
                return (0,
                l.NF)(Lt) ? He.nativeWindow : {
                    setTimeout: (oe,Me)=>{}
                    ,
                    clearTimeout: oe=>{}
                }
            },
            deps: [qn, i.Lbi]
        }]
          , Le = new i.OlP("DocumentToken");
        class Ee {
            get nativeDocument() {
                throw new Error("Not implemented.")
            }
        }
        const Pn = [{
            provide: Ee,
            useClass: (()=>{
                class He extends Ee {
                    constructor() {
                        super()
                    }
                    get nativeDocument() {
                        return document
                    }
                }
                return He.\u0275fac = function(x) {
                    return new (x || He)
                }
                ,
                He.\u0275prov = i.Yz7({
                    token: He,
                    factory: He.\u0275fac
                }),
                He
            }
            )()
        }, {
            provide: Le,
            useFactory: function Et(He, Lt) {
                return (0,
                l.NF)(Lt) ? He.nativeDocument : {
                    hidden: !1,
                    visibilityState: "visible"
                }
            },
            deps: [Ee, i.Lbi]
        }];
        let Vt = (()=>{
            class He {
                constructor(x, oe, Me, Ge) {
                    this.carouselService = x,
                    this.ngZone = Ge,
                    this._timeout = null,
                    this._paused = !1,
                    this._isAutoplayStopped = !1,
                    this.winRef = oe,
                    this.docRef = Me,
                    this.spyDataStreams()
                }
                get isAutoplayStopped() {
                    return this._isAutoplayStopped
                }
                set isAutoplayStopped(x) {
                    this._isAutoplayStopped = x
                }
                ngOnDestroy() {
                    this.autoplaySubscription.unsubscribe()
                }
                spyDataStreams() {
                    const x = this.carouselService.getInitializedState().pipe((0,
                    z.b)(()=>{
                        this.carouselService.settings.autoplay && this.play()
                    }
                    ))
                      , oe = this.carouselService.getChangedState().pipe((0,
                    z.b)(K=>{
                        this._handleChangeObservable(K)
                    }
                    ))
                      , Me = this.carouselService.getResizedState().pipe((0,
                    z.b)(()=>{
                        this.carouselService.settings.autoplay && !this._isAutoplayStopped ? this.play() : this.stop()
                    }
                    ))
                      , Ge = (0,
                    ue.T)(x, oe, Me);
                    this.autoplaySubscription = Ge.subscribe(()=>{}
                    )
                }
                play(x, oe) {
                    this._paused && (this._paused = !1,
                    this._setAutoPlayInterval(this.carouselService.settings.autoplayMouseleaveTimeout)),
                    !this.carouselService.is("rotating") && (this.carouselService.enter("rotating"),
                    this._setAutoPlayInterval())
                }
                _getNextTimeout(x, oe) {
                    return this._timeout && this.winRef.clearTimeout(this._timeout),
                    this._isArtificialAutoplayTimeout = !!x,
                    this.ngZone.runOutsideAngular(()=>this.winRef.setTimeout(()=>{
                        this.ngZone.run(()=>{
                            this._paused || this.carouselService.is("busy") || this.carouselService.is("interacting") || this.docRef.hidden || this.carouselService.next(oe || this.carouselService.settings.autoplaySpeed)
                        }
                        )
                    }
                    , x || this.carouselService.settings.autoplayTimeout))
                }
                _setAutoPlayInterval(x) {
                    this._timeout = this._getNextTimeout(x)
                }
                stop() {
                    !this.carouselService.is("rotating") || (this._paused = !0,
                    this.winRef.clearTimeout(this._timeout),
                    this.carouselService.leave("rotating"))
                }
                pause() {
                    !this.carouselService.is("rotating") || (this._paused = !0)
                }
                _handleChangeObservable(x) {
                    "settings" === x.property.name ? this.carouselService.settings.autoplay ? this.play() : this.stop() : "position" === x.property.name && this.carouselService.settings.autoplay && this._setAutoPlayInterval()
                }
                _playAfterTranslated() {
                    (0,
                    H.of)("translated").pipe((0,
                    le.w)(x=>this.carouselService.getTranslatedState()), (0,
                    W.P)(), (0,
                    te.h)(()=>this._isArtificialAutoplayTimeout), (0,
                    z.b)(()=>this._setAutoPlayInterval())).subscribe(()=>{}
                    )
                }
                startPausing() {
                    this.carouselService.settings.autoplayHoverPause && this.carouselService.is("rotating") && this.pause()
                }
                startPlayingMouseLeave() {
                    this.carouselService.settings.autoplayHoverPause && this.carouselService.is("rotating") && (this.play(),
                    this._playAfterTranslated())
                }
                startPlayingTouchEnd() {
                    this.carouselService.settings.autoplayHoverPause && this.carouselService.is("rotating") && (this.play(),
                    this._playAfterTranslated())
                }
            }
            return He.\u0275fac = function(x) {
                return new (x || He)(i.LFG(In),i.LFG(gn),i.LFG(Le),i.LFG(i.R0b))
            }
            ,
            He.\u0275prov = i.Yz7({
                token: He,
                factory: He.\u0275fac
            }),
            He
        }
        )()
          , $n = (()=>{
            class He {
                constructor(x) {
                    this.carouselService = x,
                    this.spyDataStreams()
                }
                ngOnDestroy() {
                    this.lazyLoadSubscription.unsubscribe()
                }
                spyDataStreams() {
                    const x = this.carouselService.getInitializedState().pipe((0,
                    z.b)(()=>{
                        const K = this.carouselService.settings && !this.carouselService.settings.lazyLoad;
                        this.carouselService.slidesData.forEach(J=>J.load = !!K)
                    }
                    ))
                      , oe = this.carouselService.getChangeState()
                      , Me = this.carouselService.getResizedState()
                      , Ge = (0,
                    ue.T)(x, oe, Me).pipe((0,
                    z.b)(K=>this._defineLazyLoadSlides(K)));
                    this.lazyLoadSubscription = Ge.subscribe(()=>{}
                    )
                }
                _defineLazyLoadSlides(x) {
                    if (this.carouselService.settings && this.carouselService.settings.lazyLoad && (x.property && "position" === x.property.name || "initialized" === x || "resized" === x)) {
                        const oe = this.carouselService.settings
                          , Me = this.carouselService.clones().length;
                        let Ge = oe.center && Math.ceil(oe.items / 2) || oe.items
                          , K = oe.center && -1 * Ge || 0
                          , J = (x.property && void 0 !== x.property.value ? x.property.value : this.carouselService.current()) + K;
                        for (oe.lazyLoadEager > 0 && (Ge += oe.lazyLoadEager,
                        oe.loop && (J -= oe.lazyLoadEager,
                        Ge++)); K++ < Ge; )
                            this._load(Me / 2 + this.carouselService.relative(J)),
                            Me && this.carouselService.clones(this.carouselService.relative(J)).forEach(Y=>this._load(Y)),
                            J++
                    }
                }
                _load(x) {
                    this.carouselService.slidesData[x].load || (this.carouselService.slidesData[x].load = !0)
                }
            }
            return He.\u0275fac = function(x) {
                return new (x || He)(i.LFG(In))
            }
            ,
            He.\u0275prov = i.Yz7({
                token: He,
                factory: He.\u0275fac
            }),
            He
        }
        )()
          , An = (()=>{
            class He {
                constructor(x) {
                    this.carouselService = x,
                    this.swapping = !0,
                    this.previous = void 0,
                    this.next = void 0,
                    this.spyDataStreams()
                }
                ngOnDestroy() {
                    this.animateSubscription.unsubscribe()
                }
                spyDataStreams() {
                    const x = this.carouselService.getChangeState().pipe((0,
                    z.b)(Te=>{
                        "position" === Te.property.name && (this.previous = this.carouselService.current(),
                        this.next = Te.property.value)
                    }
                    ))
                      , oe = this.carouselService.getDragState()
                      , Me = this.carouselService.getDraggedState()
                      , Ge = this.carouselService.getTranslatedState()
                      , K = (0,
                    ue.T)(oe, Me, Ge).pipe((0,
                    z.b)(Te=>this.swapping = "translated" === Te))
                      , J = this.carouselService.getTranslateState().pipe((0,
                    z.b)(Te=>{
                        this.swapping && (this.carouselService._options.animateOut || this.carouselService._options.animateIn) && this._swap()
                    }
                    ))
                      , Y = (0,
                    ue.T)(x, J, K).pipe();
                    this.animateSubscription = Y.subscribe(()=>{}
                    )
                }
                _swap() {
                    if (1 !== this.carouselService.settings.items)
                        return;
                    let x;
                    this.carouselService.speed(0);
                    const oe = this.carouselService.slidesData[this.previous]
                      , Me = this.carouselService.slidesData[this.next]
                      , Ge = this.carouselService.settings.animateIn
                      , K = this.carouselService.settings.animateOut;
                    this.carouselService.current() !== this.previous && (K && (x = +this.carouselService.coordinates(this.previous) - +this.carouselService.coordinates(this.next),
                    this.carouselService.slidesData.forEach(J=>{
                        J.id === oe.id && (J.left = `${x}px`,
                        J.isAnimated = !0,
                        J.isDefAnimatedOut = !0,
                        J.isCustomAnimatedOut = !0)
                    }
                    )),
                    Ge && this.carouselService.slidesData.forEach(J=>{
                        J.id === Me.id && (J.isAnimated = !0,
                        J.isDefAnimatedIn = !0,
                        J.isCustomAnimatedIn = !0)
                    }
                    ))
                }
                clear(x) {
                    this.carouselService.slidesData.forEach(oe=>{
                        oe.id === x && (oe.left = "",
                        oe.isAnimated = !1,
                        oe.isDefAnimatedOut = !1,
                        oe.isCustomAnimatedOut = !1,
                        oe.isDefAnimatedIn = !1,
                        oe.isCustomAnimatedIn = !1,
                        oe.classes = this.carouselService.setCurSlideClasses(oe))
                    }
                    ),
                    this.carouselService.onTransitionEnd()
                }
            }
            return He.\u0275fac = function(x) {
                return new (x || He)(i.LFG(In))
            }
            ,
            He.\u0275prov = i.Yz7({
                token: He,
                factory: He.\u0275fac
            }),
            He
        }
        )()
          , oi = (()=>{
            class He {
                constructor(x) {
                    this.carouselService = x,
                    this.spyDataStreams()
                }
                ngOnDestroy() {
                    this.autoHeightSubscription.unsubscribe()
                }
                spyDataStreams() {
                    const x = this.carouselService.getInitializedState().pipe((0,
                    z.b)(K=>{
                        this.carouselService.settings.autoHeight ? this.update() : this.carouselService.slidesData.forEach(J=>J.heightState = "full")
                    }
                    ))
                      , oe = this.carouselService.getChangedState().pipe((0,
                    z.b)(K=>{
                        this.carouselService.settings.autoHeight && "position" === K.property.name && this.update()
                    }
                    ))
                      , Me = this.carouselService.getRefreshedState().pipe((0,
                    z.b)(K=>{
                        this.carouselService.settings.autoHeight && this.update()
                    }
                    ))
                      , Ge = (0,
                    ue.T)(x, oe, Me);
                    this.autoHeightSubscription = Ge.subscribe(()=>{}
                    )
                }
                update() {
                    const x = this.carouselService.settings.items;
                    let oe = this.carouselService.current()
                      , Me = oe + x;
                    this.carouselService.settings.center && (oe = x % 2 == 1 ? oe - (x - 1) / 2 : oe - x / 2,
                    Me = x % 2 == 1 ? oe + x : oe + x + 1),
                    this.carouselService.slidesData.forEach((Ge,K)=>{
                        Ge.heightState = K >= oe && K < Me ? "full" : "nulled"
                    }
                    )
                }
            }
            return He.\u0275fac = function(x) {
                return new (x || He)(i.LFG(In))
            }
            ,
            He.\u0275prov = i.Yz7({
                token: He,
                factory: He.\u0275fac
            }),
            He
        }
        )()
          , un = (()=>{
            class He {
                constructor(x, oe, Me) {
                    this.carouselService = x,
                    this.route = oe,
                    this.router = Me,
                    this.spyDataStreams(),
                    this.route || (this.route = {
                        fragment: (0,
                        H.of)("no route").pipe((0,
                        fe.q)(1))
                    }),
                    this.router || (this.router = {
                        navigate: (Ge,K)=>{}
                    })
                }
                ngOnDestroy() {
                    this.hashSubscription.unsubscribe()
                }
                spyDataStreams() {
                    const x = this.carouselService.getInitializedState().pipe((0,
                    z.b)(()=>this.listenToRoute()))
                      , oe = this.carouselService.getChangedState().pipe((0,
                    z.b)(Ge=>{
                        if (this.carouselService.settings.URLhashListener && "position" === Ge.property.name) {
                            const K = this.carouselService.current()
                              , J = this.carouselService.slidesData[K].hashFragment;
                            if (!J || J === this.currentHashFragment)
                                return;
                            this.router.navigate(["./"], {
                                fragment: J,
                                relativeTo: this.route
                            })
                        }
                    }
                    ))
                      , Me = (0,
                    ue.T)(x, oe);
                    this.hashSubscription = Me.subscribe(()=>{}
                    )
                }
                rewind(x) {
                    const oe = this.carouselService.slidesData.findIndex(Me=>Me.hashFragment === x && !1 === Me.isCloned);
                    -1 === oe || oe === this.carouselService.current() || this.carouselService.to(this.carouselService.relative(oe), !1)
                }
                listenToRoute() {
                    this.route.fragment.pipe((0,
                    re.T)("URLHash" === this.carouselService.settings.startPosition ? 0 : 2)).subscribe(oe=>{
                        this.currentHashFragment = oe,
                        this.rewind(oe)
                    }
                    )
                }
            }
            return He.\u0275fac = function(x) {
                return new (x || He)(i.LFG(In),i.LFG(Ze.gz, 8),i.LFG(Ze.F0, 8))
            }
            ,
            He.\u0275prov = i.Yz7({
                token: He,
                factory: He.\u0275fac
            }),
            He
        }
        )()
          , jt = 0
          , yn = (()=>{
            class He {
                constructor(x) {
                    this.tplRef = x,
                    this.id = "owl-slide-" + jt++,
                    this._dataMerge = 1,
                    this.width = 0,
                    this.dotContent = "",
                    this.dataHash = ""
                }
                set dataMerge(x) {
                    this._dataMerge = this.isNumeric(x) ? x : 1
                }
                get dataMerge() {
                    return this._dataMerge
                }
                isNumeric(x) {
                    return !isNaN(parseFloat(x))
                }
            }
            return He.\u0275fac = function(x) {
                return new (x || He)(i.Y36(i.Rgc))
            }
            ,
            He.\u0275dir = i.lG2({
                type: He,
                selectors: [["ng-template", "carouselSlide", ""]],
                inputs: {
                    id: "id",
                    dataMerge: "dataMerge",
                    width: "width",
                    dotContent: "dotContent",
                    dataHash: "dataHash"
                }
            }),
            He
        }
        )()
          , ai = (()=>{
            class He {
                constructor(x) {
                    this.eventManager = x,
                    this.resizeSubject = new q.x,
                    this.eventManager.addGlobalEventListener("window", "resize", this.onResize.bind(this)),
                    this.eventManager.addGlobalEventListener("window", "onload", this.onLoaded.bind(this))
                }
                get onResize$() {
                    return this.resizeSubject.asObservable()
                }
                onResize(x) {
                    this.resizeSubject.next(x.target)
                }
                onLoaded(x) {
                    this.windowWidth = x.target
                }
            }
            return He.\u0275fac = function(x) {
                return new (x || He)(i.LFG(_t.Qz))
            }
            ,
            He.\u0275prov = i.Yz7({
                token: He,
                factory: He.\u0275fac
            }),
            He
        }
        )()
          , Zt = (()=>{
            class He {
                constructor(x, oe, Me, Ge, K) {
                    this.zone = x,
                    this.el = oe,
                    this.renderer = Me,
                    this.carouselService = Ge,
                    this.animateService = K,
                    this._drag = {
                        time: null,
                        target: null,
                        pointer: null,
                        stage: {
                            start: null,
                            current: null
                        },
                        direction: null,
                        active: !1,
                        moving: !1
                    },
                    this._oneDragMove$ = new q.x,
                    this.preparePublicSlide = J=>{
                        const Y = {
                            ...J
                        };
                        return delete Y.tplRef,
                        Y
                    }
                    ,
                    this.bindOneMouseTouchMove = J=>{
                        this._oneMouseTouchMove(J)
                    }
                    ,
                    this.bindOnDragMove = J=>{
                        this._onDragMove(J)
                    }
                    ,
                    this.bindOnDragEnd = J=>{
                        this._onDragEnd(J)
                    }
                    ,
                    this._oneClickHandler = ()=>{
                        this.listenerOneClick = this.renderer.listen(this._drag.target, "click", ()=>!1),
                        this.listenerOneClick()
                    }
                }
                onMouseDown(x) {
                    this.owlDraggable.isMouseDragable && this._onDragStart(x)
                }
                onTouchStart(x) {
                    if (x.targetTouches.length >= 2)
                        return !1;
                    this.owlDraggable.isTouchDragable && this._onDragStart(x)
                }
                onTouchCancel(x) {
                    this._onDragEnd(x)
                }
                onDragStart() {
                    if (this.owlDraggable.isMouseDragable)
                        return !1
                }
                onSelectStart() {
                    if (this.owlDraggable.isMouseDragable)
                        return !1
                }
                ngOnInit() {
                    this._oneMoveSubsription = this._oneDragMove$.pipe((0,
                    W.P)()).subscribe(()=>{
                        this._sendChanges()
                    }
                    )
                }
                ngOnDestroy() {
                    this._oneMoveSubsription.unsubscribe()
                }
                _onDragStart(x) {
                    let oe = null;
                    3 !== x.which && (oe = this._prepareDragging(x),
                    this._drag.time = (new Date).getTime(),
                    this._drag.target = x.target,
                    this._drag.stage.start = oe,
                    this._drag.stage.current = oe,
                    this._drag.pointer = this._pointer(x),
                    this.listenerMouseUp = this.renderer.listen(document, "mouseup", this.bindOnDragEnd),
                    this.listenerTouchEnd = this.renderer.listen(document, "touchend", this.bindOnDragEnd),
                    this.zone.runOutsideAngular(()=>{
                        this.listenerOneMouseMove = this.renderer.listen(document, "mousemove", this.bindOneMouseTouchMove),
                        this.listenerOneTouchMove = this.renderer.listen(document, "touchmove", this.bindOneMouseTouchMove)
                    }
                    ))
                }
                _oneMouseTouchMove(x) {
                    const oe = this._difference(this._drag.pointer, this._pointer(x));
                    this.listenerATag && this.listenerATag(),
                    !(Math.abs(oe.x) < 3 && Math.abs(oe.y) < 3 && this._is("valid")) && (Math.abs(oe.x) < 3 && Math.abs(oe.x) < Math.abs(oe.y) && this._is("valid") || (this.listenerOneMouseMove(),
                    this.listenerOneTouchMove(),
                    this._drag.moving = !0,
                    this.blockClickAnchorInDragging(x),
                    this.listenerMouseMove = this.renderer.listen(document, "mousemove", this.bindOnDragMove),
                    this.listenerTouchMove = this.renderer.listen(document, "touchmove", this.bindOnDragMove),
                    x.preventDefault(),
                    this._enterDragging(),
                    this._oneDragMove$.next(x)))
                }
                blockClickAnchorInDragging(x) {
                    let oe = x.target;
                    for (; oe && !(oe instanceof HTMLAnchorElement); )
                        oe = oe.parentElement;
                    oe instanceof HTMLAnchorElement && (this.listenerATag = this.renderer.listen(oe, "click", ()=>!1))
                }
                _onDragMove(x) {
                    let oe;
                    const Me = this.carouselService.defineNewCoordsDrag(x, this._drag);
                    !1 !== Me && (oe = Me,
                    x.preventDefault(),
                    this._drag.stage.current = oe,
                    this._animate(oe.x - this._drag.stage.start.x))
                }
                _animate(x) {
                    this.renderer.setStyle(this.el.nativeElement.children[0], "transform", `translate3d(${x}px,0px,0px`),
                    this.renderer.setStyle(this.el.nativeElement.children[0], "transition", "0s")
                }
                _onDragEnd(x) {
                    this.carouselService.owlDOMData.isGrab = !1,
                    this.listenerOneMouseMove(),
                    this.listenerOneTouchMove(),
                    this._drag.moving && (this.renderer.setStyle(this.el.nativeElement.children[0], "transform", ""),
                    this.renderer.setStyle(this.el.nativeElement.children[0], "transition", this.carouselService.speed(+this.carouselService.settings.dragEndSpeed || this.carouselService.settings.smartSpeed) / 1e3 + "s"),
                    this._finishDragging(x),
                    this.listenerMouseMove(),
                    this.listenerTouchMove()),
                    this._drag = {
                        time: null,
                        target: null,
                        pointer: null,
                        stage: {
                            start: null,
                            current: null
                        },
                        direction: null,
                        active: !1,
                        moving: !1
                    },
                    this.listenerMouseUp(),
                    this.listenerTouchEnd()
                }
                _prepareDragging(x) {
                    return this.carouselService.prepareDragging(x)
                }
                _finishDragging(x) {
                    this.carouselService.finishDragging(x, this._drag, this._oneClickHandler)
                }
                _pointer(x) {
                    return this.carouselService.pointer(x)
                }
                _difference(x, oe) {
                    return this.carouselService.difference(x, oe)
                }
                _is(x) {
                    return this.carouselService.is(x)
                }
                _enter(x) {
                    this.carouselService.enter(x)
                }
                _sendChanges() {
                    this.carouselService.sendChanges()
                }
                onTransitionEnd() {
                    this.carouselService.onTransitionEnd()
                }
                _enterDragging() {
                    this.carouselService.enterDragging()
                }
                clear(x) {
                    this.animateService.clear(x)
                }
            }
            return He.\u0275fac = function(x) {
                return new (x || He)(i.Y36(i.R0b),i.Y36(i.SBq),i.Y36(i.Qsj),i.Y36(In),i.Y36(An))
            }
            ,
            He.\u0275cmp = i.Xpm({
                type: He,
                selectors: [["owl-stage"]],
                hostBindings: function(x, oe) {
                    1 & x && i.NdJ("mousedown", function(Ge) {
                        return oe.onMouseDown(Ge)
                    })("touchstart", function(Ge) {
                        return oe.onTouchStart(Ge)
                    })("touchcancel", function(Ge) {
                        return oe.onTouchCancel(Ge)
                    })("dragstart", function() {
                        return oe.onDragStart()
                    })("selectstart", function() {
                        return oe.onSelectStart()
                    })
                },
                inputs: {
                    owlDraggable: "owlDraggable",
                    stageData: "stageData",
                    slidesData: "slidesData"
                },
                decls: 3,
                vars: 8,
                consts: [[1, "owl-stage", 3, "ngStyle", "transitionend"], [4, "ngFor", "ngForOf"], [1, "owl-item", 3, "ngClass", "ngStyle", "animationend"], [4, "ngIf"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"]],
                template: function(x, oe) {
                    1 & x && (i.TgZ(0, "div")(1, "div", 0),
                    i.NdJ("transitionend", function() {
                        return oe.onTransitionEnd()
                    }),
                    i.YNc(2, be, 3, 9, "ng-container", 1),
                    i.qZA()()),
                    2 & x && (i.xp6(1),
                    i.Q6J("ngStyle", i.qbA(2, pe, oe.stageData.width + "px", oe.stageData.transform, oe.stageData.transition, oe.stageData.paddingL ? oe.stageData.paddingL + "px" : "", oe.stageData.paddingR ? oe.stageData.paddingR + "px" : "")),
                    i.xp6(1),
                    i.Q6J("ngForOf", oe.slidesData))
                },
                dependencies: [l.mk, l.sg, l.O5, l.tP, l.PC],
                encapsulation: 2,
                data: {
                    animation: [(0,
                    rt.X$)("autoHeight", [(0,
                    rt.SB)("nulled", (0,
                    rt.oB)({
                        height: 0
                    })), (0,
                    rt.SB)("full", (0,
                    rt.oB)({
                        height: "*"
                    })), (0,
                    rt.eR)("full => nulled", [(0,
                    rt.jt)("700ms 350ms")]), (0,
                    rt.eR)("nulled => full", [(0,
                    rt.jt)(350)])])]
                }
            }),
            He
        }
        )()
          , ei = (()=>{
            class He {
                constructor(x, oe, Me, Ge, K, J, Y, Te, nt, Rt, rn, fn) {
                    this.el = x,
                    this.resizeService = oe,
                    this.carouselService = Me,
                    this.navigationService = Ge,
                    this.autoplayService = K,
                    this.lazyLoadService = J,
                    this.animateService = Y,
                    this.autoHeightService = Te,
                    this.hashService = nt,
                    this.logger = Rt,
                    this.changeDetectorRef = rn,
                    this.translated = new i.vpe,
                    this.dragging = new i.vpe,
                    this.change = new i.vpe,
                    this.changed = new i.vpe,
                    this.initialized = new i.vpe,
                    this.slidesData = [],
                    this.carouselLoaded = !1,
                    this.docRef = fn
                }
                onVisibilityChange(x) {
                    if (this.carouselService.settings.autoplay)
                        switch (this.docRef.visibilityState) {
                        case "visible":
                            !this.autoplayService.isAutoplayStopped && this.autoplayService.play();
                            break;
                        case "hidden":
                            this.autoplayService.pause()
                        }
                }
                ngOnInit() {
                    this.spyDataStreams(),
                    this.carouselWindowWidth = this.el.nativeElement.querySelector(".owl-carousel").clientWidth
                }
                ngOnChanges() {
                    this.prevOptions !== this.options && (this.prevOptions && this.slides?.toArray().length ? (this.carouselService.setup(this.carouselWindowWidth, this.slides.toArray(), this.options),
                    this.carouselService.initialize(this.slides.toArray())) : this.prevOptions && !this.slides?.toArray().length ? (this.carouselLoaded = !1,
                    this.logger.log("There are no slides to show. So the carousel won't be re-rendered")) : this.carouselLoaded = !1,
                    this.prevOptions = this.options)
                }
                ngAfterContentInit() {
                    this.slides.toArray().length ? (this.carouselService.setup(this.carouselWindowWidth, this.slides.toArray(), this.options),
                    this.carouselService.initialize(this.slides.toArray()),
                    this._winResizeWatcher()) : this.logger.log("There are no slides to show. So the carousel won't be rendered"),
                    this._slidesChangesSubscription = this.slides.changes.pipe((0,
                    z.b)(x=>{
                        x.toArray().length ? (this.carouselService.setup(this.carouselWindowWidth, x.toArray(), this.options),
                        this.carouselService.initialize(x.toArray())) : (this.carouselLoaded = !1,
                        this.logger.log("There are no slides to show. So the carousel won't be re-rendered"))
                    }
                    )).subscribe(()=>{}
                    )
                }
                ngOnDestroy() {
                    this.resizeSubscription && this.resizeSubscription.unsubscribe(),
                    this._slidesChangesSubscription && this._slidesChangesSubscription.unsubscribe(),
                    this._allObservSubscription && this._allObservSubscription.unsubscribe()
                }
                spyDataStreams() {
                    this._viewCurSettings$ = this.carouselService.getViewCurSettings().pipe((0,
                    z.b)(x=>{
                        this.owlDOMData = x.owlDOMData,
                        this.stageData = x.stageData,
                        this.slidesData = x.slidesData,
                        this.carouselLoaded || (this.carouselLoaded = !0),
                        this.navData = x.navData,
                        this.dotsData = x.dotsData,
                        this.changeDetectorRef.markForCheck()
                    }
                    )),
                    this._initializedCarousel$ = this.carouselService.getInitializedState().pipe((0,
                    z.b)(()=>{
                        this.gatherTranslatedData(),
                        this.initialized.emit(this.slidesOutputData)
                    }
                    )),
                    this._translatedCarousel$ = this.carouselService.getTranslatedState().pipe((0,
                    z.b)(()=>{
                        this.gatherTranslatedData(),
                        this.translated.emit(this.slidesOutputData)
                    }
                    )),
                    this._changeCarousel$ = this.carouselService.getChangeState().pipe((0,
                    z.b)(()=>{
                        this.gatherTranslatedData(),
                        this.change.emit(this.slidesOutputData)
                    }
                    )),
                    this._changedCarousel$ = this.carouselService.getChangeState().pipe((0,
                    le.w)(x=>{
                        const oe = (0,
                        H.of)(x).pipe((0,
                        te.h)(()=>"position" === x.property.name), (0,
                        le.w)(()=>(0,
                        U.D)(this.slidesData)), (0,
                        re.T)(x.property.value), (0,
                        fe.q)(this.carouselService.settings.items), (0,
                        Ke.U)(Me=>{
                            const Ge = this.carouselService.clonedIdPrefix
                              , K = Me.id.indexOf(Ge) >= 0 ? Me.id.slice(Ge.length) : Me.id;
                            return {
                                ...Me,
                                id: K,
                                isActive: !0
                            }
                        }
                        ), function Fe() {
                            return (0,
                            Be.e)((He,Lt)=>{
                                (function ot(He, Lt) {
                                    return (0,
                                    Be.e)((0,
                                    Ne.U)(He, Lt, arguments.length >= 2, !1, !0))
                                }
                                )($e, [])(He).subscribe(Lt)
                            }
                            )
                        }(), (0,
                        Ke.U)(Me=>({
                            slides: Me,
                            startPosition: this.carouselService.relative(x.property.value)
                        })));
                        return (0,
                        ue.T)(oe)
                    }
                    ), (0,
                    z.b)(x=>{
                        this.gatherTranslatedData(),
                        this.changed.emit(x.slides.length ? x : this.slidesOutputData)
                    }
                    )),
                    this._draggingCarousel$ = this.carouselService.getDragState().pipe((0,
                    z.b)(()=>{
                        this.gatherTranslatedData(),
                        this.dragging.emit({
                            dragging: !0,
                            data: this.slidesOutputData
                        })
                    }
                    ), (0,
                    le.w)(()=>this.carouselService.getDraggedState().pipe((0,
                    Ke.U)(()=>!!this.carouselService.is("animating")))), (0,
                    le.w)(x=>x ? this.carouselService.getTranslatedState().pipe((0,
                    W.P)()) : (0,
                    H.of)("not animating")), (0,
                    z.b)(()=>{
                        this.dragging.emit({
                            dragging: !1,
                            data: this.slidesOutputData
                        })
                    }
                    )),
                    this._carouselMerge$ = (0,
                    ue.T)(this._viewCurSettings$, this._translatedCarousel$, this._draggingCarousel$, this._changeCarousel$, this._changedCarousel$, this._initializedCarousel$),
                    this._allObservSubscription = this._carouselMerge$.subscribe(()=>{}
                    )
                }
                _winResizeWatcher() {
                    Object.keys(this.carouselService._options.responsive).length && (this.resizeSubscription = this.resizeService.onResize$.pipe((0,
                    te.h)(()=>this.carouselWindowWidth !== this.el.nativeElement.querySelector(".owl-carousel").clientWidth), function Oe(He, Lt=et.z) {
                        const x = (0,
                        Ce.H)(He, Lt);
                        return ut(()=>x)
                    }(this.carouselService.settings.responsiveRefreshRate)).subscribe(()=>{
                        this.carouselService.onResize(this.el.nativeElement.querySelector(".owl-carousel").clientWidth),
                        this.carouselWindowWidth = this.el.nativeElement.querySelector(".owl-carousel").clientWidth
                    }
                    ))
                }
                onTransitionEnd() {
                    this.carouselService.onTransitionEnd()
                }
                next() {
                    !this.carouselLoaded || this.navigationService.next(this.carouselService.settings.navSpeed)
                }
                prev() {
                    !this.carouselLoaded || this.navigationService.prev(this.carouselService.settings.navSpeed)
                }
                moveByDot(x) {
                    !this.carouselLoaded || this.navigationService.moveByDot(x)
                }
                to(x) {
                    !this.carouselLoaded || this.navigationService.toSlideById(x)
                }
                gatherTranslatedData() {
                    let x;
                    const oe = this.carouselService.clonedIdPrefix
                      , Me = this.slidesData.filter(Ge=>!0 === Ge.isActive).map(Ge=>({
                        id: Ge.id.indexOf(oe) >= 0 ? Ge.id.slice(oe.length) : Ge.id,
                        width: Ge.width,
                        marginL: Ge.marginL,
                        marginR: Ge.marginR,
                        center: Ge.isCentered
                    }));
                    x = this.carouselService.relative(this.carouselService.current()),
                    this.slidesOutputData = {
                        startPosition: x,
                        slides: Me
                    }
                }
                startPausing() {
                    this.autoplayService.startPausing()
                }
                startPlayML() {
                    this.autoplayService.startPlayingMouseLeave()
                }
                startPlayTE() {
                    this.autoplayService.startPlayingTouchEnd()
                }
                stopAutoplay() {
                    this.autoplayService.isAutoplayStopped = !0,
                    this.autoplayService.stop()
                }
                startAutoplay() {
                    this.autoplayService.isAutoplayStopped = !1,
                    this.autoplayService.play()
                }
            }
            return He.\u0275fac = function(x) {
                return new (x || He)(i.Y36(i.SBq),i.Y36(ai),i.Y36(In),i.Y36($t),i.Y36(Vt),i.Y36($n),i.Y36(An),i.Y36(oi),i.Y36(un),i.Y36(Ie),i.Y36(i.sBO),i.Y36(Le))
            }
            ,
            He.\u0275cmp = i.Xpm({
                type: He,
                selectors: [["owl-carousel-o"]],
                contentQueries: function(x, oe, Me) {
                    if (1 & x && i.Suo(Me, yn, 4),
                    2 & x) {
                        let Ge;
                        i.iGM(Ge = i.CRH()) && (oe.slides = Ge)
                    }
                },
                hostBindings: function(x, oe) {
                    1 & x && i.NdJ("visibilitychange", function(Ge) {
                        return oe.onVisibilityChange(Ge)
                    }, !1, i.evT)
                },
                inputs: {
                    options: "options"
                },
                outputs: {
                    translated: "translated",
                    dragging: "dragging",
                    change: "change",
                    changed: "changed",
                    initialized: "initialized"
                },
                features: [i._Bn([$t, Vt, In, $n, An, oi, un]), i.TTD],
                decls: 4,
                vars: 9,
                consts: [[1, "owl-carousel", "owl-theme", 3, "ngClass", "mouseover", "mouseleave", "touchstart", "touchend"], ["owlCarousel", ""], ["class", "owl-stage-outer", 4, "ngIf"], [4, "ngIf"], [1, "owl-stage-outer"], [3, "owlDraggable", "stageData", "slidesData"], [1, "owl-nav", 3, "ngClass"], [1, "owl-prev", 3, "ngClass", "innerHTML", "click"], [1, "owl-next", 3, "ngClass", "innerHTML", "click"], [1, "owl-dots", 3, "ngClass"], ["class", "owl-dot", 3, "ngClass", "click", 4, "ngFor", "ngForOf"], [1, "owl-dot", 3, "ngClass", "click"], [3, "innerHTML"]],
                template: function(x, oe) {
                    1 & x && (i.TgZ(0, "div", 0, 1),
                    i.NdJ("mouseover", function() {
                        return oe.startPausing()
                    })("mouseleave", function() {
                        return oe.startPlayML()
                    })("touchstart", function() {
                        return oe.startPausing()
                    })("touchend", function() {
                        return oe.startPlayTE()
                    }),
                    i.YNc(2, Mt, 2, 6, "div", 2),
                    i.YNc(3, Kt, 6, 15, "ng-container", 3),
                    i.qZA()),
                    2 & x && (i.Q6J("ngClass", i.qbA(3, k, null == oe.owlDOMData ? null : oe.owlDOMData.rtl, null == oe.owlDOMData ? null : oe.owlDOMData.isLoaded, null == oe.owlDOMData ? null : oe.owlDOMData.isResponsive, null == oe.owlDOMData ? null : oe.owlDOMData.isMouseDragable, null == oe.owlDOMData ? null : oe.owlDOMData.isGrab)),
                    i.xp6(2),
                    i.Q6J("ngIf", oe.carouselLoaded),
                    i.xp6(1),
                    i.Q6J("ngIf", oe.slides.toArray().length))
                },
                dependencies: [l.mk, l.sg, l.O5, Zt],
                styles: [".owl-theme[_ngcontent-%COMP%]{display:block}"],
                changeDetection: 0
            }),
            He
        }
        )()
          , Ji = (()=>{
            class He {
            }
            return He.\u0275fac = function(x) {
                return new (x || He)
            }
            ,
            He.\u0275mod = i.oAB({
                type: He
            }),
            He.\u0275inj = i.cJS({
                providers: [vt, ai, Pn, Ie],
                imports: [l.ez]
            }),
            He
        }
        )()
    }
    ,
    4356: (Ot,je,D)=>{
        D.d(je, {
            $_: ()=>Fe,
            F0: ()=>Ne,
            b4: ()=>z,
            ez: ()=>Ke,
            h4: ()=>$e,
            iZ: ()=>fe,
            jx: ()=>et,
            m8: ()=>st,
            ws: ()=>te
        });
        var i = D(2560)
          , l = D(253)
          , q = D(8549)
          , ue = D(4666);
        const H = ["*"];
        let U = (()=>{
            class Q {
            }
            return Q.STARTS_WITH = "startsWith",
            Q.CONTAINS = "contains",
            Q.NOT_CONTAINS = "notContains",
            Q.ENDS_WITH = "endsWith",
            Q.EQUALS = "equals",
            Q.NOT_EQUALS = "notEquals",
            Q.IN = "in",
            Q.LESS_THAN = "lt",
            Q.LESS_THAN_OR_EQUAL_TO = "lte",
            Q.GREATER_THAN = "gt",
            Q.GREATER_THAN_OR_EQUAL_TO = "gte",
            Q.BETWEEN = "between",
            Q.IS = "is",
            Q.IS_NOT = "isNot",
            Q.BEFORE = "before",
            Q.AFTER = "after",
            Q.DATE_IS = "dateIs",
            Q.DATE_IS_NOT = "dateIsNot",
            Q.DATE_BEFORE = "dateBefore",
            Q.DATE_AFTER = "dateAfter",
            Q
        }
        )()
          , z = (()=>{
            class Q {
                constructor() {
                    this.ripple = !1,
                    this.filterMatchModeOptions = {
                        text: [U.STARTS_WITH, U.CONTAINS, U.NOT_CONTAINS, U.ENDS_WITH, U.EQUALS, U.NOT_EQUALS],
                        numeric: [U.EQUALS, U.NOT_EQUALS, U.LESS_THAN, U.LESS_THAN_OR_EQUAL_TO, U.GREATER_THAN, U.GREATER_THAN_OR_EQUAL_TO],
                        date: [U.DATE_IS, U.DATE_IS_NOT, U.DATE_BEFORE, U.DATE_AFTER]
                    },
                    this.translation = {
                        startsWith: "Starts with",
                        contains: "Contains",
                        notContains: "Not contains",
                        endsWith: "Ends with",
                        equals: "Equals",
                        notEquals: "Not equals",
                        noFilter: "No Filter",
                        lt: "Less than",
                        lte: "Less than or equal to",
                        gt: "Greater than",
                        gte: "Greater than or equal to",
                        is: "Is",
                        isNot: "Is not",
                        before: "Before",
                        after: "After",
                        dateIs: "Date is",
                        dateIsNot: "Date is not",
                        dateBefore: "Date is before",
                        dateAfter: "Date is after",
                        clear: "Clear",
                        apply: "Apply",
                        matchAll: "Match All",
                        matchAny: "Match Any",
                        addRule: "Add Rule",
                        removeRule: "Remove Rule",
                        accept: "Yes",
                        reject: "No",
                        choose: "Choose",
                        upload: "Upload",
                        cancel: "Cancel",
                        dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                        dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                        dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
                        monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                        monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                        dateFormat: "mm/dd/yy",
                        firstDayOfWeek: 0,
                        today: "Today",
                        weekHeader: "Wk",
                        weak: "Weak",
                        medium: "Medium",
                        strong: "Strong",
                        passwordPrompt: "Enter a password",
                        emptyMessage: "No results found",
                        emptyFilterMessage: "No results found"
                    },
                    this.zIndex = {
                        modal: 1100,
                        overlay: 1e3,
                        menu: 1e3,
                        tooltip: 1100
                    },
                    this.translationSource = new l.x,
                    this.translationObserver = this.translationSource.asObservable()
                }
                getTranslation(ye) {
                    return this.translation[ye]
                }
                setTranslation(ye) {
                    this.translation = {
                        ...this.translation,
                        ...ye
                    },
                    this.translationSource.next(this.translation)
                }
            }
            return Q.\u0275fac = function(ye) {
                return new (ye || Q)
            }
            ,
            Q.\u0275prov = i.Yz7({
                token: Q,
                factory: Q.\u0275fac,
                providedIn: "root"
            }),
            Q
        }
        )()
          , te = (()=>{
            class Q {
            }
            return Q.STARTS_WITH = "startsWith",
            Q.CONTAINS = "contains",
            Q.NOT_CONTAINS = "notContains",
            Q.ENDS_WITH = "endsWith",
            Q.EQUALS = "equals",
            Q.NOT_EQUALS = "notEquals",
            Q.NO_FILTER = "noFilter",
            Q.LT = "lt",
            Q.LTE = "lte",
            Q.GT = "gt",
            Q.GTE = "gte",
            Q.IS = "is",
            Q.IS_NOT = "isNot",
            Q.BEFORE = "before",
            Q.AFTER = "after",
            Q.CLEAR = "clear",
            Q.APPLY = "apply",
            Q.MATCH_ALL = "matchAll",
            Q.MATCH_ANY = "matchAny",
            Q.ADD_RULE = "addRule",
            Q.REMOVE_RULE = "removeRule",
            Q.ACCEPT = "accept",
            Q.REJECT = "reject",
            Q.CHOOSE = "choose",
            Q.UPLOAD = "upload",
            Q.CANCEL = "cancel",
            Q.DAY_NAMES = "dayNames",
            Q.DAY_NAMES_SHORT = "dayNamesShort",
            Q.DAY_NAMES_MIN = "dayNamesMin",
            Q.MONTH_NAMES = "monthNames",
            Q.MONTH_NAMES_SHORT = "monthNamesShort",
            Q.FIRST_DAY_OF_WEEK = "firstDayOfWeek",
            Q.TODAY = "today",
            Q.WEEK_HEADER = "weekHeader",
            Q.WEAK = "weak",
            Q.MEDIUM = "medium",
            Q.STRONG = "strong",
            Q.PASSWORD_PROMPT = "passwordPrompt",
            Q.EMPTY_MESSAGE = "emptyMessage",
            Q.EMPTY_FILTER_MESSAGE = "emptyFilterMessage",
            Q
        }
        )()
          , fe = (()=>{
            class Q {
                constructor() {
                    this.filters = {
                        startsWith: (ye,Re,ut)=>{
                            if (null == Re || "" === Re.trim())
                                return !0;
                            if (null == ye)
                                return !1;
                            let Ce = q.gb.removeAccents(Re.toString()).toLocaleLowerCase(ut);
                            return q.gb.removeAccents(ye.toString()).toLocaleLowerCase(ut).slice(0, Ce.length) === Ce
                        }
                        ,
                        contains: (ye,Re,ut)=>{
                            if (null == Re || "string" == typeof Re && "" === Re.trim())
                                return !0;
                            if (null == ye)
                                return !1;
                            let Ce = q.gb.removeAccents(Re.toString()).toLocaleLowerCase(ut);
                            return -1 !== q.gb.removeAccents(ye.toString()).toLocaleLowerCase(ut).indexOf(Ce)
                        }
                        ,
                        notContains: (ye,Re,ut)=>{
                            if (null == Re || "string" == typeof Re && "" === Re.trim())
                                return !0;
                            if (null == ye)
                                return !1;
                            let Ce = q.gb.removeAccents(Re.toString()).toLocaleLowerCase(ut);
                            return -1 === q.gb.removeAccents(ye.toString()).toLocaleLowerCase(ut).indexOf(Ce)
                        }
                        ,
                        endsWith: (ye,Re,ut)=>{
                            if (null == Re || "" === Re.trim())
                                return !0;
                            if (null == ye)
                                return !1;
                            let Ce = q.gb.removeAccents(Re.toString()).toLocaleLowerCase(ut)
                              , Oe = q.gb.removeAccents(ye.toString()).toLocaleLowerCase(ut);
                            return -1 !== Oe.indexOf(Ce, Oe.length - Ce.length)
                        }
                        ,
                        equals: (ye,Re,ut)=>null == Re || "string" == typeof Re && "" === Re.trim() || null != ye && (ye.getTime && Re.getTime ? ye.getTime() === Re.getTime() : q.gb.removeAccents(ye.toString()).toLocaleLowerCase(ut) == q.gb.removeAccents(Re.toString()).toLocaleLowerCase(ut)),
                        notEquals: (ye,Re,ut)=>!(null == Re || "string" == typeof Re && "" === Re.trim() || null != ye && (ye.getTime && Re.getTime ? ye.getTime() === Re.getTime() : q.gb.removeAccents(ye.toString()).toLocaleLowerCase(ut) == q.gb.removeAccents(Re.toString()).toLocaleLowerCase(ut))),
                        in: (ye,Re)=>{
                            if (null == Re || 0 === Re.length)
                                return !0;
                            for (let ut = 0; ut < Re.length; ut++)
                                if (q.gb.equals(ye, Re[ut]))
                                    return !0;
                            return !1
                        }
                        ,
                        between: (ye,Re)=>null == Re || null == Re[0] || null == Re[1] || null != ye && (ye.getTime ? Re[0].getTime() <= ye.getTime() && ye.getTime() <= Re[1].getTime() : Re[0] <= ye && ye <= Re[1]),
                        lt: (ye,Re,ut)=>null == Re || null != ye && (ye.getTime && Re.getTime ? ye.getTime() < Re.getTime() : ye < Re),
                        lte: (ye,Re,ut)=>null == Re || null != ye && (ye.getTime && Re.getTime ? ye.getTime() <= Re.getTime() : ye <= Re),
                        gt: (ye,Re,ut)=>null == Re || null != ye && (ye.getTime && Re.getTime ? ye.getTime() > Re.getTime() : ye > Re),
                        gte: (ye,Re,ut)=>null == Re || null != ye && (ye.getTime && Re.getTime ? ye.getTime() >= Re.getTime() : ye >= Re),
                        is: (ye,Re,ut)=>this.filters.equals(ye, Re, ut),
                        isNot: (ye,Re,ut)=>this.filters.notEquals(ye, Re, ut),
                        before: (ye,Re,ut)=>this.filters.lt(ye, Re, ut),
                        after: (ye,Re,ut)=>this.filters.gt(ye, Re, ut),
                        dateIs: (ye,Re)=>null == Re || null != ye && ye.toDateString() === Re.toDateString(),
                        dateIsNot: (ye,Re)=>null == Re || null != ye && ye.toDateString() !== Re.toDateString(),
                        dateBefore: (ye,Re)=>null == Re || null != ye && ye.getTime() < Re.getTime(),
                        dateAfter: (ye,Re)=>null == Re || null != ye && ye.getTime() > Re.getTime()
                    }
                }
                filter(ye, Re, ut, Ce, Oe) {
                    let Ze = [];
                    if (ye)
                        for (let _t of ye)
                            for (let rt of Re) {
                                let It = q.gb.resolveFieldData(_t, rt);
                                if (this.filters[Ce](It, ut, Oe)) {
                                    Ze.push(_t);
                                    break
                                }
                            }
                    return Ze
                }
                register(ye, Re) {
                    this.filters[ye] = Re
                }
            }
            return Q.\u0275fac = function(ye) {
                return new (ye || Q)
            }
            ,
            Q.\u0275prov = i.Yz7({
                token: Q,
                factory: Q.\u0275fac,
                providedIn: "root"
            }),
            Q
        }
        )()
          , Ke = (()=>{
            class Q {
                constructor() {
                    this.messageSource = new l.x,
                    this.clearSource = new l.x,
                    this.messageObserver = this.messageSource.asObservable(),
                    this.clearObserver = this.clearSource.asObservable()
                }
                add(ye) {
                    ye && this.messageSource.next(ye)
                }
                addAll(ye) {
                    ye && ye.length && this.messageSource.next(ye)
                }
                clear(ye) {
                    this.clearSource.next(ye || null)
                }
            }
            return Q.\u0275fac = function(ye) {
                return new (ye || Q)
            }
            ,
            Q.\u0275prov = i.Yz7({
                token: Q,
                factory: Q.\u0275fac
            }),
            Q
        }
        )()
          , Ne = (()=>{
            class Q {
                constructor() {
                    this.clickSource = new l.x,
                    this.clickObservable = this.clickSource.asObservable()
                }
                add(ye) {
                    ye && this.clickSource.next(ye)
                }
            }
            return Q.\u0275fac = function(ye) {
                return new (ye || Q)
            }
            ,
            Q.\u0275prov = i.Yz7({
                token: Q,
                factory: Q.\u0275fac,
                providedIn: "root"
            }),
            Q
        }
        )()
          , $e = (()=>{
            class Q {
            }
            return Q.\u0275fac = function(ye) {
                return new (ye || Q)
            }
            ,
            Q.\u0275cmp = i.Xpm({
                type: Q,
                selectors: [["p-header"]],
                ngContentSelectors: H,
                decls: 1,
                vars: 0,
                template: function(ye, Re) {
                    1 & ye && (i.F$t(),
                    i.Hsn(0))
                },
                encapsulation: 2
            }),
            Q
        }
        )()
          , Fe = (()=>{
            class Q {
            }
            return Q.\u0275fac = function(ye) {
                return new (ye || Q)
            }
            ,
            Q.\u0275cmp = i.Xpm({
                type: Q,
                selectors: [["p-footer"]],
                ngContentSelectors: H,
                decls: 1,
                vars: 0,
                template: function(ye, Re) {
                    1 & ye && (i.F$t(),
                    i.Hsn(0))
                },
                encapsulation: 2
            }),
            Q
        }
        )()
          , et = (()=>{
            class Q {
                constructor(ye) {
                    this.template = ye
                }
                getType() {
                    return this.name
                }
            }
            return Q.\u0275fac = function(ye) {
                return new (ye || Q)(i.Y36(i.Rgc))
            }
            ,
            Q.\u0275dir = i.lG2({
                type: Q,
                selectors: [["", "pTemplate", ""]],
                inputs: {
                    type: "type",
                    name: ["pTemplate", "name"]
                }
            }),
            Q
        }
        )()
          , st = (()=>{
            class Q {
            }
            return Q.\u0275fac = function(ye) {
                return new (ye || Q)
            }
            ,
            Q.\u0275mod = i.oAB({
                type: Q
            }),
            Q.\u0275inj = i.cJS({
                imports: [ue.ez]
            }),
            Q
        }
        )()
    }
    ,
    174: (Ot,je,D)=>{
        D.d(je, {
            E: ()=>H,
            P: ()=>ue
        });
        var i = D(2560)
          , l = D(4666)
          , q = D(1420);
        let ue = (()=>{
            class U {
                constructor(te) {
                    this.host = te,
                    this.focused = !1
                }
                ngAfterContentChecked() {
                    if (!this.focused && this.autofocus) {
                        const te = q.p.getFocusableElements(this.host.nativeElement);
                        0 === te.length && this.host.nativeElement.focus(),
                        te.length > 0 && te[0].focus(),
                        this.focused = !0
                    }
                }
            }
            return U.\u0275fac = function(te) {
                return new (te || U)(i.Y36(i.SBq))
            }
            ,
            U.\u0275dir = i.lG2({
                type: U,
                selectors: [["", "pAutoFocus", ""]],
                hostAttrs: [1, "p-element"],
                inputs: {
                    autofocus: ["pAutoFocus", "autofocus"]
                }
            }),
            U
        }
        )()
          , H = (()=>{
            class U {
            }
            return U.\u0275fac = function(te) {
                return new (te || U)
            }
            ,
            U.\u0275mod = i.oAB({
                type: U
            }),
            U.\u0275inj = i.cJS({
                imports: [l.ez]
            }),
            U
        }
        )()
    }
    ,
    2381: (Ot,je,D)=>{
        D.d(je, {
            TX: ()=>te,
            lM: ()=>U
        });
        var i = D(2560)
          , l = D(4666)
          , q = D(4356)
          , ue = D(1420)
          , H = D(8549);
        let U = (()=>{
            class le {
                constructor(fe) {
                    this.el = fe,
                    this.iconPos = "left"
                }
                ngAfterViewInit() {
                    this.id = (0,
                    H.Th)() + "_badge";
                    let fe = -1 != this.el.nativeElement.nodeName.indexOf("-") ? this.el.nativeElement.firstChild : this.el.nativeElement
                      , re = document.createElement("span");
                    re.id = this.id,
                    re.className = "p-badge p-component",
                    this.severity && ue.p.addClass(re, "p-badge-" + this.severity),
                    null != this.value ? (re.appendChild(document.createTextNode(this.value)),
                    1 === String(this.value).length && ue.p.addClass(re, "p-badge-no-gutter")) : ue.p.addClass(re, "p-badge-dot"),
                    ue.p.addClass(fe, "p-overlay-badge"),
                    fe.appendChild(re),
                    this.initialized = !0
                }
                get value() {
                    return this._value
                }
                set value(fe) {
                    if (fe !== this._value && (this._value = fe,
                    this.initialized)) {
                        let re = document.getElementById(this.id);
                        this._value ? (ue.p.hasClass(re, "p-badge-dot") && ue.p.removeClass(re, "p-badge-dot"),
                        1 === String(this._value).length ? ue.p.addClass(re, "p-badge-no-gutter") : ue.p.removeClass(re, "p-badge-no-gutter")) : !this._value && !ue.p.hasClass(re, "p-badge-dot") && ue.p.addClass(re, "p-badge-dot"),
                        re.innerHTML = "",
                        re.appendChild(document.createTextNode(this._value))
                    }
                }
                ngOnDestroy() {
                    this.initialized = !1
                }
            }
            return le.\u0275fac = function(fe) {
                return new (fe || le)(i.Y36(i.SBq))
            }
            ,
            le.\u0275dir = i.lG2({
                type: le,
                selectors: [["", "pBadge", ""]],
                hostAttrs: [1, "p-element"],
                inputs: {
                    iconPos: "iconPos",
                    value: "value",
                    severity: "severity"
                }
            }),
            le
        }
        )()
          , te = (()=>{
            class le {
            }
            return le.\u0275fac = function(fe) {
                return new (fe || le)
            }
            ,
            le.\u0275mod = i.oAB({
                type: le
            }),
            le.\u0275inj = i.cJS({
                imports: [l.ez, q.m8]
            }),
            le
        }
        )()
    }
    ,
    7298: (Ot,je,D)=>{
        D.d(je, {
            a: ()=>It,
            w: ()=>qt
        });
        var i = D(2560)
          , l = D(4666)
          , q = D(9297)
          , ue = D(4329);
        function H(ft, qe) {
            if (1 & ft && i._UZ(0, "span", 10),
            2 & ft) {
                const be = i.oxw(3);
                i.Q6J("ngClass", be.home.icon || "pi pi-home")("ngStyle", be.home.iconStyle)
            }
        }
        function U(ft, qe) {
            if (1 & ft && (i.TgZ(0, "span", 13),
            i._uU(1),
            i.qZA()),
            2 & ft) {
                const be = i.oxw(4);
                i.xp6(1),
                i.Oqu(be.home.label)
            }
        }
        function z(ft, qe) {
            if (1 & ft && i._UZ(0, "span", 14),
            2 & ft) {
                const be = i.oxw(4);
                i.Q6J("innerHTML", be.home.label, i.oJD)
            }
        }
        function te(ft, qe) {
            if (1 & ft && (i.ynx(0),
            i.YNc(1, U, 2, 1, "span", 11),
            i.YNc(2, z, 1, 1, "ng-template", null, 12, i.W1O),
            i.BQk()),
            2 & ft) {
                const be = i.MAs(3)
                  , pe = i.oxw(3);
                i.xp6(1),
                i.Q6J("ngIf", !1 !== pe.home.escape)("ngIfElse", be)
            }
        }
        function le(ft, qe) {
            if (1 & ft) {
                const be = i.EpF();
                i.TgZ(0, "a", 7),
                i.NdJ("click", function(pt) {
                    i.CHM(be);
                    const Mt = i.oxw(2);
                    return i.KtG(Mt.itemClick(pt, Mt.home))
                }),
                i.YNc(1, H, 1, 2, "span", 8),
                i.YNc(2, te, 4, 2, "ng-container", 9),
                i.qZA()
            }
            if (2 & ft) {
                const be = i.oxw(2);
                i.Q6J("href", be.home.url ? be.home.url : null, i.LSH)("target", be.home.target),
                i.uIk("aria-label", be.homeAriaLabel)("title", be.home.title)("id", be.home.id)("tabindex", be.home.disabled ? null : "0"),
                i.xp6(1),
                i.Q6J("ngIf", be.home.icon),
                i.xp6(1),
                i.Q6J("ngIf", be.home.label)
            }
        }
        function W(ft, qe) {
            if (1 & ft && i._UZ(0, "span", 10),
            2 & ft) {
                const be = i.oxw(3);
                i.Q6J("ngClass", be.home.icon || "pi pi-home")("ngStyle", be.home.iconStyle)
            }
        }
        function fe(ft, qe) {
            if (1 & ft && (i.TgZ(0, "span", 13),
            i._uU(1),
            i.qZA()),
            2 & ft) {
                const be = i.oxw(4);
                i.xp6(1),
                i.Oqu(be.home.label)
            }
        }
        function re(ft, qe) {
            if (1 & ft && i._UZ(0, "span", 14),
            2 & ft) {
                const be = i.oxw(4);
                i.Q6J("innerHTML", be.home.label, i.oJD)
            }
        }
        function Ke(ft, qe) {
            if (1 & ft && (i.ynx(0),
            i.YNc(1, fe, 2, 1, "span", 11),
            i.YNc(2, re, 1, 1, "ng-template", null, 16, i.W1O),
            i.BQk()),
            2 & ft) {
                const be = i.MAs(3)
                  , pe = i.oxw(3);
                i.xp6(1),
                i.Q6J("ngIf", !1 !== pe.home.escape)("ngIfElse", be)
            }
        }
        const Ne = function() {
            return {
                exact: !1
            }
        };
        function Be(ft, qe) {
            if (1 & ft) {
                const be = i.EpF();
                i.TgZ(0, "a", 15),
                i.NdJ("click", function(pt) {
                    i.CHM(be);
                    const Mt = i.oxw(2);
                    return i.KtG(Mt.itemClick(pt, Mt.home))
                }),
                i.YNc(1, W, 1, 2, "span", 8),
                i.YNc(2, Ke, 4, 2, "ng-container", 9),
                i.qZA()
            }
            if (2 & ft) {
                const be = i.oxw(2);
                i.Q6J("routerLink", be.home.routerLink)("queryParams", be.home.queryParams)("routerLinkActive", "p-menuitem-link-active")("routerLinkActiveOptions", be.home.routerLinkActiveOptions || i.DdM(17, Ne))("target", be.home.target)("fragment", be.home.fragment)("queryParamsHandling", be.home.queryParamsHandling)("preserveFragment", be.home.preserveFragment)("skipLocationChange", be.home.skipLocationChange)("replaceUrl", be.home.replaceUrl)("state", be.home.state),
                i.uIk("aria-label", be.homeAriaLabel)("title", be.home.title)("id", be.home.id)("tabindex", be.home.disabled ? null : "0"),
                i.xp6(1),
                i.Q6J("ngIf", be.home.icon),
                i.xp6(1),
                i.Q6J("ngIf", be.home.label)
            }
        }
        const ot = function(ft) {
            return {
                "p-breadcrumb-home": !0,
                "p-disabled": ft
            }
        };
        function $e(ft, qe) {
            if (1 & ft && (i.TgZ(0, "li", 4),
            i.YNc(1, le, 3, 8, "a", 5),
            i.YNc(2, Be, 3, 18, "a", 6),
            i.qZA()),
            2 & ft) {
                const be = i.oxw();
                i.Tol(be.home.styleClass),
                i.Q6J("ngClass", i.VKq(7, ot, be.home.disabled))("ngStyle", be.home.style)("tooltipOptions", be.home.tooltipOptions),
                i.xp6(1),
                i.Q6J("ngIf", !be.home.routerLink),
                i.xp6(1),
                i.Q6J("ngIf", be.home.routerLink)
            }
        }
        function Fe(ft, qe) {
            1 & ft && i._UZ(0, "li", 17)
        }
        function et(ft, qe) {
            if (1 & ft && i._UZ(0, "span", 10),
            2 & ft) {
                const be = i.oxw(2).$implicit;
                i.Q6J("ngClass", be.icon)("ngStyle", be.iconStyle)
            }
        }
        function st(ft, qe) {
            if (1 & ft && (i.TgZ(0, "span", 13),
            i._uU(1),
            i.qZA()),
            2 & ft) {
                const be = i.oxw(3).$implicit;
                i.xp6(1),
                i.Oqu(be.label)
            }
        }
        function Pe(ft, qe) {
            if (1 & ft && i._UZ(0, "span", 14),
            2 & ft) {
                const be = i.oxw(3).$implicit;
                i.Q6J("innerHTML", be.label, i.oJD)
            }
        }
        function Q(ft, qe) {
            if (1 & ft && (i.ynx(0),
            i.YNc(1, st, 2, 1, "span", 11),
            i.YNc(2, Pe, 1, 1, "ng-template", null, 21, i.W1O),
            i.BQk()),
            2 & ft) {
                const be = i.MAs(3)
                  , pe = i.oxw(2).$implicit;
                i.xp6(1),
                i.Q6J("ngIf", !1 !== pe.escape)("ngIfElse", be)
            }
        }
        function ze(ft, qe) {
            if (1 & ft) {
                const be = i.EpF();
                i.TgZ(0, "a", 20),
                i.NdJ("click", function(pt) {
                    i.CHM(be);
                    const Mt = i.oxw().$implicit
                      , kt = i.oxw();
                    return i.KtG(kt.itemClick(pt, Mt))
                }),
                i.YNc(1, et, 1, 2, "span", 8),
                i.YNc(2, Q, 4, 2, "ng-container", 9),
                i.qZA()
            }
            if (2 & ft) {
                const be = i.oxw().$implicit;
                i.Q6J("target", be.target),
                i.uIk("href", be.url ? be.url : null, i.LSH)("title", be.title)("id", be.id)("tabindex", be.disabled ? null : "0"),
                i.xp6(1),
                i.Q6J("ngIf", be.icon),
                i.xp6(1),
                i.Q6J("ngIf", be.label)
            }
        }
        function ye(ft, qe) {
            if (1 & ft && i._UZ(0, "span", 10),
            2 & ft) {
                const be = i.oxw(2).$implicit;
                i.Q6J("ngClass", be.icon)("ngStyle", be.iconStyle)
            }
        }
        function Re(ft, qe) {
            if (1 & ft && (i.TgZ(0, "span", 13),
            i._uU(1),
            i.qZA()),
            2 & ft) {
                const be = i.oxw(3).$implicit;
                i.xp6(1),
                i.Oqu(be.label)
            }
        }
        function ut(ft, qe) {
            if (1 & ft && i._UZ(0, "span", 14),
            2 & ft) {
                const be = i.oxw(3).$implicit;
                i.Q6J("innerHTML", be.label, i.oJD)
            }
        }
        function Ce(ft, qe) {
            if (1 & ft && (i.ynx(0),
            i.YNc(1, Re, 2, 1, "span", 11),
            i.YNc(2, ut, 1, 1, "ng-template", null, 22, i.W1O),
            i.BQk()),
            2 & ft) {
                const be = i.MAs(3)
                  , pe = i.oxw(2).$implicit;
                i.xp6(1),
                i.Q6J("ngIf", !1 !== pe.escape)("ngIfElse", be)
            }
        }
        function Oe(ft, qe) {
            if (1 & ft) {
                const be = i.EpF();
                i.TgZ(0, "a", 15),
                i.NdJ("click", function(pt) {
                    i.CHM(be);
                    const Mt = i.oxw().$implicit
                      , kt = i.oxw();
                    return i.KtG(kt.itemClick(pt, Mt))
                }),
                i.YNc(1, ye, 1, 2, "span", 8),
                i.YNc(2, Ce, 4, 2, "ng-container", 9),
                i.qZA()
            }
            if (2 & ft) {
                const be = i.oxw().$implicit;
                i.Q6J("routerLink", be.routerLink)("queryParams", be.queryParams)("routerLinkActive", "p-menuitem-link-active")("routerLinkActiveOptions", be.routerLinkActiveOptions || i.DdM(16, Ne))("target", be.target)("fragment", be.fragment)("queryParamsHandling", be.queryParamsHandling)("preserveFragment", be.preserveFragment)("skipLocationChange", be.skipLocationChange)("replaceUrl", be.replaceUrl)("state", be.state),
                i.uIk("title", be.title)("id", be.id)("tabindex", be.disabled ? null : "0"),
                i.xp6(1),
                i.Q6J("ngIf", be.icon),
                i.xp6(1),
                i.Q6J("ngIf", be.label)
            }
        }
        function Ze(ft, qe) {
            1 & ft && i._UZ(0, "li", 17)
        }
        const _t = function(ft) {
            return {
                "p-disabled": ft
            }
        };
        function rt(ft, qe) {
            if (1 & ft && (i.TgZ(0, "li", 18),
            i.YNc(1, ze, 3, 7, "a", 19),
            i.YNc(2, Oe, 3, 17, "a", 6),
            i.qZA(),
            i.YNc(3, Ze, 1, 0, "li", 2)),
            2 & ft) {
                const be = qe.$implicit
                  , pe = qe.last;
                i.Tol(be.styleClass),
                i.Q6J("ngStyle", be.style)("ngClass", i.VKq(8, _t, be.disabled))("tooltipOptions", be.tooltipOptions),
                i.xp6(1),
                i.Q6J("ngIf", !be.routerLink),
                i.xp6(1),
                i.Q6J("ngIf", be.routerLink),
                i.xp6(1),
                i.Q6J("ngIf", !pe)
            }
        }
        let It = (()=>{
            class ft {
                constructor() {
                    this.onItemClick = new i.vpe
                }
                itemClick(be, pe) {
                    pe.disabled ? be.preventDefault() : (!pe.url && !pe.routerLink && be.preventDefault(),
                    pe.command && pe.command({
                        originalEvent: be,
                        item: pe
                    }),
                    this.onItemClick.emit({
                        originalEvent: be,
                        item: pe
                    }))
                }
                onHomeClick(be) {
                    this.home && this.itemClick(be, this.home)
                }
            }
            return ft.\u0275fac = function(be) {
                return new (be || ft)
            }
            ,
            ft.\u0275cmp = i.Xpm({
                type: ft,
                selectors: [["p-breadcrumb"]],
                hostAttrs: [1, "p-element"],
                inputs: {
                    model: "model",
                    style: "style",
                    styleClass: "styleClass",
                    home: "home",
                    homeAriaLabel: "homeAriaLabel"
                },
                outputs: {
                    onItemClick: "onItemClick"
                },
                decls: 5,
                vars: 7,
                consts: [[3, "ngStyle", "ngClass"], ["pTooltip", "", 3, "class", "ngClass", "ngStyle", "tooltipOptions", 4, "ngIf"], ["class", "p-breadcrumb-chevron pi pi-chevron-right", 4, "ngIf"], ["ngFor", "", 3, "ngForOf"], ["pTooltip", "", 3, "ngClass", "ngStyle", "tooltipOptions"], ["class", "p-menuitem-link", 3, "href", "target", "click", 4, "ngIf"], ["class", "p-menuitem-link", 3, "routerLink", "queryParams", "routerLinkActive", "routerLinkActiveOptions", "target", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "click", 4, "ngIf"], [1, "p-menuitem-link", 3, "href", "target", "click"], ["class", "p-menuitem-icon", 3, "ngClass", "ngStyle", 4, "ngIf"], [4, "ngIf"], [1, "p-menuitem-icon", 3, "ngClass", "ngStyle"], ["class", "p-menuitem-text", 4, "ngIf", "ngIfElse"], ["htmlHomeLabel", ""], [1, "p-menuitem-text"], [1, "p-menuitem-text", 3, "innerHTML"], [1, "p-menuitem-link", 3, "routerLink", "queryParams", "routerLinkActive", "routerLinkActiveOptions", "target", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "click"], ["htmlHomeRouteLabel", ""], [1, "p-breadcrumb-chevron", "pi", "pi-chevron-right"], ["pTooltip", "", 3, "ngStyle", "ngClass", "tooltipOptions"], ["class", "p-menuitem-link", 3, "target", "click", 4, "ngIf"], [1, "p-menuitem-link", 3, "target", "click"], ["htmlLabel", ""], ["htmlRouteLabel", ""]],
                template: function(be, pe) {
                    1 & be && (i.TgZ(0, "div", 0)(1, "ul"),
                    i.YNc(2, $e, 3, 9, "li", 1),
                    i.YNc(3, Fe, 1, 0, "li", 2),
                    i.YNc(4, rt, 4, 10, "ng-template", 3),
                    i.qZA()()),
                    2 & be && (i.Tol(pe.styleClass),
                    i.Q6J("ngStyle", pe.style)("ngClass", "p-breadcrumb p-component"),
                    i.xp6(2),
                    i.Q6J("ngIf", pe.home),
                    i.xp6(1),
                    i.Q6J("ngIf", pe.model && pe.home),
                    i.xp6(1),
                    i.Q6J("ngForOf", pe.model))
                },
                dependencies: [l.mk, l.sg, l.O5, l.PC, q.yS, q.Od, ue.u],
                styles: [".p-breadcrumb{overflow-x:auto}.p-breadcrumb ul{margin:0;padding:0;list-style-type:none;display:flex;align-items:center;flex-wrap:nowrap}.p-breadcrumb .p-menuitem-text{line-height:1}.p-breadcrumb .p-menuitem-link{text-decoration:none;cursor:pointer}.p-breadcrumb::-webkit-scrollbar{display:none}\n"],
                encapsulation: 2,
                changeDetection: 0
            }),
            ft
        }
        )()
          , qt = (()=>{
            class ft {
            }
            return ft.\u0275fac = function(be) {
                return new (be || ft)
            }
            ,
            ft.\u0275mod = i.oAB({
                type: ft
            }),
            ft.\u0275inj = i.cJS({
                imports: [l.ez, q.Bz, ue.z, q.Bz, ue.z]
            }),
            ft
        }
        )()
    }
    ,
    6328: (Ot,je,D)=>{
        D.d(je, {
            Hq: ()=>re,
            hJ: ()=>Ne
        });
        var i = D(2560)
          , l = D(1420)
          , q = D(4666)
          , ue = D(4538);
        let re = (()=>{
            class Be {
                constructor($e) {
                    this.el = $e,
                    this.iconPos = "left",
                    this.loadingIcon = "pi pi-spinner pi-spin",
                    this._loading = !1
                }
                ngAfterViewInit() {
                    this._initialStyleClass = this.el.nativeElement.className,
                    l.p.addMultipleClasses(this.el.nativeElement, this.getStyleClass()),
                    (this.icon || this.loading) && this.createIconEl();
                    let $e = document.createElement("span");
                    this.icon && !this.label && $e.setAttribute("aria-hidden", "true"),
                    $e.className = "p-button-label",
                    this.label ? $e.appendChild(document.createTextNode(this.label)) : $e.innerHTML = "&nbsp;",
                    this.el.nativeElement.appendChild($e),
                    this.initialized = !0
                }
                getStyleClass() {
                    let $e = "p-button p-component";
                    return this.icon && !this.label && ($e += " p-button-icon-only"),
                    this.loading && ($e += " p-disabled p-button-loading",
                    !this.icon && this.label && ($e += " p-button-loading-label-only")),
                    $e
                }
                setStyleClass() {
                    let $e = this.getStyleClass();
                    this.el.nativeElement.className = $e + " " + this._initialStyleClass
                }
                createIconEl() {
                    let $e = document.createElement("span");
                    $e.className = "p-button-icon",
                    $e.setAttribute("aria-hidden", "true");
                    let Fe = this.label ? "p-button-icon-" + this.iconPos : null;
                    Fe && l.p.addClass($e, Fe);
                    let et = this.getIconClass();
                    et && l.p.addMultipleClasses($e, et);
                    let st = l.p.findSingle(this.el.nativeElement, ".p-button-label");
                    st ? this.el.nativeElement.insertBefore($e, st) : this.el.nativeElement.appendChild($e)
                }
                getIconClass() {
                    return this.loading ? "p-button-loading-icon " + this.loadingIcon : this._icon
                }
                setIconClass() {
                    let $e = l.p.findSingle(this.el.nativeElement, ".p-button-icon");
                    $e ? $e.className = this.iconPos ? "p-button-icon p-button-icon-" + this.iconPos + " " + this.getIconClass() : "p-button-icon " + this.getIconClass() : this.createIconEl()
                }
                removeIconElement() {
                    let $e = l.p.findSingle(this.el.nativeElement, ".p-button-icon");
                    this.el.nativeElement.removeChild($e)
                }
                get label() {
                    return this._label
                }
                set label($e) {
                    this._label = $e,
                    this.initialized && (l.p.findSingle(this.el.nativeElement, ".p-button-label").textContent = this._label || "&nbsp;",
                    (this.loading || this.icon) && this.setIconClass(),
                    this.setStyleClass())
                }
                get icon() {
                    return this._icon
                }
                set icon($e) {
                    this._icon = $e,
                    this.initialized && (this.setIconClass(),
                    this.setStyleClass())
                }
                get loading() {
                    return this._loading
                }
                set loading($e) {
                    this._loading = $e,
                    this.initialized && (this.loading || this.icon ? this.setIconClass() : this.removeIconElement(),
                    this.setStyleClass())
                }
                ngOnDestroy() {
                    this.initialized = !1
                }
            }
            return Be.\u0275fac = function($e) {
                return new ($e || Be)(i.Y36(i.SBq))
            }
            ,
            Be.\u0275dir = i.lG2({
                type: Be,
                selectors: [["", "pButton", ""]],
                hostAttrs: [1, "p-element"],
                inputs: {
                    iconPos: "iconPos",
                    loadingIcon: "loadingIcon",
                    label: "label",
                    icon: "icon",
                    loading: "loading"
                }
            }),
            Be
        }
        )()
          , Ne = (()=>{
            class Be {
            }
            return Be.\u0275fac = function($e) {
                return new ($e || Be)
            }
            ,
            Be.\u0275mod = i.oAB({
                type: Be
            }),
            Be.\u0275inj = i.cJS({
                imports: [q.ez, ue.T]
            }),
            Be
        }
        )()
    }
    ,
    1154: (Ot,je,D)=>{
        D.d(je, {
            i: ()=>ue,
            x: ()=>H
        });
        var i = D(2560)
          , l = D(4666);
        const q = ["*"];
        let ue = (()=>{
            class U {
                constructor() {
                    this.layout = "horizontal",
                    this.type = "solid"
                }
                containerClass() {
                    return {
                        "p-divider p-component": !0,
                        "p-divider-horizontal": "horizontal" === this.layout,
                        "p-divider-vertical": "vertical" === this.layout,
                        "p-divider-solid": "solid" === this.type,
                        "p-divider-dashed": "dashed" === this.type,
                        "p-divider-dotted": "dotted" === this.type,
                        "p-divider-left": "horizontal" === this.layout && (!this.align || "left" === this.align),
                        "p-divider-center": "horizontal" === this.layout && "center" === this.align || "vertical" === this.layout && (!this.align || "center" === this.align),
                        "p-divider-right": "horizontal" === this.layout && "right" === this.align,
                        "p-divider-top": "vertical" === this.layout && "top" === this.align,
                        "p-divider-bottom": "vertical" === this.layout && "bottom" === this.align
                    }
                }
            }
            return U.\u0275fac = function(te) {
                return new (te || U)
            }
            ,
            U.\u0275cmp = i.Xpm({
                type: U,
                selectors: [["p-divider"]],
                hostAttrs: [1, "p-element"],
                inputs: {
                    styleClass: "styleClass",
                    style: "style",
                    layout: "layout",
                    type: "type",
                    align: "align"
                },
                ngContentSelectors: q,
                decls: 3,
                vars: 4,
                consts: [["role", "separator", 3, "ngClass", "ngStyle"], [1, "p-divider-content"]],
                template: function(te, le) {
                    1 & te && (i.F$t(),
                    i.TgZ(0, "div", 0)(1, "div", 1),
                    i.Hsn(2),
                    i.qZA()()),
                    2 & te && (i.Tol(le.styleClass),
                    i.Q6J("ngClass", le.containerClass())("ngStyle", le.style))
                },
                dependencies: [l.mk, l.PC],
                styles: ['.p-divider-horizontal{display:flex;width:100%;position:relative;align-items:center}.p-divider-horizontal:before{position:absolute;display:block;top:50%;left:0;width:100%;content:""}.p-divider-horizontal.p-divider-left{justify-content:flex-start}.p-divider-horizontal.p-divider-right{justify-content:flex-end}.p-divider-horizontal.p-divider-center{justify-content:center}.p-divider-content{z-index:1}.p-divider-vertical{min-height:100%;margin:0 1rem;display:flex;position:relative;justify-content:center}.p-divider-vertical:before{position:absolute;display:block;top:0;left:50%;height:100%;content:""}.p-divider-vertical.p-divider-top{align-items:flex-start}.p-divider-vertical.p-divider-center{align-items:center}.p-divider-vertical.p-divider-bottom{align-items:flex-end}.p-divider-solid.p-divider-horizontal:before{border-top-style:solid}.p-divider-solid.p-divider-vertical:before{border-left-style:solid}.p-divider-dashed.p-divider-horizontal:before{border-top-style:dashed}.p-divider-dashed.p-divider-vertical:before{border-left-style:dashed}.p-divider-dotted.p-divider-horizontal:before{border-top-style:dotted}.p-divider-dotted.p-divider-horizontal:before{border-left-style:dotted}\n'],
                encapsulation: 2,
                changeDetection: 0
            }),
            U
        }
        )()
          , H = (()=>{
            class U {
            }
            return U.\u0275fac = function(te) {
                return new (te || U)
            }
            ,
            U.\u0275mod = i.oAB({
                type: U
            }),
            U.\u0275inj = i.cJS({
                imports: [l.ez]
            }),
            U
        }
        )()
    }
    ,
    1420: (Ot,je,D)=>{
        D.d(je, {
            V: ()=>l,
            p: ()=>i
        });
        let i = (()=>{
            class q {
                static addClass(H, U) {
                    H.classList ? H.classList.add(U) : H.className += " " + U
                }
                static addMultipleClasses(H, U) {
                    if (H.classList) {
                        let z = U.trim().split(" ");
                        for (let te = 0; te < z.length; te++)
                            H.classList.add(z[te])
                    } else {
                        let z = U.split(" ");
                        for (let te = 0; te < z.length; te++)
                            H.className += " " + z[te]
                    }
                }
                static removeClass(H, U) {
                    H.classList ? H.classList.remove(U) : H.className = H.className.replace(new RegExp("(^|\\b)" + U.split(" ").join("|") + "(\\b|$)","gi"), " ")
                }
                static hasClass(H, U) {
                    return H.classList ? H.classList.contains(U) : new RegExp("(^| )" + U + "( |$)","gi").test(H.className)
                }
                static siblings(H) {
                    return Array.prototype.filter.call(H.parentNode.children, function(U) {
                        return U !== H
                    })
                }
                static find(H, U) {
                    return Array.from(H.querySelectorAll(U))
                }
                static findSingle(H, U) {
                    return H ? H.querySelector(U) : null
                }
                static index(H) {
                    let U = H.parentNode.childNodes
                      , z = 0;
                    for (var te = 0; te < U.length; te++) {
                        if (U[te] == H)
                            return z;
                        1 == U[te].nodeType && z++
                    }
                    return -1
                }
                static indexWithinGroup(H, U) {
                    let z = H.parentNode ? H.parentNode.childNodes : []
                      , te = 0;
                    for (var le = 0; le < z.length; le++) {
                        if (z[le] == H)
                            return te;
                        z[le].attributes && z[le].attributes[U] && 1 == z[le].nodeType && te++
                    }
                    return -1
                }
                static relativePosition(H, U) {
                    let z = H.offsetParent ? {
                        width: H.offsetWidth,
                        height: H.offsetHeight
                    } : this.getHiddenElementDimensions(H);
                    const te = U.offsetHeight
                      , le = U.getBoundingClientRect()
                      , W = this.getViewport();
                    let fe, re;
                    le.top + te + z.height > W.height ? (fe = -1 * z.height,
                    H.style.transformOrigin = "bottom",
                    le.top + fe < 0 && (fe = -1 * le.top)) : (fe = te,
                    H.style.transformOrigin = "top"),
                    re = z.width > W.width ? -1 * le.left : le.left + z.width > W.width ? -1 * (le.left + z.width - W.width) : 0,
                    H.style.top = fe + "px",
                    H.style.left = re + "px"
                }
                static absolutePosition(H, U) {
                    let ot, $e, z = H.offsetParent ? {
                        width: H.offsetWidth,
                        height: H.offsetHeight
                    } : this.getHiddenElementDimensions(H), te = z.height, le = z.width, W = U.offsetHeight, fe = U.offsetWidth, re = U.getBoundingClientRect(), Ke = this.getWindowScrollTop(), Ne = this.getWindowScrollLeft(), Be = this.getViewport();
                    re.top + W + te > Be.height ? (ot = re.top + Ke - te,
                    H.style.transformOrigin = "bottom",
                    ot < 0 && (ot = Ke)) : (ot = W + re.top + Ke,
                    H.style.transformOrigin = "top"),
                    $e = re.left + le > Be.width ? Math.max(0, re.left + Ne + fe - le) : re.left + Ne,
                    H.style.top = ot + "px",
                    H.style.left = $e + "px"
                }
                static getParents(H, U=[]) {
                    return null === H.parentNode ? U : this.getParents(H.parentNode, U.concat([H.parentNode]))
                }
                static getScrollableParents(H) {
                    let U = [];
                    if (H) {
                        let z = this.getParents(H);
                        const te = /(auto|scroll)/
                          , le = W=>{
                            let fe = window.getComputedStyle(W, null);
                            return te.test(fe.getPropertyValue("overflow")) || te.test(fe.getPropertyValue("overflowX")) || te.test(fe.getPropertyValue("overflowY"))
                        }
                        ;
                        for (let W of z) {
                            let fe = 1 === W.nodeType && W.dataset.scrollselectors;
                            if (fe) {
                                let re = fe.split(",");
                                for (let Ke of re) {
                                    let Ne = this.findSingle(W, Ke);
                                    Ne && le(Ne) && U.push(Ne)
                                }
                            }
                            9 !== W.nodeType && le(W) && U.push(W)
                        }
                    }
                    return U
                }
                static getHiddenElementOuterHeight(H) {
                    H.style.visibility = "hidden",
                    H.style.display = "block";
                    let U = H.offsetHeight;
                    return H.style.display = "none",
                    H.style.visibility = "visible",
                    U
                }
                static getHiddenElementOuterWidth(H) {
                    H.style.visibility = "hidden",
                    H.style.display = "block";
                    let U = H.offsetWidth;
                    return H.style.display = "none",
                    H.style.visibility = "visible",
                    U
                }
                static getHiddenElementDimensions(H) {
                    let U = {};
                    return H.style.visibility = "hidden",
                    H.style.display = "block",
                    U.width = H.offsetWidth,
                    U.height = H.offsetHeight,
                    H.style.display = "none",
                    H.style.visibility = "visible",
                    U
                }
                static scrollInView(H, U) {
                    let z = getComputedStyle(H).getPropertyValue("borderTopWidth")
                      , te = z ? parseFloat(z) : 0
                      , le = getComputedStyle(H).getPropertyValue("paddingTop")
                      , W = le ? parseFloat(le) : 0
                      , fe = H.getBoundingClientRect()
                      , Ke = U.getBoundingClientRect().top + document.body.scrollTop - (fe.top + document.body.scrollTop) - te - W
                      , Ne = H.scrollTop
                      , Be = H.clientHeight
                      , ot = this.getOuterHeight(U);
                    Ke < 0 ? H.scrollTop = Ne + Ke : Ke + ot > Be && (H.scrollTop = Ne + Ke - Be + ot)
                }
                static fadeIn(H, U) {
                    H.style.opacity = 0;
                    let z = +new Date
                      , te = 0
                      , le = function() {
                        te = +H.style.opacity.replace(",", ".") + ((new Date).getTime() - z) / U,
                        H.style.opacity = te,
                        z = +new Date,
                        +te < 1 && (window.requestAnimationFrame && requestAnimationFrame(le) || setTimeout(le, 16))
                    };
                    le()
                }
                static fadeOut(H, U) {
                    var z = 1
                      , W = 50 / U;
                    let fe = setInterval(()=>{
                        (z -= W) <= 0 && (z = 0,
                        clearInterval(fe)),
                        H.style.opacity = z
                    }
                    , 50)
                }
                static getWindowScrollTop() {
                    let H = document.documentElement;
                    return (window.pageYOffset || H.scrollTop) - (H.clientTop || 0)
                }
                static getWindowScrollLeft() {
                    let H = document.documentElement;
                    return (window.pageXOffset || H.scrollLeft) - (H.clientLeft || 0)
                }
                static matches(H, U) {
                    var z = Element.prototype;
                    return (z.matches || z.webkitMatchesSelector || z.mozMatchesSelector || z.msMatchesSelector || function(le) {
                        return -1 !== [].indexOf.call(document.querySelectorAll(le), this)
                    }
                    ).call(H, U)
                }
                static getOuterWidth(H, U) {
                    let z = H.offsetWidth;
                    if (U) {
                        let te = getComputedStyle(H);
                        z += parseFloat(te.marginLeft) + parseFloat(te.marginRight)
                    }
                    return z
                }
                static getHorizontalPadding(H) {
                    let U = getComputedStyle(H);
                    return parseFloat(U.paddingLeft) + parseFloat(U.paddingRight)
                }
                static getHorizontalMargin(H) {
                    let U = getComputedStyle(H);
                    return parseFloat(U.marginLeft) + parseFloat(U.marginRight)
                }
                static innerWidth(H) {
                    let U = H.offsetWidth
                      , z = getComputedStyle(H);
                    return U += parseFloat(z.paddingLeft) + parseFloat(z.paddingRight),
                    U
                }
                static width(H) {
                    let U = H.offsetWidth
                      , z = getComputedStyle(H);
                    return U -= parseFloat(z.paddingLeft) + parseFloat(z.paddingRight),
                    U
                }
                static getInnerHeight(H) {
                    let U = H.offsetHeight
                      , z = getComputedStyle(H);
                    return U += parseFloat(z.paddingTop) + parseFloat(z.paddingBottom),
                    U
                }
                static getOuterHeight(H, U) {
                    let z = H.offsetHeight;
                    if (U) {
                        let te = getComputedStyle(H);
                        z += parseFloat(te.marginTop) + parseFloat(te.marginBottom)
                    }
                    return z
                }
                static getHeight(H) {
                    let U = H.offsetHeight
                      , z = getComputedStyle(H);
                    return U -= parseFloat(z.paddingTop) + parseFloat(z.paddingBottom) + parseFloat(z.borderTopWidth) + parseFloat(z.borderBottomWidth),
                    U
                }
                static getWidth(H) {
                    let U = H.offsetWidth
                      , z = getComputedStyle(H);
                    return U -= parseFloat(z.paddingLeft) + parseFloat(z.paddingRight) + parseFloat(z.borderLeftWidth) + parseFloat(z.borderRightWidth),
                    U
                }
                static getViewport() {
                    let H = window
                      , U = document
                      , z = U.documentElement
                      , te = U.getElementsByTagName("body")[0];
                    return {
                        width: H.innerWidth || z.clientWidth || te.clientWidth,
                        height: H.innerHeight || z.clientHeight || te.clientHeight
                    }
                }
                static getOffset(H) {
                    var U = H.getBoundingClientRect();
                    return {
                        top: U.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0),
                        left: U.left + (window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0)
                    }
                }
                static replaceElementWith(H, U) {
                    let z = H.parentNode;
                    if (!z)
                        throw "Can't replace element";
                    return z.replaceChild(U, H)
                }
                static getUserAgent() {
                    return navigator.userAgent
                }
                static isIE() {
                    var H = window.navigator.userAgent;
                    return H.indexOf("MSIE ") > 0 || (H.indexOf("Trident/") > 0 ? (H.indexOf("rv:"),
                    !0) : H.indexOf("Edge/") > 0)
                }
                static isIOS() {
                    return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream
                }
                static isAndroid() {
                    return /(android)/i.test(navigator.userAgent)
                }
                static isTouchDevice() {
                    return "ontouchstart"in window || navigator.maxTouchPoints > 0
                }
                static appendChild(H, U) {
                    if (this.isElement(U))
                        U.appendChild(H);
                    else {
                        if (!U.el || !U.el.nativeElement)
                            throw "Cannot append " + U + " to " + H;
                        U.el.nativeElement.appendChild(H)
                    }
                }
                static removeChild(H, U) {
                    if (this.isElement(U))
                        U.removeChild(H);
                    else {
                        if (!U.el || !U.el.nativeElement)
                            throw "Cannot remove " + H + " from " + U;
                        U.el.nativeElement.removeChild(H)
                    }
                }
                static removeElement(H) {
                    "remove"in Element.prototype ? H.remove() : H.parentNode.removeChild(H)
                }
                static isElement(H) {
                    return "object" == typeof HTMLElement ? H instanceof HTMLElement : H && "object" == typeof H && null !== H && 1 === H.nodeType && "string" == typeof H.nodeName
                }
                static calculateScrollbarWidth(H) {
                    if (H) {
                        let U = getComputedStyle(H);
                        return H.offsetWidth - H.clientWidth - parseFloat(U.borderLeftWidth) - parseFloat(U.borderRightWidth)
                    }
                    {
                        if (null !== this.calculatedScrollbarWidth)
                            return this.calculatedScrollbarWidth;
                        let U = document.createElement("div");
                        U.className = "p-scrollbar-measure",
                        document.body.appendChild(U);
                        let z = U.offsetWidth - U.clientWidth;
                        return document.body.removeChild(U),
                        this.calculatedScrollbarWidth = z,
                        z
                    }
                }
                static calculateScrollbarHeight() {
                    if (null !== this.calculatedScrollbarHeight)
                        return this.calculatedScrollbarHeight;
                    let H = document.createElement("div");
                    H.className = "p-scrollbar-measure",
                    document.body.appendChild(H);
                    let U = H.offsetHeight - H.clientHeight;
                    return document.body.removeChild(H),
                    this.calculatedScrollbarWidth = U,
                    U
                }
                static invokeElementMethod(H, U, z) {
                    H[U].apply(H, z)
                }
                static clearSelection() {
                    if (window.getSelection)
                        window.getSelection().empty ? window.getSelection().empty() : window.getSelection().removeAllRanges && window.getSelection().rangeCount > 0 && window.getSelection().getRangeAt(0).getClientRects().length > 0 && window.getSelection().removeAllRanges();
                    else if (document.selection && document.selection.empty)
                        try {
                            document.selection.empty()
                        } catch {}
                }
                static getBrowser() {
                    if (!this.browser) {
                        let H = this.resolveUserAgent();
                        this.browser = {},
                        H.browser && (this.browser[H.browser] = !0,
                        this.browser.version = H.version),
                        this.browser.chrome ? this.browser.webkit = !0 : this.browser.webkit && (this.browser.safari = !0)
                    }
                    return this.browser
                }
                static resolveUserAgent() {
                    let H = navigator.userAgent.toLowerCase()
                      , U = /(chrome)[ \/]([\w.]+)/.exec(H) || /(webkit)[ \/]([\w.]+)/.exec(H) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(H) || /(msie) ([\w.]+)/.exec(H) || H.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(H) || [];
                    return {
                        browser: U[1] || "",
                        version: U[2] || "0"
                    }
                }
                static isInteger(H) {
                    return Number.isInteger ? Number.isInteger(H) : "number" == typeof H && isFinite(H) && Math.floor(H) === H
                }
                static isHidden(H) {
                    return null === H.offsetParent
                }
                static getFocusableElements(H) {
                    let U = q.find(H, 'button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]),\n                [href][clientHeight][clientWidth]:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]),\n                input:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]), select:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]),\n                textarea:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]), [tabIndex]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]),\n                [contenteditable]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]):not(.p-disabled)')
                      , z = [];
                    for (let te of U)
                        "none" != getComputedStyle(te).display && "hidden" != getComputedStyle(te).visibility && z.push(te);
                    return z
                }
                static generateZIndex() {
                    return this.zindex = this.zindex || 999,
                    ++this.zindex
                }
            }
            return q.zindex = 1e3,
            q.calculatedScrollbarWidth = null,
            q.calculatedScrollbarHeight = null,
            q
        }
        )();
        class l {
            constructor(ue, H=(()=>{}
            )) {
                this.element = ue,
                this.listener = H
            }
            bindScrollListener() {
                this.scrollableParents = i.getScrollableParents(this.element);
                for (let ue = 0; ue < this.scrollableParents.length; ue++)
                    this.scrollableParents[ue].addEventListener("scroll", this.listener)
            }
            unbindScrollListener() {
                if (this.scrollableParents)
                    for (let ue = 0; ue < this.scrollableParents.length; ue++)
                        this.scrollableParents[ue].removeEventListener("scroll", this.listener)
            }
            destroy() {
                this.unbindScrollListener(),
                this.element = null,
                this.listener = null,
                this.scrollableParents = null
            }
        }
    }
    ,
    3933: (Ot,je,D)=>{
        D.d(je, {
            Lt: ()=>hi,
            kW: ()=>Gt
        });
        var i = D(2560)
          , l = D(4851)
          , q = D(4666)
          , ue = D(4356)
          , H = D(1420)
          , U = D(8549)
          , z = D(2508)
          , te = D(4329);
        const le = ["element"]
          , W = ["content"];
        function fe(xe, wt) {
            1 & xe && i.GkF(0)
        }
        const re = function(xe, wt) {
            return {
                $implicit: xe,
                options: wt
            }
        };
        function Ke(xe, wt) {
            if (1 & xe && (i.ynx(0),
            i.YNc(1, fe, 1, 0, "ng-container", 7),
            i.BQk()),
            2 & xe) {
                const N = i.oxw(2);
                i.xp6(1),
                i.Q6J("ngTemplateOutlet", N.contentTemplate)("ngTemplateOutletContext", i.WLB(2, re, N.loadedItems, N.getContentOptions()))
            }
        }
        function Ne(xe, wt) {
            1 & xe && i.GkF(0)
        }
        function Be(xe, wt) {
            if (1 & xe && (i.ynx(0),
            i.YNc(1, Ne, 1, 0, "ng-container", 7),
            i.BQk()),
            2 & xe) {
                const N = wt.$implicit
                  , me = wt.index
                  , Ve = i.oxw(3);
                i.xp6(1),
                i.Q6J("ngTemplateOutlet", Ve.itemTemplate)("ngTemplateOutletContext", i.WLB(2, re, N, Ve.getOptions(me)))
            }
        }
        const ot = function(xe) {
            return {
                "p-scroller-loading": xe
            }
        };
        function $e(xe, wt) {
            if (1 & xe && (i.TgZ(0, "div", 8, 9),
            i.YNc(2, Be, 2, 5, "ng-container", 10),
            i.qZA()),
            2 & xe) {
                const N = i.oxw(2);
                i.Q6J("ngClass", i.VKq(4, ot, N.d_loading))("ngStyle", N.contentStyle),
                i.xp6(2),
                i.Q6J("ngForOf", N.loadedItems)("ngForTrackBy", N._trackBy || N.index)
            }
        }
        function Fe(xe, wt) {
            if (1 & xe && i._UZ(0, "div", 11),
            2 & xe) {
                const N = i.oxw(2);
                i.Q6J("ngStyle", N.spacerStyle)
            }
        }
        function et(xe, wt) {
            1 & xe && i.GkF(0)
        }
        const st = function(xe) {
            return {
                numCols: xe
            }
        }
          , Pe = function(xe) {
            return {
                options: xe
            }
        };
        function Q(xe, wt) {
            if (1 & xe && (i.ynx(0),
            i.YNc(1, et, 1, 0, "ng-container", 7),
            i.BQk()),
            2 & xe) {
                const N = wt.index
                  , me = i.oxw(4);
                i.xp6(1),
                i.Q6J("ngTemplateOutlet", me.loaderTemplate)("ngTemplateOutletContext", i.VKq(4, Pe, me.getLoaderOptions(N, me.both && i.VKq(2, st, me._numItemsInViewport.cols))))
            }
        }
        function ze(xe, wt) {
            if (1 & xe && (i.ynx(0),
            i.YNc(1, Q, 2, 6, "ng-container", 14),
            i.BQk()),
            2 & xe) {
                const N = i.oxw(3);
                i.xp6(1),
                i.Q6J("ngForOf", N.loaderArr)
            }
        }
        function ye(xe, wt) {
            1 & xe && i.GkF(0)
        }
        const Re = function() {
            return {
                styleClass: "p-scroller-loading-icon"
            }
        };
        function ut(xe, wt) {
            if (1 & xe && (i.ynx(0),
            i.YNc(1, ye, 1, 0, "ng-container", 7),
            i.BQk()),
            2 & xe) {
                const N = i.oxw(4);
                i.xp6(1),
                i.Q6J("ngTemplateOutlet", N.loaderIconTemplate)("ngTemplateOutletContext", i.VKq(3, Pe, i.DdM(2, Re)))
            }
        }
        function Ce(xe, wt) {
            1 & xe && i._UZ(0, "i", 16)
        }
        function Oe(xe, wt) {
            if (1 & xe && (i.YNc(0, ut, 2, 5, "ng-container", 0),
            i.YNc(1, Ce, 1, 0, "ng-template", null, 15, i.W1O)),
            2 & xe) {
                const N = i.MAs(2)
                  , me = i.oxw(3);
                i.Q6J("ngIf", me.loaderIconTemplate)("ngIfElse", N)
            }
        }
        const Ze = function(xe) {
            return {
                "p-component-overlay": xe
            }
        };
        function _t(xe, wt) {
            if (1 & xe && (i.TgZ(0, "div", 12),
            i.YNc(1, ze, 2, 1, "ng-container", 0),
            i.YNc(2, Oe, 3, 2, "ng-template", null, 13, i.W1O),
            i.qZA()),
            2 & xe) {
                const N = i.MAs(3)
                  , me = i.oxw(2);
                i.Q6J("ngClass", i.VKq(3, Ze, !me.loaderTemplate)),
                i.xp6(1),
                i.Q6J("ngIf", me.loaderTemplate)("ngIfElse", N)
            }
        }
        const rt = function(xe, wt) {
            return {
                "p-scroller": !0,
                "p-both-scroll": xe,
                "p-horizontal-scroll": wt
            }
        };
        function It(xe, wt) {
            if (1 & xe) {
                const N = i.EpF();
                i.ynx(0),
                i.TgZ(1, "div", 2, 3),
                i.NdJ("scroll", function(Ve) {
                    i.CHM(N);
                    const We = i.oxw();
                    return i.KtG(We.onContainerScroll(Ve))
                }),
                i.YNc(3, Ke, 2, 5, "ng-container", 0),
                i.YNc(4, $e, 3, 6, "ng-template", null, 4, i.W1O),
                i.YNc(6, Fe, 1, 1, "div", 5),
                i.YNc(7, _t, 4, 5, "div", 6),
                i.qZA(),
                i.BQk()
            }
            if (2 & xe) {
                const N = i.MAs(5)
                  , me = i.oxw();
                i.xp6(1),
                i.Tol(me._styleClass),
                i.Q6J("ngStyle", me._style)("ngClass", i.WLB(10, rt, me.both, me.horizontal)),
                i.uIk("id", me._id)("tabindex", me.tabindex),
                i.xp6(2),
                i.Q6J("ngIf", me.contentTemplate)("ngIfElse", N),
                i.xp6(3),
                i.Q6J("ngIf", me._showSpacer),
                i.xp6(1),
                i.Q6J("ngIf", !me.loaderDisabled && me._showLoader && me.d_loading)
            }
        }
        function qt(xe, wt) {
            1 & xe && i.GkF(0)
        }
        const ft = function(xe, wt) {
            return {
                rows: xe,
                columns: wt
            }
        };
        function qe(xe, wt) {
            if (1 & xe && (i.ynx(0),
            i.YNc(1, qt, 1, 0, "ng-container", 7),
            i.BQk()),
            2 & xe) {
                const N = i.oxw(2);
                i.xp6(1),
                i.Q6J("ngTemplateOutlet", N.contentTemplate)("ngTemplateOutletContext", i.WLB(5, re, N.items, i.WLB(2, ft, N._items, N.loadedColumns)))
            }
        }
        function be(xe, wt) {
            if (1 & xe && (i.Hsn(0),
            i.YNc(1, qe, 2, 8, "ng-container", 17)),
            2 & xe) {
                const N = i.oxw();
                i.xp6(1),
                i.Q6J("ngIf", N.contentTemplate)
            }
        }
        const pe = ["*"];
        let pt = (()=>{
            class xe {
                constructor(N, me) {
                    this.cd = N,
                    this.zone = me,
                    this.onLazyLoad = new i.vpe,
                    this.onScroll = new i.vpe,
                    this.onScrollIndexChange = new i.vpe,
                    this._tabindex = 0,
                    this._itemSize = 0,
                    this._orientation = "vertical",
                    this._delay = 0,
                    this._resizeDelay = 10,
                    this._lazy = !1,
                    this._disabled = !1,
                    this._loaderDisabled = !1,
                    this._showSpacer = !0,
                    this._showLoader = !1,
                    this._autoSize = !1,
                    this.d_loading = !1,
                    this.first = 0,
                    this.last = 0,
                    this.numItemsInViewport = 0,
                    this.lastScrollPos = 0,
                    this.loaderArr = [],
                    this.spacerStyle = {},
                    this.contentStyle = {},
                    this.initialized = !1,
                    this._disabled || this.zone.runOutsideAngular(()=>{
                        this.windowResizeListener = this.onWindowResize.bind(this),
                        window.addEventListener("resize", this.windowResizeListener),
                        window.addEventListener("orientationchange", this.windowResizeListener)
                    }
                    )
                }
                get id() {
                    return this._id
                }
                set id(N) {
                    this._id = N
                }
                get style() {
                    return this._style
                }
                set style(N) {
                    this._style = N
                }
                get styleClass() {
                    return this._styleClass
                }
                set styleClass(N) {
                    this._styleClass = N
                }
                get tabindex() {
                    return this._tabindex
                }
                set tabindex(N) {
                    this._tabindex = N
                }
                get items() {
                    return this._items
                }
                set items(N) {
                    this._items = N
                }
                get itemSize() {
                    return this._itemSize
                }
                set itemSize(N) {
                    this._itemSize = N
                }
                get scrollHeight() {
                    return this._scrollHeight
                }
                set scrollHeight(N) {
                    this._scrollHeight = N
                }
                get scrollWidth() {
                    return this._scrollWidth
                }
                set scrollWidth(N) {
                    this._scrollWidth = N
                }
                get orientation() {
                    return this._orientation
                }
                set orientation(N) {
                    this._orientation = N
                }
                get delay() {
                    return this._delay
                }
                set delay(N) {
                    this._delay = N
                }
                get resizeDelay() {
                    return this._resizeDelay
                }
                set resizeDelay(N) {
                    this._resizeDelay = N
                }
                get lazy() {
                    return this._lazy
                }
                set lazy(N) {
                    this._lazy = N
                }
                get disabled() {
                    return this._disabled
                }
                set disabled(N) {
                    this._disabled = N
                }
                get loaderDisabled() {
                    return this._loaderDisabled
                }
                set loaderDisabled(N) {
                    this._loaderDisabled = N
                }
                get columns() {
                    return this._columns
                }
                set columns(N) {
                    this._columns = N
                }
                get showSpacer() {
                    return this._showSpacer
                }
                set showSpacer(N) {
                    this._showSpacer = N
                }
                get showLoader() {
                    return this._showLoader
                }
                set showLoader(N) {
                    this._showLoader = N
                }
                get numToleratedItems() {
                    return this._numToleratedItems
                }
                set numToleratedItems(N) {
                    this._numToleratedItems = N
                }
                get loading() {
                    return this._loading
                }
                set loading(N) {
                    this._loading = N
                }
                get autoSize() {
                    return this._autoSize
                }
                set autoSize(N) {
                    this._autoSize = N
                }
                get trackBy() {
                    return this._trackBy
                }
                set trackBy(N) {
                    this._trackBy = N
                }
                get options() {
                    return this._options
                }
                set options(N) {
                    this._options = N,
                    N && "object" == typeof N && Object.entries(N).forEach(([me,Ve])=>this[`_${me}`] !== Ve && (this[`_${me}`] = Ve))
                }
                get vertical() {
                    return "vertical" === this._orientation
                }
                get horizontal() {
                    return "horizontal" === this._orientation
                }
                get both() {
                    return "both" === this._orientation
                }
                get loadedItems() {
                    return this._items && !this.d_loading ? this.both ? this._items.slice(this.first.rows, this.last.rows).map(N=>this._columns ? N : N.slice(this.first.cols, this.last.cols)) : this.horizontal && this._columns ? this._items : this._items.slice(this.first, this.last) : []
                }
                get loadedRows() {
                    return this.d_loading ? this._loaderDisabled ? this.loaderArr : [] : this.loadedItems
                }
                get loadedColumns() {
                    return this._columns && (this.both || this.horizontal) ? this.d_loading && this._loaderDisabled ? this.both ? this.loaderArr[0] : this.loaderArr : this._columns.slice(this.both ? this.first.cols : this.first, this.both ? this.last.cols : this.last) : this._columns
                }
                ngOnInit() {
                    this.setInitialState()
                }
                ngOnChanges(N) {
                    let me = !1;
                    if (N.loading) {
                        const {previousValue: Ve, currentValue: We} = N.loading;
                        this.lazy && Ve !== We && We !== this.d_loading && (this.d_loading = We,
                        me = !0)
                    }
                    if (this.initialized && !me && (N.items || N.itemSize || N.scrollHeight || N.scrollWidth) && this.init(),
                    N.orientation && (this.lastScrollPos = this.both ? {
                        top: 0,
                        left: 0
                    } : 0),
                    N.numToleratedItems) {
                        const {previousValue: Ve, currentValue: We} = N.numToleratedItems;
                        Ve !== We && We !== this.d_numToleratedItems && (this.d_numToleratedItems = We)
                    }
                    if (N.options) {
                        const {previousValue: Ve, currentValue: We} = N.options;
                        this.lazy && Ve?.loading !== We?.loading && We?.loading !== this.d_loading && (this.d_loading = We.loading),
                        Ve?.numToleratedItems !== We?.numToleratedItems && We?.numToleratedItems !== this.d_numToleratedItems && (this.d_numToleratedItems = We.numToleratedItems)
                    }
                }
                ngAfterContentInit() {
                    this.templates.forEach(N=>{
                        switch (N.getType()) {
                        case "content":
                            this.contentTemplate = N.template;
                            break;
                        case "item":
                        default:
                            this.itemTemplate = N.template;
                            break;
                        case "loader":
                            this.loaderTemplate = N.template;
                            break;
                        case "loadericon":
                            this.loaderIconTemplate = N.template
                        }
                    }
                    )
                }
                ngAfterViewInit() {
                    this.setContentEl(this.contentEl),
                    this.init(),
                    this.defaultWidth = H.p.getWidth(this.elementViewChild.nativeElement),
                    this.defaultHeight = H.p.getHeight(this.elementViewChild.nativeElement),
                    this.initialized = !0
                }
                ngAfterViewChecked() {
                    this.calculateAutoSize()
                }
                ngOnDestroy() {
                    this.windowResizeListener && (window.removeEventListener("resize", this.windowResizeListener),
                    window.removeEventListener("orientationchange", this.windowResizeListener),
                    this.windowResizeListener = null)
                }
                init() {
                    this._disabled || (this.setSize(),
                    this.calculateOptions(),
                    this.setSpacerSize(),
                    this.cd.detectChanges())
                }
                setContentEl(N) {
                    this.contentEl = N || this.contentViewChild?.nativeElement || H.p.findSingle(this.elementViewChild?.nativeElement, ".p-scroller-content")
                }
                setInitialState() {
                    this.first = this.both ? {
                        rows: 0,
                        cols: 0
                    } : 0,
                    this.last = this.both ? {
                        rows: 0,
                        cols: 0
                    } : 0,
                    this.numItemsInViewport = this.both ? {
                        rows: 0,
                        cols: 0
                    } : 0,
                    this.lastScrollPos = this.both ? {
                        top: 0,
                        left: 0
                    } : 0,
                    this.d_loading = this._loading || !1,
                    this.d_numToleratedItems = this._numToleratedItems
                }
                getElementRef() {
                    return this.elementViewChild
                }
                scrollTo(N) {
                    this.lastScrollPos = this.both ? {
                        top: 0,
                        left: 0
                    } : 0,
                    this.elementViewChild?.nativeElement?.scrollTo(N)
                }
                scrollToIndex(N, me="auto") {
                    const {numToleratedItems: Ve} = this.calculateNumItems()
                      , We = this.getContentPosition()
                      , Ft = (Rn=0,dn)=>Rn <= dn ? 0 : Rn
                      , Jt = (Rn,dn,Ri)=>Rn * dn + Ri
                      , Bn = (Rn=0,dn=0)=>this.scrollTo({
                        left: Rn,
                        top: dn,
                        behavior: me
                    });
                    if (this.both) {
                        const Rn = {
                            rows: Ft(N[0], Ve[0]),
                            cols: Ft(N[1], Ve[1])
                        };
                        (Rn.rows !== this.first.rows || Rn.cols !== this.first.cols) && Bn(Jt(Rn.cols, this._itemSize[1], We.left), Jt(Rn.rows, this._itemSize[0], We.top))
                    } else {
                        const Rn = Ft(N, Ve);
                        Rn !== this.first && (this.horizontal ? Bn(Jt(Rn, this._itemSize, We.left), 0) : Bn(0, Jt(Rn, this._itemSize, We.top)))
                    }
                }
                scrollInView(N, me, Ve="auto") {
                    if (me) {
                        const {first: We, viewport: Ft} = this.getRenderedRange()
                          , Jt = (dn=0,Ri=0)=>this.scrollTo({
                            left: dn,
                            top: Ri,
                            behavior: Ve
                        })
                          , Rn = "to-end" === me;
                        if ("to-start" === me) {
                            if (this.both)
                                Ft.first.rows - We.rows > N[0] ? Jt(Ft.first.cols * this._itemSize[1], (Ft.first.rows - 1) * this._itemSize[0]) : Ft.first.cols - We.cols > N[1] && Jt((Ft.first.cols - 1) * this._itemSize[1], Ft.first.rows * this._itemSize[0]);
                            else if (Ft.first - We > N) {
                                const dn = (Ft.first - 1) * this._itemSize;
                                this.horizontal ? Jt(dn, 0) : Jt(0, dn)
                            }
                        } else if (Rn)
                            if (this.both)
                                Ft.last.rows - We.rows <= N[0] + 1 ? Jt(Ft.first.cols * this._itemSize[1], (Ft.first.rows + 1) * this._itemSize[0]) : Ft.last.cols - We.cols <= N[1] + 1 && Jt((Ft.first.cols + 1) * this._itemSize[1], Ft.first.rows * this._itemSize[0]);
                            else if (Ft.last - We <= N + 1) {
                                const dn = (Ft.first + 1) * this._itemSize;
                                this.horizontal ? Jt(dn, 0) : Jt(0, dn)
                            }
                    } else
                        this.scrollToIndex(N, Ve)
                }
                getRenderedRange() {
                    const N = (We,Ft)=>Math.floor(We / (Ft || We));
                    let me = this.first
                      , Ve = 0;
                    if (this.elementViewChild?.nativeElement) {
                        const {scrollTop: We, scrollLeft: Ft} = this.elementViewChild.nativeElement;
                        this.both ? (me = {
                            rows: N(We, this._itemSize[0]),
                            cols: N(Ft, this._itemSize[1])
                        },
                        Ve = {
                            rows: me.rows + this.numItemsInViewport.rows,
                            cols: me.cols + this.numItemsInViewport.cols
                        }) : (me = N(this.horizontal ? Ft : We, this._itemSize),
                        Ve = me + this.numItemsInViewport)
                    }
                    return {
                        first: this.first,
                        last: this.last,
                        viewport: {
                            first: me,
                            last: Ve
                        }
                    }
                }
                calculateNumItems() {
                    const N = this.getContentPosition()
                      , me = this.elementViewChild?.nativeElement ? this.elementViewChild.nativeElement.offsetWidth - N.left : 0
                      , Ve = this.elementViewChild?.nativeElement ? this.elementViewChild.nativeElement.offsetHeight - N.top : 0
                      , We = (Rn,dn)=>Math.ceil(Rn / (dn || Rn))
                      , Ft = Rn=>Math.ceil(Rn / 2)
                      , Jt = this.both ? {
                        rows: We(Ve, this._itemSize[0]),
                        cols: We(me, this._itemSize[1])
                    } : We(this.horizontal ? me : Ve, this._itemSize);
                    return {
                        numItemsInViewport: Jt,
                        numToleratedItems: this.d_numToleratedItems || (this.both ? [Ft(Jt.rows), Ft(Jt.cols)] : Ft(Jt))
                    }
                }
                calculateOptions() {
                    const {numItemsInViewport: N, numToleratedItems: me} = this.calculateNumItems()
                      , Ve = (Jt,Bn,Rn,dn=!1)=>this.getLast(Jt + Bn + (Jt < Rn ? 2 : 3) * Rn, dn)
                      , We = this.first
                      , Ft = this.both ? {
                        rows: Ve(this.first.rows, N.rows, me[0]),
                        cols: Ve(this.first.cols, N.cols, me[1], !0)
                    } : Ve(this.first, N, me);
                    this.last = Ft,
                    this.numItemsInViewport = N,
                    this.d_numToleratedItems = me,
                    this.showLoader && (this.loaderArr = this.both ? Array.from({
                        length: N.rows
                    }).map(()=>Array.from({
                        length: N.cols
                    })) : Array.from({
                        length: N
                    })),
                    this._lazy && this.handleEvents("onLazyLoad", {
                        first: We,
                        last: Ft
                    })
                }
                calculateAutoSize() {
                    this._autoSize && !this.d_loading && Promise.resolve().then(()=>{
                        if (this.contentEl) {
                            this.contentEl.style.minHeight = this.contentEl.style.minWidth = "auto";
                            const {offsetWidth: N, offsetHeight: me} = this.contentEl;
                            (this.both || this.horizontal) && (this.elementViewChild.nativeElement.style.width = (N < this.defaultWidth ? N : this.defaultWidth) + "px"),
                            (this.both || this.vertical) && (this.elementViewChild.nativeElement.style.height = (me < this.defaultHeight ? me : this.defaultHeight) + "px"),
                            this.contentEl.style.minHeight = this.contentEl.style.minWidth = ""
                        }
                    }
                    )
                }
                getLast(N=0, me=!1) {
                    return this._items ? Math.min(me ? (this._columns || this._items[0]).length : this._items.length, N) : 0
                }
                getContentPosition() {
                    if (this.contentEl) {
                        const N = getComputedStyle(this.contentEl)
                          , me = parseFloat(N.paddingLeft) + Math.max(parseFloat(N.left) || 0, 0)
                          , Ve = parseFloat(N.paddingRight) + Math.max(parseFloat(N.right) || 0, 0)
                          , We = parseFloat(N.paddingTop) + Math.max(parseFloat(N.top) || 0, 0)
                          , Ft = parseFloat(N.paddingBottom) + Math.max(parseFloat(N.bottom) || 0, 0);
                        return {
                            left: me,
                            right: Ve,
                            top: We,
                            bottom: Ft,
                            x: me + Ve,
                            y: We + Ft
                        }
                    }
                    return {
                        left: 0,
                        right: 0,
                        top: 0,
                        bottom: 0,
                        x: 0,
                        y: 0
                    }
                }
                setSize() {
                    if (this.elementViewChild?.nativeElement) {
                        const N = this.elementViewChild.nativeElement.parentElement.parentElement
                          , me = this._scrollWidth || `${this.elementViewChild.nativeElement.offsetWidth || N.offsetWidth}px`
                          , Ve = this._scrollHeight || `${this.elementViewChild.nativeElement.offsetHeight || N.offsetHeight}px`
                          , We = (Ft,Jt)=>this.elementViewChild.nativeElement.style[Ft] = Jt;
                        this.both || this.horizontal ? (We("height", Ve),
                        We("width", me)) : We("height", Ve)
                    }
                }
                setSpacerSize() {
                    if (this._items) {
                        const N = this.getContentPosition()
                          , me = (Ve,We,Ft,Jt=0)=>this.spacerStyle = {
                            ...this.spacerStyle,
                            [`${Ve}`]: (We || []).length * Ft + Jt + "px"
                        };
                        this.both ? (me("height", this._items, this._itemSize[0], N.y),
                        me("width", this._columns || this._items[1], this._itemSize[1], N.x)) : this.horizontal ? me("width", this._columns || this._items, this._itemSize, N.x) : me("height", this._items, this._itemSize, N.y)
                    }
                }
                setContentPosition(N) {
                    if (this.contentEl) {
                        const me = N ? N.first : this.first
                          , Ve = (Ft,Jt)=>Ft * Jt
                          , We = (Ft=0,Jt=0)=>this.contentStyle = {
                            ...this.contentStyle,
                            transform: `translate3d(${Ft}px, ${Jt}px, 0)`
                        };
                        if (this.both)
                            We(Ve(me.cols, this._itemSize[1]), Ve(me.rows, this._itemSize[0]));
                        else {
                            const Ft = Ve(me, this._itemSize);
                            this.horizontal ? We(Ft, 0) : We(0, Ft)
                        }
                    }
                }
                onScrollPositionChange(N) {
                    const me = N.target
                      , Ve = this.getContentPosition()
                      , We = (Dn,Hn)=>Dn ? Dn > Hn ? Dn - Hn : Dn : 0
                      , Ft = (Dn,Hn)=>Math.floor(Dn / (Hn || Dn))
                      , Jt = (Dn,Hn,bn,yi,Mn,ti)=>Dn <= Mn ? Mn : ti ? bn - yi - Mn : Hn + Mn - 1
                      , Bn = (Dn,Hn,bn,yi,Mn,ti,Mi)=>Dn <= ti ? 0 : Math.max(0, Mi ? Dn < Hn ? bn : Dn - ti : Dn > Hn ? bn : Dn - 2 * ti)
                      , Rn = (Dn,Hn,bn,yi,Mn,ti=!1)=>{
                        let Mi = Hn + yi + 2 * Mn;
                        return Dn >= Mn && (Mi += Mn + 1),
                        this.getLast(Mi, ti)
                    }
                      , dn = We(me.scrollTop, Ve.top)
                      , Ri = We(me.scrollLeft, Ve.left);
                    let Zn = this.both ? {
                        rows: 0,
                        cols: 0
                    } : 0
                      , ui = this.last
                      , ji = !1
                      , li = this.lastScrollPos;
                    if (this.both) {
                        const Dn = this.lastScrollPos.top <= dn
                          , Hn = this.lastScrollPos.left <= Ri
                          , bn = {
                            rows: Ft(dn, this._itemSize[0]),
                            cols: Ft(Ri, this._itemSize[1])
                        }
                          , yi = {
                            rows: Jt(bn.rows, this.first.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0], Dn),
                            cols: Jt(bn.cols, this.first.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], Hn)
                        };
                        Zn = {
                            rows: Bn(bn.rows, yi.rows, this.first.rows, 0, 0, this.d_numToleratedItems[0], Dn),
                            cols: Bn(bn.cols, yi.cols, this.first.cols, 0, 0, this.d_numToleratedItems[1], Hn)
                        },
                        ui = {
                            rows: Rn(bn.rows, Zn.rows, 0, this.numItemsInViewport.rows, this.d_numToleratedItems[0]),
                            cols: Rn(bn.cols, Zn.cols, 0, this.numItemsInViewport.cols, this.d_numToleratedItems[1], !0)
                        },
                        ji = Zn.rows !== this.first.rows || ui.rows !== this.last.rows || Zn.cols !== this.first.cols || ui.cols !== this.last.cols,
                        li = {
                            top: dn,
                            left: Ri
                        }
                    } else {
                        const Dn = this.horizontal ? Ri : dn
                          , Hn = this.lastScrollPos <= Dn
                          , bn = Ft(Dn, this._itemSize);
                        Zn = Bn(bn, Jt(bn, this.first, this.last, this.numItemsInViewport, this.d_numToleratedItems, Hn), this.first, 0, 0, this.d_numToleratedItems, Hn),
                        ui = Rn(bn, Zn, 0, this.numItemsInViewport, this.d_numToleratedItems),
                        ji = Zn !== this.first || ui !== this.last,
                        li = Dn
                    }
                    return {
                        first: Zn,
                        last: ui,
                        isRangeChanged: ji,
                        scrollPos: li
                    }
                }
                onScrollChange(N) {
                    const {first: me, last: Ve, isRangeChanged: We, scrollPos: Ft} = this.onScrollPositionChange(N);
                    if (We) {
                        const Jt = {
                            first: me,
                            last: Ve
                        };
                        this.setContentPosition(Jt),
                        this.first = me,
                        this.last = Ve,
                        this.lastScrollPos = Ft,
                        this.handleEvents("onScrollIndexChange", Jt),
                        this._lazy && this.handleEvents("onLazyLoad", Jt)
                    }
                }
                onContainerScroll(N) {
                    if (this.handleEvents("onScroll", {
                        originalEvent: N
                    }),
                    this._delay) {
                        if (this.scrollTimeout && clearTimeout(this.scrollTimeout),
                        !this.d_loading && this.showLoader) {
                            const {isRangeChanged: me} = this.onScrollPositionChange(N);
                            me && (this.d_loading = !0,
                            this.cd.detectChanges())
                        }
                        this.scrollTimeout = setTimeout(()=>{
                            this.onScrollChange(N),
                            this.d_loading && this.showLoader && (!this._lazy || void 0 === this._loading) && (this.d_loading = !1,
                            this.cd.detectChanges())
                        }
                        , this._delay)
                    } else
                        this.onScrollChange(N)
                }
                onWindowResize() {
                    this.resizeTimeout && clearTimeout(this.resizeTimeout),
                    this.resizeTimeout = setTimeout(()=>{
                        if (this.elementViewChild) {
                            const [N,me] = [H.p.getWidth(this.elementViewChild.nativeElement), H.p.getHeight(this.elementViewChild.nativeElement)]
                              , [Ve,We] = [N !== this.defaultWidth, me !== this.defaultHeight];
                            (this.both ? Ve || We : this.horizontal ? Ve : this.vertical && We) && this.zone.run(()=>{
                                this.d_numToleratedItems = this._numToleratedItems,
                                this.defaultWidth = N,
                                this.defaultHeight = me,
                                this.init()
                            }
                            )
                        }
                    }
                    , this._resizeDelay)
                }
                handleEvents(N, me) {
                    return this.options && this.options[N] ? this.options[N](me) : this[N].emit(me)
                }
                getContentOptions() {
                    return {
                        contentStyleClass: "p-scroller-content " + (this.d_loading ? "p-scroller-loading" : ""),
                        items: this.loadedItems,
                        getItemOptions: N=>this.getOptions(N),
                        loading: this.d_loading,
                        getLoaderOptions: (N,me)=>this.getLoaderOptions(N, me),
                        itemSize: this._itemSize,
                        rows: this.loadedRows,
                        columns: this.loadedColumns,
                        spacerStyle: this.spacerStyle,
                        contentStyle: this.contentStyle,
                        vertical: this.vertical,
                        horizontal: this.horizontal,
                        both: this.both
                    }
                }
                getOptions(N) {
                    const me = (this._items || []).length
                      , Ve = this.both ? this.first.rows + N : this.first + N;
                    return {
                        index: Ve,
                        count: me,
                        first: 0 === Ve,
                        last: Ve === me - 1,
                        even: Ve % 2 == 0,
                        odd: Ve % 2 != 0
                    }
                }
                getLoaderOptions(N, me) {
                    const Ve = this.loaderArr.length;
                    return {
                        index: N,
                        count: Ve,
                        first: 0 === N,
                        last: N === Ve - 1,
                        even: N % 2 == 0,
                        odd: N % 2 != 0,
                        ...me
                    }
                }
            }
            return xe.\u0275fac = function(N) {
                return new (N || xe)(i.Y36(i.sBO),i.Y36(i.R0b))
            }
            ,
            xe.\u0275cmp = i.Xpm({
                type: xe,
                selectors: [["p-scroller"]],
                contentQueries: function(N, me, Ve) {
                    if (1 & N && i.Suo(Ve, ue.jx, 4),
                    2 & N) {
                        let We;
                        i.iGM(We = i.CRH()) && (me.templates = We)
                    }
                },
                viewQuery: function(N, me) {
                    if (1 & N && (i.Gf(le, 5),
                    i.Gf(W, 5)),
                    2 & N) {
                        let Ve;
                        i.iGM(Ve = i.CRH()) && (me.elementViewChild = Ve.first),
                        i.iGM(Ve = i.CRH()) && (me.contentViewChild = Ve.first)
                    }
                },
                hostAttrs: [1, "p-scroller-viewport", "p-element"],
                inputs: {
                    id: "id",
                    style: "style",
                    styleClass: "styleClass",
                    tabindex: "tabindex",
                    items: "items",
                    itemSize: "itemSize",
                    scrollHeight: "scrollHeight",
                    scrollWidth: "scrollWidth",
                    orientation: "orientation",
                    delay: "delay",
                    resizeDelay: "resizeDelay",
                    lazy: "lazy",
                    disabled: "disabled",
                    loaderDisabled: "loaderDisabled",
                    columns: "columns",
                    showSpacer: "showSpacer",
                    showLoader: "showLoader",
                    numToleratedItems: "numToleratedItems",
                    loading: "loading",
                    autoSize: "autoSize",
                    trackBy: "trackBy",
                    options: "options"
                },
                outputs: {
                    onLazyLoad: "onLazyLoad",
                    onScroll: "onScroll",
                    onScrollIndexChange: "onScrollIndexChange"
                },
                features: [i.TTD],
                ngContentSelectors: pe,
                decls: 3,
                vars: 2,
                consts: [[4, "ngIf", "ngIfElse"], ["disabledContainer", ""], [3, "ngStyle", "ngClass", "scroll"], ["element", ""], ["buildInContent", ""], ["class", "p-scroller-spacer", 3, "ngStyle", 4, "ngIf"], ["class", "p-scroller-loader", 3, "ngClass", 4, "ngIf"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "p-scroller-content", 3, "ngClass", "ngStyle"], ["content", ""], [4, "ngFor", "ngForOf", "ngForTrackBy"], [1, "p-scroller-spacer", 3, "ngStyle"], [1, "p-scroller-loader", 3, "ngClass"], ["buildInLoader", ""], [4, "ngFor", "ngForOf"], ["buildInLoaderIcon", ""], [1, "p-scroller-loading-icon", "pi", "pi-spinner", "pi-spin"], [4, "ngIf"]],
                template: function(N, me) {
                    if (1 & N && (i.F$t(),
                    i.YNc(0, It, 8, 13, "ng-container", 0),
                    i.YNc(1, be, 2, 1, "ng-template", null, 1, i.W1O)),
                    2 & N) {
                        const Ve = i.MAs(2);
                        i.Q6J("ngIf", !me._disabled)("ngIfElse", Ve)
                    }
                },
                dependencies: [q.mk, q.sg, q.O5, q.tP, q.PC],
                styles: ["p-scroller{flex:1;outline:0 none}.p-scroller{position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;outline:0 none}.p-scroller-content{position:absolute;top:0;left:0;min-height:100%;min-width:100%;will-change:transform}.p-scroller-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0;pointer-events:none}.p-scroller-loader{position:sticky;top:0;left:0;width:100%;height:100%}.p-scroller-loader.p-component-overlay{display:flex;align-items:center;justify-content:center}.p-scroller-loading-icon{font-size:2rem}\n"],
                encapsulation: 2
            }),
            xe
        }
        )()
          , Mt = (()=>{
            class xe {
            }
            return xe.\u0275fac = function(N) {
                return new (N || xe)
            }
            ,
            xe.\u0275mod = i.oAB({
                type: xe
            }),
            xe.\u0275inj = i.cJS({
                imports: [q.ez]
            }),
            xe
        }
        )();
        var kt = D(4538)
          , Xt = D(174);
        function bt(xe, wt) {
            if (1 & xe && (i.TgZ(0, "span"),
            i._uU(1),
            i.qZA()),
            2 & xe) {
                const N = i.oxw();
                i.xp6(1),
                i.Oqu(N.label || "empty")
            }
        }
        function Kt(xe, wt) {
            1 & xe && i.GkF(0)
        }
        const k = function(xe) {
            return {
                height: xe
            }
        }
          , de = function(xe, wt) {
            return {
                "p-dropdown-item": !0,
                "p-highlight": xe,
                "p-disabled": wt
            }
        }
          , he = function(xe) {
            return {
                $implicit: xe
            }
        }
          , Ie = ["container"]
          , gt = ["filter"]
          , Qe = ["in"]
          , Tt = ["editableInput"]
          , wn = ["items"]
          , an = ["scroller"];
        function In(xe, wt) {
            if (1 & xe && (i.ynx(0),
            i._uU(1),
            i.BQk()),
            2 & xe) {
                const N = i.oxw(2);
                i.xp6(1),
                i.Oqu(N.label || "empty")
            }
        }
        function $t(xe, wt) {
            1 & xe && i.GkF(0)
        }
        const gn = function(xe) {
            return {
                "p-dropdown-label p-inputtext": !0,
                "p-dropdown-label-empty": xe
            }
        };
        function qn(xe, wt) {
            if (1 & xe && (i.TgZ(0, "span", 12),
            i.YNc(1, In, 2, 1, "ng-container", 13),
            i.YNc(2, $t, 1, 0, "ng-container", 14),
            i.qZA()),
            2 & xe) {
                const N = i.oxw();
                i.Q6J("ngClass", i.VKq(9, gn, null == N.label || 0 === N.label.length))("pTooltip", N.tooltip)("tooltipPosition", N.tooltipPosition)("positionStyle", N.tooltipPositionStyle)("tooltipStyleClass", N.tooltipStyleClass),
                i.uIk("id", N.labelId),
                i.xp6(1),
                i.Q6J("ngIf", !N.selectedItemTemplate),
                i.xp6(1),
                i.Q6J("ngTemplateOutlet", N.selectedItemTemplate)("ngTemplateOutletContext", i.VKq(11, he, N.selectedOption))
            }
        }
        const xn = function(xe) {
            return {
                "p-dropdown-label p-inputtext p-placeholder": !0,
                "p-dropdown-label-empty": xe
            }
        };
        function Xn(xe, wt) {
            if (1 & xe && (i.TgZ(0, "span", 15),
            i._uU(1),
            i.qZA()),
            2 & xe) {
                const N = i.oxw();
                i.Q6J("ngClass", i.VKq(2, xn, null == N.placeholder || 0 === N.placeholder.length)),
                i.xp6(1),
                i.Oqu(N.placeholder || "empty")
            }
        }
        function vi(xe, wt) {
            if (1 & xe) {
                const N = i.EpF();
                i.TgZ(0, "input", 16, 17),
                i.NdJ("click", function() {
                    i.CHM(N);
                    const Ve = i.oxw();
                    return i.KtG(Ve.onEditableInputClick())
                })("input", function(Ve) {
                    i.CHM(N);
                    const We = i.oxw();
                    return i.KtG(We.onEditableInputChange(Ve))
                })("focus", function(Ve) {
                    i.CHM(N);
                    const We = i.oxw();
                    return i.KtG(We.onEditableInputFocus(Ve))
                })("blur", function(Ve) {
                    i.CHM(N);
                    const We = i.oxw();
                    return i.KtG(We.onInputBlur(Ve))
                }),
                i.qZA()
            }
            if (2 & xe) {
                const N = i.oxw();
                i.Q6J("disabled", N.disabled),
                i.uIk("maxlength", N.maxlength)("placeholder", N.placeholder)("aria-expanded", N.overlayVisible)
            }
        }
        function Tn(xe, wt) {
            if (1 & xe) {
                const N = i.EpF();
                i.TgZ(0, "i", 18),
                i.NdJ("click", function(Ve) {
                    i.CHM(N);
                    const We = i.oxw();
                    return i.KtG(We.clear(Ve))
                }),
                i.qZA()
            }
        }
        function vt(xe, wt) {
            1 & xe && i.GkF(0)
        }
        function Le(xe, wt) {
            1 & xe && i.GkF(0)
        }
        const Ee = function(xe) {
            return {
                options: xe
            }
        };
        function dt(xe, wt) {
            if (1 & xe && (i.ynx(0),
            i.YNc(1, Le, 1, 0, "ng-container", 14),
            i.BQk()),
            2 & xe) {
                const N = i.oxw(3);
                i.xp6(1),
                i.Q6J("ngTemplateOutlet", N.filterTemplate)("ngTemplateOutletContext", i.VKq(2, Ee, N.filterOptions))
            }
        }
        function Et(xe, wt) {
            if (1 & xe) {
                const N = i.EpF();
                i.TgZ(0, "div", 27)(1, "input", 28, 29),
                i.NdJ("keydown.enter", function(Ve) {
                    return Ve.preventDefault()
                })("keydown", function(Ve) {
                    i.CHM(N);
                    const We = i.oxw(3);
                    return i.KtG(We.onKeydown(Ve, !1))
                })("input", function(Ve) {
                    i.CHM(N);
                    const We = i.oxw(3);
                    return i.KtG(We.onFilterInputChange(Ve))
                }),
                i.qZA(),
                i._UZ(3, "span", 30),
                i.qZA()
            }
            if (2 & xe) {
                const N = i.oxw(3);
                i.xp6(1),
                i.Q6J("value", N.filterValue || ""),
                i.uIk("placeholder", N.filterPlaceholder)("aria-label", N.ariaFilterLabel)("aria-activedescendant", N.overlayVisible ? "p-highlighted-option" : N.labelId)
            }
        }
        function ln(xe, wt) {
            if (1 & xe && (i.TgZ(0, "div", 24),
            i.NdJ("click", function(me) {
                return me.stopPropagation()
            }),
            i.YNc(1, dt, 2, 4, "ng-container", 25),
            i.YNc(2, Et, 4, 4, "ng-template", null, 26, i.W1O),
            i.qZA()),
            2 & xe) {
                const N = i.MAs(3)
                  , me = i.oxw(2);
                i.xp6(1),
                i.Q6J("ngIf", me.filterTemplate)("ngIfElse", N)
            }
        }
        function pn(xe, wt) {
            1 & xe && i.GkF(0)
        }
        const Pn = function(xe, wt) {
            return {
                $implicit: xe,
                options: wt
            }
        };
        function Vt(xe, wt) {
            if (1 & xe && i.YNc(0, pn, 1, 0, "ng-container", 14),
            2 & xe) {
                const N = wt.$implicit
                  , me = wt.options;
                i.oxw(2);
                const Ve = i.MAs(7);
                i.Q6J("ngTemplateOutlet", Ve)("ngTemplateOutletContext", i.WLB(2, Pn, N, me))
            }
        }
        function $n(xe, wt) {
            1 & xe && i.GkF(0)
        }
        function An(xe, wt) {
            if (1 & xe && i.YNc(0, $n, 1, 0, "ng-container", 14),
            2 & xe) {
                const N = wt.options
                  , me = i.oxw(4);
                i.Q6J("ngTemplateOutlet", me.loaderTemplate)("ngTemplateOutletContext", i.VKq(2, Ee, N))
            }
        }
        function oi(xe, wt) {
            1 & xe && (i.ynx(0),
            i.YNc(1, An, 1, 4, "ng-template", 34),
            i.BQk())
        }
        function un(xe, wt) {
            if (1 & xe) {
                const N = i.EpF();
                i.TgZ(0, "p-scroller", 31, 32),
                i.NdJ("onLazyLoad", function(Ve) {
                    i.CHM(N);
                    const We = i.oxw(2);
                    return i.KtG(We.onLazyLoad.emit(Ve))
                }),
                i.YNc(2, Vt, 1, 5, "ng-template", 33),
                i.YNc(3, oi, 2, 0, "ng-container", 13),
                i.qZA()
            }
            if (2 & xe) {
                const N = i.oxw(2);
                i.Akn(i.VKq(8, k, N.scrollHeight)),
                i.Q6J("items", N.optionsToDisplay)("itemSize", N.virtualScrollItemSize || N._itemSize)("autoSize", !0)("lazy", N.lazy)("options", N.virtualScrollOptions),
                i.xp6(3),
                i.Q6J("ngIf", N.loaderTemplate)
            }
        }
        function jt(xe, wt) {
            1 & xe && i.GkF(0)
        }
        const yn = function() {
            return {}
        };
        function ai(xe, wt) {
            if (1 & xe && (i.ynx(0),
            i.YNc(1, jt, 1, 0, "ng-container", 14),
            i.BQk()),
            2 & xe) {
                i.oxw();
                const N = i.MAs(7)
                  , me = i.oxw();
                i.xp6(1),
                i.Q6J("ngTemplateOutlet", N)("ngTemplateOutletContext", i.WLB(3, Pn, me.optionsToDisplay, i.DdM(2, yn)))
            }
        }
        function Zt(xe, wt) {
            if (1 & xe && (i.TgZ(0, "span"),
            i._uU(1),
            i.qZA()),
            2 & xe) {
                const N = i.oxw().$implicit
                  , me = i.oxw(4);
                i.xp6(1),
                i.Oqu(me.getOptionGroupLabel(N) || "empty")
            }
        }
        function ei(xe, wt) {
            1 & xe && i.GkF(0)
        }
        function Si(xe, wt) {
            1 & xe && i.GkF(0)
        }
        const _i = function(xe, wt) {
            return {
                $implicit: xe,
                selectedOption: wt
            }
        };
        function wi(xe, wt) {
            if (1 & xe && (i.TgZ(0, "li", 40),
            i.YNc(1, Zt, 2, 1, "span", 13),
            i.YNc(2, ei, 1, 0, "ng-container", 14),
            i.qZA(),
            i.YNc(3, Si, 1, 0, "ng-container", 14)),
            2 & xe) {
                const N = wt.$implicit
                  , me = i.oxw(2).options
                  , Ve = i.MAs(5)
                  , We = i.oxw(2);
                i.Q6J("ngStyle", i.VKq(6, k, me.itemSize + "px")),
                i.xp6(1),
                i.Q6J("ngIf", !We.groupTemplate),
                i.xp6(1),
                i.Q6J("ngTemplateOutlet", We.groupTemplate)("ngTemplateOutletContext", i.VKq(8, he, N)),
                i.xp6(1),
                i.Q6J("ngTemplateOutlet", Ve)("ngTemplateOutletContext", i.WLB(10, _i, We.getOptionGroupChildren(N), We.selectedOption))
            }
        }
        function Ti(xe, wt) {
            if (1 & xe && (i.ynx(0),
            i.YNc(1, wi, 4, 13, "ng-template", 39),
            i.BQk()),
            2 & xe) {
                const N = i.oxw().$implicit;
                i.xp6(1),
                i.Q6J("ngForOf", N)
            }
        }
        function zi(xe, wt) {
            1 & xe && i.GkF(0)
        }
        function Ji(xe, wt) {
            if (1 & xe && (i.ynx(0),
            i.YNc(1, zi, 1, 0, "ng-container", 14),
            i.BQk()),
            2 & xe) {
                const N = i.oxw().$implicit
                  , me = i.MAs(5)
                  , Ve = i.oxw(2);
                i.xp6(1),
                i.Q6J("ngTemplateOutlet", me)("ngTemplateOutletContext", i.WLB(2, _i, N, Ve.selectedOption))
            }
        }
        function Li(xe, wt) {
            if (1 & xe) {
                const N = i.EpF();
                i.TgZ(0, "p-dropdownItem", 41),
                i.NdJ("onClick", function(Ve) {
                    i.CHM(N);
                    const We = i.oxw(4);
                    return i.KtG(We.onItemClick(Ve))
                }),
                i.qZA()
            }
            if (2 & xe) {
                const N = wt.$implicit
                  , me = i.oxw().selectedOption
                  , Ve = i.oxw(3);
                i.Q6J("option", N)("selected", me == N)("label", Ve.getOptionLabel(N))("disabled", Ve.isOptionDisabled(N))("template", Ve.itemTemplate)
            }
        }
        function He(xe, wt) {
            1 & xe && i.YNc(0, Li, 1, 5, "ng-template", 39),
            2 & xe && i.Q6J("ngForOf", wt.$implicit)
        }
        function Lt(xe, wt) {
            if (1 & xe && (i.ynx(0),
            i._uU(1),
            i.BQk()),
            2 & xe) {
                const N = i.oxw(4);
                i.xp6(1),
                i.hij(" ", N.emptyFilterMessageLabel, " ")
            }
        }
        function x(xe, wt) {
            1 & xe && i.GkF(0, null, 43)
        }
        function oe(xe, wt) {
            if (1 & xe && (i.TgZ(0, "li", 42),
            i.YNc(1, Lt, 2, 1, "ng-container", 25),
            i.YNc(2, x, 2, 0, "ng-container", 19),
            i.qZA()),
            2 & xe) {
                const N = i.oxw().options
                  , me = i.oxw(2);
                i.Q6J("ngStyle", i.VKq(4, k, N.itemSize + "px")),
                i.xp6(1),
                i.Q6J("ngIf", !me.emptyFilterTemplate && !me.emptyTemplate)("ngIfElse", me.emptyFilter),
                i.xp6(1),
                i.Q6J("ngTemplateOutlet", me.emptyFilterTemplate || me.emptyTemplate)
            }
        }
        function Me(xe, wt) {
            if (1 & xe && (i.ynx(0),
            i._uU(1),
            i.BQk()),
            2 & xe) {
                const N = i.oxw(4);
                i.xp6(1),
                i.hij(" ", N.emptyMessageLabel, " ")
            }
        }
        function Ge(xe, wt) {
            1 & xe && i.GkF(0, null, 44)
        }
        function K(xe, wt) {
            if (1 & xe && (i.TgZ(0, "li", 42),
            i.YNc(1, Me, 2, 1, "ng-container", 25),
            i.YNc(2, Ge, 2, 0, "ng-container", 19),
            i.qZA()),
            2 & xe) {
                const N = i.oxw().options
                  , me = i.oxw(2);
                i.Q6J("ngStyle", i.VKq(4, k, N.itemSize + "px")),
                i.xp6(1),
                i.Q6J("ngIf", !me.emptyTemplate)("ngIfElse", me.empty),
                i.xp6(1),
                i.Q6J("ngTemplateOutlet", me.emptyTemplate)
            }
        }
        function J(xe, wt) {
            if (1 & xe && (i.TgZ(0, "ul", 35, 36),
            i.YNc(2, Ti, 2, 1, "ng-container", 13),
            i.YNc(3, Ji, 2, 5, "ng-container", 13),
            i.YNc(4, He, 1, 1, "ng-template", null, 37, i.W1O),
            i.YNc(6, oe, 3, 6, "li", 38),
            i.YNc(7, K, 3, 6, "li", 38),
            i.qZA()),
            2 & xe) {
                const N = wt.options
                  , me = i.oxw(2);
                i.Akn(N.contentStyle),
                i.Q6J("ngClass", N.contentStyleClass),
                i.uIk("id", me.listId),
                i.xp6(2),
                i.Q6J("ngIf", me.group),
                i.xp6(1),
                i.Q6J("ngIf", !me.group),
                i.xp6(3),
                i.Q6J("ngIf", me.filterValue && me.isEmpty()),
                i.xp6(1),
                i.Q6J("ngIf", !me.filterValue && me.isEmpty())
            }
        }
        function Y(xe, wt) {
            1 & xe && i.GkF(0)
        }
        const Te = function(xe, wt) {
            return {
                showTransitionParams: xe,
                hideTransitionParams: wt
            }
        }
          , nt = function(xe) {
            return {
                value: "visible",
                params: xe
            }
        };
        function Rt(xe, wt) {
            if (1 & xe) {
                const N = i.EpF();
                i.TgZ(0, "div", 0),
                i.NdJ("click", function(Ve) {
                    i.CHM(N);
                    const We = i.oxw();
                    return i.KtG(We.onOverlayClick(Ve))
                })("@overlayAnimation.start", function(Ve) {
                    i.CHM(N);
                    const We = i.oxw();
                    return i.KtG(We.onOverlayAnimationStart(Ve))
                })("@overlayAnimation.done", function(Ve) {
                    i.CHM(N);
                    const We = i.oxw();
                    return i.KtG(We.onOverlayAnimationEnd(Ve))
                }),
                i.YNc(1, vt, 1, 0, "ng-container", 19),
                i.YNc(2, ln, 4, 2, "div", 20),
                i.TgZ(3, "div", 21),
                i.YNc(4, un, 4, 10, "p-scroller", 22),
                i.YNc(5, ai, 2, 6, "ng-container", 13),
                i.YNc(6, J, 8, 8, "ng-template", null, 23, i.W1O),
                i.qZA(),
                i.YNc(8, Y, 1, 0, "ng-container", 19),
                i.qZA()
            }
            if (2 & xe) {
                const N = i.oxw();
                i.Tol(N.panelStyleClass),
                i.Q6J("ngClass", "p-dropdown-panel p-component")("@overlayAnimation", i.VKq(15, nt, i.WLB(12, Te, N.showTransitionOptions, N.hideTransitionOptions)))("ngStyle", N.panelStyle),
                i.xp6(1),
                i.Q6J("ngTemplateOutlet", N.headerTemplate),
                i.xp6(1),
                i.Q6J("ngIf", N.filter),
                i.xp6(1),
                i.Udp("max-height", N.virtualScroll ? "auto" : N.scrollHeight || "auto"),
                i.xp6(1),
                i.Q6J("ngIf", N.virtualScroll),
                i.xp6(1),
                i.Q6J("ngIf", !N.virtualScroll),
                i.xp6(3),
                i.Q6J("ngTemplateOutlet", N.footerTemplate)
            }
        }
        const rn = function(xe, wt, N, me) {
            return {
                "p-dropdown p-component": !0,
                "p-disabled": xe,
                "p-dropdown-open": wt,
                "p-focus": N,
                "p-dropdown-clearable": me
            }
        }
          , fn = {
            provide: z.JU,
            useExisting: (0,
            i.Gpc)(()=>hi),
            multi: !0
        };
        let Wn = (()=>{
            class xe {
                constructor() {
                    this.onClick = new i.vpe
                }
                onOptionClick(N) {
                    this.onClick.emit({
                        originalEvent: N,
                        option: this.option
                    })
                }
            }
            return xe.\u0275fac = function(N) {
                return new (N || xe)
            }
            ,
            xe.\u0275cmp = i.Xpm({
                type: xe,
                selectors: [["p-dropdownItem"]],
                hostAttrs: [1, "p-element"],
                inputs: {
                    option: "option",
                    selected: "selected",
                    label: "label",
                    disabled: "disabled",
                    visible: "visible",
                    itemSize: "itemSize",
                    template: "template"
                },
                outputs: {
                    onClick: "onClick"
                },
                decls: 3,
                vars: 15,
                consts: [["role", "option", "pRipple", "", 3, "ngStyle", "id", "ngClass", "click"], [4, "ngIf"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"]],
                template: function(N, me) {
                    1 & N && (i.TgZ(0, "li", 0),
                    i.NdJ("click", function(We) {
                        return me.onOptionClick(We)
                    }),
                    i.YNc(1, bt, 2, 1, "span", 1),
                    i.YNc(2, Kt, 1, 0, "ng-container", 2),
                    i.qZA()),
                    2 & N && (i.Q6J("ngStyle", i.VKq(8, k, me.itemSize + "px"))("id", me.selected ? "p-highlighted-option" : "")("ngClass", i.WLB(10, de, me.selected, me.disabled)),
                    i.uIk("aria-label", me.label)("aria-selected", me.selected),
                    i.xp6(1),
                    i.Q6J("ngIf", !me.template),
                    i.xp6(1),
                    i.Q6J("ngTemplateOutlet", me.template)("ngTemplateOutletContext", i.VKq(13, he, me.option)))
                },
                dependencies: [q.mk, q.O5, q.tP, q.PC, kt.H],
                encapsulation: 2
            }),
            xe
        }
        )()
          , hi = (()=>{
            class xe {
                constructor(N, me, Ve, We, Ft, Jt, Bn) {
                    this.el = N,
                    this.renderer = me,
                    this.cd = Ve,
                    this.zone = We,
                    this.filterService = Ft,
                    this.config = Jt,
                    this.overlayService = Bn,
                    this.scrollHeight = "200px",
                    this.resetFilterOnHide = !1,
                    this.dropdownIcon = "pi pi-chevron-down",
                    this.optionGroupChildren = "items",
                    this.autoDisplayFirst = !0,
                    this.emptyFilterMessage = "",
                    this.emptyMessage = "",
                    this.lazy = !1,
                    this.autoZIndex = !0,
                    this.baseZIndex = 0,
                    this.showTransitionOptions = ".12s cubic-bezier(0, 0, 0.2, 1)",
                    this.hideTransitionOptions = ".1s linear",
                    this.filterMatchMode = "contains",
                    this.tooltip = "",
                    this.tooltipPosition = "right",
                    this.tooltipPositionStyle = "absolute",
                    this.autofocusFilter = !0,
                    this.onChange = new i.vpe,
                    this.onFilter = new i.vpe,
                    this.onFocus = new i.vpe,
                    this.onBlur = new i.vpe,
                    this.onClick = new i.vpe,
                    this.onShow = new i.vpe,
                    this.onHide = new i.vpe,
                    this.onClear = new i.vpe,
                    this.onLazyLoad = new i.vpe,
                    this.onModelChange = ()=>{}
                    ,
                    this.onModelTouched = ()=>{}
                    ,
                    this.id = (0,
                    U.Th)()
                }
                get disabled() {
                    return this._disabled
                }
                set disabled(N) {
                    N && (this.focused = !1,
                    this.overlayVisible && this.hide()),
                    this._disabled = N,
                    this.cd.destroyed || this.cd.detectChanges()
                }
                get itemSize() {
                    return this._itemSize
                }
                set itemSize(N) {
                    this._itemSize = N,
                    console.warn("The itemSize property is deprecated, use virtualScrollItemSize property instead.")
                }
                ngAfterContentInit() {
                    this.templates.forEach(N=>{
                        switch (N.getType()) {
                        case "item":
                        default:
                            this.itemTemplate = N.template;
                            break;
                        case "selectedItem":
                            this.selectedItemTemplate = N.template;
                            break;
                        case "header":
                            this.headerTemplate = N.template;
                            break;
                        case "filter":
                            this.filterTemplate = N.template;
                            break;
                        case "footer":
                            this.footerTemplate = N.template;
                            break;
                        case "emptyfilter":
                            this.emptyFilterTemplate = N.template;
                            break;
                        case "empty":
                            this.emptyTemplate = N.template;
                            break;
                        case "group":
                            this.groupTemplate = N.template;
                            break;
                        case "loader":
                            this.loaderTemplate = N.template
                        }
                    }
                    )
                }
                ngOnInit() {
                    this.optionsToDisplay = this.options,
                    this.updateSelectedOption(null),
                    this.labelId = this.id + "_label",
                    this.listId = this.id + "_list",
                    this.filterBy && (this.filterOptions = {
                        filter: N=>this.onFilterInputChange(N),
                        reset: ()=>this.resetFilter()
                    })
                }
                get options() {
                    return this._options
                }
                set options(N) {
                    this._options = N,
                    this.optionsToDisplay = this._options,
                    this.updateSelectedOption(this.value),
                    this.selectedOption = this.findOption(this.value, this.optionsToDisplay),
                    !this.selectedOption && U.gb.isNotEmpty(this.value) && !this.editable && (this.value = null,
                    this.onModelChange(this.value)),
                    this.optionsChanged = !0,
                    this._filterValue && this._filterValue.length && this.activateFilter()
                }
                get filterValue() {
                    return this._filterValue
                }
                set filterValue(N) {
                    this._filterValue = N,
                    this.activateFilter()
                }
                ngAfterViewInit() {
                    this.editable && this.updateEditableLabel()
                }
                get label() {
                    return this.selectedOption ? this.getOptionLabel(this.selectedOption) : null
                }
                get emptyMessageLabel() {
                    return this.emptyMessage || this.config.getTranslation(ue.ws.EMPTY_MESSAGE)
                }
                get emptyFilterMessageLabel() {
                    return this.emptyFilterMessage || this.config.getTranslation(ue.ws.EMPTY_FILTER_MESSAGE)
                }
                get filled() {
                    return "string" == typeof this.value ? !!this.value : this.value || null != this.value || null != this.value
                }
                get isVisibleClearIcon() {
                    return null != this.value && "" !== this.value && this.showClear && !this.disabled
                }
                updateEditableLabel() {
                    this.editableInputViewChild && this.editableInputViewChild.nativeElement && (this.editableInputViewChild.nativeElement.value = this.selectedOption ? this.getOptionLabel(this.selectedOption) : this.value || "")
                }
                getOptionLabel(N) {
                    return this.optionLabel ? U.gb.resolveFieldData(N, this.optionLabel) : N && void 0 !== N.label ? N.label : N
                }
                getOptionValue(N) {
                    return this.optionValue ? U.gb.resolveFieldData(N, this.optionValue) : !this.optionLabel && N && void 0 !== N.value ? N.value : N
                }
                isOptionDisabled(N) {
                    return this.optionDisabled ? U.gb.resolveFieldData(N, this.optionDisabled) : !(!N || void 0 === N.disabled) && N.disabled
                }
                getOptionGroupLabel(N) {
                    return this.optionGroupLabel ? U.gb.resolveFieldData(N, this.optionGroupLabel) : N && void 0 !== N.label ? N.label : N
                }
                getOptionGroupChildren(N) {
                    return this.optionGroupChildren ? U.gb.resolveFieldData(N, this.optionGroupChildren) : N.items
                }
                onItemClick(N) {
                    const me = N.option;
                    this.isOptionDisabled(me) || (this.selectItem(N.originalEvent, me),
                    this.accessibleViewChild.nativeElement.focus({
                        preventScroll: !0
                    })),
                    setTimeout(()=>{
                        this.hide()
                    }
                    , 150)
                }
                selectItem(N, me) {
                    this.selectedOption != me && (this.selectedOption = me,
                    this.value = this.getOptionValue(me),
                    this.onModelChange(this.value),
                    this.updateEditableLabel(),
                    this.onChange.emit({
                        originalEvent: N,
                        value: this.value
                    }))
                }
                ngAfterViewChecked() {
                    this.optionsChanged && this.overlayVisible && (this.optionsChanged = !1,
                    this.zone.runOutsideAngular(()=>{
                        setTimeout(()=>{
                            this.alignOverlay()
                        }
                        , 1)
                    }
                    )),
                    this.selectedOptionUpdated && this.itemsWrapper && (H.p.findSingle(this.overlay, "li.p-highlight") && H.p.scrollInView(this.itemsWrapper, H.p.findSingle(this.overlay, "li.p-highlight")),
                    this.selectedOptionUpdated = !1)
                }
                writeValue(N) {
                    this.filter && this.resetFilter(),
                    this.value = N,
                    this.updateSelectedOption(N),
                    this.updateEditableLabel(),
                    this.cd.markForCheck()
                }
                resetFilter() {
                    this._filterValue = null,
                    this.filterViewChild && this.filterViewChild.nativeElement && (this.filterViewChild.nativeElement.value = ""),
                    this.optionsToDisplay = this.options
                }
                updateSelectedOption(N) {
                    this.selectedOption = this.findOption(N, this.optionsToDisplay),
                    this.autoDisplayFirst && !this.placeholder && !this.selectedOption && this.optionsToDisplay && this.optionsToDisplay.length && !this.editable && (this.selectedOption = this.group ? this.optionsToDisplay[0].items[0] : this.optionsToDisplay[0],
                    this.value = this.getOptionValue(this.selectedOption),
                    this.onModelChange(this.value)),
                    this.selectedOptionUpdated = !0
                }
                registerOnChange(N) {
                    this.onModelChange = N
                }
                registerOnTouched(N) {
                    this.onModelTouched = N
                }
                setDisabledState(N) {
                    this.disabled = N,
                    this.cd.markForCheck()
                }
                onMouseclick(N) {
                    this.disabled || this.readonly || this.isInputClick(N) || (this.onClick.emit(N),
                    this.accessibleViewChild.nativeElement.focus({
                        preventScroll: !0
                    }),
                    this.overlayVisible ? this.hide() : this.show(),
                    this.cd.detectChanges())
                }
                onOverlayClick(N) {
                    this.overlayService.add({
                        originalEvent: N,
                        target: this.el.nativeElement
                    })
                }
                isInputClick(N) {
                    return H.p.hasClass(N.target, "p-dropdown-clear-icon") || N.target.isSameNode(this.accessibleViewChild.nativeElement) || this.editableInputViewChild && N.target.isSameNode(this.editableInputViewChild.nativeElement)
                }
                isOutsideClicked(N) {
                    return !(this.el.nativeElement.isSameNode(N.target) || this.el.nativeElement.contains(N.target) || this.overlay && this.overlay.contains(N.target))
                }
                isEmpty() {
                    return !this.optionsToDisplay || this.optionsToDisplay && 0 === this.optionsToDisplay.length
                }
                onEditableInputClick() {
                    this.bindDocumentClickListener()
                }
                onEditableInputFocus(N) {
                    this.focused = !0,
                    this.hide(),
                    this.onFocus.emit(N)
                }
                onEditableInputChange(N) {
                    this.value = N.target.value,
                    this.updateSelectedOption(this.value),
                    this.onModelChange(this.value),
                    this.onChange.emit({
                        originalEvent: N,
                        value: this.value
                    })
                }
                show() {
                    this.overlayVisible = !0,
                    this.preventDocumentDefault = !0,
                    this.cd.markForCheck()
                }
                onOverlayAnimationStart(N) {
                    switch (N.toState) {
                    case "visible":
                        if (this.overlay = N.element,
                        this.itemsWrapper = H.p.findSingle(this.overlay, this.virtualScroll ? ".p-scroller" : ".p-dropdown-items-wrapper"),
                        this.virtualScroll && this.scroller.setContentEl(this.itemsViewChild.nativeElement),
                        this.appendOverlay(),
                        this.autoZIndex && U.P9.set("overlay", this.overlay, this.baseZIndex + this.config.zIndex.overlay),
                        this.alignOverlay(),
                        this.bindDocumentClickListener(),
                        this.bindDocumentResizeListener(),
                        this.bindScrollListener(),
                        this.options && this.options.length)
                            if (this.virtualScroll) {
                                const me = this.selectedOption ? this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;
                                -1 !== me && this.scroller.scrollToIndex(me)
                            } else {
                                let me = H.p.findSingle(this.itemsWrapper, ".p-dropdown-item.p-highlight");
                                me && me.scrollIntoView({
                                    block: "nearest",
                                    inline: "center"
                                })
                            }
                        this.filterViewChild && this.filterViewChild.nativeElement && (this.preventModelTouched = !0,
                        this.autofocusFilter && this.filterViewChild.nativeElement.focus()),
                        this.onShow.emit(N);
                        break;
                    case "void":
                        this.onOverlayHide(),
                        this.onHide.emit(N)
                    }
                }
                onOverlayAnimationEnd(N) {
                    "void" === N.toState && U.P9.clear(N.element)
                }
                appendOverlay() {
                    this.appendTo && ("body" === this.appendTo ? document.body.appendChild(this.overlay) : H.p.appendChild(this.overlay, this.appendTo),
                    this.overlay.style.minWidth || (this.overlay.style.minWidth = H.p.getWidth(this.containerViewChild.nativeElement) + "px"))
                }
                restoreOverlayAppend() {
                    this.overlay && this.appendTo && this.el.nativeElement.appendChild(this.overlay)
                }
                hide() {
                    this.overlayVisible = !1,
                    this.filter && this.resetFilterOnHide && this.resetFilter(),
                    this.cd.markForCheck()
                }
                alignOverlay() {
                    this.overlay && (this.appendTo ? H.p.absolutePosition(this.overlay, this.containerViewChild.nativeElement) : H.p.relativePosition(this.overlay, this.containerViewChild.nativeElement))
                }
                onInputFocus(N) {
                    this.focused = !0,
                    this.onFocus.emit(N)
                }
                onInputBlur(N) {
                    this.focused = !1,
                    this.onBlur.emit(N),
                    this.preventModelTouched || this.onModelTouched(),
                    this.preventModelTouched = !1
                }
                findPrevEnabledOption(N) {
                    let me;
                    if (this.optionsToDisplay && this.optionsToDisplay.length) {
                        for (let Ve = N - 1; 0 <= Ve; Ve--) {
                            let We = this.optionsToDisplay[Ve];
                            if (!this.isOptionDisabled(We)) {
                                me = We;
                                break
                            }
                        }
                        if (!me)
                            for (let Ve = this.optionsToDisplay.length - 1; Ve >= N; Ve--) {
                                let We = this.optionsToDisplay[Ve];
                                if (!this.isOptionDisabled(We)) {
                                    me = We;
                                    break
                                }
                            }
                    }
                    return me
                }
                findNextEnabledOption(N) {
                    let me;
                    if (this.optionsToDisplay && this.optionsToDisplay.length) {
                        for (let Ve = N + 1; Ve < this.optionsToDisplay.length; Ve++) {
                            let We = this.optionsToDisplay[Ve];
                            if (!this.isOptionDisabled(We)) {
                                me = We;
                                break
                            }
                        }
                        if (!me)
                            for (let Ve = 0; Ve < N; Ve++) {
                                let We = this.optionsToDisplay[Ve];
                                if (!this.isOptionDisabled(We)) {
                                    me = We;
                                    break
                                }
                            }
                    }
                    return me
                }
                onKeydown(N, me) {
                    if (!this.readonly && this.optionsToDisplay && null !== this.optionsToDisplay.length)
                        switch (N.which) {
                        case 40:
                            if (!this.overlayVisible && N.altKey)
                                this.show();
                            else if (this.group) {
                                let Ve = this.selectedOption ? this.findOptionGroupIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;
                                if (-1 !== Ve) {
                                    let We = Ve.itemIndex + 1;
                                    We < this.getOptionGroupChildren(this.optionsToDisplay[Ve.groupIndex]).length ? (this.selectItem(N, this.getOptionGroupChildren(this.optionsToDisplay[Ve.groupIndex])[We]),
                                    this.selectedOptionUpdated = !0) : this.optionsToDisplay[Ve.groupIndex + 1] && (this.selectItem(N, this.getOptionGroupChildren(this.optionsToDisplay[Ve.groupIndex + 1])[0]),
                                    this.selectedOptionUpdated = !0)
                                } else
                                    this.optionsToDisplay && this.optionsToDisplay.length > 0 && this.selectItem(N, this.getOptionGroupChildren(this.optionsToDisplay[0])[0])
                            } else {
                                let Ve = this.selectedOption ? this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1
                                  , We = this.findNextEnabledOption(Ve);
                                We && (this.selectItem(N, We),
                                this.selectedOptionUpdated = !0)
                            }
                            N.preventDefault();
                            break;
                        case 38:
                            if (this.group) {
                                let Ve = this.selectedOption ? this.findOptionGroupIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;
                                if (-1 !== Ve) {
                                    let We = Ve.itemIndex - 1;
                                    if (We >= 0)
                                        this.selectItem(N, this.getOptionGroupChildren(this.optionsToDisplay[Ve.groupIndex])[We]),
                                        this.selectedOptionUpdated = !0;
                                    else if (We < 0) {
                                        let Ft = this.optionsToDisplay[Ve.groupIndex - 1];
                                        Ft && (this.selectItem(N, this.getOptionGroupChildren(Ft)[this.getOptionGroupChildren(Ft).length - 1]),
                                        this.selectedOptionUpdated = !0)
                                    }
                                }
                            } else {
                                let Ve = this.selectedOption ? this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1
                                  , We = this.findPrevEnabledOption(Ve);
                                We && (this.selectItem(N, We),
                                this.selectedOptionUpdated = !0)
                            }
                            N.preventDefault();
                            break;
                        case 32:
                            me && (this.overlayVisible ? this.hide() : this.show(),
                            N.preventDefault());
                            break;
                        case 13:
                            this.overlayVisible && (!this.filter || this.optionsToDisplay && this.optionsToDisplay.length > 0) ? this.hide() : this.overlayVisible || this.show(),
                            N.preventDefault();
                            break;
                        case 27:
                        case 9:
                            this.hide();
                            break;
                        default:
                            me && !N.metaKey && this.search(N)
                        }
                }
                search(N) {
                    this.searchTimeout && clearTimeout(this.searchTimeout);
                    const me = N.key;
                    let Ve;
                    if (this.previousSearchChar = this.currentSearchChar,
                    this.currentSearchChar = me,
                    this.searchValue = this.previousSearchChar === this.currentSearchChar ? this.currentSearchChar : this.searchValue ? this.searchValue + me : me,
                    this.group) {
                        let We = this.selectedOption ? this.findOptionGroupIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : {
                            groupIndex: 0,
                            itemIndex: 0
                        };
                        Ve = this.searchOptionWithinGroup(We)
                    } else {
                        let We = this.selectedOption ? this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;
                        Ve = this.searchOption(++We)
                    }
                    Ve && !this.isOptionDisabled(Ve) && (this.selectItem(N, Ve),
                    this.selectedOptionUpdated = !0),
                    this.searchTimeout = setTimeout(()=>{
                        this.searchValue = null
                    }
                    , 250)
                }
                searchOption(N) {
                    let me;
                    return this.searchValue && (me = this.searchOptionInRange(N, this.optionsToDisplay.length),
                    me || (me = this.searchOptionInRange(0, N))),
                    me
                }
                searchOptionInRange(N, me) {
                    for (let Ve = N; Ve < me; Ve++) {
                        let We = this.optionsToDisplay[Ve];
                        if (this.getOptionLabel(We).toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale)) && !this.isOptionDisabled(We))
                            return We
                    }
                    return null
                }
                searchOptionWithinGroup(N) {
                    if (this.searchValue) {
                        for (let Ve = N.groupIndex; Ve < this.optionsToDisplay.length; Ve++)
                            for (let We = N.groupIndex === Ve ? N.itemIndex + 1 : 0; We < this.getOptionGroupChildren(this.optionsToDisplay[Ve]).length; We++) {
                                let Ft = this.getOptionGroupChildren(this.optionsToDisplay[Ve])[We];
                                if (this.getOptionLabel(Ft).toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale)) && !this.isOptionDisabled(Ft))
                                    return Ft
                            }
                        for (let Ve = 0; Ve <= N.groupIndex; Ve++)
                            for (let We = 0; We < (N.groupIndex === Ve ? N.itemIndex : this.getOptionGroupChildren(this.optionsToDisplay[Ve]).length); We++) {
                                let Ft = this.getOptionGroupChildren(this.optionsToDisplay[Ve])[We];
                                if (this.getOptionLabel(Ft).toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale)) && !this.isOptionDisabled(Ft))
                                    return Ft
                            }
                    }
                    return null
                }
                findOptionIndex(N, me) {
                    let Ve = -1;
                    if (me)
                        for (let We = 0; We < me.length; We++)
                            if (null == N && null == this.getOptionValue(me[We]) || U.gb.equals(N, this.getOptionValue(me[We]), this.dataKey)) {
                                Ve = We;
                                break
                            }
                    return Ve
                }
                findOptionGroupIndex(N, me) {
                    let Ve, We;
                    if (me)
                        for (let Ft = 0; Ft < me.length && (Ve = Ft,
                        We = this.findOptionIndex(N, this.getOptionGroupChildren(me[Ft])),
                        -1 === We); Ft++)
                            ;
                    return -1 !== We ? {
                        groupIndex: Ve,
                        itemIndex: We
                    } : -1
                }
                findOption(N, me, Ve) {
                    if (this.group && !Ve) {
                        let We;
                        if (me && me.length)
                            for (let Ft of me)
                                if (We = this.findOption(N, this.getOptionGroupChildren(Ft), !0),
                                We)
                                    break;
                        return We
                    }
                    {
                        let We = this.findOptionIndex(N, me);
                        return -1 != We ? me[We] : null
                    }
                }
                onFilterInputChange(N) {
                    let me = N.target.value;
                    me && me.length ? (this._filterValue = me,
                    this.activateFilter()) : (this._filterValue = null,
                    this.optionsToDisplay = this.options),
                    this.virtualScroll && this.scroller.scrollToIndex(0),
                    this.optionsChanged = !0,
                    this.onFilter.emit({
                        originalEvent: N,
                        filter: this._filterValue
                    })
                }
                activateFilter() {
                    let N = (this.filterBy || this.optionLabel || "label").split(",");
                    if (this.options && this.options.length) {
                        if (this.group) {
                            let me = [];
                            for (let Ve of this.options) {
                                let We = this.filterService.filter(this.getOptionGroupChildren(Ve), N, this.filterValue, this.filterMatchMode, this.filterLocale);
                                We && We.length && me.push({
                                    ...Ve,
                                    [this.optionGroupChildren]: We
                                })
                            }
                            this.optionsToDisplay = me
                        } else
                            this.optionsToDisplay = this.filterService.filter(this.options, N, this.filterValue, this.filterMatchMode, this.filterLocale);
                        this.optionsChanged = !0
                    }
                }
                applyFocus() {
                    this.editable ? H.p.findSingle(this.el.nativeElement, ".p-dropdown-label.p-inputtext").focus() : H.p.findSingle(this.el.nativeElement, "input[readonly]").focus()
                }
                focus() {
                    this.applyFocus()
                }
                bindDocumentClickListener() {
                    this.documentClickListener || (this.documentClickListener = this.renderer.listen(this.el ? this.el.nativeElement.ownerDocument : "document", "click", me=>{
                        !this.preventDocumentDefault && this.isOutsideClicked(me) && (this.hide(),
                        this.unbindDocumentClickListener()),
                        this.preventDocumentDefault = !1
                    }
                    ))
                }
                unbindDocumentClickListener() {
                    this.documentClickListener && (this.documentClickListener(),
                    this.documentClickListener = null)
                }
                bindDocumentResizeListener() {
                    this.documentResizeListener = this.onWindowResize.bind(this),
                    window.addEventListener("resize", this.documentResizeListener)
                }
                unbindDocumentResizeListener() {
                    this.documentResizeListener && (window.removeEventListener("resize", this.documentResizeListener),
                    this.documentResizeListener = null)
                }
                onWindowResize() {
                    this.overlayVisible && !H.p.isTouchDevice() && this.hide()
                }
                bindScrollListener() {
                    this.scrollHandler || (this.scrollHandler = new H.V(this.containerViewChild.nativeElement,N=>{
                        this.overlayVisible && this.hide()
                    }
                    )),
                    this.scrollHandler.bindScrollListener()
                }
                unbindScrollListener() {
                    this.scrollHandler && this.scrollHandler.unbindScrollListener()
                }
                clear(N) {
                    this.value = null,
                    this.onModelChange(this.value),
                    this.onChange.emit({
                        originalEvent: N,
                        value: this.value
                    }),
                    this.updateSelectedOption(this.value),
                    this.updateEditableLabel(),
                    this.onClear.emit(N)
                }
                onOverlayHide() {
                    this.unbindDocumentClickListener(),
                    this.unbindDocumentResizeListener(),
                    this.unbindScrollListener(),
                    this.overlay = null,
                    this.itemsWrapper = null,
                    this.onModelTouched()
                }
                ngOnDestroy() {
                    this.scrollHandler && (this.scrollHandler.destroy(),
                    this.scrollHandler = null),
                    this.overlay && U.P9.clear(this.overlay),
                    this.restoreOverlayAppend(),
                    this.onOverlayHide()
                }
            }
            return xe.\u0275fac = function(N) {
                return new (N || xe)(i.Y36(i.SBq),i.Y36(i.Qsj),i.Y36(i.sBO),i.Y36(i.R0b),i.Y36(ue.iZ),i.Y36(ue.b4),i.Y36(ue.F0))
            }
            ,
            xe.\u0275cmp = i.Xpm({
                type: xe,
                selectors: [["p-dropdown"]],
                contentQueries: function(N, me, Ve) {
                    if (1 & N && i.Suo(Ve, ue.jx, 4),
                    2 & N) {
                        let We;
                        i.iGM(We = i.CRH()) && (me.templates = We)
                    }
                },
                viewQuery: function(N, me) {
                    if (1 & N && (i.Gf(Ie, 5),
                    i.Gf(gt, 5),
                    i.Gf(Qe, 5),
                    i.Gf(Tt, 5),
                    i.Gf(wn, 5),
                    i.Gf(an, 5)),
                    2 & N) {
                        let Ve;
                        i.iGM(Ve = i.CRH()) && (me.containerViewChild = Ve.first),
                        i.iGM(Ve = i.CRH()) && (me.filterViewChild = Ve.first),
                        i.iGM(Ve = i.CRH()) && (me.accessibleViewChild = Ve.first),
                        i.iGM(Ve = i.CRH()) && (me.editableInputViewChild = Ve.first),
                        i.iGM(Ve = i.CRH()) && (me.itemsViewChild = Ve.first),
                        i.iGM(Ve = i.CRH()) && (me.scroller = Ve.first)
                    }
                },
                hostAttrs: [1, "p-element", "p-inputwrapper"],
                hostVars: 4,
                hostBindings: function(N, me) {
                    2 & N && i.ekj("p-inputwrapper-filled", me.filled)("p-inputwrapper-focus", me.focused || me.overlayVisible)
                },
                inputs: {
                    scrollHeight: "scrollHeight",
                    filter: "filter",
                    name: "name",
                    style: "style",
                    panelStyle: "panelStyle",
                    styleClass: "styleClass",
                    panelStyleClass: "panelStyleClass",
                    readonly: "readonly",
                    required: "required",
                    editable: "editable",
                    appendTo: "appendTo",
                    tabindex: "tabindex",
                    placeholder: "placeholder",
                    filterPlaceholder: "filterPlaceholder",
                    filterLocale: "filterLocale",
                    inputId: "inputId",
                    selectId: "selectId",
                    dataKey: "dataKey",
                    filterBy: "filterBy",
                    autofocus: "autofocus",
                    resetFilterOnHide: "resetFilterOnHide",
                    dropdownIcon: "dropdownIcon",
                    optionLabel: "optionLabel",
                    optionValue: "optionValue",
                    optionDisabled: "optionDisabled",
                    optionGroupLabel: "optionGroupLabel",
                    optionGroupChildren: "optionGroupChildren",
                    autoDisplayFirst: "autoDisplayFirst",
                    group: "group",
                    showClear: "showClear",
                    emptyFilterMessage: "emptyFilterMessage",
                    emptyMessage: "emptyMessage",
                    lazy: "lazy",
                    virtualScroll: "virtualScroll",
                    virtualScrollItemSize: "virtualScrollItemSize",
                    virtualScrollOptions: "virtualScrollOptions",
                    autoZIndex: "autoZIndex",
                    baseZIndex: "baseZIndex",
                    showTransitionOptions: "showTransitionOptions",
                    hideTransitionOptions: "hideTransitionOptions",
                    ariaFilterLabel: "ariaFilterLabel",
                    ariaLabel: "ariaLabel",
                    ariaLabelledBy: "ariaLabelledBy",
                    filterMatchMode: "filterMatchMode",
                    maxlength: "maxlength",
                    tooltip: "tooltip",
                    tooltipPosition: "tooltipPosition",
                    tooltipPositionStyle: "tooltipPositionStyle",
                    tooltipStyleClass: "tooltipStyleClass",
                    autofocusFilter: "autofocusFilter",
                    disabled: "disabled",
                    itemSize: "itemSize",
                    options: "options",
                    filterValue: "filterValue"
                },
                outputs: {
                    onChange: "onChange",
                    onFilter: "onFilter",
                    onFocus: "onFocus",
                    onBlur: "onBlur",
                    onClick: "onClick",
                    onShow: "onShow",
                    onHide: "onHide",
                    onClear: "onClear",
                    onLazyLoad: "onLazyLoad"
                },
                features: [i._Bn([fn])],
                decls: 12,
                vars: 25,
                consts: [[3, "ngClass", "ngStyle", "click"], ["container", ""], [1, "p-hidden-accessible"], ["type", "text", "readonly", "", "aria-haspopup", "listbox", "aria-haspopup", "listbox", "role", "combobox", 3, "disabled", "pAutoFocus", "focus", "blur", "keydown"], ["in", ""], [3, "ngClass", "pTooltip", "tooltipPosition", "positionStyle", "tooltipStyleClass", 4, "ngIf"], [3, "ngClass", 4, "ngIf"], ["type", "text", "class", "p-dropdown-label p-inputtext", "aria-haspopup", "listbox", 3, "disabled", "click", "input", "focus", "blur", 4, "ngIf"], ["class", "p-dropdown-clear-icon pi pi-times", 3, "click", 4, "ngIf"], ["role", "button", "aria-label", "dropdown trigger", "aria-haspopup", "listbox", 1, "p-dropdown-trigger"], [1, "p-dropdown-trigger-icon", 3, "ngClass"], [3, "ngClass", "ngStyle", "class", "click", 4, "ngIf"], [3, "ngClass", "pTooltip", "tooltipPosition", "positionStyle", "tooltipStyleClass"], [4, "ngIf"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [3, "ngClass"], ["type", "text", "aria-haspopup", "listbox", 1, "p-dropdown-label", "p-inputtext", 3, "disabled", "click", "input", "focus", "blur"], ["editableInput", ""], [1, "p-dropdown-clear-icon", "pi", "pi-times", 3, "click"], [4, "ngTemplateOutlet"], ["class", "p-dropdown-header", 3, "click", 4, "ngIf"], [1, "p-dropdown-items-wrapper"], [3, "items", "style", "itemSize", "autoSize", "lazy", "options", "onLazyLoad", 4, "ngIf"], ["buildInItems", ""], [1, "p-dropdown-header", 3, "click"], [4, "ngIf", "ngIfElse"], ["builtInFilterElement", ""], [1, "p-dropdown-filter-container"], ["type", "text", "autocomplete", "off", 1, "p-dropdown-filter", "p-inputtext", "p-component", 3, "value", "keydown.enter", "keydown", "input"], ["filter", ""], [1, "p-dropdown-filter-icon", "pi", "pi-search"], [3, "items", "itemSize", "autoSize", "lazy", "options", "onLazyLoad"], ["scroller", ""], ["pTemplate", "content"], ["pTemplate", "loader"], ["role", "listbox", 1, "p-dropdown-items", 3, "ngClass"], ["items", ""], ["itemslist", ""], ["class", "p-dropdown-empty-message", 3, "ngStyle", 4, "ngIf"], ["ngFor", "", 3, "ngForOf"], [1, "p-dropdown-item-group", 3, "ngStyle"], [3, "option", "selected", "label", "disabled", "template", "onClick"], [1, "p-dropdown-empty-message", 3, "ngStyle"], ["emptyFilter", ""], ["empty", ""]],
                template: function(N, me) {
                    1 & N && (i.TgZ(0, "div", 0, 1),
                    i.NdJ("click", function(We) {
                        return me.onMouseclick(We)
                    }),
                    i.TgZ(2, "div", 2)(3, "input", 3, 4),
                    i.NdJ("focus", function(We) {
                        return me.onInputFocus(We)
                    })("blur", function(We) {
                        return me.onInputBlur(We)
                    })("keydown", function(We) {
                        return me.onKeydown(We, !0)
                    }),
                    i.qZA()(),
                    i.YNc(5, qn, 3, 13, "span", 5),
                    i.YNc(6, Xn, 2, 4, "span", 6),
                    i.YNc(7, vi, 2, 4, "input", 7),
                    i.YNc(8, Tn, 1, 0, "i", 8),
                    i.TgZ(9, "div", 9),
                    i._UZ(10, "span", 10),
                    i.qZA(),
                    i.YNc(11, Rt, 9, 17, "div", 11),
                    i.qZA()),
                    2 & N && (i.Tol(me.styleClass),
                    i.Q6J("ngClass", i.l5B(20, rn, me.disabled, me.overlayVisible, me.focused, me.showClear && !me.disabled))("ngStyle", me.style),
                    i.xp6(3),
                    i.Q6J("disabled", me.disabled)("pAutoFocus", me.autofocus),
                    i.uIk("id", me.inputId)("placeholder", me.placeholder)("aria-label", me.ariaLabel)("aria-expanded", !1)("aria-labelledby", me.ariaLabelledBy)("tabindex", me.tabindex)("aria-activedescendant", me.overlayVisible ? me.labelId : null),
                    i.xp6(2),
                    i.Q6J("ngIf", !me.editable && null != me.label),
                    i.xp6(1),
                    i.Q6J("ngIf", !me.editable && null == me.label),
                    i.xp6(1),
                    i.Q6J("ngIf", me.editable),
                    i.xp6(1),
                    i.Q6J("ngIf", me.isVisibleClearIcon),
                    i.xp6(1),
                    i.uIk("aria-expanded", me.overlayVisible),
                    i.xp6(1),
                    i.Q6J("ngClass", me.dropdownIcon),
                    i.xp6(1),
                    i.Q6J("ngIf", me.overlayVisible))
                },
                dependencies: [q.mk, q.sg, q.O5, q.tP, q.PC, ue.jx, te.u, pt, Xt.P, Wn],
                styles: [".p-dropdown{display:inline-flex;cursor:pointer;position:relative;-webkit-user-select:none;user-select:none}.p-dropdown-clear-icon{position:absolute;top:50%;margin-top:-.5rem}.p-dropdown-trigger{display:flex;align-items:center;justify-content:center;flex-shrink:0}.p-dropdown-label{display:block;white-space:nowrap;overflow:hidden;flex:1 1 auto;width:1%;text-overflow:ellipsis;cursor:pointer}.p-dropdown-label-empty{overflow:hidden;visibility:hidden}input.p-dropdown-label{cursor:default}.p-dropdown .p-dropdown-panel{min-width:100%}.p-dropdown-panel{position:absolute;top:0;left:0}.p-dropdown-items-wrapper{overflow:auto}.p-dropdown-item{cursor:pointer;font-weight:400;white-space:nowrap;position:relative;overflow:hidden}.p-dropdown-items{margin:0;padding:0;list-style-type:none}.p-dropdown-filter{width:100%}.p-dropdown-filter-container{position:relative}.p-dropdown-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-fluid .p-dropdown{display:flex}.p-fluid .p-dropdown .p-dropdown-label{width:1%}\n"],
                encapsulation: 2,
                data: {
                    animation: [(0,
                    l.X$)("overlayAnimation", [(0,
                    l.eR)(":enter", [(0,
                    l.oB)({
                        opacity: 0,
                        transform: "scaleY(0.8)"
                    }), (0,
                    l.jt)("{{showTransitionParams}}")]), (0,
                    l.eR)(":leave", [(0,
                    l.jt)("{{hideTransitionParams}}", (0,
                    l.oB)({
                        opacity: 0
                    }))])])]
                },
                changeDetection: 0
            }),
            xe
        }
        )()
          , Gt = (()=>{
            class xe {
            }
            return xe.\u0275fac = function(N) {
                return new (N || xe)
            }
            ,
            xe.\u0275mod = i.oAB({
                type: xe
            }),
            xe.\u0275inj = i.cJS({
                imports: [q.ez, ue.m8, te.z, kt.T, Mt, Xt.E, ue.m8, Mt]
            }),
            xe
        }
        )()
    }
    ,
    9906: (Ot,je,D)=>{
        D.d(je, {
            j: ()=>H,
            o: ()=>ue
        });
        var i = D(2560)
          , l = D(4666)
          , q = D(2508);
        let ue = (()=>{
            class U {
                constructor(te, le, W) {
                    this.el = te,
                    this.ngModel = le,
                    this.cd = W
                }
                ngAfterViewInit() {
                    this.updateFilledState(),
                    this.cd.detectChanges()
                }
                ngDoCheck() {
                    this.updateFilledState()
                }
                onInput(te) {
                    this.updateFilledState()
                }
                updateFilledState() {
                    this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length || this.ngModel && this.ngModel.model
                }
            }
            return U.\u0275fac = function(te) {
                return new (te || U)(i.Y36(i.SBq),i.Y36(q.On, 8),i.Y36(i.sBO))
            }
            ,
            U.\u0275dir = i.lG2({
                type: U,
                selectors: [["", "pInputText", ""]],
                hostAttrs: [1, "p-inputtext", "p-component", "p-element"],
                hostVars: 2,
                hostBindings: function(te, le) {
                    1 & te && i.NdJ("input", function(fe) {
                        return le.onInput(fe)
                    }),
                    2 & te && i.ekj("p-filled", le.filled)
                }
            }),
            U
        }
        )()
          , H = (()=>{
            class U {
            }
            return U.\u0275fac = function(te) {
                return new (te || U)
            }
            ,
            U.\u0275mod = i.oAB({
                type: U
            }),
            U.\u0275inj = i.cJS({
                imports: [l.ez]
            }),
            U
        }
        )()
    }
    ,
    6664: (Ot,je,D)=>{
        D.d(je, {
            T: ()=>Ne,
            y: ()=>Be
        });
        var i = D(2560)
          , l = D(4666)
          , q = D(1420)
          , ue = D(4356)
          , H = D(4538)
          , U = D(4851)
          , z = D(8549);
        function te(ot, $e) {
            1 & ot && i.GkF(0)
        }
        function le(ot, $e) {
            if (1 & ot) {
                const Fe = i.EpF();
                i.TgZ(0, "button", 5),
                i.NdJ("click", function(st) {
                    i.CHM(Fe);
                    const Pe = i.oxw(2);
                    return i.KtG(Pe.onCloseClick(st))
                })("keydown.enter", function() {
                    i.CHM(Fe);
                    const st = i.oxw(2);
                    return i.KtG(st.hide())
                }),
                i._UZ(1, "span", 6),
                i.qZA()
            }
            if (2 & ot) {
                const Fe = i.oxw(2);
                i.uIk("aria-label", Fe.ariaCloseLabel)
            }
        }
        const W = function(ot, $e) {
            return {
                showTransitionParams: ot,
                hideTransitionParams: $e
            }
        }
          , fe = function(ot, $e) {
            return {
                value: ot,
                params: $e
            }
        };
        function re(ot, $e) {
            if (1 & ot) {
                const Fe = i.EpF();
                i.TgZ(0, "div", 1),
                i.NdJ("click", function(st) {
                    i.CHM(Fe);
                    const Pe = i.oxw();
                    return i.KtG(Pe.onOverlayClick(st))
                })("@animation.start", function(st) {
                    i.CHM(Fe);
                    const Pe = i.oxw();
                    return i.KtG(Pe.onAnimationStart(st))
                })("@animation.done", function(st) {
                    i.CHM(Fe);
                    const Pe = i.oxw();
                    return i.KtG(Pe.onAnimationEnd(st))
                }),
                i.TgZ(1, "div", 2),
                i.NdJ("click", function() {
                    i.CHM(Fe);
                    const st = i.oxw();
                    return i.KtG(st.onContentClick())
                })("mousedown", function() {
                    i.CHM(Fe);
                    const st = i.oxw();
                    return i.KtG(st.onContentClick())
                }),
                i.Hsn(2),
                i.YNc(3, te, 1, 0, "ng-container", 3),
                i.qZA(),
                i.YNc(4, le, 2, 1, "button", 4),
                i.qZA()
            }
            if (2 & ot) {
                const Fe = i.oxw();
                i.Tol(Fe.styleClass),
                i.Q6J("ngClass", "p-overlaypanel p-component")("ngStyle", Fe.style)("@animation", i.WLB(10, fe, Fe.overlayVisible ? "open" : "close", i.WLB(7, W, Fe.showTransitionOptions, Fe.hideTransitionOptions))),
                i.xp6(3),
                i.Q6J("ngTemplateOutlet", Fe.contentTemplate),
                i.xp6(1),
                i.Q6J("ngIf", Fe.showCloseIcon)
            }
        }
        const Ke = ["*"];
        let Ne = (()=>{
            class ot {
                constructor(Fe, et, st, Pe, Q, ze) {
                    this.el = Fe,
                    this.renderer = et,
                    this.cd = st,
                    this.zone = Pe,
                    this.config = Q,
                    this.overlayService = ze,
                    this.dismissable = !0,
                    this.appendTo = "body",
                    this.autoZIndex = !0,
                    this.baseZIndex = 0,
                    this.focusOnShow = !0,
                    this.showTransitionOptions = ".12s cubic-bezier(0, 0, 0.2, 1)",
                    this.hideTransitionOptions = ".1s linear",
                    this.onShow = new i.vpe,
                    this.onHide = new i.vpe,
                    this.overlayVisible = !1,
                    this.render = !1,
                    this.isOverlayAnimationInProgress = !1,
                    this.selfClick = !1
                }
                ngAfterContentInit() {
                    this.templates.forEach(Fe=>{
                        Fe.getType(),
                        this.contentTemplate = Fe.template,
                        this.cd.markForCheck()
                    }
                    )
                }
                bindDocumentClickListener() {
                    !this.documentClickListener && this.dismissable && this.zone.runOutsideAngular(()=>{
                        let Fe = q.p.isIOS() ? "touchstart" : "click";
                        this.documentClickListener = this.renderer.listen(this.el ? this.el.nativeElement.ownerDocument : "document", Fe, st=>{
                            !this.container.contains(st.target) && this.target !== st.target && !this.target.contains(st.target) && !this.selfClick && this.zone.run(()=>{
                                this.hide()
                            }
                            ),
                            this.selfClick = !1,
                            this.cd.markForCheck()
                        }
                        )
                    }
                    )
                }
                unbindDocumentClickListener() {
                    this.documentClickListener && (this.documentClickListener(),
                    this.documentClickListener = null,
                    this.selfClick = !1)
                }
                toggle(Fe, et) {
                    this.isOverlayAnimationInProgress || (this.overlayVisible ? (this.hasTargetChanged(Fe, et) && (this.destroyCallback = ()=>{
                        this.show(null, et || Fe.currentTarget || Fe.target)
                    }
                    ),
                    this.hide()) : this.show(Fe, et))
                }
                show(Fe, et) {
                    this.isOverlayAnimationInProgress || (this.target = et || Fe.currentTarget || Fe.target,
                    this.overlayVisible = !0,
                    this.render = !0,
                    this.cd.markForCheck())
                }
                onOverlayClick(Fe) {
                    this.overlayService.add({
                        originalEvent: Fe,
                        target: this.el.nativeElement
                    }),
                    this.selfClick = !0
                }
                onContentClick() {
                    this.selfClick = !0
                }
                hasTargetChanged(Fe, et) {
                    return null != this.target && this.target !== (et || Fe.currentTarget || Fe.target)
                }
                appendContainer() {
                    this.appendTo && ("body" === this.appendTo ? document.body.appendChild(this.container) : q.p.appendChild(this.container, this.appendTo))
                }
                restoreAppend() {
                    this.container && this.appendTo && this.el.nativeElement.appendChild(this.container)
                }
                align() {
                    this.autoZIndex && z.P9.set("overlay", this.container, this.baseZIndex + this.config.zIndex.overlay),
                    q.p.absolutePosition(this.container, this.target);
                    const Fe = q.p.getOffset(this.container)
                      , et = q.p.getOffset(this.target);
                    let st = 0;
                    Fe.left < et.left && (st = et.left - Fe.left),
                    this.container.style.setProperty("--overlayArrowLeft", `${st}px`),
                    Fe.top < et.top && (q.p.addClass(this.container, "p-overlaypanel-flipped"),
                    this.showCloseIcon && (this.container.style.marginTop = "30px"))
                }
                onAnimationStart(Fe) {
                    "open" === Fe.toState && (this.container = Fe.element,
                    this.onShow.emit(null),
                    this.appendContainer(),
                    this.align(),
                    this.bindDocumentClickListener(),
                    this.bindDocumentResizeListener(),
                    this.bindScrollListener(),
                    this.focusOnShow && this.focus(),
                    this.overlayEventListener = et=>{
                        this.container && this.container.contains(et.target) && (this.selfClick = !0)
                    }
                    ,
                    this.overlaySubscription = this.overlayService.clickObservable.subscribe(this.overlayEventListener)),
                    this.isOverlayAnimationInProgress = !0
                }
                onAnimationEnd(Fe) {
                    switch (Fe.toState) {
                    case "void":
                        this.destroyCallback && (this.destroyCallback(),
                        this.destroyCallback = null),
                        this.overlaySubscription && this.overlaySubscription.unsubscribe();
                        break;
                    case "close":
                        this.autoZIndex && z.P9.clear(this.container),
                        this.overlaySubscription && this.overlaySubscription.unsubscribe(),
                        this.onContainerDestroy(),
                        this.onHide.emit({}),
                        this.render = !1
                    }
                    this.isOverlayAnimationInProgress = !1
                }
                focus() {
                    let Fe = q.p.findSingle(this.container, "[autofocus]");
                    Fe && this.zone.runOutsideAngular(()=>{
                        setTimeout(()=>Fe.focus(), 5)
                    }
                    )
                }
                hide() {
                    this.isOverlayAnimationInProgress || (this.overlayVisible = !1,
                    this.cd.markForCheck())
                }
                onCloseClick(Fe) {
                    this.hide(),
                    Fe.preventDefault()
                }
                onWindowResize(Fe) {
                    this.overlayVisible && !q.p.isTouchDevice() && this.hide()
                }
                bindDocumentResizeListener() {
                    this.documentResizeListener = this.onWindowResize.bind(this),
                    window.addEventListener("resize", this.documentResizeListener)
                }
                unbindDocumentResizeListener() {
                    this.documentResizeListener && (window.removeEventListener("resize", this.documentResizeListener),
                    this.documentResizeListener = null)
                }
                bindScrollListener() {
                    this.scrollHandler || (this.scrollHandler = new q.V(this.target,()=>{
                        this.overlayVisible && this.hide()
                    }
                    )),
                    this.scrollHandler.bindScrollListener()
                }
                unbindScrollListener() {
                    this.scrollHandler && this.scrollHandler.unbindScrollListener()
                }
                onContainerDestroy() {
                    this.cd.destroyed || (this.target = null),
                    this.unbindDocumentClickListener(),
                    this.unbindDocumentResizeListener(),
                    this.unbindScrollListener()
                }
                ngOnDestroy() {
                    this.scrollHandler && (this.scrollHandler.destroy(),
                    this.scrollHandler = null),
                    this.container && this.autoZIndex && z.P9.clear(this.container),
                    this.cd.destroyed || (this.target = null),
                    this.destroyCallback = null,
                    this.container && (this.restoreAppend(),
                    this.onContainerDestroy()),
                    this.overlaySubscription && this.overlaySubscription.unsubscribe()
                }
            }
            return ot.\u0275fac = function(Fe) {
                return new (Fe || ot)(i.Y36(i.SBq),i.Y36(i.Qsj),i.Y36(i.sBO),i.Y36(i.R0b),i.Y36(ue.b4),i.Y36(ue.F0))
            }
            ,
            ot.\u0275cmp = i.Xpm({
                type: ot,
                selectors: [["p-overlayPanel"]],
                contentQueries: function(Fe, et, st) {
                    if (1 & Fe && i.Suo(st, ue.jx, 4),
                    2 & Fe) {
                        let Pe;
                        i.iGM(Pe = i.CRH()) && (et.templates = Pe)
                    }
                },
                hostAttrs: [1, "p-element"],
                inputs: {
                    dismissable: "dismissable",
                    showCloseIcon: "showCloseIcon",
                    style: "style",
                    styleClass: "styleClass",
                    appendTo: "appendTo",
                    autoZIndex: "autoZIndex",
                    ariaCloseLabel: "ariaCloseLabel",
                    baseZIndex: "baseZIndex",
                    focusOnShow: "focusOnShow",
                    showTransitionOptions: "showTransitionOptions",
                    hideTransitionOptions: "hideTransitionOptions"
                },
                outputs: {
                    onShow: "onShow",
                    onHide: "onHide"
                },
                ngContentSelectors: Ke,
                decls: 1,
                vars: 1,
                consts: [[3, "ngClass", "ngStyle", "class", "click", 4, "ngIf"], [3, "ngClass", "ngStyle", "click"], [1, "p-overlaypanel-content", 3, "click", "mousedown"], [4, "ngTemplateOutlet"], ["type", "button", "class", "p-overlaypanel-close p-link", "pRipple", "", 3, "click", "keydown.enter", 4, "ngIf"], ["type", "button", "pRipple", "", 1, "p-overlaypanel-close", "p-link", 3, "click", "keydown.enter"], [1, "p-overlaypanel-close-icon", "pi", "pi-times"]],
                template: function(Fe, et) {
                    1 & Fe && (i.F$t(),
                    i.YNc(0, re, 5, 13, "div", 0)),
                    2 & Fe && i.Q6J("ngIf", et.render)
                },
                dependencies: [l.mk, l.O5, l.tP, l.PC, H.H],
                styles: ['.p-overlaypanel{position:absolute;margin-top:10px;top:0;left:0}.p-overlaypanel-flipped{margin-top:0;margin-bottom:10px}.p-overlaypanel-close{display:flex;justify-content:center;align-items:center;overflow:hidden;position:relative}.p-overlaypanel:after,.p-overlaypanel:before{bottom:100%;left:calc(var(--overlayArrowLeft, 0) + 1.25rem);content:" ";height:0;width:0;position:absolute;pointer-events:none}.p-overlaypanel:after{border-width:8px;margin-left:-8px}.p-overlaypanel:before{border-width:10px;margin-left:-10px}.p-overlaypanel-shifted:after,.p-overlaypanel-shifted:before{left:auto;right:1.25em;margin-left:auto}.p-overlaypanel-flipped:after,.p-overlaypanel-flipped:before{bottom:auto;top:100%}.p-overlaypanel.p-overlaypanel-flipped:after{border-bottom-color:transparent}.p-overlaypanel.p-overlaypanel-flipped:before{border-bottom-color:transparent}\n'],
                encapsulation: 2,
                data: {
                    animation: [(0,
                    U.X$)("animation", [(0,
                    U.SB)("void", (0,
                    U.oB)({
                        transform: "scaleY(0.8)",
                        opacity: 0
                    })), (0,
                    U.SB)("close", (0,
                    U.oB)({
                        opacity: 0
                    })), (0,
                    U.SB)("open", (0,
                    U.oB)({
                        transform: "translateY(0)",
                        opacity: 1
                    })), (0,
                    U.eR)("void => open", (0,
                    U.jt)("{{showTransitionParams}}")), (0,
                    U.eR)("open => close", (0,
                    U.jt)("{{hideTransitionParams}}"))])]
                },
                changeDetection: 0
            }),
            ot
        }
        )()
          , Be = (()=>{
            class ot {
            }
            return ot.\u0275fac = function(Fe) {
                return new (Fe || ot)
            }
            ,
            ot.\u0275mod = i.oAB({
                type: ot
            }),
            ot.\u0275inj = i.cJS({
                imports: [l.ez, H.T, ue.m8, ue.m8]
            }),
            ot
        }
        )()
    }
    ,
    3387: (Ot,je,D)=>{
        D.d(je, {
            D: ()=>kt,
            U: ()=>Xt
        });
        var i = D(2560)
          , l = D(4666)
          , q = D(2508)
          , ue = D(3933)
          , H = D(4538)
          , U = D(4356)
          , z = D(9906)
          , te = D(6328);
        const le = ["input"];
        function W(bt, Kt) {
            if (1 & bt) {
                const k = i.EpF();
                i.TgZ(0, "i", 6),
                i.NdJ("click", function() {
                    i.CHM(k);
                    const he = i.oxw();
                    return i.KtG(he.clear())
                }),
                i.qZA()
            }
        }
        const fe = function() {
            return {
                "p-inputnumber-button p-inputnumber-button-up": !0
            }
        }
          , re = function() {
            return {
                "p-inputnumber-button p-inputnumber-button-down": !0
            }
        };
        function Ke(bt, Kt) {
            if (1 & bt) {
                const k = i.EpF();
                i.TgZ(0, "span", 7)(1, "button", 8),
                i.NdJ("mousedown", function(he) {
                    i.CHM(k);
                    const Ie = i.oxw();
                    return i.KtG(Ie.onUpButtonMouseDown(he))
                })("mouseup", function() {
                    i.CHM(k);
                    const he = i.oxw();
                    return i.KtG(he.onUpButtonMouseUp())
                })("mouseleave", function() {
                    i.CHM(k);
                    const he = i.oxw();
                    return i.KtG(he.onUpButtonMouseLeave())
                })("keydown", function(he) {
                    i.CHM(k);
                    const Ie = i.oxw();
                    return i.KtG(Ie.onUpButtonKeyDown(he))
                })("keyup", function() {
                    i.CHM(k);
                    const he = i.oxw();
                    return i.KtG(he.onUpButtonKeyUp())
                }),
                i.qZA(),
                i.TgZ(2, "button", 8),
                i.NdJ("mousedown", function(he) {
                    i.CHM(k);
                    const Ie = i.oxw();
                    return i.KtG(Ie.onDownButtonMouseDown(he))
                })("mouseup", function() {
                    i.CHM(k);
                    const he = i.oxw();
                    return i.KtG(he.onDownButtonMouseUp())
                })("mouseleave", function() {
                    i.CHM(k);
                    const he = i.oxw();
                    return i.KtG(he.onDownButtonMouseLeave())
                })("keydown", function(he) {
                    i.CHM(k);
                    const Ie = i.oxw();
                    return i.KtG(Ie.onDownButtonKeyDown(he))
                })("keyup", function() {
                    i.CHM(k);
                    const he = i.oxw();
                    return i.KtG(he.onDownButtonKeyUp())
                }),
                i.qZA()()
            }
            if (2 & bt) {
                const k = i.oxw();
                i.xp6(1),
                i.Tol(k.incrementButtonClass),
                i.Q6J("ngClass", i.DdM(10, fe))("icon", k.incrementButtonIcon)("disabled", k.disabled),
                i.xp6(1),
                i.Tol(k.decrementButtonClass),
                i.Q6J("ngClass", i.DdM(11, re))("icon", k.decrementButtonIcon)("disabled", k.disabled)
            }
        }
        function Ne(bt, Kt) {
            if (1 & bt) {
                const k = i.EpF();
                i.TgZ(0, "button", 8),
                i.NdJ("mousedown", function(he) {
                    i.CHM(k);
                    const Ie = i.oxw();
                    return i.KtG(Ie.onUpButtonMouseDown(he))
                })("mouseup", function() {
                    i.CHM(k);
                    const he = i.oxw();
                    return i.KtG(he.onUpButtonMouseUp())
                })("mouseleave", function() {
                    i.CHM(k);
                    const he = i.oxw();
                    return i.KtG(he.onUpButtonMouseLeave())
                })("keydown", function(he) {
                    i.CHM(k);
                    const Ie = i.oxw();
                    return i.KtG(Ie.onUpButtonKeyDown(he))
                })("keyup", function() {
                    i.CHM(k);
                    const he = i.oxw();
                    return i.KtG(he.onUpButtonKeyUp())
                }),
                i.qZA()
            }
            if (2 & bt) {
                const k = i.oxw();
                i.Tol(k.incrementButtonClass),
                i.Q6J("ngClass", i.DdM(5, fe))("icon", k.incrementButtonIcon)("disabled", k.disabled)
            }
        }
        function Be(bt, Kt) {
            if (1 & bt) {
                const k = i.EpF();
                i.TgZ(0, "button", 8),
                i.NdJ("mousedown", function(he) {
                    i.CHM(k);
                    const Ie = i.oxw();
                    return i.KtG(Ie.onDownButtonMouseDown(he))
                })("mouseup", function() {
                    i.CHM(k);
                    const he = i.oxw();
                    return i.KtG(he.onDownButtonMouseUp())
                })("mouseleave", function() {
                    i.CHM(k);
                    const he = i.oxw();
                    return i.KtG(he.onDownButtonMouseLeave())
                })("keydown", function(he) {
                    i.CHM(k);
                    const Ie = i.oxw();
                    return i.KtG(Ie.onDownButtonKeyDown(he))
                })("keyup", function() {
                    i.CHM(k);
                    const he = i.oxw();
                    return i.KtG(he.onDownButtonKeyUp())
                }),
                i.qZA()
            }
            if (2 & bt) {
                const k = i.oxw();
                i.Tol(k.decrementButtonClass),
                i.Q6J("ngClass", i.DdM(5, re))("icon", k.decrementButtonIcon)("disabled", k.disabled)
            }
        }
        const ot = function(bt, Kt, k) {
            return {
                "p-inputnumber p-component": !0,
                "p-inputnumber-buttons-stacked": bt,
                "p-inputnumber-buttons-horizontal": Kt,
                "p-inputnumber-buttons-vertical": k
            }
        }
          , $e = {
            provide: q.JU,
            useExisting: (0,
            i.Gpc)(()=>Fe),
            multi: !0
        };
        let Fe = (()=>{
            class bt {
                constructor(k, de) {
                    this.el = k,
                    this.cd = de,
                    this.showButtons = !1,
                    this.format = !0,
                    this.buttonLayout = "stacked",
                    this.incrementButtonIcon = "pi pi-angle-up",
                    this.decrementButtonIcon = "pi pi-angle-down",
                    this.readonly = !1,
                    this.step = 1,
                    this.allowEmpty = !0,
                    this.mode = "decimal",
                    this.useGrouping = !0,
                    this.showClear = !1,
                    this.onInput = new i.vpe,
                    this.onFocus = new i.vpe,
                    this.onBlur = new i.vpe,
                    this.onKeyDown = new i.vpe,
                    this.onClear = new i.vpe,
                    this.onModelChange = ()=>{}
                    ,
                    this.onModelTouched = ()=>{}
                    ,
                    this.groupChar = "",
                    this.prefixChar = "",
                    this.suffixChar = ""
                }
                get disabled() {
                    return this._disabled
                }
                set disabled(k) {
                    k && (this.focused = !1),
                    this._disabled = k,
                    this.timer && this.clearTimer()
                }
                ngOnChanges(k) {
                    ["locale", "localeMatcher", "mode", "currency", "currencyDisplay", "useGrouping", "minFractionDigits", "maxFractionDigits", "prefix", "suffix"].some(he=>!!k[he]) && this.updateConstructParser()
                }
                ngOnInit() {
                    this.constructParser(),
                    this.initialized = !0
                }
                getOptions() {
                    return {
                        localeMatcher: this.localeMatcher,
                        style: this.mode,
                        currency: this.currency,
                        currencyDisplay: this.currencyDisplay,
                        useGrouping: this.useGrouping,
                        minimumFractionDigits: this.minFractionDigits,
                        maximumFractionDigits: this.maxFractionDigits
                    }
                }
                constructParser() {
                    this.numberFormat = new Intl.NumberFormat(this.locale,this.getOptions());
                    const k = [...new Intl.NumberFormat(this.locale,{
                        useGrouping: !1
                    }).format(9876543210)].reverse()
                      , de = new Map(k.map((he,Ie)=>[he, Ie]));
                    this._numeral = new RegExp(`[${k.join("")}]`,"g"),
                    this._group = this.getGroupingExpression(),
                    this._minusSign = this.getMinusSignExpression(),
                    this._currency = this.getCurrencyExpression(),
                    this._decimal = this.getDecimalExpression(),
                    this._suffix = this.getSuffixExpression(),
                    this._prefix = this.getPrefixExpression(),
                    this._index = he=>de.get(he)
                }
                updateConstructParser() {
                    this.initialized && this.constructParser()
                }
                escapeRegExp(k) {
                    return k.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&")
                }
                getDecimalExpression() {
                    const k = new Intl.NumberFormat(this.locale,{
                        ...this.getOptions(),
                        useGrouping: !1
                    });
                    return new RegExp(`[${k.format(1.1).replace(this._currency, "").trim().replace(this._numeral, "")}]`,"g")
                }
                getGroupingExpression() {
                    const k = new Intl.NumberFormat(this.locale,{
                        useGrouping: !0
                    });
                    return this.groupChar = k.format(1e6).trim().replace(this._numeral, "").charAt(0),
                    new RegExp(`[${this.groupChar}]`,"g")
                }
                getMinusSignExpression() {
                    const k = new Intl.NumberFormat(this.locale,{
                        useGrouping: !1
                    });
                    return new RegExp(`[${k.format(-1).trim().replace(this._numeral, "")}]`,"g")
                }
                getCurrencyExpression() {
                    if (this.currency) {
                        const k = new Intl.NumberFormat(this.locale,{
                            style: "currency",
                            currency: this.currency,
                            currencyDisplay: this.currencyDisplay,
                            minimumFractionDigits: 0,
                            maximumFractionDigits: 0
                        });
                        return new RegExp(`[${k.format(1).replace(/\s/g, "").replace(this._numeral, "").replace(this._group, "")}]`,"g")
                    }
                    return new RegExp("[]","g")
                }
                getPrefixExpression() {
                    if (this.prefix)
                        this.prefixChar = this.prefix;
                    else {
                        const k = new Intl.NumberFormat(this.locale,{
                            style: this.mode,
                            currency: this.currency,
                            currencyDisplay: this.currencyDisplay
                        });
                        this.prefixChar = k.format(1).split("1")[0]
                    }
                    return new RegExp(`${this.escapeRegExp(this.prefixChar || "")}`,"g")
                }
                getSuffixExpression() {
                    if (this.suffix)
                        this.suffixChar = this.suffix;
                    else {
                        const k = new Intl.NumberFormat(this.locale,{
                            style: this.mode,
                            currency: this.currency,
                            currencyDisplay: this.currencyDisplay,
                            minimumFractionDigits: 0,
                            maximumFractionDigits: 0
                        });
                        this.suffixChar = k.format(1).split("1")[1]
                    }
                    return new RegExp(`${this.escapeRegExp(this.suffixChar || "")}`,"g")
                }
                formatValue(k) {
                    if (null != k) {
                        if ("-" === k)
                            return k;
                        if (this.format) {
                            let he = new Intl.NumberFormat(this.locale,this.getOptions()).format(k);
                            return this.prefix && (he = this.prefix + he),
                            this.suffix && (he += this.suffix),
                            he
                        }
                        return k.toString()
                    }
                    return ""
                }
                parseValue(k) {
                    let de = k.replace(this._suffix, "").replace(this._prefix, "").trim().replace(/\s/g, "").replace(this._currency, "").replace(this._group, "").replace(this._minusSign, "-").replace(this._decimal, ".").replace(this._numeral, this._index);
                    if (de) {
                        if ("-" === de)
                            return de;
                        let he = +de;
                        return isNaN(he) ? null : he
                    }
                    return null
                }
                repeat(k, de, he) {
                    if (this.readonly)
                        return;
                    let Ie = de || 500;
                    this.clearTimer(),
                    this.timer = setTimeout(()=>{
                        this.repeat(k, 40, he)
                    }
                    , Ie),
                    this.spin(k, he)
                }
                spin(k, de) {
                    let he = this.step * de
                      , Ie = this.parseValue(this.input.nativeElement.value) || 0
                      , gt = this.validateValue(Ie + he);
                    this.maxlength && this.maxlength < this.formatValue(gt).length || (this.updateInput(gt, null, "spin", null),
                    this.updateModel(k, gt),
                    this.handleOnInput(k, Ie, gt))
                }
                clear() {
                    this.value = null,
                    this.onModelChange(this.value),
                    this.onClear.emit()
                }
                onUpButtonMouseDown(k) {
                    this.input.nativeElement.focus(),
                    this.repeat(k, null, 1),
                    k.preventDefault()
                }
                onUpButtonMouseUp() {
                    this.clearTimer()
                }
                onUpButtonMouseLeave() {
                    this.clearTimer()
                }
                onUpButtonKeyDown(k) {
                    (32 === k.keyCode || 13 === k.keyCode) && this.repeat(k, null, 1)
                }
                onUpButtonKeyUp() {
                    this.clearTimer()
                }
                onDownButtonMouseDown(k) {
                    this.input.nativeElement.focus(),
                    this.repeat(k, null, -1),
                    k.preventDefault()
                }
                onDownButtonMouseUp() {
                    this.clearTimer()
                }
                onDownButtonMouseLeave() {
                    this.clearTimer()
                }
                onDownButtonKeyUp() {
                    this.clearTimer()
                }
                onDownButtonKeyDown(k) {
                    (32 === k.keyCode || 13 === k.keyCode) && this.repeat(k, null, -1)
                }
                onUserInput(k) {
                    this.readonly || (this.isSpecialChar && (k.target.value = this.lastValue),
                    this.isSpecialChar = !1)
                }
                onInputKeyDown(k) {
                    if (this.readonly)
                        return;
                    if (this.lastValue = k.target.value,
                    k.shiftKey || k.altKey)
                        return void (this.isSpecialChar = !0);
                    let de = k.target.selectionStart
                      , he = k.target.selectionEnd
                      , Ie = k.target.value
                      , gt = null;
                    switch (k.altKey && k.preventDefault(),
                    k.which) {
                    case 38:
                        this.spin(k, 1),
                        k.preventDefault();
                        break;
                    case 40:
                        this.spin(k, -1),
                        k.preventDefault();
                        break;
                    case 37:
                        this.isNumeralChar(Ie.charAt(de - 1)) || k.preventDefault();
                        break;
                    case 39:
                        this.isNumeralChar(Ie.charAt(de)) || k.preventDefault();
                        break;
                    case 13:
                        gt = this.validateValue(this.parseValue(this.input.nativeElement.value)),
                        this.input.nativeElement.value = this.formatValue(gt),
                        this.input.nativeElement.setAttribute("aria-valuenow", gt),
                        this.updateModel(k, gt);
                        break;
                    case 8:
                        if (k.preventDefault(),
                        de === he) {
                            const Qe = Ie.charAt(de - 1)
                              , {decimalCharIndex: Tt, decimalCharIndexWithoutPrefix: wn} = this.getDecimalCharIndexes(Ie);
                            if (this.isNumeralChar(Qe)) {
                                const an = this.getDecimalLength(Ie);
                                if (this._group.test(Qe))
                                    this._group.lastIndex = 0,
                                    gt = Ie.slice(0, de - 2) + Ie.slice(de - 1);
                                else if (this._decimal.test(Qe))
                                    this._decimal.lastIndex = 0,
                                    an ? this.input.nativeElement.setSelectionRange(de - 1, de - 1) : gt = Ie.slice(0, de - 1) + Ie.slice(de);
                                else if (Tt > 0 && de > Tt) {
                                    const In = this.isDecimalMode() && (this.minFractionDigits || 0) < an ? "" : "0";
                                    gt = Ie.slice(0, de - 1) + In + Ie.slice(de)
                                } else
                                    1 === wn ? (gt = Ie.slice(0, de - 1) + "0" + Ie.slice(de),
                                    gt = this.parseValue(gt) > 0 ? gt : "") : gt = Ie.slice(0, de - 1) + Ie.slice(de)
                            }
                            this.updateValue(k, gt, null, "delete-single")
                        } else
                            gt = this.deleteRange(Ie, de, he),
                            this.updateValue(k, gt, null, "delete-range");
                        break;
                    case 46:
                        if (k.preventDefault(),
                        de === he) {
                            const Qe = Ie.charAt(de)
                              , {decimalCharIndex: Tt, decimalCharIndexWithoutPrefix: wn} = this.getDecimalCharIndexes(Ie);
                            if (this.isNumeralChar(Qe)) {
                                const an = this.getDecimalLength(Ie);
                                if (this._group.test(Qe))
                                    this._group.lastIndex = 0,
                                    gt = Ie.slice(0, de) + Ie.slice(de + 2);
                                else if (this._decimal.test(Qe))
                                    this._decimal.lastIndex = 0,
                                    an ? this.input.nativeElement.setSelectionRange(de + 1, de + 1) : gt = Ie.slice(0, de) + Ie.slice(de + 1);
                                else if (Tt > 0 && de > Tt) {
                                    const In = this.isDecimalMode() && (this.minFractionDigits || 0) < an ? "" : "0";
                                    gt = Ie.slice(0, de) + In + Ie.slice(de + 1)
                                } else
                                    1 === wn ? (gt = Ie.slice(0, de) + "0" + Ie.slice(de + 1),
                                    gt = this.parseValue(gt) > 0 ? gt : "") : gt = Ie.slice(0, de) + Ie.slice(de + 1)
                            }
                            this.updateValue(k, gt, null, "delete-back-single")
                        } else
                            gt = this.deleteRange(Ie, de, he),
                            this.updateValue(k, gt, null, "delete-range")
                    }
                    this.onKeyDown.emit(k)
                }
                onInputKeyPress(k) {
                    if (this.readonly)
                        return;
                    let de = k.which || k.keyCode
                      , he = String.fromCharCode(de);
                    const Ie = this.isDecimalSign(he)
                      , gt = this.isMinusSign(he);
                    13 != de && k.preventDefault(),
                    (48 <= de && de <= 57 || gt || Ie) && this.insert(k, he, {
                        isDecimalSign: Ie,
                        isMinusSign: gt
                    })
                }
                onPaste(k) {
                    if (!this.disabled && !this.readonly) {
                        k.preventDefault();
                        let de = (k.clipboardData || window.clipboardData).getData("Text");
                        if (de) {
                            let he = this.parseValue(de);
                            null != he && this.insert(k, he.toString())
                        }
                    }
                }
                allowMinusSign() {
                    return null == this.min || this.min < 0
                }
                isMinusSign(k) {
                    return !(!this._minusSign.test(k) && "-" !== k || (this._minusSign.lastIndex = 0,
                    0))
                }
                isDecimalSign(k) {
                    return !!this._decimal.test(k) && (this._decimal.lastIndex = 0,
                    !0)
                }
                isDecimalMode() {
                    return "decimal" === this.mode
                }
                getDecimalCharIndexes(k) {
                    let de = k.search(this._decimal);
                    this._decimal.lastIndex = 0;
                    const Ie = k.replace(this._prefix, "").trim().replace(/\s/g, "").replace(this._currency, "").search(this._decimal);
                    return this._decimal.lastIndex = 0,
                    {
                        decimalCharIndex: de,
                        decimalCharIndexWithoutPrefix: Ie
                    }
                }
                getCharIndexes(k) {
                    const de = k.search(this._decimal);
                    this._decimal.lastIndex = 0;
                    const he = k.search(this._minusSign);
                    this._minusSign.lastIndex = 0;
                    const Ie = k.search(this._suffix);
                    this._suffix.lastIndex = 0;
                    const gt = k.search(this._currency);
                    return this._currency.lastIndex = 0,
                    {
                        decimalCharIndex: de,
                        minusCharIndex: he,
                        suffixCharIndex: Ie,
                        currencyCharIndex: gt
                    }
                }
                insert(k, de, he={
                    isDecimalSign: !1,
                    isMinusSign: !1
                }) {
                    const Ie = de.search(this._minusSign);
                    if (this._minusSign.lastIndex = 0,
                    !this.allowMinusSign() && -1 !== Ie)
                        return;
                    let gt = this.input.nativeElement.selectionStart
                      , Qe = this.input.nativeElement.selectionEnd
                      , Tt = this.input.nativeElement.value.trim();
                    const {decimalCharIndex: wn, minusCharIndex: an, suffixCharIndex: In, currencyCharIndex: $t} = this.getCharIndexes(Tt);
                    let gn;
                    if (he.isMinusSign)
                        0 === gt && (gn = Tt,
                        (-1 === an || 0 !== Qe) && (gn = this.insertText(Tt, de, 0, Qe)),
                        this.updateValue(k, gn, de, "insert"));
                    else if (he.isDecimalSign)
                        wn > 0 && gt === wn ? this.updateValue(k, Tt, de, "insert") : (wn > gt && wn < Qe || -1 === wn && this.maxFractionDigits) && (gn = this.insertText(Tt, de, gt, Qe),
                        this.updateValue(k, gn, de, "insert"));
                    else {
                        const qn = this.numberFormat.resolvedOptions().maximumFractionDigits
                          , xn = gt !== Qe ? "range-insert" : "insert";
                        if (wn > 0 && gt > wn) {
                            if (gt + de.length - (wn + 1) <= qn) {
                                const Xn = $t >= gt ? $t - 1 : In >= gt ? In : Tt.length;
                                gn = Tt.slice(0, gt) + de + Tt.slice(gt + de.length, Xn) + Tt.slice(Xn),
                                this.updateValue(k, gn, de, xn)
                            }
                        } else
                            gn = this.insertText(Tt, de, gt, Qe),
                            this.updateValue(k, gn, de, xn)
                    }
                }
                insertText(k, de, he, Ie) {
                    if (2 === ("." === de ? de : de.split(".")).length) {
                        const Qe = k.slice(he, Ie).search(this._decimal);
                        return this._decimal.lastIndex = 0,
                        Qe > 0 ? k.slice(0, he) + this.formatValue(de) + k.slice(Ie) : k || this.formatValue(de)
                    }
                    return Ie - he === k.length ? this.formatValue(de) : 0 === he ? de + k.slice(Ie) : Ie === k.length ? k.slice(0, he) + de : k.slice(0, he) + de + k.slice(Ie)
                }
                deleteRange(k, de, he) {
                    let Ie;
                    return Ie = he - de === k.length ? "" : 0 === de ? k.slice(he) : he === k.length ? k.slice(0, de) : k.slice(0, de) + k.slice(he),
                    Ie
                }
                initCursor() {
                    let k = this.input.nativeElement.selectionStart
                      , de = this.input.nativeElement.value
                      , he = de.length
                      , Ie = null
                      , gt = (this.prefixChar || "").length;
                    de = de.replace(this._prefix, ""),
                    k -= gt;
                    let Qe = de.charAt(k);
                    if (this.isNumeralChar(Qe))
                        return k + gt;
                    let Tt = k - 1;
                    for (; Tt >= 0; ) {
                        if (Qe = de.charAt(Tt),
                        this.isNumeralChar(Qe)) {
                            Ie = Tt + gt;
                            break
                        }
                        Tt--
                    }
                    if (null !== Ie)
                        this.input.nativeElement.setSelectionRange(Ie + 1, Ie + 1);
                    else {
                        for (Tt = k; Tt < he; ) {
                            if (Qe = de.charAt(Tt),
                            this.isNumeralChar(Qe)) {
                                Ie = Tt + gt;
                                break
                            }
                            Tt++
                        }
                        null !== Ie && this.input.nativeElement.setSelectionRange(Ie, Ie)
                    }
                    return Ie || 0
                }
                onInputClick() {
                    this.readonly || this.initCursor()
                }
                isNumeralChar(k) {
                    return !(1 !== k.length || !(this._numeral.test(k) || this._decimal.test(k) || this._group.test(k) || this._minusSign.test(k)) || (this.resetRegex(),
                    0))
                }
                resetRegex() {
                    this._numeral.lastIndex = 0,
                    this._decimal.lastIndex = 0,
                    this._group.lastIndex = 0,
                    this._minusSign.lastIndex = 0
                }
                updateValue(k, de, he, Ie) {
                    let gt = this.input.nativeElement.value
                      , Qe = null;
                    null != de && (Qe = this.parseValue(de),
                    Qe = Qe || this.allowEmpty ? Qe : 0,
                    this.updateInput(Qe, he, Ie, de),
                    this.handleOnInput(k, gt, Qe))
                }
                handleOnInput(k, de, he) {
                    this.isValueChanged(de, he) && this.onInput.emit({
                        originalEvent: k,
                        value: he
                    })
                }
                isValueChanged(k, de) {
                    return null === de && null !== k || null != de && de !== ("string" == typeof k ? this.parseValue(k) : k)
                }
                validateValue(k) {
                    return "-" === k || null == k ? null : null != this.min && k < this.min ? this.min : null != this.max && k > this.max ? this.max : k
                }
                updateInput(k, de, he, Ie) {
                    de = de || "";
                    let gt = this.input.nativeElement.value
                      , Qe = this.formatValue(k)
                      , Tt = gt.length;
                    if (Qe !== Ie && (Qe = this.concatValues(Qe, Ie)),
                    0 === Tt) {
                        this.input.nativeElement.value = Qe,
                        this.input.nativeElement.setSelectionRange(0, 0);
                        const an = this.initCursor() + de.length;
                        this.input.nativeElement.setSelectionRange(an, an)
                    } else {
                        let wn = this.input.nativeElement.selectionStart
                          , an = this.input.nativeElement.selectionEnd;
                        if (this.maxlength && this.maxlength < Qe.length)
                            return;
                        this.input.nativeElement.value = Qe;
                        let In = Qe.length;
                        if ("range-insert" === he) {
                            const $t = this.parseValue((gt || "").slice(0, wn))
                              , qn = (null !== $t ? $t.toString() : "").split("").join(`(${this.groupChar})?`)
                              , xn = new RegExp(qn,"g");
                            xn.test(Qe);
                            const Xn = de.split("").join(`(${this.groupChar})?`)
                              , vi = new RegExp(Xn,"g");
                            vi.test(Qe.slice(xn.lastIndex)),
                            an = xn.lastIndex + vi.lastIndex,
                            this.input.nativeElement.setSelectionRange(an, an)
                        } else if (In === Tt)
                            "insert" === he || "delete-back-single" === he ? this.input.nativeElement.setSelectionRange(an + 1, an + 1) : "delete-single" === he ? this.input.nativeElement.setSelectionRange(an - 1, an - 1) : ("delete-range" === he || "spin" === he) && this.input.nativeElement.setSelectionRange(an, an);
                        else if ("delete-back-single" === he) {
                            let $t = gt.charAt(an - 1)
                              , gn = gt.charAt(an)
                              , qn = Tt - In
                              , xn = this._group.test(gn);
                            xn && 1 === qn ? an += 1 : !xn && this.isNumeralChar($t) && (an += -1 * qn + 1),
                            this._group.lastIndex = 0,
                            this.input.nativeElement.setSelectionRange(an, an)
                        } else if ("-" === gt && "insert" === he) {
                            this.input.nativeElement.setSelectionRange(0, 0);
                            const gn = this.initCursor() + de.length + 1;
                            this.input.nativeElement.setSelectionRange(gn, gn)
                        } else
                            an += In - Tt,
                            this.input.nativeElement.setSelectionRange(an, an)
                    }
                    this.input.nativeElement.setAttribute("aria-valuenow", k)
                }
                concatValues(k, de) {
                    if (k && de) {
                        let he = de.search(this._decimal);
                        return this._decimal.lastIndex = 0,
                        -1 !== he ? k.split(this._decimal)[0] + de.slice(he) : k
                    }
                    return k
                }
                getDecimalLength(k) {
                    if (k) {
                        const de = k.split(this._decimal);
                        if (2 === de.length)
                            return de[1].replace(this._suffix, "").trim().replace(/\s/g, "").replace(this._currency, "").length
                    }
                    return 0
                }
                onInputFocus(k) {
                    this.focused = !0,
                    this.onFocus.emit(k)
                }
                onInputBlur(k) {
                    this.focused = !1;
                    let de = this.validateValue(this.parseValue(this.input.nativeElement.value));
                    this.input.nativeElement.value = this.formatValue(de),
                    this.input.nativeElement.setAttribute("aria-valuenow", de),
                    this.updateModel(k, de),
                    this.onBlur.emit(k)
                }
                formattedValue() {
                    return this.formatValue(this.value || this.allowEmpty ? this.value : 0)
                }
                updateModel(k, de) {
                    this.value !== de && (this.value = de,
                    this.onModelChange(de)),
                    this.onModelTouched()
                }
                writeValue(k) {
                    this.value = k,
                    this.cd.markForCheck()
                }
                registerOnChange(k) {
                    this.onModelChange = k
                }
                registerOnTouched(k) {
                    this.onModelTouched = k
                }
                setDisabledState(k) {
                    this.disabled = k,
                    this.cd.markForCheck()
                }
                get filled() {
                    return null != this.value && this.value.toString().length > 0
                }
                clearTimer() {
                    this.timer && clearInterval(this.timer)
                }
                getFormatter() {
                    return this.numberFormat
                }
            }
            return bt.\u0275fac = function(k) {
                return new (k || bt)(i.Y36(i.SBq),i.Y36(i.sBO))
            }
            ,
            bt.\u0275cmp = i.Xpm({
                type: bt,
                selectors: [["p-inputNumber"]],
                viewQuery: function(k, de) {
                    if (1 & k && i.Gf(le, 5),
                    2 & k) {
                        let he;
                        i.iGM(he = i.CRH()) && (de.input = he.first)
                    }
                },
                hostAttrs: [1, "p-element", "p-inputwrapper"],
                hostVars: 6,
                hostBindings: function(k, de) {
                    2 & k && i.ekj("p-inputwrapper-filled", de.filled)("p-inputwrapper-focus", de.focused)("p-inputnumber-clearable", de.showClear && "vertical" != de.buttonLayout)
                },
                inputs: {
                    showButtons: "showButtons",
                    format: "format",
                    buttonLayout: "buttonLayout",
                    inputId: "inputId",
                    styleClass: "styleClass",
                    style: "style",
                    placeholder: "placeholder",
                    size: "size",
                    maxlength: "maxlength",
                    tabindex: "tabindex",
                    title: "title",
                    ariaLabel: "ariaLabel",
                    ariaRequired: "ariaRequired",
                    name: "name",
                    required: "required",
                    autocomplete: "autocomplete",
                    min: "min",
                    max: "max",
                    incrementButtonClass: "incrementButtonClass",
                    decrementButtonClass: "decrementButtonClass",
                    incrementButtonIcon: "incrementButtonIcon",
                    decrementButtonIcon: "decrementButtonIcon",
                    readonly: "readonly",
                    step: "step",
                    allowEmpty: "allowEmpty",
                    locale: "locale",
                    localeMatcher: "localeMatcher",
                    mode: "mode",
                    currency: "currency",
                    currencyDisplay: "currencyDisplay",
                    useGrouping: "useGrouping",
                    minFractionDigits: "minFractionDigits",
                    maxFractionDigits: "maxFractionDigits",
                    prefix: "prefix",
                    suffix: "suffix",
                    inputStyle: "inputStyle",
                    inputStyleClass: "inputStyleClass",
                    showClear: "showClear",
                    disabled: "disabled"
                },
                outputs: {
                    onInput: "onInput",
                    onFocus: "onFocus",
                    onBlur: "onBlur",
                    onKeyDown: "onKeyDown",
                    onClear: "onClear"
                },
                features: [i._Bn([$e]), i.TTD],
                decls: 7,
                vars: 32,
                consts: [[3, "ngClass", "ngStyle"], ["pInputText", "", "inputmode", "decimal", 3, "ngClass", "ngStyle", "value", "disabled", "readonly", "input", "keydown", "keypress", "paste", "click", "focus", "blur"], ["input", ""], ["class", "p-inputnumber-clear-icon pi pi-times", 3, "click", 4, "ngIf"], ["class", "p-inputnumber-button-group", 4, "ngIf"], ["type", "button", "pButton", "", 3, "ngClass", "class", "icon", "disabled", "mousedown", "mouseup", "mouseleave", "keydown", "keyup", 4, "ngIf"], [1, "p-inputnumber-clear-icon", "pi", "pi-times", 3, "click"], [1, "p-inputnumber-button-group"], ["type", "button", "pButton", "", 3, "ngClass", "icon", "disabled", "mousedown", "mouseup", "mouseleave", "keydown", "keyup"]],
                template: function(k, de) {
                    1 & k && (i.TgZ(0, "span", 0)(1, "input", 1, 2),
                    i.NdJ("input", function(Ie) {
                        return de.onUserInput(Ie)
                    })("keydown", function(Ie) {
                        return de.onInputKeyDown(Ie)
                    })("keypress", function(Ie) {
                        return de.onInputKeyPress(Ie)
                    })("paste", function(Ie) {
                        return de.onPaste(Ie)
                    })("click", function() {
                        return de.onInputClick()
                    })("focus", function(Ie) {
                        return de.onInputFocus(Ie)
                    })("blur", function(Ie) {
                        return de.onInputBlur(Ie)
                    }),
                    i.qZA(),
                    i.YNc(3, W, 1, 0, "i", 3),
                    i.YNc(4, Ke, 3, 12, "span", 4),
                    i.YNc(5, Ne, 1, 6, "button", 5),
                    i.YNc(6, Be, 1, 6, "button", 5),
                    i.qZA()),
                    2 & k && (i.Tol(de.styleClass),
                    i.Q6J("ngClass", i.kEZ(28, ot, de.showButtons && "stacked" === de.buttonLayout, de.showButtons && "horizontal" === de.buttonLayout, de.showButtons && "vertical" === de.buttonLayout))("ngStyle", de.style),
                    i.xp6(1),
                    i.Tol(de.inputStyleClass),
                    i.Q6J("ngClass", "p-inputnumber-input")("ngStyle", de.inputStyle)("value", de.formattedValue())("disabled", de.disabled)("readonly", de.readonly),
                    i.uIk("placeholder", de.placeholder)("title", de.title)("id", de.inputId)("size", de.size)("name", de.name)("autocomplete", de.autocomplete)("maxlength", de.maxlength)("tabindex", de.tabindex)("aria-label", de.ariaLabel)("aria-required", de.ariaRequired)("required", de.required)("min", de.min)("max", de.max),
                    i.xp6(2),
                    i.Q6J("ngIf", "vertical" != de.buttonLayout && de.showClear && de.value),
                    i.xp6(1),
                    i.Q6J("ngIf", de.showButtons && "stacked" === de.buttonLayout),
                    i.xp6(1),
                    i.Q6J("ngIf", de.showButtons && "stacked" !== de.buttonLayout),
                    i.xp6(1),
                    i.Q6J("ngIf", de.showButtons && "stacked" !== de.buttonLayout))
                },
                dependencies: [l.mk, l.O5, l.PC, z.o, te.Hq],
                styles: ["p-inputnumber,.p-inputnumber{display:inline-flex}.p-inputnumber-button{display:flex;align-items:center;justify-content:center;flex:0 0 auto}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button .p-button-label,.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button .p-button-label{display:none}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-up{border-top-left-radius:0;border-bottom-left-radius:0;border-bottom-right-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-input{border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-down{border-top-left-radius:0;border-top-right-radius:0;border-bottom-left-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-button-group{display:flex;flex-direction:column}.p-inputnumber-buttons-stacked .p-inputnumber-button-group .p-button.p-inputnumber-button{flex:1 1 auto}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-up{order:3;border-top-left-radius:0;border-bottom-left-radius:0}.p-inputnumber-buttons-horizontal .p-inputnumber-input{order:2;border-radius:0}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-down{order:1;border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-vertical{flex-direction:column}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-up{order:1;border-bottom-left-radius:0;border-bottom-right-radius:0;width:100%}.p-inputnumber-buttons-vertical .p-inputnumber-input{order:2;border-radius:0;text-align:center}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-down{order:3;border-top-left-radius:0;border-top-right-radius:0;width:100%}.p-inputnumber-input{flex:1 1 auto}.p-fluid p-inputnumber,.p-fluid .p-inputnumber{width:100%}.p-fluid .p-inputnumber .p-inputnumber-input{width:1%}.p-fluid .p-inputnumber-buttons-vertical .p-inputnumber-input{width:100%}.p-inputnumber-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-inputnumber-clearable{position:relative}\n"],
                encapsulation: 2,
                changeDetection: 0
            }),
            bt
        }
        )()
          , et = (()=>{
            class bt {
            }
            return bt.\u0275fac = function(k) {
                return new (k || bt)
            }
            ,
            bt.\u0275mod = i.oAB({
                type: bt
            }),
            bt.\u0275inj = i.cJS({
                imports: [l.ez, z.j, te.hJ]
            }),
            bt
        }
        )();
        function st(bt, Kt) {
            1 & bt && i.GkF(0)
        }
        const Pe = function(bt) {
            return {
                $implicit: bt
            }
        };
        function Q(bt, Kt) {
            if (1 & bt && (i.TgZ(0, "div", 15),
            i.YNc(1, st, 1, 0, "ng-container", 16),
            i.qZA()),
            2 & bt) {
                const k = i.oxw(2);
                i.xp6(1),
                i.Q6J("ngTemplateOutlet", k.templateLeft)("ngTemplateOutletContext", i.VKq(2, Pe, k.paginatorState))
            }
        }
        function ze(bt, Kt) {
            if (1 & bt && (i.TgZ(0, "span", 17),
            i._uU(1),
            i.qZA()),
            2 & bt) {
                const k = i.oxw(2);
                i.xp6(1),
                i.Oqu(k.currentPageReport)
            }
        }
        const ye = function(bt) {
            return {
                "p-disabled": bt
            }
        };
        function Re(bt, Kt) {
            if (1 & bt) {
                const k = i.EpF();
                i.TgZ(0, "button", 18),
                i.NdJ("click", function(he) {
                    i.CHM(k);
                    const Ie = i.oxw(2);
                    return i.KtG(Ie.changePageToFirst(he))
                }),
                i._UZ(1, "span", 19),
                i.qZA()
            }
            if (2 & bt) {
                const k = i.oxw(2);
                i.Q6J("disabled", k.isFirstPage() || k.empty())("ngClass", i.VKq(2, ye, k.isFirstPage() || k.empty()))
            }
        }
        const ut = function(bt) {
            return {
                "p-highlight": bt
            }
        };
        function Ce(bt, Kt) {
            if (1 & bt) {
                const k = i.EpF();
                i.TgZ(0, "button", 22),
                i.NdJ("click", function(he) {
                    const gt = i.CHM(k).$implicit
                      , Qe = i.oxw(3);
                    return i.KtG(Qe.onPageLinkClick(he, gt - 1))
                }),
                i._uU(1),
                i.qZA()
            }
            if (2 & bt) {
                const k = Kt.$implicit
                  , de = i.oxw(3);
                i.Q6J("ngClass", i.VKq(2, ut, k - 1 == de.getPage())),
                i.xp6(1),
                i.Oqu(k)
            }
        }
        function Oe(bt, Kt) {
            if (1 & bt && (i.TgZ(0, "span", 20),
            i.YNc(1, Ce, 2, 4, "button", 21),
            i.qZA()),
            2 & bt) {
                const k = i.oxw(2);
                i.xp6(1),
                i.Q6J("ngForOf", k.pageLinks)
            }
        }
        function Ze(bt, Kt) {
            if (1 & bt && i._uU(0),
            2 & bt) {
                const k = i.oxw(3);
                i.Oqu(k.currentPageReport)
            }
        }
        function _t(bt, Kt) {
            if (1 & bt) {
                const k = i.EpF();
                i.TgZ(0, "p-dropdown", 23),
                i.NdJ("onChange", function(he) {
                    i.CHM(k);
                    const Ie = i.oxw(2);
                    return i.KtG(Ie.onPageDropdownChange(he))
                }),
                i.YNc(1, Ze, 1, 1, "ng-template", 24),
                i.qZA()
            }
            if (2 & bt) {
                const k = i.oxw(2);
                i.Q6J("options", k.pageItems)("ngModel", k.getPage())("disabled", k.empty())("appendTo", k.dropdownAppendTo)("scrollHeight", k.dropdownScrollHeight)
            }
        }
        function rt(bt, Kt) {
            if (1 & bt) {
                const k = i.EpF();
                i.TgZ(0, "button", 25),
                i.NdJ("click", function(he) {
                    i.CHM(k);
                    const Ie = i.oxw(2);
                    return i.KtG(Ie.changePageToLast(he))
                }),
                i._UZ(1, "span", 26),
                i.qZA()
            }
            if (2 & bt) {
                const k = i.oxw(2);
                i.Q6J("disabled", k.isLastPage() || k.empty())("ngClass", i.VKq(2, ye, k.isLastPage() || k.empty()))
            }
        }
        function It(bt, Kt) {
            if (1 & bt) {
                const k = i.EpF();
                i.TgZ(0, "p-inputNumber", 27),
                i.NdJ("ngModelChange", function(he) {
                    i.CHM(k);
                    const Ie = i.oxw(2);
                    return i.KtG(Ie.changePage(he - 1))
                }),
                i.qZA()
            }
            if (2 & bt) {
                const k = i.oxw(2);
                i.Q6J("ngModel", k.currentPage())("disabled", k.empty())
            }
        }
        function qt(bt, Kt) {
            1 & bt && i.GkF(0)
        }
        function ft(bt, Kt) {
            if (1 & bt && i.YNc(0, qt, 1, 0, "ng-container", 16),
            2 & bt) {
                const k = Kt.$implicit
                  , de = i.oxw(4);
                i.Q6J("ngTemplateOutlet", de.dropdownItemTemplate)("ngTemplateOutletContext", i.VKq(2, Pe, k))
            }
        }
        function qe(bt, Kt) {
            1 & bt && (i.ynx(0),
            i.YNc(1, ft, 1, 4, "ng-template", 30),
            i.BQk())
        }
        function be(bt, Kt) {
            if (1 & bt) {
                const k = i.EpF();
                i.TgZ(0, "p-dropdown", 28),
                i.NdJ("ngModelChange", function(he) {
                    i.CHM(k);
                    const Ie = i.oxw(2);
                    return i.KtG(Ie.rows = he)
                })("onChange", function(he) {
                    i.CHM(k);
                    const Ie = i.oxw(2);
                    return i.KtG(Ie.onRppChange(he))
                }),
                i.YNc(1, qe, 2, 0, "ng-container", 29),
                i.qZA()
            }
            if (2 & bt) {
                const k = i.oxw(2);
                i.Q6J("options", k.rowsPerPageItems)("ngModel", k.rows)("disabled", k.empty())("appendTo", k.dropdownAppendTo)("scrollHeight", k.dropdownScrollHeight),
                i.xp6(1),
                i.Q6J("ngIf", k.dropdownItemTemplate)
            }
        }
        function pe(bt, Kt) {
            1 & bt && i.GkF(0)
        }
        function pt(bt, Kt) {
            if (1 & bt && (i.TgZ(0, "div", 31),
            i.YNc(1, pe, 1, 0, "ng-container", 16),
            i.qZA()),
            2 & bt) {
                const k = i.oxw(2);
                i.xp6(1),
                i.Q6J("ngTemplateOutlet", k.templateRight)("ngTemplateOutletContext", i.VKq(2, Pe, k.paginatorState))
            }
        }
        function Mt(bt, Kt) {
            if (1 & bt) {
                const k = i.EpF();
                i.TgZ(0, "div", 1),
                i.YNc(1, Q, 2, 4, "div", 2),
                i.YNc(2, ze, 2, 1, "span", 3),
                i.YNc(3, Re, 2, 4, "button", 4),
                i.TgZ(4, "button", 5),
                i.NdJ("click", function(he) {
                    i.CHM(k);
                    const Ie = i.oxw();
                    return i.KtG(Ie.changePageToPrev(he))
                }),
                i._UZ(5, "span", 6),
                i.qZA(),
                i.YNc(6, Oe, 2, 1, "span", 7),
                i.YNc(7, _t, 2, 5, "p-dropdown", 8),
                i.TgZ(8, "button", 9),
                i.NdJ("click", function(he) {
                    i.CHM(k);
                    const Ie = i.oxw();
                    return i.KtG(Ie.changePageToNext(he))
                }),
                i._UZ(9, "span", 10),
                i.qZA(),
                i.YNc(10, rt, 2, 4, "button", 11),
                i.YNc(11, It, 1, 2, "p-inputNumber", 12),
                i.YNc(12, be, 2, 6, "p-dropdown", 13),
                i.YNc(13, pt, 2, 4, "div", 14),
                i.qZA()
            }
            if (2 & bt) {
                const k = i.oxw();
                i.Tol(k.styleClass),
                i.Q6J("ngStyle", k.style)("ngClass", "p-paginator p-component"),
                i.xp6(1),
                i.Q6J("ngIf", k.templateLeft),
                i.xp6(1),
                i.Q6J("ngIf", k.showCurrentPageReport),
                i.xp6(1),
                i.Q6J("ngIf", k.showFirstLastIcon),
                i.xp6(1),
                i.Q6J("disabled", k.isFirstPage() || k.empty())("ngClass", i.VKq(17, ye, k.isFirstPage() || k.empty())),
                i.xp6(2),
                i.Q6J("ngIf", k.showPageLinks),
                i.xp6(1),
                i.Q6J("ngIf", k.showJumpToPageDropdown),
                i.xp6(1),
                i.Q6J("disabled", k.isLastPage() || k.empty())("ngClass", i.VKq(19, ye, k.isLastPage() || k.empty())),
                i.xp6(2),
                i.Q6J("ngIf", k.showFirstLastIcon),
                i.xp6(1),
                i.Q6J("ngIf", k.showJumpToPageInput),
                i.xp6(1),
                i.Q6J("ngIf", k.rowsPerPageOptions),
                i.xp6(1),
                i.Q6J("ngIf", k.templateRight)
            }
        }
        let kt = (()=>{
            class bt {
                constructor(k) {
                    this.cd = k,
                    this.pageLinkSize = 5,
                    this.onPageChange = new i.vpe,
                    this.alwaysShow = !0,
                    this.dropdownScrollHeight = "200px",
                    this.currentPageReportTemplate = "{currentPage} of {totalPages}",
                    this.showFirstLastIcon = !0,
                    this.totalRecords = 0,
                    this.rows = 0,
                    this.showPageLinks = !0,
                    this._first = 0,
                    this._page = 0
                }
                ngOnInit() {
                    this.updatePaginatorState()
                }
                ngOnChanges(k) {
                    k.totalRecords && (this.updatePageLinks(),
                    this.updatePaginatorState(),
                    this.updateFirst(),
                    this.updateRowsPerPageOptions()),
                    k.first && (this._first = k.first.currentValue,
                    this.updatePageLinks(),
                    this.updatePaginatorState()),
                    k.rows && (this.updatePageLinks(),
                    this.updatePaginatorState()),
                    k.rowsPerPageOptions && this.updateRowsPerPageOptions()
                }
                get first() {
                    return this._first
                }
                set first(k) {
                    this._first = k
                }
                updateRowsPerPageOptions() {
                    if (this.rowsPerPageOptions) {
                        this.rowsPerPageItems = [];
                        for (let k of this.rowsPerPageOptions)
                            "object" == typeof k && k.showAll ? this.rowsPerPageItems.unshift({
                                label: k.showAll,
                                value: this.totalRecords
                            }) : this.rowsPerPageItems.push({
                                label: String(k),
                                value: k
                            })
                    }
                }
                isFirstPage() {
                    return 0 === this.getPage()
                }
                isLastPage() {
                    return this.getPage() === this.getPageCount() - 1
                }
                getPageCount() {
                    return Math.ceil(this.totalRecords / this.rows)
                }
                calculatePageLinkBoundaries() {
                    let k = this.getPageCount()
                      , de = Math.min(this.pageLinkSize, k)
                      , he = Math.max(0, Math.ceil(this.getPage() - de / 2))
                      , Ie = Math.min(k - 1, he + de - 1);
                    return he = Math.max(0, he - (this.pageLinkSize - (Ie - he + 1))),
                    [he, Ie]
                }
                updatePageLinks() {
                    this.pageLinks = [];
                    let k = this.calculatePageLinkBoundaries()
                      , he = k[1];
                    for (let Ie = k[0]; Ie <= he; Ie++)
                        this.pageLinks.push(Ie + 1);
                    if (this.showJumpToPageDropdown) {
                        this.pageItems = [];
                        for (let Ie = 0; Ie < this.getPageCount(); Ie++)
                            this.pageItems.push({
                                label: String(Ie + 1),
                                value: Ie
                            })
                    }
                }
                changePage(k) {
                    var de = this.getPageCount();
                    if (k >= 0 && k < de) {
                        this._first = this.rows * k;
                        var he = {
                            page: k,
                            first: this.first,
                            rows: this.rows,
                            pageCount: de
                        };
                        this.updatePageLinks(),
                        this.onPageChange.emit(he),
                        this.updatePaginatorState()
                    }
                }
                updateFirst() {
                    const k = this.getPage();
                    k > 0 && this.totalRecords && this.first >= this.totalRecords && Promise.resolve(null).then(()=>this.changePage(k - 1))
                }
                getPage() {
                    return Math.floor(this.first / this.rows)
                }
                changePageToFirst(k) {
                    this.isFirstPage() || this.changePage(0),
                    k.preventDefault()
                }
                changePageToPrev(k) {
                    this.changePage(this.getPage() - 1),
                    k.preventDefault()
                }
                changePageToNext(k) {
                    this.changePage(this.getPage() + 1),
                    k.preventDefault()
                }
                changePageToLast(k) {
                    this.isLastPage() || this.changePage(this.getPageCount() - 1),
                    k.preventDefault()
                }
                onPageLinkClick(k, de) {
                    this.changePage(de),
                    k.preventDefault()
                }
                onRppChange(k) {
                    this.changePage(this.getPage())
                }
                onPageDropdownChange(k) {
                    this.changePage(k.value)
                }
                updatePaginatorState() {
                    this.paginatorState = {
                        page: this.getPage(),
                        pageCount: this.getPageCount(),
                        rows: this.rows,
                        first: this.first,
                        totalRecords: this.totalRecords
                    }
                }
                empty() {
                    return 0 === this.getPageCount()
                }
                currentPage() {
                    return this.getPageCount() > 0 ? this.getPage() + 1 : 0
                }
                get currentPageReport() {
                    return this.currentPageReportTemplate.replace("{currentPage}", String(this.currentPage())).replace("{totalPages}", String(this.getPageCount())).replace("{first}", String(this.totalRecords > 0 ? this._first + 1 : 0)).replace("{last}", String(Math.min(this._first + this.rows, this.totalRecords))).replace("{rows}", String(this.rows)).replace("{totalRecords}", String(this.totalRecords))
                }
            }
            return bt.\u0275fac = function(k) {
                return new (k || bt)(i.Y36(i.sBO))
            }
            ,
            bt.\u0275cmp = i.Xpm({
                type: bt,
                selectors: [["p-paginator"]],
                hostAttrs: [1, "p-element"],
                inputs: {
                    pageLinkSize: "pageLinkSize",
                    style: "style",
                    styleClass: "styleClass",
                    alwaysShow: "alwaysShow",
                    templateLeft: "templateLeft",
                    templateRight: "templateRight",
                    dropdownAppendTo: "dropdownAppendTo",
                    dropdownScrollHeight: "dropdownScrollHeight",
                    currentPageReportTemplate: "currentPageReportTemplate",
                    showCurrentPageReport: "showCurrentPageReport",
                    showFirstLastIcon: "showFirstLastIcon",
                    totalRecords: "totalRecords",
                    rows: "rows",
                    rowsPerPageOptions: "rowsPerPageOptions",
                    showJumpToPageDropdown: "showJumpToPageDropdown",
                    showJumpToPageInput: "showJumpToPageInput",
                    showPageLinks: "showPageLinks",
                    dropdownItemTemplate: "dropdownItemTemplate",
                    first: "first"
                },
                outputs: {
                    onPageChange: "onPageChange"
                },
                features: [i.TTD],
                decls: 1,
                vars: 1,
                consts: [[3, "class", "ngStyle", "ngClass", 4, "ngIf"], [3, "ngStyle", "ngClass"], ["class", "p-paginator-left-content", 4, "ngIf"], ["class", "p-paginator-current", 4, "ngIf"], ["type", "button", "pRipple", "", "class", "p-paginator-first p-paginator-element p-link", 3, "disabled", "ngClass", "click", 4, "ngIf"], ["type", "button", "pRipple", "", 1, "p-paginator-prev", "p-paginator-element", "p-link", 3, "disabled", "ngClass", "click"], [1, "p-paginator-icon", "pi", "pi-angle-left"], ["class", "p-paginator-pages", 4, "ngIf"], ["styleClass", "p-paginator-page-options", 3, "options", "ngModel", "disabled", "appendTo", "scrollHeight", "onChange", 4, "ngIf"], ["type", "button", "pRipple", "", 1, "p-paginator-next", "p-paginator-element", "p-link", 3, "disabled", "ngClass", "click"], [1, "p-paginator-icon", "pi", "pi-angle-right"], ["type", "button", "pRipple", "", "class", "p-paginator-last p-paginator-element p-link", 3, "disabled", "ngClass", "click", 4, "ngIf"], ["class", "p-paginator-page-input", 3, "ngModel", "disabled", "ngModelChange", 4, "ngIf"], ["styleClass", "p-paginator-rpp-options", 3, "options", "ngModel", "disabled", "appendTo", "scrollHeight", "ngModelChange", "onChange", 4, "ngIf"], ["class", "p-paginator-right-content", 4, "ngIf"], [1, "p-paginator-left-content"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "p-paginator-current"], ["type", "button", "pRipple", "", 1, "p-paginator-first", "p-paginator-element", "p-link", 3, "disabled", "ngClass", "click"], [1, "p-paginator-icon", "pi", "pi-angle-double-left"], [1, "p-paginator-pages"], ["type", "button", "class", "p-paginator-page p-paginator-element p-link", "pRipple", "", 3, "ngClass", "click", 4, "ngFor", "ngForOf"], ["type", "button", "pRipple", "", 1, "p-paginator-page", "p-paginator-element", "p-link", 3, "ngClass", "click"], ["styleClass", "p-paginator-page-options", 3, "options", "ngModel", "disabled", "appendTo", "scrollHeight", "onChange"], ["pTemplate", "selectedItem"], ["type", "button", "pRipple", "", 1, "p-paginator-last", "p-paginator-element", "p-link", 3, "disabled", "ngClass", "click"], [1, "p-paginator-icon", "pi", "pi-angle-double-right"], [1, "p-paginator-page-input", 3, "ngModel", "disabled", "ngModelChange"], ["styleClass", "p-paginator-rpp-options", 3, "options", "ngModel", "disabled", "appendTo", "scrollHeight", "ngModelChange", "onChange"], [4, "ngIf"], ["pTemplate", "item"], [1, "p-paginator-right-content"]],
                template: function(k, de) {
                    1 & k && i.YNc(0, Mt, 14, 21, "div", 0),
                    2 & k && i.Q6J("ngIf", !!de.alwaysShow || de.pageLinks && de.pageLinks.length > 1)
                },
                dependencies: [l.mk, l.sg, l.O5, l.tP, l.PC, ue.Lt, U.jx, Fe, q.JJ, q.On, H.H],
                styles: [".p-paginator{display:flex;align-items:center;justify-content:center;flex-wrap:wrap}.p-paginator-left-content{margin-right:auto}.p-paginator-right-content{margin-left:auto}.p-paginator-page,.p-paginator-next,.p-paginator-last,.p-paginator-first,.p-paginator-prev,.p-paginator-current{cursor:pointer;display:inline-flex;align-items:center;justify-content:center;line-height:1;-webkit-user-select:none;user-select:none;overflow:hidden;position:relative}.p-paginator-element:focus{z-index:1;position:relative}\n"],
                encapsulation: 2,
                changeDetection: 0
            }),
            bt
        }
        )()
          , Xt = (()=>{
            class bt {
            }
            return bt.\u0275fac = function(k) {
                return new (k || bt)
            }
            ,
            bt.\u0275mod = i.oAB({
                type: bt
            }),
            bt.\u0275inj = i.cJS({
                imports: [l.ez, ue.kW, et, q.u5, U.m8, H.T, ue.kW, et, q.u5, U.m8]
            }),
            bt
        }
        )()
    }
    ,
    8395: (Ot,je,D)=>{
        D.d(je, {
            k: ()=>z,
            q: ()=>te
        });
        var i = D(2560)
          , l = D(4666);
        function q(le, W) {
            if (1 & le && (i.TgZ(0, "div", 5),
            i._uU(1),
            i.qZA()),
            2 & le) {
                const fe = i.oxw(2);
                i.Udp("display", null != fe.value && 0 !== fe.value ? "flex" : "none"),
                i.xp6(1),
                i.AsE("", fe.value, "", fe.unit, "")
            }
        }
        function ue(le, W) {
            if (1 & le && (i.TgZ(0, "div", 3),
            i.YNc(1, q, 2, 4, "div", 4),
            i.qZA()),
            2 & le) {
                const fe = i.oxw();
                i.Udp("width", fe.value + "%"),
                i.xp6(1),
                i.Q6J("ngIf", fe.showValue)
            }
        }
        function H(le, W) {
            1 & le && (i.TgZ(0, "div", 6),
            i._UZ(1, "div", 7),
            i.qZA())
        }
        const U = function(le, W) {
            return {
                "p-progressbar p-component": !0,
                "p-progressbar-determinate": le,
                "p-progressbar-indeterminate": W
            }
        };
        let z = (()=>{
            class le {
                constructor() {
                    this.showValue = !0,
                    this.unit = "%",
                    this.mode = "determinate"
                }
            }
            return le.\u0275fac = function(fe) {
                return new (fe || le)
            }
            ,
            le.\u0275cmp = i.Xpm({
                type: le,
                selectors: [["p-progressBar"]],
                hostAttrs: [1, "p-element"],
                inputs: {
                    value: "value",
                    showValue: "showValue",
                    style: "style",
                    styleClass: "styleClass",
                    unit: "unit",
                    mode: "mode"
                },
                decls: 3,
                vars: 10,
                consts: [["role", "progressbar", "aria-valuemin", "0", "aria-valuemax", "100", 3, "ngStyle", "ngClass"], ["class", "p-progressbar-value p-progressbar-value-animate", "style", "display:flex", 3, "width", 4, "ngIf"], ["class", "p-progressbar-indeterminate-container", 4, "ngIf"], [1, "p-progressbar-value", "p-progressbar-value-animate", 2, "display", "flex"], ["class", "p-progressbar-label", 3, "display", 4, "ngIf"], [1, "p-progressbar-label"], [1, "p-progressbar-indeterminate-container"], [1, "p-progressbar-value", "p-progressbar-value-animate"]],
                template: function(fe, re) {
                    1 & fe && (i.TgZ(0, "div", 0),
                    i.YNc(1, ue, 2, 3, "div", 1),
                    i.YNc(2, H, 2, 0, "div", 2),
                    i.qZA()),
                    2 & fe && (i.Tol(re.styleClass),
                    i.Q6J("ngStyle", re.style)("ngClass", i.WLB(7, U, "determinate" === re.mode, "indeterminate" === re.mode)),
                    i.uIk("aria-valuenow", re.value),
                    i.xp6(1),
                    i.Q6J("ngIf", "determinate" === re.mode),
                    i.xp6(1),
                    i.Q6J("ngIf", "indeterminate" === re.mode))
                },
                dependencies: [l.mk, l.O5, l.PC],
                styles: ['.p-progressbar{position:relative;overflow:hidden}.p-progressbar-determinate .p-progressbar-value{height:100%;width:0%;position:absolute;display:none;border:0 none;display:flex;align-items:center;justify-content:center;overflow:hidden}.p-progressbar-determinate .p-progressbar-label{display:inline-flex}.p-progressbar-determinate .p-progressbar-value-animate{transition:width 1s ease-in-out}.p-progressbar-indeterminate .p-progressbar-value:before{content:"";position:absolute;background-color:inherit;top:0;left:0;bottom:0;will-change:left,right;animation:p-progressbar-indeterminate-anim 2.1s cubic-bezier(.65,.815,.735,.395) infinite}.p-progressbar-indeterminate .p-progressbar-value:after{content:"";position:absolute;background-color:inherit;top:0;left:0;bottom:0;will-change:left,right;animation:p-progressbar-indeterminate-anim-short 2.1s cubic-bezier(.165,.84,.44,1) infinite;animation-delay:1.15s}@keyframes p-progressbar-indeterminate-anim{0%{left:-35%;right:100%}60%{left:100%;right:-90%}to{left:100%;right:-90%}}@keyframes p-progressbar-indeterminate-anim-short{0%{left:-200%;right:100%}60%{left:107%;right:-8%}to{left:107%;right:-8%}}\n'],
                encapsulation: 2,
                changeDetection: 0
            }),
            le
        }
        )()
          , te = (()=>{
            class le {
            }
            return le.\u0275fac = function(fe) {
                return new (fe || le)
            }
            ,
            le.\u0275mod = i.oAB({
                type: le
            }),
            le.\u0275inj = i.cJS({
                imports: [l.ez]
            }),
            le
        }
        )()
    }
    ,
    2901: (Ot,je,D)=>{
        D.d(je, {
            G: ()=>q,
            L: ()=>ue
        });
        var i = D(2560)
          , l = D(4666);
        let q = (()=>{
            class H {
                constructor() {
                    this.strokeWidth = "2",
                    this.fill = "none",
                    this.animationDuration = "2s"
                }
            }
            return H.\u0275fac = function(z) {
                return new (z || H)
            }
            ,
            H.\u0275cmp = i.Xpm({
                type: H,
                selectors: [["p-progressSpinner"]],
                hostAttrs: [1, "p-element"],
                inputs: {
                    style: "style",
                    styleClass: "styleClass",
                    strokeWidth: "strokeWidth",
                    fill: "fill",
                    animationDuration: "animationDuration"
                },
                decls: 3,
                vars: 6,
                consts: [["role", "alert", "aria-busy", "true", 1, "p-progress-spinner", 3, "ngStyle", "ngClass"], ["viewBox", "25 25 50 50", 1, "p-progress-spinner-svg"], ["cx", "50", "cy", "50", "r", "20", "stroke-miterlimit", "10", 1, "p-progress-spinner-circle"]],
                template: function(z, te) {
                    1 & z && (i.TgZ(0, "div", 0),
                    i.O4$(),
                    i.TgZ(1, "svg", 1),
                    i._UZ(2, "circle", 2),
                    i.qZA()()),
                    2 & z && (i.Q6J("ngStyle", te.style)("ngClass", te.styleClass),
                    i.xp6(1),
                    i.Udp("animation-duration", te.animationDuration),
                    i.xp6(1),
                    i.uIk("fill", te.fill)("stroke-width", te.strokeWidth))
                },
                dependencies: [l.mk, l.PC],
                styles: ['.p-progress-spinner{position:relative;margin:0 auto;width:100px;height:100px;display:inline-block}.p-progress-spinner:before{content:"";display:block;padding-top:100%}.p-progress-spinner-svg{animation:p-progress-spinner-rotate 2s linear infinite;height:100%;transform-origin:center center;width:100%;position:absolute;top:0;bottom:0;left:0;right:0;margin:auto}.p-progress-spinner-circle{stroke-dasharray:89,200;stroke-dashoffset:0;stroke:#d62d20;animation:p-progress-spinner-dash 1.5s ease-in-out infinite,p-progress-spinner-color 6s ease-in-out infinite;stroke-linecap:round}@keyframes p-progress-spinner-rotate{to{transform:rotate(360deg)}}@keyframes p-progress-spinner-dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35px}to{stroke-dasharray:89,200;stroke-dashoffset:-124px}}@keyframes p-progress-spinner-color{to,0%{stroke:#d62d20}40%{stroke:#0057e7}66%{stroke:#008744}80%,90%{stroke:#ffa700}}\n'],
                encapsulation: 2,
                changeDetection: 0
            }),
            H
        }
        )()
          , ue = (()=>{
            class H {
            }
            return H.\u0275fac = function(z) {
                return new (z || H)
            }
            ,
            H.\u0275mod = i.oAB({
                type: H
            }),
            H.\u0275inj = i.cJS({
                imports: [l.ez]
            }),
            H
        }
        )()
    }
    ,
    2415: (Ot,je,D)=>{
        D.d(je, {
            Xt: ()=>le,
            iG: ()=>te
        });
        var i = D(2560)
          , l = D(4666)
          , q = D(2508);
        function ue(W, fe) {
            if (1 & W) {
                const re = i.EpF();
                i.TgZ(0, "span", 3),
                i.NdJ("click", function(Ne) {
                    i.CHM(re);
                    const Be = i.oxw();
                    return i.KtG(Be.clear(Ne))
                })("keydown.enter", function(Ne) {
                    i.CHM(re);
                    const Be = i.oxw();
                    return i.KtG(Be.clear(Ne))
                }),
                i.qZA()
            }
            if (2 & W) {
                const re = i.oxw();
                i.Q6J("ngClass", re.iconCancelClass)("ngStyle", re.iconCancelStyle),
                i.uIk("tabindex", re.disabled || re.readonly ? null : "0")
            }
        }
        function H(W, fe) {
            if (1 & W) {
                const re = i.EpF();
                i.TgZ(0, "span", 4),
                i.NdJ("click", function(Ne) {
                    const ot = i.CHM(re).index
                      , $e = i.oxw();
                    return i.KtG($e.rate(Ne, ot))
                })("keydown.enter", function(Ne) {
                    const ot = i.CHM(re).index
                      , $e = i.oxw();
                    return i.KtG($e.rate(Ne, ot))
                }),
                i.qZA()
            }
            if (2 & W) {
                const re = fe.index
                  , Ke = i.oxw();
                i.Q6J("ngClass", !Ke.value || re >= Ke.value ? Ke.iconOffClass : Ke.iconOnClass)("ngStyle", !Ke.value || re >= Ke.value ? Ke.iconOffStyle : Ke.iconOnStyle),
                i.uIk("tabindex", Ke.disabled || Ke.readonly ? null : "0")
            }
        }
        const U = function(W, fe) {
            return {
                "p-readonly": W,
                "p-disabled": fe
            }
        }
          , z = {
            provide: q.JU,
            useExisting: (0,
            i.Gpc)(()=>te),
            multi: !0
        };
        let te = (()=>{
            class W {
                constructor(re) {
                    this.cd = re,
                    this.stars = 5,
                    this.cancel = !0,
                    this.iconOnClass = "pi pi-star-fill",
                    this.iconOffClass = "pi pi-star",
                    this.iconCancelClass = "pi pi-ban",
                    this.onRate = new i.vpe,
                    this.onCancel = new i.vpe,
                    this.onModelChange = ()=>{}
                    ,
                    this.onModelTouched = ()=>{}
                }
                ngOnInit() {
                    this.starsArray = [];
                    for (let re = 0; re < this.stars; re++)
                        this.starsArray[re] = re
                }
                rate(re, Ke) {
                    !this.readonly && !this.disabled && (this.value = Ke + 1,
                    this.onModelChange(this.value),
                    this.onModelTouched(),
                    this.onRate.emit({
                        originalEvent: re,
                        value: Ke + 1
                    })),
                    re.preventDefault()
                }
                clear(re) {
                    !this.readonly && !this.disabled && (this.value = null,
                    this.onModelChange(this.value),
                    this.onModelTouched(),
                    this.onCancel.emit(re)),
                    re.preventDefault()
                }
                writeValue(re) {
                    this.value = re,
                    this.cd.detectChanges()
                }
                registerOnChange(re) {
                    this.onModelChange = re
                }
                registerOnTouched(re) {
                    this.onModelTouched = re
                }
                setDisabledState(re) {
                    this.disabled = re,
                    this.cd.markForCheck()
                }
            }
            return W.\u0275fac = function(re) {
                return new (re || W)(i.Y36(i.sBO))
            }
            ,
            W.\u0275cmp = i.Xpm({
                type: W,
                selectors: [["p-rating"]],
                hostAttrs: [1, "p-element"],
                inputs: {
                    disabled: "disabled",
                    readonly: "readonly",
                    stars: "stars",
                    cancel: "cancel",
                    iconOnClass: "iconOnClass",
                    iconOnStyle: "iconOnStyle",
                    iconOffClass: "iconOffClass",
                    iconOffStyle: "iconOffStyle",
                    iconCancelClass: "iconCancelClass",
                    iconCancelStyle: "iconCancelStyle"
                },
                outputs: {
                    onRate: "onRate",
                    onCancel: "onCancel"
                },
                features: [i._Bn([z])],
                decls: 3,
                vars: 6,
                consts: [[1, "p-rating", 3, "ngClass"], ["class", "p-rating-icon p-rating-cancel", 3, "ngClass", "ngStyle", "click", "keydown.enter", 4, "ngIf"], ["class", "p-rating-icon", 3, "ngClass", "ngStyle", "click", "keydown.enter", 4, "ngFor", "ngForOf"], [1, "p-rating-icon", "p-rating-cancel", 3, "ngClass", "ngStyle", "click", "keydown.enter"], [1, "p-rating-icon", 3, "ngClass", "ngStyle", "click", "keydown.enter"]],
                template: function(re, Ke) {
                    1 & re && (i.TgZ(0, "div", 0),
                    i.YNc(1, ue, 1, 3, "span", 1),
                    i.YNc(2, H, 1, 3, "span", 2),
                    i.qZA()),
                    2 & re && (i.Q6J("ngClass", i.WLB(3, U, Ke.readonly, Ke.disabled)),
                    i.xp6(1),
                    i.Q6J("ngIf", Ke.cancel),
                    i.xp6(1),
                    i.Q6J("ngForOf", Ke.starsArray))
                },
                dependencies: [l.mk, l.sg, l.O5, l.PC],
                styles: [".p-rating-icon{cursor:pointer}.p-rating.p-rating-readonly .p-rating-icon{cursor:default}\n"],
                encapsulation: 2,
                changeDetection: 0
            }),
            W
        }
        )()
          , le = (()=>{
            class W {
            }
            return W.\u0275fac = function(re) {
                return new (re || W)
            }
            ,
            W.\u0275mod = i.oAB({
                type: W
            }),
            W.\u0275inj = i.cJS({
                imports: [l.ez]
            }),
            W
        }
        )()
    }
    ,
    4538: (Ot,je,D)=>{
        D.d(je, {
            H: ()=>H,
            T: ()=>U
        });
        var i = D(2560)
          , l = D(4666)
          , q = D(1420)
          , ue = D(4356);
        let H = (()=>{
            class z {
                constructor(le, W, fe) {
                    this.el = le,
                    this.zone = W,
                    this.config = fe
                }
                ngAfterViewInit() {
                    this.config && this.config.ripple && this.zone.runOutsideAngular(()=>{
                        this.create(),
                        this.mouseDownListener = this.onMouseDown.bind(this),
                        this.el.nativeElement.addEventListener("mousedown", this.mouseDownListener)
                    }
                    )
                }
                onMouseDown(le) {
                    let W = this.getInk();
                    if (!W || "none" === getComputedStyle(W, null).display)
                        return;
                    if (q.p.removeClass(W, "p-ink-active"),
                    !q.p.getHeight(W) && !q.p.getWidth(W)) {
                        let Ne = Math.max(q.p.getOuterWidth(this.el.nativeElement), q.p.getOuterHeight(this.el.nativeElement));
                        W.style.height = Ne + "px",
                        W.style.width = Ne + "px"
                    }
                    let fe = q.p.getOffset(this.el.nativeElement)
                      , re = le.pageX - fe.left + document.body.scrollTop - q.p.getWidth(W) / 2
                      , Ke = le.pageY - fe.top + document.body.scrollLeft - q.p.getHeight(W) / 2;
                    W.style.top = Ke + "px",
                    W.style.left = re + "px",
                    q.p.addClass(W, "p-ink-active"),
                    this.timeout = setTimeout(()=>{
                        let Ne = this.getInk();
                        Ne && q.p.removeClass(Ne, "p-ink-active")
                    }
                    , 401)
                }
                getInk() {
                    for (let le = 0; le < this.el.nativeElement.children.length; le++)
                        if (-1 !== this.el.nativeElement.children[le].className.indexOf("p-ink"))
                            return this.el.nativeElement.children[le];
                    return null
                }
                resetInk() {
                    let le = this.getInk();
                    le && q.p.removeClass(le, "p-ink-active")
                }
                onAnimationEnd(le) {
                    this.timeout && clearTimeout(this.timeout),
                    q.p.removeClass(le.currentTarget, "p-ink-active")
                }
                create() {
                    let le = document.createElement("span");
                    le.className = "p-ink",
                    this.el.nativeElement.appendChild(le),
                    this.animationListener = this.onAnimationEnd.bind(this),
                    le.addEventListener("animationend", this.animationListener)
                }
                remove() {
                    let le = this.getInk();
                    le && (this.el.nativeElement.removeEventListener("mousedown", this.mouseDownListener),
                    le.removeEventListener("animationend", this.animationListener),
                    q.p.removeElement(le))
                }
                ngOnDestroy() {
                    this.config && this.config.ripple && this.remove()
                }
            }
            return z.\u0275fac = function(le) {
                return new (le || z)(i.Y36(i.SBq),i.Y36(i.R0b),i.Y36(ue.b4, 8))
            }
            ,
            z.\u0275dir = i.lG2({
                type: z,
                selectors: [["", "pRipple", ""]],
                hostAttrs: [1, "p-ripple", "p-element"]
            }),
            z
        }
        )()
          , U = (()=>{
            class z {
            }
            return z.\u0275fac = function(le) {
                return new (le || z)
            }
            ,
            z.\u0275mod = i.oAB({
                type: z
            }),
            z.\u0275inj = i.cJS({
                imports: [l.ez]
            }),
            z
        }
        )()
    }
    ,
    4179: (Ot,je,D)=>{
        D.d(je, {
            Y: ()=>$e,
            l: ()=>Fe
        });
        var i = D(2560)
          , l = D(4851)
          , q = D(4666)
          , ue = D(4538)
          , H = D(1420)
          , U = D(4356)
          , z = D(8549);
        function te(et, st) {
            if (1 & et) {
                const Pe = i.EpF();
                i.TgZ(0, "button", 7),
                i.NdJ("click", function(ze) {
                    i.CHM(Pe);
                    const ye = i.oxw(2);
                    return i.KtG(ye.close(ze))
                })("keydown.enter", function(ze) {
                    i.CHM(Pe);
                    const ye = i.oxw(2);
                    return i.KtG(ye.close(ze))
                }),
                i._UZ(1, "span", 8),
                i.qZA()
            }
            if (2 & et) {
                const Pe = i.oxw(2);
                i.uIk("aria-label", Pe.ariaCloseLabel)
            }
        }
        function le(et, st) {
            1 & et && i.GkF(0)
        }
        const W = function(et, st, Pe, Q, ze, ye) {
            return {
                "p-sidebar": !0,
                "p-sidebar-active": et,
                "p-sidebar-left": st,
                "p-sidebar-right": Pe,
                "p-sidebar-top": Q,
                "p-sidebar-bottom": ze,
                "p-sidebar-full": ye
            }
        }
          , fe = function(et, st) {
            return {
                transform: et,
                transition: st
            }
        }
          , re = function(et) {
            return {
                value: "visible",
                params: et
            }
        };
        function Ke(et, st) {
            if (1 & et) {
                const Pe = i.EpF();
                i.TgZ(0, "div", 1, 2),
                i.NdJ("@panelState.start", function(ze) {
                    i.CHM(Pe);
                    const ye = i.oxw();
                    return i.KtG(ye.onAnimationStart(ze))
                })("@panelState.done", function(ze) {
                    i.CHM(Pe);
                    const ye = i.oxw();
                    return i.KtG(ye.onAnimationEnd(ze))
                }),
                i.TgZ(2, "div", 3),
                i.YNc(3, te, 2, 1, "button", 4),
                i.qZA(),
                i.TgZ(4, "div", 5),
                i.Hsn(5),
                i.YNc(6, le, 1, 0, "ng-container", 6),
                i.qZA()()
            }
            if (2 & et) {
                const Pe = i.oxw();
                i.Tol(Pe.styleClass),
                i.Q6J("ngClass", i.HTZ(8, W, Pe.visible, "left" === Pe.position && !Pe.fullScreen, "right" === Pe.position && !Pe.fullScreen, "top" === Pe.position && !Pe.fullScreen, "bottom" === Pe.position && !Pe.fullScreen, Pe.fullScreen))("@panelState", i.VKq(18, re, i.WLB(15, fe, Pe.transformOptions, Pe.transitionOptions)))("ngStyle", Pe.style),
                i.uIk("aria-modal", Pe.modal),
                i.xp6(3),
                i.Q6J("ngIf", Pe.showCloseIcon),
                i.xp6(3),
                i.Q6J("ngTemplateOutlet", Pe.contentTemplate)
            }
        }
        const Ne = ["*"]
          , Be = (0,
        l.oQ)([(0,
        l.oB)({
            transform: "{{transform}}",
            opacity: 0
        }), (0,
        l.jt)("{{transition}}")])
          , ot = (0,
        l.oQ)([(0,
        l.jt)("{{transition}}", (0,
        l.oB)({
            transform: "{{transform}}",
            opacity: 0
        }))]);
        let $e = (()=>{
            class et {
                constructor(Pe, Q, ze, ye) {
                    this.el = Pe,
                    this.renderer = Q,
                    this.cd = ze,
                    this.config = ye,
                    this.blockScroll = !1,
                    this.autoZIndex = !0,
                    this.baseZIndex = 0,
                    this.modal = !0,
                    this.dismissible = !0,
                    this.showCloseIcon = !0,
                    this.closeOnEscape = !0,
                    this.transitionOptions = "150ms cubic-bezier(0, 0, 0.2, 1)",
                    this.onShow = new i.vpe,
                    this.onHide = new i.vpe,
                    this.visibleChange = new i.vpe,
                    this._position = "left",
                    this._fullScreen = !1,
                    this.transformOptions = "translate3d(-100%, 0px, 0px)"
                }
                ngAfterViewInit() {
                    this.initialized = !0
                }
                ngAfterContentInit() {
                    this.templates.forEach(Pe=>{
                        Pe.getType(),
                        this.contentTemplate = Pe.template
                    }
                    )
                }
                get visible() {
                    return this._visible
                }
                set visible(Pe) {
                    this._visible = Pe
                }
                get position() {
                    return this._position
                }
                set position(Pe) {
                    switch (this._position = Pe,
                    Pe) {
                    case "left":
                        this.transformOptions = "translate3d(-100%, 0px, 0px)";
                        break;
                    case "right":
                        this.transformOptions = "translate3d(100%, 0px, 0px)";
                        break;
                    case "bottom":
                        this.transformOptions = "translate3d(0px, 100%, 0px)";
                        break;
                    case "top":
                        this.transformOptions = "translate3d(0px, -100%, 0px)"
                    }
                }
                get fullScreen() {
                    return this._fullScreen
                }
                set fullScreen(Pe) {
                    this._fullScreen = Pe,
                    Pe && (this.transformOptions = "none")
                }
                show() {
                    this.autoZIndex && z.P9.set("modal", this.container, this.baseZIndex || this.config.zIndex.modal),
                    this.modal && this.enableModality(),
                    this.onShow.emit({}),
                    this.visibleChange.emit(!0)
                }
                hide() {
                    this.onHide.emit({}),
                    this.modal && this.disableModality()
                }
                close(Pe) {
                    this.hide(),
                    this.visibleChange.emit(!1),
                    Pe.preventDefault()
                }
                enableModality() {
                    this.mask || (this.mask = document.createElement("div"),
                    this.mask.style.zIndex = String(parseInt(this.container.style.zIndex) - 1),
                    H.p.addMultipleClasses(this.mask, "p-component-overlay p-sidebar-mask p-component-overlay p-component-overlay-enter"),
                    this.dismissible && (this.maskClickListener = this.renderer.listen(this.mask, "click", Pe=>{
                        this.dismissible && this.close(Pe)
                    }
                    )),
                    document.body.appendChild(this.mask),
                    this.blockScroll && H.p.addClass(document.body, "p-overflow-hidden"))
                }
                disableModality() {
                    this.mask && (H.p.addClass(this.mask, "p-component-overlay-leave"),
                    this.animationEndListener = this.destroyModal.bind(this),
                    this.mask.addEventListener("animationend", this.animationEndListener))
                }
                destroyModal() {
                    this.unbindMaskClickListener(),
                    this.mask && document.body.removeChild(this.mask),
                    this.blockScroll && H.p.removeClass(document.body, "p-overflow-hidden"),
                    this.unbindAnimationEndListener(),
                    this.mask = null
                }
                onAnimationStart(Pe) {
                    "visible" === Pe.toState && (this.container = Pe.element,
                    this.appendContainer(),
                    this.show(),
                    this.closeOnEscape && this.bindDocumentEscapeListener())
                }
                onAnimationEnd(Pe) {
                    "void" === Pe.toState && (this.hide(),
                    z.P9.clear(this.container),
                    this.unbindGlobalListeners())
                }
                appendContainer() {
                    this.appendTo && ("body" === this.appendTo ? document.body.appendChild(this.container) : H.p.appendChild(this.container, this.appendTo))
                }
                bindDocumentEscapeListener() {
                    this.documentEscapeListener = this.renderer.listen(this.el ? this.el.nativeElement.ownerDocument : "document", "keydown", Q=>{
                        27 == Q.which && parseInt(this.container.style.zIndex) === z.P9.get(this.container) && this.close(Q)
                    }
                    )
                }
                unbindDocumentEscapeListener() {
                    this.documentEscapeListener && (this.documentEscapeListener(),
                    this.documentEscapeListener = null)
                }
                unbindMaskClickListener() {
                    this.maskClickListener && (this.maskClickListener(),
                    this.maskClickListener = null)
                }
                unbindGlobalListeners() {
                    this.unbindMaskClickListener(),
                    this.unbindDocumentEscapeListener()
                }
                unbindAnimationEndListener() {
                    this.animationEndListener && this.mask && (this.mask.removeEventListener("animationend", this.animationEndListener),
                    this.animationEndListener = null)
                }
                ngOnDestroy() {
                    this.initialized = !1,
                    this.visible && this.modal && this.destroyModal(),
                    this.appendTo && this.container && this.el.nativeElement.appendChild(this.container),
                    this.container && this.autoZIndex && z.P9.clear(this.container),
                    this.container = null,
                    this.unbindGlobalListeners(),
                    this.unbindAnimationEndListener()
                }
            }
            return et.\u0275fac = function(Pe) {
                return new (Pe || et)(i.Y36(i.SBq),i.Y36(i.Qsj),i.Y36(i.sBO),i.Y36(U.b4))
            }
            ,
            et.\u0275cmp = i.Xpm({
                type: et,
                selectors: [["p-sidebar"]],
                contentQueries: function(Pe, Q, ze) {
                    if (1 & Pe && i.Suo(ze, U.jx, 4),
                    2 & Pe) {
                        let ye;
                        i.iGM(ye = i.CRH()) && (Q.templates = ye)
                    }
                },
                hostAttrs: [1, "p-element"],
                inputs: {
                    appendTo: "appendTo",
                    blockScroll: "blockScroll",
                    style: "style",
                    styleClass: "styleClass",
                    ariaCloseLabel: "ariaCloseLabel",
                    autoZIndex: "autoZIndex",
                    baseZIndex: "baseZIndex",
                    modal: "modal",
                    dismissible: "dismissible",
                    showCloseIcon: "showCloseIcon",
                    closeOnEscape: "closeOnEscape",
                    transitionOptions: "transitionOptions",
                    visible: "visible",
                    position: "position",
                    fullScreen: "fullScreen"
                },
                outputs: {
                    onShow: "onShow",
                    onHide: "onHide",
                    visibleChange: "visibleChange"
                },
                ngContentSelectors: Ne,
                decls: 1,
                vars: 1,
                consts: [["role", "complementary", 3, "ngClass", "ngStyle", "class", 4, "ngIf"], ["role", "complementary", 3, "ngClass", "ngStyle"], ["container", ""], [1, "p-sidebar-header"], ["type", "button", "class", "p-sidebar-close p-sidebar-icon p-link", "pRipple", "", 3, "click", "keydown.enter", 4, "ngIf"], [1, "p-sidebar-content"], [4, "ngTemplateOutlet"], ["type", "button", "pRipple", "", 1, "p-sidebar-close", "p-sidebar-icon", "p-link", 3, "click", "keydown.enter"], [1, "p-sidebar-close-icon", "pi", "pi-times"]],
                template: function(Pe, Q) {
                    1 & Pe && (i.F$t(),
                    i.YNc(0, Ke, 7, 20, "div", 0)),
                    2 & Pe && i.Q6J("ngIf", Q.visible)
                },
                dependencies: [q.mk, q.O5, q.tP, q.PC, ue.H],
                styles: [".p-sidebar{position:fixed;transition:transform .3s;display:flex;flex-direction:column}.p-sidebar-content{position:relative;overflow-y:auto}.p-sidebar-header{display:flex;align-items:center;justify-content:flex-end}.p-sidebar-icon{display:flex;align-items:center;justify-content:center}.p-sidebar-left{top:0;left:0;width:20rem;height:100%}.p-sidebar-right{top:0;right:0;width:20rem;height:100%}.p-sidebar-top{top:0;left:0;width:100%;height:10rem}.p-sidebar-bottom{bottom:0;left:0;width:100%;height:10rem}.p-sidebar-full{width:100%;height:100%;top:0;left:0;transition:none}.p-sidebar-left.p-sidebar-sm,.p-sidebar-right.p-sidebar-sm{width:20rem}.p-sidebar-left.p-sidebar-md,.p-sidebar-right.p-sidebar-md{width:40rem}.p-sidebar-left.p-sidebar-lg,.p-sidebar-right.p-sidebar-lg{width:60rem}.p-sidebar-top.p-sidebar-sm,.p-sidebar-bottom.p-sidebar-sm{height:10rem}.p-sidebar-top.p-sidebar-md,.p-sidebar-bottom.p-sidebar-md{height:20rem}.p-sidebar-top.p-sidebar-lg,.p-sidebar-bottom.p-sidebar-lg{height:30rem}@media screen and (max-width: 64em){.p-sidebar-left.p-sidebar-lg,.p-sidebar-left.p-sidebar-md,.p-sidebar-right.p-sidebar-lg,.p-sidebar-right.p-sidebar-md{width:20rem}}\n"],
                encapsulation: 2,
                data: {
                    animation: [(0,
                    l.X$)("panelState", [(0,
                    l.eR)("void => visible", [(0,
                    l._7)(Be)]), (0,
                    l.eR)("visible => void", [(0,
                    l._7)(ot)])])]
                },
                changeDetection: 0
            }),
            et
        }
        )()
          , Fe = (()=>{
            class et {
            }
            return et.\u0275fac = function(Pe) {
                return new (Pe || et)
            }
            ,
            et.\u0275mod = i.oAB({
                type: et
            }),
            et.\u0275inj = i.cJS({
                imports: [q.ez, ue.T]
            }),
            et
        }
        )()
    }
    ,
    9129: (Ot,je,D)=>{
        D.d(je, {
            EV: ()=>et,
            FN: ()=>Fe
        });
        var i = D(2560)
          , l = D(4666)
          , q = D(4356)
          , ue = D(8549)
          , H = D(4538)
          , U = D(4851);
        const z = ["container"]
          , te = function(st, Pe, Q, ze) {
            return {
                "pi-info-circle": st,
                "pi-exclamation-triangle": Pe,
                "pi-times-circle": Q,
                "pi-check": ze
            }
        };
        function le(st, Pe) {
            if (1 & st && (i.ynx(0),
            i._UZ(1, "span", 6),
            i.TgZ(2, "div", 7)(3, "div", 8),
            i._uU(4),
            i.qZA(),
            i.TgZ(5, "div", 9),
            i._uU(6),
            i.qZA()(),
            i.BQk()),
            2 & st) {
                const Q = i.oxw();
                i.xp6(1),
                i.Tol("p-toast-message-icon pi" + (Q.message.icon ? " " + Q.message.icon : "")),
                i.Q6J("ngClass", i.l5B(5, te, "info" == Q.message.severity, "warn" == Q.message.severity, "error" == Q.message.severity, "success" == Q.message.severity)),
                i.xp6(3),
                i.Oqu(Q.message.summary),
                i.xp6(2),
                i.Oqu(Q.message.detail)
            }
        }
        function W(st, Pe) {
            1 & st && i.GkF(0)
        }
        function fe(st, Pe) {
            if (1 & st) {
                const Q = i.EpF();
                i.TgZ(0, "button", 10),
                i.NdJ("click", function(ye) {
                    i.CHM(Q);
                    const Re = i.oxw();
                    return i.KtG(Re.onCloseIconClick(ye))
                })("keydown.enter", function(ye) {
                    i.CHM(Q);
                    const Re = i.oxw();
                    return i.KtG(Re.onCloseIconClick(ye))
                }),
                i._UZ(1, "span", 11),
                i.qZA()
            }
        }
        const re = function(st) {
            return [st, "p-toast-message"]
        }
          , Ke = function(st, Pe, Q, ze) {
            return {
                showTransformParams: st,
                hideTransformParams: Pe,
                showTransitionParams: Q,
                hideTransitionParams: ze
            }
        }
          , Ne = function(st) {
            return {
                value: "visible",
                params: st
            }
        }
          , Be = function(st) {
            return {
                $implicit: st
            }
        };
        function ot(st, Pe) {
            if (1 & st) {
                const Q = i.EpF();
                i.TgZ(0, "p-toastItem", 3),
                i.NdJ("onClose", function(ye) {
                    i.CHM(Q);
                    const Re = i.oxw();
                    return i.KtG(Re.onMessageClose(ye))
                })("@toastAnimation.start", function(ye) {
                    i.CHM(Q);
                    const Re = i.oxw();
                    return i.KtG(Re.onAnimationStart(ye))
                })("@toastAnimation.done", function(ye) {
                    i.CHM(Q);
                    const Re = i.oxw();
                    return i.KtG(Re.onAnimationEnd(ye))
                }),
                i.qZA()
            }
            if (2 & st) {
                const Q = Pe.$implicit
                  , ze = Pe.index
                  , ye = i.oxw();
                i.Q6J("message", Q)("index", ze)("template", ye.template)("@toastAnimation", void 0)("showTransformOptions", ye.showTransformOptions)("hideTransformOptions", ye.hideTransformOptions)("showTransitionOptions", ye.showTransitionOptions)("hideTransitionOptions", ye.hideTransitionOptions)
            }
        }
        let $e = (()=>{
            class st {
                constructor(Q) {
                    this.zone = Q,
                    this.onClose = new i.vpe
                }
                ngAfterViewInit() {
                    this.initTimeout()
                }
                initTimeout() {
                    this.message.sticky || this.zone.runOutsideAngular(()=>{
                        this.timeout = setTimeout(()=>{
                            this.onClose.emit({
                                index: this.index,
                                message: this.message
                            })
                        }
                        , this.message.life || 3e3)
                    }
                    )
                }
                clearTimeout() {
                    this.timeout && (clearTimeout(this.timeout),
                    this.timeout = null)
                }
                onMouseEnter() {
                    this.clearTimeout()
                }
                onMouseLeave() {
                    this.initTimeout()
                }
                onCloseIconClick(Q) {
                    this.clearTimeout(),
                    this.onClose.emit({
                        index: this.index,
                        message: this.message
                    }),
                    Q.preventDefault()
                }
                ngOnDestroy() {
                    this.clearTimeout()
                }
            }
            return st.\u0275fac = function(Q) {
                return new (Q || st)(i.Y36(i.R0b))
            }
            ,
            st.\u0275cmp = i.Xpm({
                type: st,
                selectors: [["p-toastItem"]],
                viewQuery: function(Q, ze) {
                    if (1 & Q && i.Gf(z, 5),
                    2 & Q) {
                        let ye;
                        i.iGM(ye = i.CRH()) && (ze.containerViewChild = ye.first)
                    }
                },
                hostAttrs: [1, "p-element"],
                inputs: {
                    message: "message",
                    index: "index",
                    template: "template",
                    showTransformOptions: "showTransformOptions",
                    hideTransformOptions: "hideTransformOptions",
                    showTransitionOptions: "showTransitionOptions",
                    hideTransitionOptions: "hideTransitionOptions"
                },
                outputs: {
                    onClose: "onClose"
                },
                decls: 6,
                vars: 21,
                consts: [[3, "ngClass", "mouseenter", "mouseleave"], ["container", ""], ["role", "alert", "aria-live", "assertive", "aria-atomic", "true", 1, "p-toast-message-content", 3, "ngClass"], [4, "ngIf"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], ["type", "button", "class", "p-toast-icon-close p-link", "pRipple", "", 3, "click", "keydown.enter", 4, "ngIf"], [3, "ngClass"], [1, "p-toast-message-text"], [1, "p-toast-summary"], [1, "p-toast-detail"], ["type", "button", "pRipple", "", 1, "p-toast-icon-close", "p-link", 3, "click", "keydown.enter"], [1, "p-toast-icon-close-icon", "pi", "pi-times"]],
                template: function(Q, ze) {
                    1 & Q && (i.TgZ(0, "div", 0, 1),
                    i.NdJ("mouseenter", function() {
                        return ze.onMouseEnter()
                    })("mouseleave", function() {
                        return ze.onMouseLeave()
                    }),
                    i.TgZ(2, "div", 2),
                    i.YNc(3, le, 7, 10, "ng-container", 3),
                    i.YNc(4, W, 1, 0, "ng-container", 4),
                    i.YNc(5, fe, 2, 0, "button", 5),
                    i.qZA()()),
                    2 & Q && (i.Tol(ze.message.styleClass),
                    i.Q6J("ngClass", i.VKq(10, re, "p-toast-message-" + ze.message.severity))("@messageState", i.VKq(17, Ne, i.l5B(12, Ke, ze.showTransformOptions, ze.hideTransformOptions, ze.showTransitionOptions, ze.hideTransitionOptions))),
                    i.uIk("id", ze.message.id),
                    i.xp6(2),
                    i.Q6J("ngClass", ze.message.contentStyleClass),
                    i.xp6(1),
                    i.Q6J("ngIf", !ze.template),
                    i.xp6(1),
                    i.Q6J("ngTemplateOutlet", ze.template)("ngTemplateOutletContext", i.VKq(19, Be, ze.message)),
                    i.xp6(1),
                    i.Q6J("ngIf", !1 !== ze.message.closable))
                },
                dependencies: [l.mk, l.O5, l.tP, H.H],
                encapsulation: 2,
                data: {
                    animation: [(0,
                    U.X$)("messageState", [(0,
                    U.SB)("visible", (0,
                    U.oB)({
                        transform: "translateY(0)",
                        opacity: 1
                    })), (0,
                    U.eR)("void => *", [(0,
                    U.oB)({
                        transform: "{{showTransformParams}}",
                        opacity: 0
                    }), (0,
                    U.jt)("{{showTransitionParams}}")]), (0,
                    U.eR)("* => void", [(0,
                    U.jt)("{{hideTransitionParams}}", (0,
                    U.oB)({
                        height: 0,
                        opacity: 0,
                        transform: "{{hideTransformParams}}"
                    }))])])]
                },
                changeDetection: 0
            }),
            st
        }
        )()
          , Fe = (()=>{
            class st {
                constructor(Q, ze, ye) {
                    this.messageService = Q,
                    this.cd = ze,
                    this.config = ye,
                    this.autoZIndex = !0,
                    this.baseZIndex = 0,
                    this.position = "top-right",
                    this.preventOpenDuplicates = !1,
                    this.preventDuplicates = !1,
                    this.showTransformOptions = "translateY(100%)",
                    this.hideTransformOptions = "translateY(-100%)",
                    this.showTransitionOptions = "300ms ease-out",
                    this.hideTransitionOptions = "250ms ease-in",
                    this.onClose = new i.vpe,
                    this.id = (0,
                    ue.Th)()
                }
                ngOnInit() {
                    this.messageSubscription = this.messageService.messageObserver.subscribe(Q=>{
                        if (Q)
                            if (Q instanceof Array) {
                                const ze = Q.filter(ye=>this.canAdd(ye));
                                this.add(ze)
                            } else
                                this.canAdd(Q) && this.add([Q])
                    }
                    ),
                    this.clearSubscription = this.messageService.clearObserver.subscribe(Q=>{
                        Q ? this.key === Q && (this.messages = null) : this.messages = null,
                        this.cd.markForCheck()
                    }
                    )
                }
                ngAfterViewInit() {
                    this.breakpoints && this.createStyle()
                }
                add(Q) {
                    this.messages = this.messages ? [...this.messages, ...Q] : [...Q],
                    this.preventDuplicates && (this.messagesArchieve = this.messagesArchieve ? [...this.messagesArchieve, ...Q] : [...Q]),
                    this.cd.markForCheck()
                }
                canAdd(Q) {
                    let ze = this.key === Q.key;
                    return ze && this.preventOpenDuplicates && (ze = !this.containsMessage(this.messages, Q)),
                    ze && this.preventDuplicates && (ze = !this.containsMessage(this.messagesArchieve, Q)),
                    ze
                }
                containsMessage(Q, ze) {
                    return !!Q && null != Q.find(ye=>ye.summary === ze.summary && ye.detail == ze.detail && ye.severity === ze.severity)
                }
                ngAfterContentInit() {
                    this.templates.forEach(Q=>{
                        Q.getType(),
                        this.template = Q.template
                    }
                    )
                }
                onMessageClose(Q) {
                    this.messages.splice(Q.index, 1),
                    this.onClose.emit({
                        message: Q.message
                    }),
                    this.cd.detectChanges()
                }
                onAnimationStart(Q) {
                    "void" === Q.fromState && (this.containerViewChild.nativeElement.setAttribute(this.id, ""),
                    this.autoZIndex && "" === this.containerViewChild.nativeElement.style.zIndex && ue.P9.set("modal", this.containerViewChild.nativeElement, this.baseZIndex || this.config.zIndex.modal))
                }
                onAnimationEnd(Q) {
                    "void" === Q.toState && this.autoZIndex && ue.gb.isEmpty(this.messages) && ue.P9.clear(this.containerViewChild.nativeElement)
                }
                createStyle() {
                    if (!this.styleElement) {
                        this.styleElement = document.createElement("style"),
                        this.styleElement.type = "text/css",
                        document.head.appendChild(this.styleElement);
                        let Q = "";
                        for (let ze in this.breakpoints) {
                            let ye = "";
                            for (let Re in this.breakpoints[ze])
                                ye += Re + ":" + this.breakpoints[ze][Re] + " !important;";
                            Q += `\n                    @media screen and (max-width: ${ze}) {\n                        .p-toast[${this.id}] {\n                           ${ye}\n                        }\n                    }\n                `
                        }
                        this.styleElement.innerHTML = Q
                    }
                }
                destroyStyle() {
                    this.styleElement && (document.head.removeChild(this.styleElement),
                    this.styleElement = null)
                }
                ngOnDestroy() {
                    this.messageSubscription && this.messageSubscription.unsubscribe(),
                    this.containerViewChild && this.autoZIndex && ue.P9.clear(this.containerViewChild.nativeElement),
                    this.clearSubscription && this.clearSubscription.unsubscribe(),
                    this.destroyStyle()
                }
            }
            return st.\u0275fac = function(Q) {
                return new (Q || st)(i.Y36(q.ez),i.Y36(i.sBO),i.Y36(q.b4))
            }
            ,
            st.\u0275cmp = i.Xpm({
                type: st,
                selectors: [["p-toast"]],
                contentQueries: function(Q, ze, ye) {
                    if (1 & Q && i.Suo(ye, q.jx, 4),
                    2 & Q) {
                        let Re;
                        i.iGM(Re = i.CRH()) && (ze.templates = Re)
                    }
                },
                viewQuery: function(Q, ze) {
                    if (1 & Q && i.Gf(z, 5),
                    2 & Q) {
                        let ye;
                        i.iGM(ye = i.CRH()) && (ze.containerViewChild = ye.first)
                    }
                },
                hostAttrs: [1, "p-element"],
                inputs: {
                    key: "key",
                    autoZIndex: "autoZIndex",
                    baseZIndex: "baseZIndex",
                    style: "style",
                    styleClass: "styleClass",
                    position: "position",
                    preventOpenDuplicates: "preventOpenDuplicates",
                    preventDuplicates: "preventDuplicates",
                    showTransformOptions: "showTransformOptions",
                    hideTransformOptions: "hideTransformOptions",
                    showTransitionOptions: "showTransitionOptions",
                    hideTransitionOptions: "hideTransitionOptions",
                    breakpoints: "breakpoints"
                },
                outputs: {
                    onClose: "onClose"
                },
                decls: 3,
                vars: 5,
                consts: [[3, "ngClass", "ngStyle"], ["container", ""], [3, "message", "index", "template", "showTransformOptions", "hideTransformOptions", "showTransitionOptions", "hideTransitionOptions", "onClose", 4, "ngFor", "ngForOf"], [3, "message", "index", "template", "showTransformOptions", "hideTransformOptions", "showTransitionOptions", "hideTransitionOptions", "onClose"]],
                template: function(Q, ze) {
                    1 & Q && (i.TgZ(0, "div", 0, 1),
                    i.YNc(2, ot, 1, 8, "p-toastItem", 2),
                    i.qZA()),
                    2 & Q && (i.Tol(ze.styleClass),
                    i.Q6J("ngClass", "p-toast p-component p-toast-" + ze.position)("ngStyle", ze.style),
                    i.xp6(2),
                    i.Q6J("ngForOf", ze.messages))
                },
                dependencies: [l.mk, l.sg, l.PC, $e],
                styles: [".p-toast{position:fixed;width:25rem}.p-toast-message{overflow:hidden}.p-toast-message-content{display:flex;align-items:flex-start}.p-toast-message-text{flex:1 1 auto}.p-toast-top-right{top:20px;right:20px}.p-toast-top-left{top:20px;left:20px}.p-toast-bottom-left{bottom:20px;left:20px}.p-toast-bottom-right{bottom:20px;right:20px}.p-toast-top-center{top:20px;left:50%;transform:translate(-50%)}.p-toast-bottom-center{bottom:20px;left:50%;transform:translate(-50%)}.p-toast-center{left:50%;top:50%;min-width:20vw;transform:translate(-50%,-50%)}.p-toast-icon-close{display:flex;align-items:center;justify-content:center;overflow:hidden;position:relative}.p-toast-icon-close.p-link{cursor:pointer}\n"],
                encapsulation: 2,
                data: {
                    animation: [(0,
                    U.X$)("toastAnimation", [(0,
                    U.eR)(":enter, :leave", [(0,
                    U.IO)("@*", (0,
                    U.pV)())])])]
                },
                changeDetection: 0
            }),
            st
        }
        )()
          , et = (()=>{
            class st {
            }
            return st.\u0275fac = function(Q) {
                return new (Q || st)
            }
            ,
            st.\u0275mod = i.oAB({
                type: st
            }),
            st.\u0275inj = i.cJS({
                imports: [l.ez, H.T, q.m8]
            }),
            st
        }
        )()
    }
    ,
    4329: (Ot,je,D)=>{
        D.d(je, {
            u: ()=>U,
            z: ()=>z
        });
        var i = D(2560)
          , l = D(4666)
          , q = D(1420)
          , ue = D(8549)
          , H = D(4356);
        let U = (()=>{
            class te {
                constructor(W, fe, re) {
                    this.el = W,
                    this.zone = fe,
                    this.config = re,
                    this.escape = !0,
                    this.fitContent = !0,
                    this._tooltipOptions = {
                        tooltipPosition: "right",
                        tooltipEvent: "hover",
                        appendTo: "body",
                        tooltipZIndex: "auto",
                        escape: !0,
                        positionTop: 0,
                        positionLeft: 0
                    }
                }
                get disabled() {
                    return this._disabled
                }
                set disabled(W) {
                    this._disabled = W,
                    this.deactivate()
                }
                ngAfterViewInit() {
                    this.zone.runOutsideAngular(()=>{
                        if ("hover" === this.getOption("tooltipEvent"))
                            this.mouseEnterListener = this.onMouseEnter.bind(this),
                            this.mouseLeaveListener = this.onMouseLeave.bind(this),
                            this.clickListener = this.onClick.bind(this),
                            this.el.nativeElement.addEventListener("mouseenter", this.mouseEnterListener),
                            this.el.nativeElement.addEventListener("mouseleave", this.mouseLeaveListener),
                            this.el.nativeElement.addEventListener("click", this.clickListener);
                        else if ("focus" === this.getOption("tooltipEvent")) {
                            this.focusListener = this.onFocus.bind(this),
                            this.blurListener = this.onBlur.bind(this);
                            let W = this.getTarget(this.el.nativeElement);
                            W.addEventListener("focus", this.focusListener),
                            W.addEventListener("blur", this.blurListener)
                        }
                    }
                    )
                }
                ngOnChanges(W) {
                    W.tooltipPosition && this.setOption({
                        tooltipPosition: W.tooltipPosition.currentValue
                    }),
                    W.tooltipEvent && this.setOption({
                        tooltipEvent: W.tooltipEvent.currentValue
                    }),
                    W.appendTo && this.setOption({
                        appendTo: W.appendTo.currentValue
                    }),
                    W.positionStyle && this.setOption({
                        positionStyle: W.positionStyle.currentValue
                    }),
                    W.tooltipStyleClass && this.setOption({
                        tooltipStyleClass: W.tooltipStyleClass.currentValue
                    }),
                    W.tooltipZIndex && this.setOption({
                        tooltipZIndex: W.tooltipZIndex.currentValue
                    }),
                    W.escape && this.setOption({
                        escape: W.escape.currentValue
                    }),
                    W.showDelay && this.setOption({
                        showDelay: W.showDelay.currentValue
                    }),
                    W.hideDelay && this.setOption({
                        hideDelay: W.hideDelay.currentValue
                    }),
                    W.life && this.setOption({
                        life: W.life.currentValue
                    }),
                    W.positionTop && this.setOption({
                        positionTop: W.positionTop.currentValue
                    }),
                    W.positionLeft && this.setOption({
                        positionLeft: W.positionLeft.currentValue
                    }),
                    W.disabled && this.setOption({
                        disabled: W.disabled.currentValue
                    }),
                    W.text && (this.setOption({
                        tooltipLabel: W.text.currentValue
                    }),
                    this.active && (W.text.currentValue ? this.container && this.container.offsetParent ? (this.updateText(),
                    this.align()) : this.show() : this.hide())),
                    W.tooltipOptions && (this._tooltipOptions = {
                        ...this._tooltipOptions,
                        ...W.tooltipOptions.currentValue
                    },
                    this.deactivate(),
                    this.active && (this.getOption("tooltipLabel") ? this.container && this.container.offsetParent ? (this.updateText(),
                    this.align()) : this.show() : this.hide()))
                }
                onMouseEnter(W) {
                    !this.container && !this.showTimeout && this.activate()
                }
                onMouseLeave(W) {
                    this.deactivate()
                }
                onFocus(W) {
                    this.activate()
                }
                onBlur(W) {
                    this.deactivate()
                }
                onClick(W) {
                    this.deactivate()
                }
                activate() {
                    if (this.active = !0,
                    this.clearHideTimeout(),
                    this.getOption("showDelay") ? this.showTimeout = setTimeout(()=>{
                        this.show()
                    }
                    , this.getOption("showDelay")) : this.show(),
                    this.getOption("life")) {
                        let W = this.getOption("showDelay") ? this.getOption("life") + this.getOption("showDelay") : this.getOption("life");
                        this.hideTimeout = setTimeout(()=>{
                            this.hide()
                        }
                        , W)
                    }
                }
                deactivate() {
                    this.active = !1,
                    this.clearShowTimeout(),
                    this.getOption("hideDelay") ? (this.clearHideTimeout(),
                    this.hideTimeout = setTimeout(()=>{
                        this.hide()
                    }
                    , this.getOption("hideDelay"))) : this.hide()
                }
                create() {
                    this.container && (this.clearHideTimeout(),
                    this.remove()),
                    this.container = document.createElement("div");
                    let W = document.createElement("div");
                    W.className = "p-tooltip-arrow",
                    this.container.appendChild(W),
                    this.tooltipText = document.createElement("div"),
                    this.tooltipText.className = "p-tooltip-text",
                    this.updateText(),
                    this.getOption("positionStyle") && (this.container.style.position = this.getOption("positionStyle")),
                    this.container.appendChild(this.tooltipText),
                    "body" === this.getOption("appendTo") ? document.body.appendChild(this.container) : "target" === this.getOption("appendTo") ? q.p.appendChild(this.container, this.el.nativeElement) : q.p.appendChild(this.container, this.getOption("appendTo")),
                    this.container.style.display = "inline-block",
                    this.fitContent && (this.container.style.width = "fit-content")
                }
                show() {
                    !this.getOption("tooltipLabel") || this.getOption("disabled") || (this.create(),
                    this.align(),
                    q.p.fadeIn(this.container, 250),
                    "auto" === this.getOption("tooltipZIndex") ? ue.P9.set("tooltip", this.container, this.config.zIndex.tooltip) : this.container.style.zIndex = this.getOption("tooltipZIndex"),
                    this.bindDocumentResizeListener(),
                    this.bindScrollListener())
                }
                hide() {
                    "auto" === this.getOption("tooltipZIndex") && ue.P9.clear(this.container),
                    this.remove()
                }
                updateText() {
                    this.getOption("escape") ? (this.tooltipText.innerHTML = "",
                    this.tooltipText.appendChild(document.createTextNode(this.getOption("tooltipLabel")))) : this.tooltipText.innerHTML = this.getOption("tooltipLabel")
                }
                align() {
                    switch (this.getOption("tooltipPosition")) {
                    case "top":
                        this.alignTop(),
                        this.isOutOfBounds() && (this.alignBottom(),
                        this.isOutOfBounds() && (this.alignRight(),
                        this.isOutOfBounds() && this.alignLeft()));
                        break;
                    case "bottom":
                        this.alignBottom(),
                        this.isOutOfBounds() && (this.alignTop(),
                        this.isOutOfBounds() && (this.alignRight(),
                        this.isOutOfBounds() && this.alignLeft()));
                        break;
                    case "left":
                        this.alignLeft(),
                        this.isOutOfBounds() && (this.alignRight(),
                        this.isOutOfBounds() && (this.alignTop(),
                        this.isOutOfBounds() && this.alignBottom()));
                        break;
                    case "right":
                        this.alignRight(),
                        this.isOutOfBounds() && (this.alignLeft(),
                        this.isOutOfBounds() && (this.alignTop(),
                        this.isOutOfBounds() && this.alignBottom()))
                    }
                }
                getHostOffset() {
                    if ("body" === this.getOption("appendTo") || "target" === this.getOption("appendTo")) {
                        let W = this.el.nativeElement.getBoundingClientRect();
                        return {
                            left: W.left + q.p.getWindowScrollLeft(),
                            top: W.top + q.p.getWindowScrollTop()
                        }
                    }
                    return {
                        left: 0,
                        top: 0
                    }
                }
                alignRight() {
                    this.preAlign("right");
                    let W = this.getHostOffset()
                      , fe = W.left + q.p.getOuterWidth(this.el.nativeElement)
                      , re = W.top + (q.p.getOuterHeight(this.el.nativeElement) - q.p.getOuterHeight(this.container)) / 2;
                    this.container.style.left = fe + this.getOption("positionLeft") + "px",
                    this.container.style.top = re + this.getOption("positionTop") + "px"
                }
                alignLeft() {
                    this.preAlign("left");
                    let W = this.getHostOffset()
                      , fe = W.left - q.p.getOuterWidth(this.container)
                      , re = W.top + (q.p.getOuterHeight(this.el.nativeElement) - q.p.getOuterHeight(this.container)) / 2;
                    this.container.style.left = fe + this.getOption("positionLeft") + "px",
                    this.container.style.top = re + this.getOption("positionTop") + "px"
                }
                alignTop() {
                    this.preAlign("top");
                    let W = this.getHostOffset()
                      , fe = W.left + (q.p.getOuterWidth(this.el.nativeElement) - q.p.getOuterWidth(this.container)) / 2
                      , re = W.top - q.p.getOuterHeight(this.container);
                    this.container.style.left = fe + this.getOption("positionLeft") + "px",
                    this.container.style.top = re + this.getOption("positionTop") + "px"
                }
                alignBottom() {
                    this.preAlign("bottom");
                    let W = this.getHostOffset()
                      , fe = W.left + (q.p.getOuterWidth(this.el.nativeElement) - q.p.getOuterWidth(this.container)) / 2
                      , re = W.top + q.p.getOuterHeight(this.el.nativeElement);
                    this.container.style.left = fe + this.getOption("positionLeft") + "px",
                    this.container.style.top = re + this.getOption("positionTop") + "px"
                }
                setOption(W) {
                    this._tooltipOptions = {
                        ...this._tooltipOptions,
                        ...W
                    }
                }
                getOption(W) {
                    return this._tooltipOptions[W]
                }
                getTarget(W) {
                    return q.p.hasClass(W, "p-inputwrapper") ? q.p.findSingle(W, "input") : W
                }
                preAlign(W) {
                    this.container.style.left = "-999px",
                    this.container.style.top = "-999px";
                    let fe = "p-tooltip p-component p-tooltip-" + W;
                    this.container.className = this.getOption("tooltipStyleClass") ? fe + " " + this.getOption("tooltipStyleClass") : fe
                }
                isOutOfBounds() {
                    let W = this.container.getBoundingClientRect()
                      , fe = W.top
                      , re = W.left
                      , Ke = q.p.getOuterWidth(this.container)
                      , Ne = q.p.getOuterHeight(this.container)
                      , Be = q.p.getViewport();
                    return re + Ke > Be.width || re < 0 || fe < 0 || fe + Ne > Be.height
                }
                onWindowResize(W) {
                    this.hide()
                }
                bindDocumentResizeListener() {
                    this.zone.runOutsideAngular(()=>{
                        this.resizeListener = this.onWindowResize.bind(this),
                        window.addEventListener("resize", this.resizeListener)
                    }
                    )
                }
                unbindDocumentResizeListener() {
                    this.resizeListener && (window.removeEventListener("resize", this.resizeListener),
                    this.resizeListener = null)
                }
                bindScrollListener() {
                    this.scrollHandler || (this.scrollHandler = new q.V(this.el.nativeElement,()=>{
                        this.container && this.hide()
                    }
                    )),
                    this.scrollHandler.bindScrollListener()
                }
                unbindScrollListener() {
                    this.scrollHandler && this.scrollHandler.unbindScrollListener()
                }
                unbindEvents() {
                    if ("hover" === this.getOption("tooltipEvent"))
                        this.el.nativeElement.removeEventListener("mouseenter", this.mouseEnterListener),
                        this.el.nativeElement.removeEventListener("mouseleave", this.mouseLeaveListener),
                        this.el.nativeElement.removeEventListener("click", this.clickListener);
                    else if ("focus" === this.getOption("tooltipEvent")) {
                        let W = this.getTarget(this.el.nativeElement);
                        W.removeEventListener("focus", this.focusListener),
                        W.removeEventListener("blur", this.blurListener)
                    }
                    this.unbindDocumentResizeListener()
                }
                remove() {
                    this.container && this.container.parentElement && ("body" === this.getOption("appendTo") ? document.body.removeChild(this.container) : "target" === this.getOption("appendTo") ? this.el.nativeElement.removeChild(this.container) : q.p.removeChild(this.container, this.getOption("appendTo"))),
                    this.unbindDocumentResizeListener(),
                    this.unbindScrollListener(),
                    this.clearTimeouts(),
                    this.container = null,
                    this.scrollHandler = null
                }
                clearShowTimeout() {
                    this.showTimeout && (clearTimeout(this.showTimeout),
                    this.showTimeout = null)
                }
                clearHideTimeout() {
                    this.hideTimeout && (clearTimeout(this.hideTimeout),
                    this.hideTimeout = null)
                }
                clearTimeouts() {
                    this.clearShowTimeout(),
                    this.clearHideTimeout()
                }
                ngOnDestroy() {
                    this.unbindEvents(),
                    this.container && ue.P9.clear(this.container),
                    this.remove(),
                    this.scrollHandler && (this.scrollHandler.destroy(),
                    this.scrollHandler = null)
                }
            }
            return te.\u0275fac = function(W) {
                return new (W || te)(i.Y36(i.SBq),i.Y36(i.R0b),i.Y36(H.b4))
            }
            ,
            te.\u0275dir = i.lG2({
                type: te,
                selectors: [["", "pTooltip", ""]],
                hostAttrs: [1, "p-element"],
                inputs: {
                    tooltipPosition: "tooltipPosition",
                    tooltipEvent: "tooltipEvent",
                    appendTo: "appendTo",
                    positionStyle: "positionStyle",
                    tooltipStyleClass: "tooltipStyleClass",
                    tooltipZIndex: "tooltipZIndex",
                    escape: "escape",
                    showDelay: "showDelay",
                    hideDelay: "hideDelay",
                    life: "life",
                    positionTop: "positionTop",
                    positionLeft: "positionLeft",
                    fitContent: "fitContent",
                    text: ["pTooltip", "text"],
                    disabled: ["tooltipDisabled", "disabled"],
                    tooltipOptions: "tooltipOptions"
                },
                features: [i.TTD]
            }),
            te
        }
        )()
          , z = (()=>{
            class te {
            }
            return te.\u0275fac = function(W) {
                return new (W || te)
            }
            ,
            te.\u0275mod = i.oAB({
                type: te
            }),
            te.\u0275inj = i.cJS({
                imports: [l.ez]
            }),
            te
        }
        )()
    }
    ,
    8549: (Ot,je,D)=>{
        D.d(je, {
            P9: ()=>H,
            Th: ()=>q,
            gb: ()=>i
        });
        class i {
            static equals(z, te, le) {
                return le ? this.resolveFieldData(z, le) === this.resolveFieldData(te, le) : this.equalsByValue(z, te)
            }
            static equalsByValue(z, te) {
                if (z === te)
                    return !0;
                if (z && te && "object" == typeof z && "object" == typeof te) {
                    var fe, re, Ke, le = Array.isArray(z), W = Array.isArray(te);
                    if (le && W) {
                        if ((re = z.length) != te.length)
                            return !1;
                        for (fe = re; 0 != fe--; )
                            if (!this.equalsByValue(z[fe], te[fe]))
                                return !1;
                        return !0
                    }
                    if (le != W)
                        return !1;
                    var Ne = z instanceof Date
                      , Be = te instanceof Date;
                    if (Ne != Be)
                        return !1;
                    if (Ne && Be)
                        return z.getTime() == te.getTime();
                    var ot = z instanceof RegExp
                      , $e = te instanceof RegExp;
                    if (ot != $e)
                        return !1;
                    if (ot && $e)
                        return z.toString() == te.toString();
                    var Fe = Object.keys(z);
                    if ((re = Fe.length) !== Object.keys(te).length)
                        return !1;
                    for (fe = re; 0 != fe--; )
                        if (!Object.prototype.hasOwnProperty.call(te, Fe[fe]))
                            return !1;
                    for (fe = re; 0 != fe--; )
                        if (!this.equalsByValue(z[Ke = Fe[fe]], te[Ke]))
                            return !1;
                    return !0
                }
                return z != z && te != te
            }
            static resolveFieldData(z, te) {
                if (z && te) {
                    if (this.isFunction(te))
                        return te(z);
                    if (-1 == te.indexOf("."))
                        return z[te];
                    {
                        let le = te.split(".")
                          , W = z;
                        for (let fe = 0, re = le.length; fe < re; ++fe) {
                            if (null == W)
                                return null;
                            W = W[le[fe]]
                        }
                        return W
                    }
                }
                return null
            }
            static isFunction(z) {
                return !!(z && z.constructor && z.call && z.apply)
            }
            static reorderArray(z, te, le) {
                z && te !== le && (le >= z.length && (le %= z.length,
                te %= z.length),
                z.splice(le, 0, z.splice(te, 1)[0]))
            }
            static insertIntoOrderedArray(z, te, le, W) {
                if (le.length > 0) {
                    let fe = !1;
                    for (let re = 0; re < le.length; re++)
                        if (this.findIndexInList(le[re], W) > te) {
                            le.splice(re, 0, z),
                            fe = !0;
                            break
                        }
                    fe || le.push(z)
                } else
                    le.push(z)
            }
            static findIndexInList(z, te) {
                let le = -1;
                if (te)
                    for (let W = 0; W < te.length; W++)
                        if (te[W] == z) {
                            le = W;
                            break
                        }
                return le
            }
            static contains(z, te) {
                if (null != z && te && te.length)
                    for (let le of te)
                        if (this.equals(z, le))
                            return !0;
                return !1
            }
            static removeAccents(z) {
                return z && z.search(/[\xC0-\xFF]/g) > -1 && (z = z.replace(/[\xC0-\xC5]/g, "A").replace(/[\xC6]/g, "AE").replace(/[\xC7]/g, "C").replace(/[\xC8-\xCB]/g, "E").replace(/[\xCC-\xCF]/g, "I").replace(/[\xD0]/g, "D").replace(/[\xD1]/g, "N").replace(/[\xD2-\xD6\xD8]/g, "O").replace(/[\xD9-\xDC]/g, "U").replace(/[\xDD]/g, "Y").replace(/[\xDE]/g, "P").replace(/[\xE0-\xE5]/g, "a").replace(/[\xE6]/g, "ae").replace(/[\xE7]/g, "c").replace(/[\xE8-\xEB]/g, "e").replace(/[\xEC-\xEF]/g, "i").replace(/[\xF1]/g, "n").replace(/[\xF2-\xF6\xF8]/g, "o").replace(/[\xF9-\xFC]/g, "u").replace(/[\xFE]/g, "p").replace(/[\xFD\xFF]/g, "y")),
                z
            }
            static isEmpty(z) {
                return null == z || "" === z || Array.isArray(z) && 0 === z.length || !(z instanceof Date) && "object" == typeof z && 0 === Object.keys(z).length
            }
            static isNotEmpty(z) {
                return !this.isEmpty(z)
            }
        }
        var l = 0;
        function q() {
            return "pr_id_" + ++l
        }
        var H = function ue() {
            let U = [];
            const W = fe=>fe && parseInt(fe.style.zIndex, 10) || 0;
            return {
                get: W,
                set: (fe,re,Ke)=>{
                    re && (re.style.zIndex = String(((fe,re)=>{
                        let Ke = U.length > 0 ? U[U.length - 1] : {
                            key: fe,
                            value: re
                        }
                          , Ne = Ke.value + (Ke.key === fe ? 0 : re) + 1;
                        return U.push({
                            key: fe,
                            value: Ne
                        }),
                        Ne
                    }
                    )(fe, Ke)))
                }
                ,
                clear: fe=>{
                    fe && ((fe=>{
                        U = U.filter(re=>re.value !== fe)
                    }
                    )(W(fe)),
                    fe.style.zIndex = "")
                }
                ,
                getCurrent: ()=>U.length > 0 ? U[U.length - 1].value : 0
            }
        }()
    }
    ,
    341: (Ot,je,D)=>{
        D.d(je, {
            YC: ()=>Xt,
            kz: ()=>Kt,
            nF: ()=>bt
        });
        var i = D(2560)
          , l = D(4666)
          , q = D(4644)
          , ue = D(253)
          , H = D(745);
        const U = ["prevElRef"]
          , z = ["nextElRef"]
          , te = ["scrollbarElRef"]
          , le = ["paginationElRef"];
        function W(k, de) {
            1 & k && (i.ynx(0),
            i._UZ(1, "div", 6, 7)(3, "div", 8, 9),
            i.BQk())
        }
        function fe(k, de) {
            1 & k && i._UZ(0, "div", 10, 11)
        }
        function re(k, de) {
            1 & k && i._UZ(0, "div", 12, 13)
        }
        function Ke(k, de) {}
        function Ne(k, de) {
            1 & k && i.YNc(0, Ke, 0, 0, "ng-template")
        }
        function Be(k, de) {}
        function ot(k, de) {
            1 & k && i.YNc(0, Be, 0, 0, "ng-template")
        }
        function $e(k, de) {}
        function Fe(k, de) {
            1 & k && i.YNc(0, $e, 0, 0, "ng-template")
        }
        function et(k, de) {}
        const st = function(k) {
            return {
                $implicit: k
            }
        };
        function Pe(k, de) {
            if (1 & k && (i.TgZ(0, "div", 3),
            i.YNc(1, et, 0, 0, "ng-template", 18),
            i.qZA()),
            2 & k) {
                const he = i.oxw().$implicit
                  , Ie = i.oxw(2);
                i.Q6J("ngClass", Ie.zoomContainerClass),
                i.xp6(1),
                i.Q6J("ngTemplateOutlet", he.template)("ngTemplateOutletContext", i.VKq(3, st, he.slideData))
            }
        }
        function Q(k, de) {}
        function ze(k, de) {
            if (1 & k && (i.ynx(0),
            i.YNc(1, Q, 0, 0, "ng-template", 18),
            i.BQk()),
            2 & k) {
                const he = i.oxw().$implicit;
                i.xp6(1),
                i.Q6J("ngTemplateOutlet", he.template)("ngTemplateOutletContext", i.VKq(2, st, he.slideData))
            }
        }
        function ye(k, de) {
            if (1 & k && (i.TgZ(0, "div", 15),
            i.YNc(1, Pe, 2, 5, "div", 16),
            i.YNc(2, ze, 2, 4, "ng-container", 17),
            i.qZA()),
            2 & k) {
                const he = de.$implicit
                  , Ie = i.oxw().key
                  , gt = i.oxw();
                i.Akn(gt.style),
                i.Q6J("ngClass", (he.class ? he.class + " " : "") + gt.slideClass + ("" !== Ie ? " " + gt.slideDuplicateClass : ""))("ngSwitch", he.zoom),
                i.uIk("data-swiper-slide-index", he.virtualIndex ? he.virtualIndex : he.slideIndex)("data-swiper-autoplay", he.autoplayDelay),
                i.xp6(1),
                i.Q6J("ngSwitchCase", !0)
            }
        }
        function Re(k, de) {
            1 & k && (i.YNc(0, ye, 3, 7, "div", 14),
            i.ALo(1, "async")),
            2 & k && i.Q6J("ngForOf", i.lcZ(1, 1, de.loopSlides))
        }
        const ut = [[["", "slot", "container-start"]], [["", "slot", "wrapper-start"]], [["", "slot", "wrapper-end"]], [["", "slot", "container-end"]]]
          , Ce = function(k) {
            return {
                loopSlides: k,
                key: "prepend"
            }
        }
          , Oe = function(k) {
            return {
                loopSlides: k,
                key: ""
            }
        }
          , Ze = function(k) {
            return {
                loopSlides: k,
                key: "append"
            }
        }
          , _t = ["[slot=container-start]", "[slot=wrapper-start]", "[slot=wrapper-end]", "[slot=container-end]"]
          , rt = ["init", "enabled", "_direction", "touchEventsTarget", "initialSlide", "_speed", "cssMode", "updateOnWindowResize", "resizeObserver", "nested", "focusableElements", "_width", "_height", "preventInteractionOnTransition", "userAgent", "url", "_edgeSwipeDetection", "_edgeSwipeThreshold", "_freeMode", "_autoHeight", "setWrapperSize", "virtualTranslate", "_effect", "breakpoints", "_spaceBetween", "_slidesPerView", "maxBackfaceHiddenSlides", "_grid", "_slidesPerGroup", "_slidesPerGroupSkip", "_slidesPerGroupAuto", "_centeredSlides", "_centeredSlidesBounds", "_slidesOffsetBefore", "_slidesOffsetAfter", "normalizeSlideIndex", "_centerInsufficientSlides", "_watchOverflow", "roundLengths", "touchRatio", "touchAngle", "simulateTouch", "_shortSwipes", "_longSwipes", "longSwipesRatio", "longSwipesMs", "_followFinger", "allowTouchMove", "_threshold", "touchMoveStopPropagation", "touchStartPreventDefault", "touchStartForcePreventDefault", "touchReleaseOnEdges", "uniqueNavElements", "_resistance", "_resistanceRatio", "_watchSlidesProgress", "_grabCursor", "preventClicks", "preventClicksPropagation", "_slideToClickedSlide", "_preloadImages", "updateOnImagesReady", "_loop", "_loopAdditionalSlides", "_loopedSlides", "_loopedSlidesLimit", "_loopFillGroupWithBlank", "loopPreventsSlide", "_rewind", "_allowSlidePrev", "_allowSlideNext", "_swipeHandler", "_noSwiping", "noSwipingClass", "noSwipingSelector", "passiveListeners", "containerModifierClass", "slideClass", "slideBlankClass", "slideActiveClass", "slideDuplicateActiveClass", "slideVisibleClass", "slideDuplicateClass", "slideNextClass", "slideDuplicateNextClass", "slidePrevClass", "slideDuplicatePrevClass", "wrapperClass", "runCallbacksOnInit", "observer", "observeParents", "observeSlideChildren", "a11y", "autoplay", "_controller", "coverflowEffect", "cubeEffect", "fadeEffect", "flipEffect", "creativeEffect", "cardsEffect", "hashNavigation", "history", "keyboard", "lazy", "mousewheel", "_navigation", "_pagination", "parallax", "_scrollbar", "_thumbs", "virtual", "zoom", "on"];
        function It(k) {
            return "object" == typeof k && null !== k && k.constructor && "Object" === Object.prototype.toString.call(k).slice(8, -1)
        }
        function qt(k) {
            return typeof k < "u" && "boolean" != typeof k && !0 === k.enabled
        }
        function ft(k, de, he) {
            return !0 === be(k) && de && !de.el || !("boolean" != typeof de && de.el !== he?.nativeElement && ("string" == typeof de.el || "object" == typeof de.el))
        }
        function qe(k, de) {
            const he = ["__proto__", "constructor", "prototype"];
            Object.keys(de).filter(Ie=>he.indexOf(Ie) < 0).forEach(Ie=>{
                typeof k[Ie] > "u" ? k[Ie] = de[Ie] : k[Ie] && !de[Ie] || (It(de[Ie]) && It(k[Ie]) && Object.keys(de[Ie]).length > 0 ? de[Ie].__swiper__ ? k[Ie] = de[Ie] : qe(k[Ie], de[Ie]) : k[Ie] = de[Ie])
            }
            )
        }
        function be(k) {
            return null != k && "false" != `${k}`
        }
        const pe = ["pagination", "navigation", "scrollbar", "virtual"];
        function pt(k, de={}) {
            return It(k) ? k : !0 === be(k) && de
        }
        function kt(k={}) {
            const de = {
                on: {}
            }
              , he = {};
            qe(de, q.ZP.defaults),
            qe(de, q.ZP.extendedDefaults),
            de._emitClasses = !0,
            de.init = !1;
            const Ie = {}
              , gt = rt.map(Qe=>Qe.replace(/_/, ""));
            return Object.keys(k).forEach(Qe=>{
                const Tt = Qe.replace(/^_/, "");
                gt.indexOf(Tt) >= 0 ? It(k[Qe]) ? (de[Tt] = {},
                he[Tt] = {},
                qe(de[Tt], k[Qe]),
                qe(he[Tt], k[Qe])) : (de[Tt] = k[Qe],
                he[Tt] = k[Qe]) : Ie[Tt] = k[Qe]
            }
            ),
            ["navigation", "pagination", "scrollbar"].forEach(Qe=>{
                !0 === de[Qe] && (de[Qe] = {}),
                !1 === de[Qe] && delete de[Qe]
            }
            ),
            {
                params: de,
                passedParams: he,
                rest: Ie
            }
        }
        rt.map(k=>k.replace(/_/, ""));
        let Xt = (()=>{
            class k {
                constructor(he) {
                    this.template = he,
                    this.class = "",
                    this.autoplayDelay = null,
                    this.slideData = {
                        isActive: !1,
                        isPrev: !1,
                        isNext: !1,
                        isVisible: !1,
                        isDuplicate: !1
                    }
                }
                set ngClass(he) {
                    this.class = [this.class || "", he].join(" ")
                }
                set zoom(he) {
                    this._zoom = be(he)
                }
                get zoom() {
                    return this._zoom
                }
                get classNames() {
                    return this._classNames
                }
                set classNames(he) {
                    this._classNames !== he && (this._classNames = he,
                    this.slideData = {
                        isActive: this._hasClass(["swiper-slide-active", "swiper-slide-duplicate-active"]),
                        isVisible: this._hasClass(["swiper-slide-visible"]),
                        isDuplicate: this._hasClass(["swiper-slide-duplicate"]),
                        isPrev: this._hasClass(["swiper-slide-prev", "swiper-slide-duplicate-prev"]),
                        isNext: this._hasClass(["swiper-slide-next", "swiper-slide-duplicate-next"])
                    })
                }
                _hasClass(he) {
                    return he.some(Ie=>this._classNames.indexOf(Ie) >= 0)
                }
            }
            return k.\u0275fac = function(he) {
                return new (he || k)(i.Y36(i.Rgc))
            }
            ,
            k.\u0275dir = i.lG2({
                type: k,
                selectors: [["ng-template", "swiperSlide", ""]],
                inputs: {
                    virtualIndex: "virtualIndex",
                    class: "class",
                    ngClass: "ngClass",
                    autoplayDelay: ["data-swiper-autoplay", "autoplayDelay"],
                    zoom: "zoom"
                }
            }),
            k
        }
        )()
          , bt = (()=>{
            class k {
                constructor(he, Ie, gt, Qe) {
                    this._ngZone = he,
                    this.elementRef = Ie,
                    this._changeDetectorRef = gt,
                    this._platformId = Qe,
                    this.slideClass = "swiper-slide",
                    this.wrapperClass = "swiper-wrapper",
                    this.showNavigation = !0,
                    this.showPagination = !0,
                    this.showScrollbar = !0,
                    this.s__beforeBreakpoint = new i.vpe,
                    this.s__containerClasses = new i.vpe,
                    this.s__slideClass = new i.vpe,
                    this.s__swiper = new i.vpe,
                    this.s_activeIndexChange = new i.vpe,
                    this.s_afterInit = new i.vpe,
                    this.s_autoplay = new i.vpe,
                    this.s_autoplayStart = new i.vpe,
                    this.s_autoplayStop = new i.vpe,
                    this.s_autoplayPause = new i.vpe,
                    this.s_autoplayResume = new i.vpe,
                    this.s_beforeDestroy = new i.vpe,
                    this.s_beforeInit = new i.vpe,
                    this.s_beforeLoopFix = new i.vpe,
                    this.s_beforeResize = new i.vpe,
                    this.s_beforeSlideChangeStart = new i.vpe,
                    this.s_beforeTransitionStart = new i.vpe,
                    this.s_breakpoint = new i.vpe,
                    this.s_changeDirection = new i.vpe,
                    this.s_click = new i.vpe,
                    this.s_doubleTap = new i.vpe,
                    this.s_doubleClick = new i.vpe,
                    this.s_destroy = new i.vpe,
                    this.s_fromEdge = new i.vpe,
                    this.s_hashChange = new i.vpe,
                    this.s_hashSet = new i.vpe,
                    this.s_imagesReady = new i.vpe,
                    this.s_init = new i.vpe,
                    this.s_keyPress = new i.vpe,
                    this.s_lazyImageLoad = new i.vpe,
                    this.s_lazyImageReady = new i.vpe,
                    this.s_loopFix = new i.vpe,
                    this.s_momentumBounce = new i.vpe,
                    this.s_navigationHide = new i.vpe,
                    this.s_navigationShow = new i.vpe,
                    this.s_navigationPrev = new i.vpe,
                    this.s_navigationNext = new i.vpe,
                    this.s_observerUpdate = new i.vpe,
                    this.s_orientationchange = new i.vpe,
                    this.s_paginationHide = new i.vpe,
                    this.s_paginationRender = new i.vpe,
                    this.s_paginationShow = new i.vpe,
                    this.s_paginationUpdate = new i.vpe,
                    this.s_progress = new i.vpe,
                    this.s_reachBeginning = new i.vpe,
                    this.s_reachEnd = new i.vpe,
                    this.s_realIndexChange = new i.vpe,
                    this.s_resize = new i.vpe,
                    this.s_scroll = new i.vpe,
                    this.s_scrollbarDragEnd = new i.vpe,
                    this.s_scrollbarDragMove = new i.vpe,
                    this.s_scrollbarDragStart = new i.vpe,
                    this.s_setTransition = new i.vpe,
                    this.s_setTranslate = new i.vpe,
                    this.s_slideChange = new i.vpe,
                    this.s_slideChangeTransitionEnd = new i.vpe,
                    this.s_slideChangeTransitionStart = new i.vpe,
                    this.s_slideNextTransitionEnd = new i.vpe,
                    this.s_slideNextTransitionStart = new i.vpe,
                    this.s_slidePrevTransitionEnd = new i.vpe,
                    this.s_slidePrevTransitionStart = new i.vpe,
                    this.s_slideResetTransitionStart = new i.vpe,
                    this.s_slideResetTransitionEnd = new i.vpe,
                    this.s_sliderMove = new i.vpe,
                    this.s_sliderFirstMove = new i.vpe,
                    this.s_slidesLengthChange = new i.vpe,
                    this.s_slidesGridLengthChange = new i.vpe,
                    this.s_snapGridLengthChange = new i.vpe,
                    this.s_snapIndexChange = new i.vpe,
                    this.s_tap = new i.vpe,
                    this.s_toEdge = new i.vpe,
                    this.s_touchEnd = new i.vpe,
                    this.s_touchMove = new i.vpe,
                    this.s_touchMoveOpposite = new i.vpe,
                    this.s_touchStart = new i.vpe,
                    this.s_transitionEnd = new i.vpe,
                    this.s_transitionStart = new i.vpe,
                    this.s_update = new i.vpe,
                    this.s_zoomChange = new i.vpe,
                    this.s_swiper = new i.vpe,
                    this.s_lock = new i.vpe,
                    this.s_unlock = new i.vpe,
                    this._activeSlides = new ue.x,
                    this.containerClasses = "swiper",
                    this.slidesChanges = Tt=>{
                        this.slides = Tt.map((wn,an)=>(wn.slideIndex = an,
                        wn.classNames = this.slideClass || "",
                        wn)),
                        this.loop && !this.loopedSlides && this.calcLoopedSlides(),
                        this.virtual ? this.swiperRef && this.swiperRef.virtual && this._ngZone.runOutsideAngular(()=>{
                            this.swiperRef.virtual.slides = this.slides,
                            this.swiperRef.virtual.update(!0)
                        }
                        ) : this.loopedSlides && (this.prependSlides = (0,
                        H.of)(this.slides.slice(this.slides.length - this.loopedSlides)),
                        this.appendSlides = (0,
                        H.of)(this.slides.slice(0, this.loopedSlides))),
                        this._changeDetectorRef.detectChanges()
                    }
                    ,
                    this.style = null,
                    this.updateVirtualSlides = Tt=>{
                        !this.swiperRef || this.currentVirtualData && this.currentVirtualData.from === Tt.from && this.currentVirtualData.to === Tt.to && this.currentVirtualData.offset === Tt.offset || (this.style = this.swiperRef.isHorizontal() ? {
                            [this.swiperRef.rtlTranslate ? "right" : "left"]: `${Tt.offset}px`
                        } : {
                            top: `${Tt.offset}px`
                        },
                        this.currentVirtualData = Tt,
                        this._activeSlides.next(Tt.slides),
                        this._ngZone.run(()=>{
                            this._changeDetectorRef.detectChanges()
                        }
                        ),
                        this._ngZone.runOutsideAngular(()=>{
                            this.swiperRef.updateSlides(),
                            this.swiperRef.updateProgress(),
                            this.swiperRef.updateSlidesClasses(),
                            qt(this.swiperRef.params.lazy) && this.swiperRef.lazy.load(),
                            this.swiperRef.virtual.update(!0)
                        }
                        ))
                    }
                }
                set navigation(he) {
                    var Ie, gt, Qe;
                    const Tt = "boolean" != typeof this._navigation && "" !== this._navigation ? null === (Ie = this._navigation) || void 0 === Ie ? void 0 : Ie.nextEl : null
                      , wn = "boolean" != typeof this._navigation && "" !== this._navigation ? null === (gt = this._navigation) || void 0 === gt ? void 0 : gt.prevEl : null;
                    this._navigation = pt(he, {
                        nextEl: Tt || null,
                        prevEl: wn || null
                    }),
                    this.showNavigation = !(!0 !== be(he) || this._navigation && "boolean" != typeof this._navigation && this._navigation.prevEl !== (null === (Qe = this._prevElRef) || void 0 === Qe ? void 0 : Qe.nativeElement) && (null !== this._navigation.prevEl || null !== this._navigation.nextEl) && ("string" == typeof this._navigation.nextEl || "string" == typeof this._navigation.prevEl || "object" == typeof this._navigation.nextEl || "object" == typeof this._navigation.prevEl))
                }
                get navigation() {
                    return this._navigation
                }
                set pagination(he) {
                    var Ie;
                    const gt = "boolean" != typeof this._pagination && "" !== this._pagination ? null === (Ie = this._pagination) || void 0 === Ie ? void 0 : Ie.el : null;
                    this._pagination = pt(he, {
                        el: gt || null
                    }),
                    this.showPagination = ft(he, this._pagination, this._paginationElRef)
                }
                get pagination() {
                    return this._pagination
                }
                set scrollbar(he) {
                    var Ie;
                    const gt = "boolean" != typeof this._scrollbar && "" !== this._scrollbar ? null === (Ie = this._scrollbar) || void 0 === Ie ? void 0 : Ie.el : null;
                    this._scrollbar = pt(he, {
                        el: gt || null
                    }),
                    this.showScrollbar = ft(he, this._scrollbar, this._scrollbarElRef)
                }
                get scrollbar() {
                    return this._scrollbar
                }
                set virtual(he) {
                    this._virtual = pt(he)
                }
                get virtual() {
                    return this._virtual
                }
                set config(he) {
                    this.updateSwiper(he);
                    const {params: Ie} = kt(he);
                    Object.assign(this, Ie)
                }
                set prevElRef(he) {
                    this._prevElRef = he,
                    this._setElement(he, this.navigation, "navigation", "prevEl")
                }
                set nextElRef(he) {
                    this._nextElRef = he,
                    this._setElement(he, this.navigation, "navigation", "nextEl")
                }
                set scrollbarElRef(he) {
                    this._scrollbarElRef = he,
                    this._setElement(he, this.scrollbar, "scrollbar")
                }
                set paginationElRef(he) {
                    this._paginationElRef = he,
                    this._setElement(he, this.pagination, "pagination")
                }
                get activeSlides() {
                    return this.virtual ? this._activeSlides : (0,
                    H.of)(this.slides)
                }
                get zoomContainerClass() {
                    return this.zoom && "boolean" != typeof this.zoom ? this.zoom.containerClass : "swiper-zoom-container"
                }
                _setElement(he, Ie, gt, Qe="el") {
                    if (!Ie || !he)
                        return;
                    if (he.nativeElement) {
                        if (Ie[Qe] === he.nativeElement)
                            return;
                        Ie[Qe] = he.nativeElement
                    }
                    const Tt = {};
                    Tt[gt] = !0,
                    this.updateInitSwiper(Tt)
                }
                ngOnInit() {
                    const {params: he} = kt(this);
                    Object.assign(this, he)
                }
                ngAfterViewInit() {
                    this.childrenSlidesInit(),
                    this.initSwiper(),
                    this._changeDetectorRef.detectChanges(),
                    setTimeout(()=>{
                        this.s_swiper.emit(this.swiperRef)
                    }
                    )
                }
                childrenSlidesInit() {
                    this.slidesChanges(this.slidesEl),
                    this.slidesEl.changes.subscribe(this.slidesChanges)
                }
                get isSwiperActive() {
                    return this.swiperRef && !this.swiperRef.destroyed
                }
                initSwiper() {
                    const {params: he} = kt(this);
                    Object.assign(this, he),
                    this._ngZone.runOutsideAngular(()=>{
                        he.init = !1,
                        he.virtual || (he.observer = !0),
                        he.onAny = (an,...In)=>{
                            const $t = this["s_" + an];
                            $t && $t.emit([...In])
                        }
                        ,
                        Object.assign(he.on, {
                            _containerClasses: (an,In)=>{
                                setTimeout(()=>{
                                    this.containerClasses = In
                                }
                                )
                            }
                            ,
                            _slideClasses: (an,In)=>{
                                In.forEach(({slideEl: $t, classNames: gn},qn)=>{
                                    const xn = $t.getAttribute("data-swiper-slide-index")
                                      , Xn = xn ? parseInt(xn) : qn;
                                    if (this.virtual) {
                                        const vi = this.slides.find(Tn=>Tn.virtualIndex && Tn.virtualIndex === Xn);
                                        if (vi)
                                            return void (vi.classNames = gn)
                                    }
                                    this.slides[Xn] && (this.slides[Xn].classNames = gn)
                                }
                                ),
                                this._changeDetectorRef.detectChanges()
                            }
                        });
                        const Tt = new q.ZP(he);
                        Tt.loopCreate = ()=>{}
                        ,
                        Tt.loopDestroy = ()=>{}
                        ,
                        he.loop && (Tt.loopedSlides = this.loopedSlides);
                        const wn = qt(Tt.params.virtual);
                        if (Tt.virtual && wn) {
                            Tt.virtual.slides = this.slides;
                            const an = {
                                cache: !1,
                                slides: this.slides,
                                renderExternal: this.updateVirtualSlides,
                                renderExternalUpdate: !1
                            };
                            qe(Tt.params.virtual, an),
                            qe(Tt.originalParams.virtual, an)
                        }
                        if ((0,
                        l.NF)(this._platformId)) {
                            this.swiperRef = Tt.init(this.elementRef.nativeElement);
                            const an = qt(this.swiperRef.params.virtual);
                            this.swiperRef.virtual && an && this.swiperRef.virtual.update(!0),
                            this._changeDetectorRef.detectChanges()
                        }
                    }
                    )
                }
                ngOnChanges(he) {
                    this.updateSwiper(he),
                    this._changeDetectorRef.detectChanges()
                }
                updateInitSwiper(he) {
                    !he || !this.swiperRef || this.swiperRef.destroyed || this._ngZone.runOutsideAngular(()=>{
                        const {pagination: gt, navigation: Qe, scrollbar: Tt, thumbs: an} = this.swiperRef;
                        he.pagination && (this.pagination && "boolean" != typeof this.pagination && this.pagination.el && gt && !gt.el ? (this.updateParameter("pagination", this.pagination),
                        gt.init(),
                        gt.render(),
                        gt.update()) : (gt.destroy(),
                        gt.el = null)),
                        he.scrollbar && (this.scrollbar && "boolean" != typeof this.scrollbar && this.scrollbar.el && Tt && !Tt.el ? (this.updateParameter("scrollbar", this.scrollbar),
                        Tt.init(),
                        Tt.updateSize(),
                        Tt.setTranslate()) : (Tt.destroy(),
                        Tt.el = null)),
                        he.navigation && (this.navigation && "boolean" != typeof this.navigation && this.navigation.prevEl && this.navigation.nextEl && Qe && !Qe.prevEl && !Qe.nextEl ? (this.updateParameter("navigation", this.navigation),
                        Qe.init(),
                        Qe.update()) : Qe.prevEl && Qe.nextEl && (Qe.destroy(),
                        Qe.nextEl = null,
                        Qe.prevEl = null)),
                        he.thumbs && this.thumbs && this.thumbs.swiper && (this.updateParameter("thumbs", this.thumbs),
                        an.init() && an.update(!0)),
                        he.controller && this.controller && this.controller.control && (this.swiperRef.controller.control = this.controller.control),
                        this.swiperRef.update()
                    }
                    )
                }
                updateSwiper(he) {
                    this._ngZone.runOutsideAngular(()=>{
                        var Ie, gt;
                        if (!he.config && he && this.swiperRef && !this.swiperRef.destroyed) {
                            for (const Qe in he) {
                                if (pe.indexOf(Qe) >= 0)
                                    continue;
                                const Tt = null !== (gt = null === (Ie = he[Qe]) || void 0 === Ie ? void 0 : Ie.currentValue) && void 0 !== gt ? gt : he[Qe];
                                this.updateParameter(Qe, Tt)
                            }
                            he.allowSlideNext && (this.swiperRef.allowSlideNext = this.allowSlideNext),
                            he.allowSlidePrev && (this.swiperRef.allowSlidePrev = this.allowSlidePrev),
                            he.direction && this.swiperRef.changeDirection(this.direction, !1),
                            he.breakpoints && (this.loop && !this.loopedSlides && this.calcLoopedSlides(),
                            this.swiperRef.currentBreakpoint = null,
                            this.swiperRef.setBreakpoint()),
                            (he.thumbs || he.controller) && this.updateInitSwiper(he),
                            this.swiperRef.update()
                        }
                    }
                    )
                }
                calcLoopedSlides() {
                    if (!this.loop)
                        return !1;
                    let he = this.slidesPerView;
                    if (this.breakpoints) {
                        const gt = q.ZP.prototype.getBreakpoint(this.breakpoints)
                          , Qe = gt in this.breakpoints ? this.breakpoints[gt] : void 0;
                        Qe && Qe.slidesPerView && (he = Qe.slidesPerView)
                    }
                    if ("auto" === he)
                        return this.loopedSlides = this.slides.length,
                        this.slides.length;
                    let Ie = this.loopedSlides || he;
                    return !!Ie && (this.loopAdditionalSlides && (Ie += this.loopAdditionalSlides),
                    Ie > this.slides.length && (Ie = this.slides.length),
                    this.loopedSlides = Ie,
                    !0)
                }
                updateParameter(he, Ie) {
                    if (!this.swiperRef || this.swiperRef.destroyed)
                        return;
                    const gt = he.replace(/^_/, "")
                      , Qe = It(this.swiperRef.params[gt]);
                    "enabled" !== gt ? Qe && It(Ie) ? qe(this.swiperRef.params[gt], Ie) : this.swiperRef.params[gt] = Ie : !0 === Ie ? this.swiperRef.enable() : !1 === Ie && this.swiperRef.disable()
                }
                ngOnDestroy() {
                    this._ngZone.runOutsideAngular(()=>{
                        var he;
                        null === (he = this.swiperRef) || void 0 === he || he.destroy(!0, !1)
                    }
                    )
                }
            }
            return k.\u0275fac = function(he) {
                return new (he || k)(i.Y36(i.R0b),i.Y36(i.SBq),i.Y36(i.sBO),i.Y36(i.Lbi))
            }
            ,
            k.\u0275cmp = i.Xpm({
                type: k,
                selectors: [["swiper"], ["", "swiper", ""]],
                contentQueries: function(he, Ie, gt) {
                    if (1 & he && i.Suo(gt, Xt, 4),
                    2 & he) {
                        let Qe;
                        i.iGM(Qe = i.CRH()) && (Ie.slidesEl = Qe)
                    }
                },
                viewQuery: function(he, Ie) {
                    if (1 & he && (i.Gf(U, 5),
                    i.Gf(z, 5),
                    i.Gf(te, 5),
                    i.Gf(le, 5)),
                    2 & he) {
                        let gt;
                        i.iGM(gt = i.CRH()) && (Ie.prevElRef = gt.first),
                        i.iGM(gt = i.CRH()) && (Ie.nextElRef = gt.first),
                        i.iGM(gt = i.CRH()) && (Ie.scrollbarElRef = gt.first),
                        i.iGM(gt = i.CRH()) && (Ie.paginationElRef = gt.first)
                    }
                },
                hostVars: 2,
                hostBindings: function(he, Ie) {
                    2 & he && i.Tol(Ie.containerClasses)
                },
                inputs: {
                    enabled: "enabled",
                    on: "on",
                    direction: "direction",
                    touchEventsTarget: "touchEventsTarget",
                    initialSlide: "initialSlide",
                    speed: "speed",
                    cssMode: "cssMode",
                    updateOnWindowResize: "updateOnWindowResize",
                    resizeObserver: "resizeObserver",
                    nested: "nested",
                    focusableElements: "focusableElements",
                    width: "width",
                    height: "height",
                    preventInteractionOnTransition: "preventInteractionOnTransition",
                    userAgent: "userAgent",
                    url: "url",
                    edgeSwipeDetection: "edgeSwipeDetection",
                    edgeSwipeThreshold: "edgeSwipeThreshold",
                    freeMode: "freeMode",
                    autoHeight: "autoHeight",
                    setWrapperSize: "setWrapperSize",
                    virtualTranslate: "virtualTranslate",
                    effect: "effect",
                    breakpoints: "breakpoints",
                    spaceBetween: "spaceBetween",
                    slidesPerView: "slidesPerView",
                    maxBackfaceHiddenSlides: "maxBackfaceHiddenSlides",
                    grid: "grid",
                    slidesPerGroup: "slidesPerGroup",
                    slidesPerGroupSkip: "slidesPerGroupSkip",
                    centeredSlides: "centeredSlides",
                    centeredSlidesBounds: "centeredSlidesBounds",
                    slidesOffsetBefore: "slidesOffsetBefore",
                    slidesOffsetAfter: "slidesOffsetAfter",
                    normalizeSlideIndex: "normalizeSlideIndex",
                    centerInsufficientSlides: "centerInsufficientSlides",
                    watchOverflow: "watchOverflow",
                    roundLengths: "roundLengths",
                    touchRatio: "touchRatio",
                    touchAngle: "touchAngle",
                    simulateTouch: "simulateTouch",
                    shortSwipes: "shortSwipes",
                    longSwipes: "longSwipes",
                    longSwipesRatio: "longSwipesRatio",
                    longSwipesMs: "longSwipesMs",
                    followFinger: "followFinger",
                    allowTouchMove: "allowTouchMove",
                    threshold: "threshold",
                    touchMoveStopPropagation: "touchMoveStopPropagation",
                    touchStartPreventDefault: "touchStartPreventDefault",
                    touchStartForcePreventDefault: "touchStartForcePreventDefault",
                    touchReleaseOnEdges: "touchReleaseOnEdges",
                    uniqueNavElements: "uniqueNavElements",
                    resistance: "resistance",
                    resistanceRatio: "resistanceRatio",
                    watchSlidesProgress: "watchSlidesProgress",
                    grabCursor: "grabCursor",
                    preventClicks: "preventClicks",
                    preventClicksPropagation: "preventClicksPropagation",
                    slideToClickedSlide: "slideToClickedSlide",
                    preloadImages: "preloadImages",
                    updateOnImagesReady: "updateOnImagesReady",
                    loop: "loop",
                    loopAdditionalSlides: "loopAdditionalSlides",
                    loopedSlides: "loopedSlides",
                    loopedSlidesLimit: "loopedSlidesLimit",
                    loopFillGroupWithBlank: "loopFillGroupWithBlank",
                    loopPreventsSlide: "loopPreventsSlide",
                    rewind: "rewind",
                    allowSlidePrev: "allowSlidePrev",
                    allowSlideNext: "allowSlideNext",
                    swipeHandler: "swipeHandler",
                    noSwiping: "noSwiping",
                    noSwipingClass: "noSwipingClass",
                    noSwipingSelector: "noSwipingSelector",
                    passiveListeners: "passiveListeners",
                    containerModifierClass: "containerModifierClass",
                    slideClass: "slideClass",
                    slideBlankClass: "slideBlankClass",
                    slideActiveClass: "slideActiveClass",
                    slideDuplicateActiveClass: "slideDuplicateActiveClass",
                    slideVisibleClass: "slideVisibleClass",
                    slideDuplicateClass: "slideDuplicateClass",
                    slideNextClass: "slideNextClass",
                    slideDuplicateNextClass: "slideDuplicateNextClass",
                    slidePrevClass: "slidePrevClass",
                    slideDuplicatePrevClass: "slideDuplicatePrevClass",
                    wrapperClass: "wrapperClass",
                    runCallbacksOnInit: "runCallbacksOnInit",
                    observeParents: "observeParents",
                    observeSlideChildren: "observeSlideChildren",
                    a11y: "a11y",
                    autoplay: "autoplay",
                    controller: "controller",
                    coverflowEffect: "coverflowEffect",
                    cubeEffect: "cubeEffect",
                    fadeEffect: "fadeEffect",
                    flipEffect: "flipEffect",
                    creativeEffect: "creativeEffect",
                    cardsEffect: "cardsEffect",
                    hashNavigation: "hashNavigation",
                    history: "history",
                    keyboard: "keyboard",
                    lazy: "lazy",
                    mousewheel: "mousewheel",
                    parallax: "parallax",
                    thumbs: "thumbs",
                    zoom: "zoom",
                    class: "class",
                    id: "id",
                    navigation: "navigation",
                    pagination: "pagination",
                    scrollbar: "scrollbar",
                    virtual: "virtual",
                    config: "config"
                },
                outputs: {
                    s__beforeBreakpoint: "_beforeBreakpoint",
                    s__containerClasses: "_containerClasses",
                    s__slideClass: "_slideClass",
                    s__swiper: "_swiper",
                    s_activeIndexChange: "activeIndexChange",
                    s_afterInit: "afterInit",
                    s_autoplay: "autoplay",
                    s_autoplayStart: "autoplayStart",
                    s_autoplayStop: "autoplayStop",
                    s_autoplayPause: "autoplayPause",
                    s_autoplayResume: "autoplayResume",
                    s_beforeDestroy: "beforeDestroy",
                    s_beforeInit: "beforeInit",
                    s_beforeLoopFix: "beforeLoopFix",
                    s_beforeResize: "beforeResize",
                    s_beforeSlideChangeStart: "beforeSlideChangeStart",
                    s_beforeTransitionStart: "beforeTransitionStart",
                    s_breakpoint: "breakpoint",
                    s_changeDirection: "changeDirection",
                    s_click: "click",
                    s_doubleTap: "doubleTap",
                    s_doubleClick: "doubleClick",
                    s_destroy: "destroy",
                    s_fromEdge: "fromEdge",
                    s_hashChange: "hashChange",
                    s_hashSet: "hashSet",
                    s_imagesReady: "imagesReady",
                    s_init: "init",
                    s_keyPress: "keyPress",
                    s_lazyImageLoad: "lazyImageLoad",
                    s_lazyImageReady: "lazyImageReady",
                    s_loopFix: "loopFix",
                    s_momentumBounce: "momentumBounce",
                    s_navigationHide: "navigationHide",
                    s_navigationShow: "navigationShow",
                    s_navigationPrev: "navigationPrev",
                    s_navigationNext: "navigationNext",
                    s_observerUpdate: "observerUpdate",
                    s_orientationchange: "orientationchange",
                    s_paginationHide: "paginationHide",
                    s_paginationRender: "paginationRender",
                    s_paginationShow: "paginationShow",
                    s_paginationUpdate: "paginationUpdate",
                    s_progress: "progress",
                    s_reachBeginning: "reachBeginning",
                    s_reachEnd: "reachEnd",
                    s_realIndexChange: "realIndexChange",
                    s_resize: "resize",
                    s_scroll: "scroll",
                    s_scrollbarDragEnd: "scrollbarDragEnd",
                    s_scrollbarDragMove: "scrollbarDragMove",
                    s_scrollbarDragStart: "scrollbarDragStart",
                    s_setTransition: "setTransition",
                    s_setTranslate: "setTranslate",
                    s_slideChange: "slideChange",
                    s_slideChangeTransitionEnd: "slideChangeTransitionEnd",
                    s_slideChangeTransitionStart: "slideChangeTransitionStart",
                    s_slideNextTransitionEnd: "slideNextTransitionEnd",
                    s_slideNextTransitionStart: "slideNextTransitionStart",
                    s_slidePrevTransitionEnd: "slidePrevTransitionEnd",
                    s_slidePrevTransitionStart: "slidePrevTransitionStart",
                    s_slideResetTransitionStart: "slideResetTransitionStart",
                    s_slideResetTransitionEnd: "slideResetTransitionEnd",
                    s_sliderMove: "sliderMove",
                    s_sliderFirstMove: "sliderFirstMove",
                    s_slidesLengthChange: "slidesLengthChange",
                    s_slidesGridLengthChange: "slidesGridLengthChange",
                    s_snapGridLengthChange: "snapGridLengthChange",
                    s_snapIndexChange: "snapIndexChange",
                    s_tap: "tap",
                    s_toEdge: "toEdge",
                    s_touchEnd: "touchEnd",
                    s_touchMove: "touchMove",
                    s_touchMoveOpposite: "touchMoveOpposite",
                    s_touchStart: "touchStart",
                    s_transitionEnd: "transitionEnd",
                    s_transitionStart: "transitionStart",
                    s_update: "update",
                    s_zoomChange: "zoomChange",
                    s_swiper: "swiper",
                    s_lock: "lock",
                    s_unlock: "unlock"
                },
                features: [i.TTD],
                ngContentSelectors: _t,
                decls: 13,
                vars: 17,
                consts: [[4, "ngIf"], ["class", "swiper-scrollbar", 4, "ngIf"], ["class", "swiper-pagination", 4, "ngIf"], [3, "ngClass"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], ["slidesTemplate", ""], [1, "swiper-button-prev"], ["prevElRef", ""], [1, "swiper-button-next"], ["nextElRef", ""], [1, "swiper-scrollbar"], ["scrollbarElRef", ""], [1, "swiper-pagination"], ["paginationElRef", ""], [3, "ngClass", "style", "ngSwitch", 4, "ngFor", "ngForOf"], [3, "ngClass", "ngSwitch"], [3, "ngClass", 4, "ngSwitchCase"], [4, "ngSwitchDefault"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"]],
                template: function(he, Ie) {
                    if (1 & he && (i.F$t(ut),
                    i.Hsn(0),
                    i.YNc(1, W, 5, 0, "ng-container", 0),
                    i.YNc(2, fe, 2, 0, "div", 1),
                    i.YNc(3, re, 2, 0, "div", 2),
                    i.TgZ(4, "div", 3),
                    i.Hsn(5, 1),
                    i.YNc(6, Ne, 1, 0, null, 4),
                    i.YNc(7, ot, 1, 0, null, 4),
                    i.YNc(8, Fe, 1, 0, null, 4),
                    i.Hsn(9, 2),
                    i.qZA(),
                    i.Hsn(10, 3),
                    i.YNc(11, Re, 2, 3, "ng-template", null, 5, i.W1O)),
                    2 & he) {
                        const gt = i.MAs(12);
                        i.xp6(1),
                        i.Q6J("ngIf", Ie.navigation && Ie.showNavigation),
                        i.xp6(1),
                        i.Q6J("ngIf", Ie.scrollbar && Ie.showScrollbar),
                        i.xp6(1),
                        i.Q6J("ngIf", Ie.pagination && Ie.showPagination),
                        i.xp6(1),
                        i.Q6J("ngClass", Ie.wrapperClass),
                        i.uIk("id", Ie.id),
                        i.xp6(2),
                        i.Q6J("ngTemplateOutlet", gt)("ngTemplateOutletContext", i.VKq(11, Ce, Ie.prependSlides)),
                        i.xp6(1),
                        i.Q6J("ngTemplateOutlet", gt)("ngTemplateOutletContext", i.VKq(13, Oe, Ie.activeSlides)),
                        i.xp6(1),
                        i.Q6J("ngTemplateOutlet", gt)("ngTemplateOutletContext", i.VKq(15, Ze, Ie.appendSlides))
                    }
                },
                dependencies: [l.O5, l.mk, l.tP, l.sg, l.RF, l.n9, l.ED, l.Ov],
                styles: ["swiper{display:block}\n"],
                encapsulation: 2,
                changeDetection: 0
            }),
            k
        }
        )()
          , Kt = (()=>{
            class k {
            }
            return k.\u0275fac = function(he) {
                return new (he || k)
            }
            ,
            k.\u0275mod = i.oAB({
                type: k
            }),
            k.\u0275inj = i.cJS({
                imports: [[l.ez]]
            }),
            k
        }
        )()
    }
    ,
    4644: (Ot,je,D)=>{
        function i(r) {
            return null !== r && "object" == typeof r && "constructor"in r && r.constructor === Object
        }
        function l(r={}, y={}) {
            Object.keys(y).forEach(_=>{
                typeof r[_] > "u" ? r[_] = y[_] : i(y[_]) && i(r[_]) && Object.keys(y[_]).length > 0 && l(r[_], y[_])
            }
            )
        }
        D.d(je, {
            pt: ()=>rs,
            W_: ()=>Qn,
            tl: ()=>P,
            ZP: ()=>or
        });
        const q = {
            body: {},
            addEventListener() {},
            removeEventListener() {},
            activeElement: {
                blur() {},
                nodeName: ""
            },
            querySelector: ()=>null,
            querySelectorAll: ()=>[],
            getElementById: ()=>null,
            createEvent: ()=>({
                initEvent() {}
            }),
            createElement: ()=>({
                children: [],
                childNodes: [],
                style: {},
                setAttribute() {},
                getElementsByTagName: ()=>[]
            }),
            createElementNS: ()=>({}),
            importNode: ()=>null,
            location: {
                hash: "",
                host: "",
                hostname: "",
                href: "",
                origin: "",
                pathname: "",
                protocol: "",
                search: ""
            }
        };
        function ue() {
            const r = typeof document < "u" ? document : {};
            return l(r, q),
            r
        }
        const H = {
            document: q,
            navigator: {
                userAgent: ""
            },
            location: {
                hash: "",
                host: "",
                hostname: "",
                href: "",
                origin: "",
                pathname: "",
                protocol: "",
                search: ""
            },
            history: {
                replaceState() {},
                pushState() {},
                go() {},
                back() {}
            },
            CustomEvent: function() {
                return this
            },
            addEventListener() {},
            removeEventListener() {},
            getComputedStyle: ()=>({
                getPropertyValue: ()=>""
            }),
            Image() {},
            Date() {},
            screen: {},
            setTimeout() {},
            clearTimeout() {},
            matchMedia: ()=>({}),
            requestAnimationFrame: r=>typeof setTimeout > "u" ? (r(),
            null) : setTimeout(r, 0),
            cancelAnimationFrame(r) {
                typeof setTimeout > "u" || clearTimeout(r)
            }
        };
        function U() {
            const r = typeof window < "u" ? window : {};
            return l(r, H),
            r
        }
        class te extends Array {
            constructor(y) {
                "number" == typeof y ? super(y) : (super(...y || []),
                function z(r) {
                    const y = r.__proto__;
                    Object.defineProperty(r, "__proto__", {
                        get: ()=>y,
                        set(_) {
                            y.__proto__ = _
                        }
                    })
                }(this))
            }
        }
        function le(r=[]) {
            const y = [];
            return r.forEach(_=>{
                Array.isArray(_) ? y.push(...le(_)) : y.push(_)
            }
            ),
            y
        }
        function W(r, y) {
            return Array.prototype.filter.call(r, y)
        }
        function Ne(r, y) {
            const _ = U()
              , E = ue();
            let O = [];
            if (!y && r instanceof te)
                return r;
            if (!r)
                return new te(O);
            if ("string" == typeof r) {
                const B = r.trim();
                if (B.indexOf("<") >= 0 && B.indexOf(">") >= 0) {
                    let se = "div";
                    0 === B.indexOf("<li") && (se = "ul"),
                    0 === B.indexOf("<tr") && (se = "tbody"),
                    (0 === B.indexOf("<td") || 0 === B.indexOf("<th")) && (se = "tr"),
                    0 === B.indexOf("<tbody") && (se = "table"),
                    0 === B.indexOf("<option") && (se = "select");
                    const ce = E.createElement(se);
                    ce.innerHTML = B;
                    for (let G = 0; G < ce.childNodes.length; G += 1)
                        O.push(ce.childNodes[G])
                } else
                    O = function Ke(r, y) {
                        if ("string" != typeof r)
                            return [r];
                        const _ = []
                          , E = y.querySelectorAll(r);
                        for (let O = 0; O < E.length; O += 1)
                            _.push(E[O]);
                        return _
                    }(r.trim(), y || E)
            } else if (r.nodeType || r === _ || r === E)
                O.push(r);
            else if (Array.isArray(r)) {
                if (r instanceof te)
                    return r;
                O = r
            }
            return new te(function fe(r) {
                const y = [];
                for (let _ = 0; _ < r.length; _ += 1)
                    -1 === y.indexOf(r[_]) && y.push(r[_]);
                return y
            }(O))
        }
        Ne.fn = te.prototype;
        const ai = "resize scroll".split(" ");
        function Zt(r) {
            return function y(..._) {
                if (typeof _[0] > "u") {
                    for (let E = 0; E < this.length; E += 1)
                        ai.indexOf(r) < 0 && (r in this[E] ? this[E][r]() : Ne(this[E]).trigger(r));
                    return this
                }
                return this.on(r, ..._)
            }
        }
        Zt("click"),
        Zt("blur"),
        Zt("focus"),
        Zt("focusin"),
        Zt("focusout"),
        Zt("keyup"),
        Zt("keydown"),
        Zt("keypress"),
        Zt("submit"),
        Zt("change"),
        Zt("mousedown"),
        Zt("mousemove"),
        Zt("mouseup"),
        Zt("mouseenter"),
        Zt("mouseleave"),
        Zt("mouseout"),
        Zt("mouseover"),
        Zt("touchstart"),
        Zt("touchend"),
        Zt("touchmove"),
        Zt("resize"),
        Zt("scroll");
        const hi = {
            addClass: function Be(...r) {
                const y = le(r.map(_=>_.split(" ")));
                return this.forEach(_=>{
                    _.classList.add(...y)
                }
                ),
                this
            },
            removeClass: function ot(...r) {
                const y = le(r.map(_=>_.split(" ")));
                return this.forEach(_=>{
                    _.classList.remove(...y)
                }
                ),
                this
            },
            hasClass: function Fe(...r) {
                const y = le(r.map(_=>_.split(" ")));
                return W(this, _=>y.filter(E=>_.classList.contains(E)).length > 0).length > 0
            },
            toggleClass: function $e(...r) {
                const y = le(r.map(_=>_.split(" ")));
                this.forEach(_=>{
                    y.forEach(E=>{
                        _.classList.toggle(E)
                    }
                    )
                }
                )
            },
            attr: function et(r, y) {
                if (1 === arguments.length && "string" == typeof r)
                    return this[0] ? this[0].getAttribute(r) : void 0;
                for (let _ = 0; _ < this.length; _ += 1)
                    if (2 === arguments.length)
                        this[_].setAttribute(r, y);
                    else
                        for (const E in r)
                            this[_][E] = r[E],
                            this[_].setAttribute(E, r[E]);
                return this
            },
            removeAttr: function st(r) {
                for (let y = 0; y < this.length; y += 1)
                    this[y].removeAttribute(r);
                return this
            },
            transform: function Ce(r) {
                for (let y = 0; y < this.length; y += 1)
                    this[y].style.transform = r;
                return this
            },
            transition: function Oe(r) {
                for (let y = 0; y < this.length; y += 1)
                    this[y].style.transitionDuration = "string" != typeof r ? `${r}ms` : r;
                return this
            },
            on: function Ze(...r) {
                let[y,_,E,O] = r;
                function B(u) {
                    const m = u.target;
                    if (!m)
                        return;
                    const d = u.target.dom7EventData || [];
                    if (d.indexOf(u) < 0 && d.unshift(u),
                    Ne(m).is(_))
                        E.apply(m, d);
                    else {
                        const S = Ne(m).parents();
                        for (let V = 0; V < S.length; V += 1)
                            Ne(S[V]).is(_) && E.apply(S[V], d)
                    }
                }
                function se(u) {
                    const m = u && u.target && u.target.dom7EventData || [];
                    m.indexOf(u) < 0 && m.unshift(u),
                    E.apply(this, m)
                }
                "function" == typeof r[1] && ([y,E,O] = r,
                _ = void 0),
                O || (O = !1);
                const ce = y.split(" ");
                let G;
                for (let u = 0; u < this.length; u += 1) {
                    const m = this[u];
                    if (_)
                        for (G = 0; G < ce.length; G += 1) {
                            const d = ce[G];
                            m.dom7LiveListeners || (m.dom7LiveListeners = {}),
                            m.dom7LiveListeners[d] || (m.dom7LiveListeners[d] = []),
                            m.dom7LiveListeners[d].push({
                                listener: E,
                                proxyListener: B
                            }),
                            m.addEventListener(d, B, O)
                        }
                    else
                        for (G = 0; G < ce.length; G += 1) {
                            const d = ce[G];
                            m.dom7Listeners || (m.dom7Listeners = {}),
                            m.dom7Listeners[d] || (m.dom7Listeners[d] = []),
                            m.dom7Listeners[d].push({
                                listener: E,
                                proxyListener: se
                            }),
                            m.addEventListener(d, se, O)
                        }
                }
                return this
            },
            off: function _t(...r) {
                let[y,_,E,O] = r;
                "function" == typeof r[1] && ([y,E,O] = r,
                _ = void 0),
                O || (O = !1);
                const B = y.split(" ");
                for (let se = 0; se < B.length; se += 1) {
                    const ce = B[se];
                    for (let G = 0; G < this.length; G += 1) {
                        const u = this[G];
                        let m;
                        if (!_ && u.dom7Listeners ? m = u.dom7Listeners[ce] : _ && u.dom7LiveListeners && (m = u.dom7LiveListeners[ce]),
                        m && m.length)
                            for (let d = m.length - 1; d >= 0; d -= 1) {
                                const S = m[d];
                                E && S.listener === E || E && S.listener && S.listener.dom7proxy && S.listener.dom7proxy === E ? (u.removeEventListener(ce, S.proxyListener, O),
                                m.splice(d, 1)) : E || (u.removeEventListener(ce, S.proxyListener, O),
                                m.splice(d, 1))
                            }
                    }
                }
                return this
            },
            trigger: function It(...r) {
                const y = U()
                  , _ = r[0].split(" ")
                  , E = r[1];
                for (let O = 0; O < _.length; O += 1) {
                    const B = _[O];
                    for (let se = 0; se < this.length; se += 1) {
                        const ce = this[se];
                        if (y.CustomEvent) {
                            const G = new y.CustomEvent(B,{
                                detail: E,
                                bubbles: !0,
                                cancelable: !0
                            });
                            ce.dom7EventData = r.filter((u,m)=>m > 0),
                            ce.dispatchEvent(G),
                            ce.dom7EventData = [],
                            delete ce.dom7EventData
                        }
                    }
                }
                return this
            },
            transitionEnd: function qt(r) {
                const y = this;
                return r && y.on("transitionend", function _(E) {
                    E.target === this && (r.call(this, E),
                    y.off("transitionend", _))
                }),
                this
            },
            outerWidth: function be(r) {
                if (this.length > 0) {
                    if (r) {
                        const y = this.styles();
                        return this[0].offsetWidth + parseFloat(y.getPropertyValue("margin-right")) + parseFloat(y.getPropertyValue("margin-left"))
                    }
                    return this[0].offsetWidth
                }
                return null
            },
            outerHeight: function pt(r) {
                if (this.length > 0) {
                    if (r) {
                        const y = this.styles();
                        return this[0].offsetHeight + parseFloat(y.getPropertyValue("margin-top")) + parseFloat(y.getPropertyValue("margin-bottom"))
                    }
                    return this[0].offsetHeight
                }
                return null
            },
            styles: function bt() {
                const r = U();
                return this[0] ? r.getComputedStyle(this[0], null) : {}
            },
            offset: function Mt() {
                if (this.length > 0) {
                    const r = U()
                      , y = ue()
                      , _ = this[0]
                      , E = _.getBoundingClientRect()
                      , O = y.body;
                    return {
                        top: E.top + (_ === r ? r.scrollY : _.scrollTop) - (_.clientTop || O.clientTop || 0),
                        left: E.left + (_ === r ? r.scrollX : _.scrollLeft) - (_.clientLeft || O.clientLeft || 0)
                    }
                }
                return null
            },
            css: function Kt(r, y) {
                const _ = U();
                let E;
                if (1 === arguments.length) {
                    if ("string" != typeof r) {
                        for (E = 0; E < this.length; E += 1)
                            for (const O in r)
                                this[E].style[O] = r[O];
                        return this
                    }
                    if (this[0])
                        return _.getComputedStyle(this[0], null).getPropertyValue(r)
                }
                if (2 === arguments.length && "string" == typeof r) {
                    for (E = 0; E < this.length; E += 1)
                        this[E].style[r] = y;
                    return this
                }
                return this
            },
            each: function k(r) {
                return r ? (this.forEach((y,_)=>{
                    r.apply(y, [y, _])
                }
                ),
                this) : this
            },
            html: function he(r) {
                if (typeof r > "u")
                    return this[0] ? this[0].innerHTML : null;
                for (let y = 0; y < this.length; y += 1)
                    this[y].innerHTML = r;
                return this
            },
            text: function Ie(r) {
                if (typeof r > "u")
                    return this[0] ? this[0].textContent.trim() : null;
                for (let y = 0; y < this.length; y += 1)
                    this[y].textContent = r;
                return this
            },
            is: function gt(r) {
                const y = U()
                  , _ = ue()
                  , E = this[0];
                let O, B;
                if (!E || typeof r > "u")
                    return !1;
                if ("string" == typeof r) {
                    if (E.matches)
                        return E.matches(r);
                    if (E.webkitMatchesSelector)
                        return E.webkitMatchesSelector(r);
                    if (E.msMatchesSelector)
                        return E.msMatchesSelector(r);
                    for (O = Ne(r),
                    B = 0; B < O.length; B += 1)
                        if (O[B] === E)
                            return !0;
                    return !1
                }
                if (r === _)
                    return E === _;
                if (r === y)
                    return E === y;
                if (r.nodeType || r instanceof te) {
                    for (O = r.nodeType ? [r] : r,
                    B = 0; B < O.length; B += 1)
                        if (O[B] === E)
                            return !0;
                    return !1
                }
                return !1
            },
            index: function Qe() {
                let y, r = this[0];
                if (r) {
                    for (y = 0; null !== (r = r.previousSibling); )
                        1 === r.nodeType && (y += 1);
                    return y
                }
            },
            eq: function Tt(r) {
                if (typeof r > "u")
                    return this;
                const y = this.length;
                if (r > y - 1)
                    return Ne([]);
                if (r < 0) {
                    const _ = y + r;
                    return Ne(_ < 0 ? [] : [this[_]])
                }
                return Ne([this[r]])
            },
            append: function wn(...r) {
                let y;
                const _ = ue();
                for (let E = 0; E < r.length; E += 1) {
                    y = r[E];
                    for (let O = 0; O < this.length; O += 1)
                        if ("string" == typeof y) {
                            const B = _.createElement("div");
                            for (B.innerHTML = y; B.firstChild; )
                                this[O].appendChild(B.firstChild)
                        } else if (y instanceof te)
                            for (let B = 0; B < y.length; B += 1)
                                this[O].appendChild(y[B]);
                        else
                            this[O].appendChild(y)
                }
                return this
            },
            prepend: function In(r) {
                const y = ue();
                let _, E;
                for (_ = 0; _ < this.length; _ += 1)
                    if ("string" == typeof r) {
                        const O = y.createElement("div");
                        for (O.innerHTML = r,
                        E = O.childNodes.length - 1; E >= 0; E -= 1)
                            this[_].insertBefore(O.childNodes[E], this[_].childNodes[0])
                    } else if (r instanceof te)
                        for (E = 0; E < r.length; E += 1)
                            this[_].insertBefore(r[E], this[_].childNodes[0]);
                    else
                        this[_].insertBefore(r, this[_].childNodes[0]);
                return this
            },
            next: function xn(r) {
                return this.length > 0 ? r ? this[0].nextElementSibling && Ne(this[0].nextElementSibling).is(r) ? Ne([this[0].nextElementSibling]) : Ne([]) : Ne(this[0].nextElementSibling ? [this[0].nextElementSibling] : []) : Ne([])
            },
            nextAll: function Xn(r) {
                const y = [];
                let _ = this[0];
                if (!_)
                    return Ne([]);
                for (; _.nextElementSibling; ) {
                    const E = _.nextElementSibling;
                    r ? Ne(E).is(r) && y.push(E) : y.push(E),
                    _ = E
                }
                return Ne(y)
            },
            prev: function vi(r) {
                if (this.length > 0) {
                    const y = this[0];
                    return r ? y.previousElementSibling && Ne(y.previousElementSibling).is(r) ? Ne([y.previousElementSibling]) : Ne([]) : Ne(y.previousElementSibling ? [y.previousElementSibling] : [])
                }
                return Ne([])
            },
            prevAll: function Tn(r) {
                const y = [];
                let _ = this[0];
                if (!_)
                    return Ne([]);
                for (; _.previousElementSibling; ) {
                    const E = _.previousElementSibling;
                    r ? Ne(E).is(r) && y.push(E) : y.push(E),
                    _ = E
                }
                return Ne(y)
            },
            parent: function Le(r) {
                const y = [];
                for (let _ = 0; _ < this.length; _ += 1)
                    null !== this[_].parentNode && (r ? Ne(this[_].parentNode).is(r) && y.push(this[_].parentNode) : y.push(this[_].parentNode));
                return Ne(y)
            },
            parents: function Ee(r) {
                const y = [];
                for (let _ = 0; _ < this.length; _ += 1) {
                    let E = this[_].parentNode;
                    for (; E; )
                        r ? Ne(E).is(r) && y.push(E) : y.push(E),
                        E = E.parentNode
                }
                return Ne(y)
            },
            closest: function dt(r) {
                let y = this;
                return typeof r > "u" ? Ne([]) : (y.is(r) || (y = y.parents(r).eq(0)),
                y)
            },
            find: function Et(r) {
                const y = [];
                for (let _ = 0; _ < this.length; _ += 1) {
                    const E = this[_].querySelectorAll(r);
                    for (let O = 0; O < E.length; O += 1)
                        y.push(E[O])
                }
                return Ne(y)
            },
            children: function ln(r) {
                const y = [];
                for (let _ = 0; _ < this.length; _ += 1) {
                    const E = this[_].children;
                    for (let O = 0; O < E.length; O += 1)
                        (!r || Ne(E[O]).is(r)) && y.push(E[O])
                }
                return Ne(y)
            },
            filter: function de(r) {
                return Ne(W(this, r))
            },
            remove: function pn() {
                for (let r = 0; r < this.length; r += 1)
                    this[r].parentNode && this[r].parentNode.removeChild(this[r]);
                return this
            }
        };
        Object.keys(hi).forEach(r=>{
            Object.defineProperty(Ne.fn, r, {
                value: hi[r],
                writable: !0
            })
        }
        );
        const Gt = Ne;
        function wt(r, y=0) {
            return setTimeout(r, y)
        }
        function N() {
            return Date.now()
        }
        function We(r) {
            return "object" == typeof r && null !== r && r.constructor && "Object" === Object.prototype.toString.call(r).slice(8, -1)
        }
        function Ft(r) {
            return typeof window < "u" && typeof window.HTMLElement < "u" ? r instanceof HTMLElement : r && (1 === r.nodeType || 11 === r.nodeType)
        }
        function Jt(...r) {
            const y = Object(r[0])
              , _ = ["__proto__", "constructor", "prototype"];
            for (let E = 1; E < r.length; E += 1) {
                const O = r[E];
                if (null != O && !Ft(O)) {
                    const B = Object.keys(Object(O)).filter(se=>_.indexOf(se) < 0);
                    for (let se = 0, ce = B.length; se < ce; se += 1) {
                        const G = B[se]
                          , u = Object.getOwnPropertyDescriptor(O, G);
                        void 0 !== u && u.enumerable && (We(y[G]) && We(O[G]) ? O[G].__swiper__ ? y[G] = O[G] : Jt(y[G], O[G]) : !We(y[G]) && We(O[G]) ? (y[G] = {},
                        O[G].__swiper__ ? y[G] = O[G] : Jt(y[G], O[G])) : y[G] = O[G])
                    }
                }
            }
            return y
        }
        function Bn(r, y, _) {
            r.style.setProperty(y, _)
        }
        function Rn({swiper: r, targetPosition: y, side: _}) {
            const E = U()
              , O = -r.translate;
            let se, B = null;
            const ce = r.params.speed;
            r.wrapperEl.style.scrollSnapType = "none",
            E.cancelAnimationFrame(r.cssModeFrameID);
            const G = y > O ? "next" : "prev"
              , u = (d,S)=>"next" === G && d >= S || "prev" === G && d <= S
              , m = ()=>{
                se = (new Date).getTime(),
                null === B && (B = se);
                const d = Math.max(Math.min((se - B) / ce, 1), 0)
                  , S = .5 - Math.cos(d * Math.PI) / 2;
                let V = O + S * (y - O);
                if (u(V, y) && (V = y),
                r.wrapperEl.scrollTo({
                    [_]: V
                }),
                u(V, y))
                    return r.wrapperEl.style.overflow = "hidden",
                    r.wrapperEl.style.scrollSnapType = "",
                    setTimeout(()=>{
                        r.wrapperEl.style.overflow = "",
                        r.wrapperEl.scrollTo({
                            [_]: V
                        })
                    }
                    ),
                    void E.cancelAnimationFrame(r.cssModeFrameID);
                r.cssModeFrameID = E.requestAnimationFrame(m)
            }
            ;
            m()
        }
        let dn, ui, Dn;
        function Zn() {
            return dn || (dn = function Ri() {
                const r = U()
                  , y = ue();
                return {
                    smoothScroll: y.documentElement && "scrollBehavior"in y.documentElement.style,
                    touch: !!("ontouchstart"in r || r.DocumentTouch && y instanceof r.DocumentTouch),
                    passiveListener: function() {
                        let E = !1;
                        try {
                            const O = Object.defineProperty({}, "passive", {
                                get() {
                                    E = !0
                                }
                            });
                            r.addEventListener("testPassiveListener", null, O)
                        } catch {}
                        return E
                    }(),
                    gestures: "ongesturestart"in r
                }
            }()),
            dn
        }
        function Bs({swiper: r, runCallbacks: y, direction: _, step: E}) {
            const {activeIndex: O, previousIndex: B} = r;
            let se = _;
            if (se || (se = O > B ? "next" : O < B ? "prev" : "reset"),
            r.emit(`transition${E}`),
            y && O !== B) {
                if ("reset" === se)
                    return void r.emit(`slideResetTransition${E}`);
                r.emit(`slideChangeTransition${E}`),
                r.emit("next" === se ? `slideNextTransition${E}` : `slidePrevTransition${E}`)
            }
        }
        function ys(r) {
            const y = this
              , _ = ue()
              , E = U()
              , O = y.touchEventsData
              , {params: B, touches: se, enabled: ce} = y;
            if (!ce || y.animating && B.preventInteractionOnTransition)
                return;
            !y.animating && B.cssMode && B.loop && y.loopFix();
            let G = r;
            G.originalEvent && (G = G.originalEvent);
            let u = Gt(G.target);
            if ("wrapper" === B.touchEventsTarget && !u.closest(y.wrapperEl).length || (O.isTouchEvent = "touchstart" === G.type,
            !O.isTouchEvent && "which"in G && 3 === G.which) || !O.isTouchEvent && "button"in G && G.button > 0 || O.isTouched && O.isMoved)
                return;
            const m = !!B.noSwipingClass && "" !== B.noSwipingClass
              , d = r.composedPath ? r.composedPath() : r.path;
            m && G.target && G.target.shadowRoot && d && (u = Gt(d[0]));
            const S = B.noSwipingSelector ? B.noSwipingSelector : `.${B.noSwipingClass}`;
            if (B.noSwiping && (G.target && G.target.shadowRoot ? function pi(r, y=this) {
                return function _(E) {
                    if (!E || E === ue() || E === U())
                        return null;
                    E.assignedSlot && (E = E.assignedSlot);
                    const O = E.closest(r);
                    return O || E.getRootNode ? O || _(E.getRootNode().host) : null
                }(y)
            }(S, u[0]) : u.closest(S)[0]))
                return void (y.allowClick = !0);
            if (B.swipeHandler && !u.closest(B.swipeHandler)[0])
                return;
            se.currentX = "touchstart" === G.type ? G.targetTouches[0].pageX : G.pageX,
            se.currentY = "touchstart" === G.type ? G.targetTouches[0].pageY : G.pageY;
            const X = se.currentX
              , j = se.currentY
              , ae = B.edgeSwipeDetection || B.iOSEdgeSwipeDetection
              , Ae = B.edgeSwipeThreshold || B.iOSEdgeSwipeThreshold;
            if (ae && (X <= Ae || X >= E.innerWidth - Ae)) {
                if ("prevent" !== ae)
                    return;
                r.preventDefault()
            }
            if (Object.assign(O, {
                isTouched: !0,
                isMoved: !1,
                allowTouchCallbacks: !0,
                isScrolling: void 0,
                startMoving: void 0
            }),
            se.startX = X,
            se.startY = j,
            O.touchStartTime = N(),
            y.allowClick = !0,
            y.updateSize(),
            y.swipeDirection = void 0,
            B.threshold > 0 && (O.allowThresholdMove = !1),
            "touchstart" !== G.type) {
                let Se = !0;
                u.is(O.focusableElements) && (Se = !1,
                "SELECT" === u[0].nodeName && (O.isTouched = !1)),
                _.activeElement && Gt(_.activeElement).is(O.focusableElements) && _.activeElement !== u[0] && _.activeElement.blur();
                const ke = Se && y.allowTouchMove && B.touchStartPreventDefault;
                (B.touchStartForcePreventDefault || ke) && !u[0].isContentEditable && G.preventDefault()
            }
            y.params.freeMode && y.params.freeMode.enabled && y.freeMode && y.animating && !B.cssMode && y.freeMode.onTouchStart(),
            y.emit("touchStart", G)
        }
        function Jn(r) {
            const y = ue()
              , _ = this
              , E = _.touchEventsData
              , {params: O, touches: B, rtlTranslate: se, enabled: ce} = _;
            if (!ce)
                return;
            let G = r;
            if (G.originalEvent && (G = G.originalEvent),
            !E.isTouched)
                return void (E.startMoving && E.isScrolling && _.emit("touchMoveOpposite", G));
            if (E.isTouchEvent && "touchmove" !== G.type)
                return;
            const u = "touchmove" === G.type && G.targetTouches && (G.targetTouches[0] || G.changedTouches[0])
              , m = "touchmove" === G.type ? u.pageX : G.pageX
              , d = "touchmove" === G.type ? u.pageY : G.pageY;
            if (G.preventedByNestedSwiper)
                return B.startX = m,
                void (B.startY = d);
            if (!_.allowTouchMove)
                return Gt(G.target).is(E.focusableElements) || (_.allowClick = !1),
                void (E.isTouched && (Object.assign(B, {
                    startX: m,
                    startY: d,
                    currentX: m,
                    currentY: d
                }),
                E.touchStartTime = N()));
            if (E.isTouchEvent && O.touchReleaseOnEdges && !O.loop)
                if (_.isVertical()) {
                    if (d < B.startY && _.translate <= _.maxTranslate() || d > B.startY && _.translate >= _.minTranslate())
                        return E.isTouched = !1,
                        void (E.isMoved = !1)
                } else if (m < B.startX && _.translate <= _.maxTranslate() || m > B.startX && _.translate >= _.minTranslate())
                    return;
            if (E.isTouchEvent && y.activeElement && G.target === y.activeElement && Gt(G.target).is(E.focusableElements))
                return E.isMoved = !0,
                void (_.allowClick = !1);
            if (E.allowTouchCallbacks && _.emit("touchMove", G),
            G.targetTouches && G.targetTouches.length > 1)
                return;
            B.currentX = m,
            B.currentY = d;
            const S = B.currentX - B.startX
              , V = B.currentY - B.startY;
            if (_.params.threshold && Math.sqrt(S ** 2 + V ** 2) < _.params.threshold)
                return;
            if (typeof E.isScrolling > "u") {
                let Ae;
                _.isHorizontal() && B.currentY === B.startY || _.isVertical() && B.currentX === B.startX ? E.isScrolling = !1 : S * S + V * V >= 25 && (Ae = 180 * Math.atan2(Math.abs(V), Math.abs(S)) / Math.PI,
                E.isScrolling = _.isHorizontal() ? Ae > O.touchAngle : 90 - Ae > O.touchAngle)
            }
            if (E.isScrolling && _.emit("touchMoveOpposite", G),
            typeof E.startMoving > "u" && (B.currentX !== B.startX || B.currentY !== B.startY) && (E.startMoving = !0),
            E.isScrolling)
                return void (E.isTouched = !1);
            if (!E.startMoving)
                return;
            _.allowClick = !1,
            !O.cssMode && G.cancelable && G.preventDefault(),
            O.touchMoveStopPropagation && !O.nested && G.stopPropagation(),
            E.isMoved || (O.loop && !O.cssMode && _.loopFix(),
            E.startTranslate = _.getTranslate(),
            _.setTransition(0),
            _.animating && _.$wrapperEl.trigger("webkitTransitionEnd transitionend"),
            E.allowMomentumBounce = !1,
            O.grabCursor && (!0 === _.allowSlideNext || !0 === _.allowSlidePrev) && _.setGrabCursor(!0),
            _.emit("sliderFirstMove", G)),
            _.emit("sliderMove", G),
            E.isMoved = !0;
            let X = _.isHorizontal() ? S : V;
            B.diff = X,
            X *= O.touchRatio,
            se && (X = -X),
            _.swipeDirection = X > 0 ? "prev" : "next",
            E.currentTranslate = X + E.startTranslate;
            let j = !0
              , ae = O.resistanceRatio;
            if (O.touchReleaseOnEdges && (ae = 0),
            X > 0 && E.currentTranslate > _.minTranslate() ? (j = !1,
            O.resistance && (E.currentTranslate = _.minTranslate() - 1 + (-_.minTranslate() + E.startTranslate + X) ** ae)) : X < 0 && E.currentTranslate < _.maxTranslate() && (j = !1,
            O.resistance && (E.currentTranslate = _.maxTranslate() + 1 - (_.maxTranslate() - E.startTranslate - X) ** ae)),
            j && (G.preventedByNestedSwiper = !0),
            !_.allowSlideNext && "next" === _.swipeDirection && E.currentTranslate < E.startTranslate && (E.currentTranslate = E.startTranslate),
            !_.allowSlidePrev && "prev" === _.swipeDirection && E.currentTranslate > E.startTranslate && (E.currentTranslate = E.startTranslate),
            !_.allowSlidePrev && !_.allowSlideNext && (E.currentTranslate = E.startTranslate),
            O.threshold > 0) {
                if (!(Math.abs(X) > O.threshold || E.allowThresholdMove))
                    return void (E.currentTranslate = E.startTranslate);
                if (!E.allowThresholdMove)
                    return E.allowThresholdMove = !0,
                    B.startX = B.currentX,
                    B.startY = B.currentY,
                    E.currentTranslate = E.startTranslate,
                    void (B.diff = _.isHorizontal() ? B.currentX - B.startX : B.currentY - B.startY)
            }
            !O.followFinger || O.cssMode || ((O.freeMode && O.freeMode.enabled && _.freeMode || O.watchSlidesProgress) && (_.updateActiveIndex(),
            _.updateSlidesClasses()),
            _.params.freeMode && O.freeMode.enabled && _.freeMode && _.freeMode.onTouchMove(),
            _.updateProgress(E.currentTranslate),
            _.setTranslate(E.currentTranslate))
        }
        function Us(r) {
            const y = this
              , _ = y.touchEventsData
              , {params: E, touches: O, rtlTranslate: B, slidesGrid: se, enabled: ce} = y;
            if (!ce)
                return;
            let G = r;
            if (G.originalEvent && (G = G.originalEvent),
            _.allowTouchCallbacks && y.emit("touchEnd", G),
            _.allowTouchCallbacks = !1,
            !_.isTouched)
                return _.isMoved && E.grabCursor && y.setGrabCursor(!1),
                _.isMoved = !1,
                void (_.startMoving = !1);
            E.grabCursor && _.isMoved && _.isTouched && (!0 === y.allowSlideNext || !0 === y.allowSlidePrev) && y.setGrabCursor(!1);
            const u = N()
              , m = u - _.touchStartTime;
            if (y.allowClick) {
                const Se = G.path || G.composedPath && G.composedPath();
                y.updateClickedSlide(Se && Se[0] || G.target),
                y.emit("tap click", G),
                m < 300 && u - _.lastClickTime < 300 && y.emit("doubleTap doubleClick", G)
            }
            if (_.lastClickTime = N(),
            wt(()=>{
                y.destroyed || (y.allowClick = !0)
            }
            ),
            !_.isTouched || !_.isMoved || !y.swipeDirection || 0 === O.diff || _.currentTranslate === _.startTranslate)
                return _.isTouched = !1,
                _.isMoved = !1,
                void (_.startMoving = !1);
            let d;
            if (_.isTouched = !1,
            _.isMoved = !1,
            _.startMoving = !1,
            d = E.followFinger ? B ? y.translate : -y.translate : -_.currentTranslate,
            E.cssMode)
                return;
            if (y.params.freeMode && E.freeMode.enabled)
                return void y.freeMode.onTouchEnd({
                    currentPos: d
                });
            let S = 0
              , V = y.slidesSizesGrid[0];
            for (let Se = 0; Se < se.length; Se += Se < E.slidesPerGroupSkip ? 1 : E.slidesPerGroup) {
                const ke = Se < E.slidesPerGroupSkip - 1 ? 1 : E.slidesPerGroup;
                typeof se[Se + ke] < "u" ? d >= se[Se] && d < se[Se + ke] && (S = Se,
                V = se[Se + ke] - se[Se]) : d >= se[Se] && (S = Se,
                V = se[se.length - 1] - se[se.length - 2])
            }
            let X = null
              , j = null;
            E.rewind && (y.isBeginning ? j = y.params.virtual && y.params.virtual.enabled && y.virtual ? y.virtual.slides.length - 1 : y.slides.length - 1 : y.isEnd && (X = 0));
            const ae = (d - se[S]) / V
              , Ae = S < E.slidesPerGroupSkip - 1 ? 1 : E.slidesPerGroup;
            if (m > E.longSwipesMs) {
                if (!E.longSwipes)
                    return void y.slideTo(y.activeIndex);
                "next" === y.swipeDirection && y.slideTo(ae >= E.longSwipesRatio ? E.rewind && y.isEnd ? X : S + Ae : S),
                "prev" === y.swipeDirection && (ae > 1 - E.longSwipesRatio ? y.slideTo(S + Ae) : null !== j && ae < 0 && Math.abs(ae) > E.longSwipesRatio ? y.slideTo(j) : y.slideTo(S))
            } else {
                if (!E.shortSwipes)
                    return void y.slideTo(y.activeIndex);
                !y.navigation || G.target !== y.navigation.nextEl && G.target !== y.navigation.prevEl ? ("next" === y.swipeDirection && y.slideTo(null !== X ? X : S + Ae),
                "prev" === y.swipeDirection && y.slideTo(null !== j ? j : S)) : y.slideTo(G.target === y.navigation.nextEl ? S + Ae : S)
            }
        }
        function Ps() {
            const r = this
              , {params: y, el: _} = r;
            if (_ && 0 === _.offsetWidth)
                return;
            y.breakpoints && r.setBreakpoint();
            const {allowSlideNext: E, allowSlidePrev: O, snapGrid: B} = r;
            r.allowSlideNext = !0,
            r.allowSlidePrev = !0,
            r.updateSize(),
            r.updateSlides(),
            r.updateSlidesClasses(),
            r.slideTo(("auto" === y.slidesPerView || y.slidesPerView > 1) && r.isEnd && !r.isBeginning && !r.params.centeredSlides ? r.slides.length - 1 : r.activeIndex, 0, !1, !0),
            r.autoplay && r.autoplay.running && r.autoplay.paused && r.autoplay.run(),
            r.allowSlidePrev = O,
            r.allowSlideNext = E,
            r.params.watchOverflow && B !== r.snapGrid && r.checkOverflow()
        }
        function hs(r) {
            const y = this;
            !y.enabled || y.allowClick || (y.params.preventClicks && r.preventDefault(),
            y.params.preventClicksPropagation && y.animating && (r.stopPropagation(),
            r.stopImmediatePropagation()))
        }
        function $i() {
            const r = this
              , {wrapperEl: y, rtlTranslate: _, enabled: E} = r;
            if (!E)
                return;
            let O;
            r.previousTranslate = r.translate,
            r.translate = r.isHorizontal() ? -y.scrollLeft : -y.scrollTop,
            0 === r.translate && (r.translate = 0),
            r.updateActiveIndex(),
            r.updateSlidesClasses();
            const B = r.maxTranslate() - r.minTranslate();
            O = 0 === B ? 0 : (r.translate - r.minTranslate()) / B,
            O !== r.progress && r.updateProgress(_ ? -r.translate : r.translate),
            r.emit("setTranslate", r.translate, !1)
        }
        let zs = !1;
        function ni() {}
        const Os = (r,y)=>{
            const _ = ue()
              , {params: E, touchEvents: O, el: B, wrapperEl: se, device: ce, support: G} = r
              , u = !!E.nested
              , m = "on" === y ? "addEventListener" : "removeEventListener"
              , d = y;
            if (G.touch) {
                const S = !("touchstart" !== O.start || !G.passiveListener || !E.passiveListeners) && {
                    passive: !0,
                    capture: !1
                };
                B[m](O.start, r.onTouchStart, S),
                B[m](O.move, r.onTouchMove, G.passiveListener ? {
                    passive: !1,
                    capture: u
                } : u),
                B[m](O.end, r.onTouchEnd, S),
                O.cancel && B[m](O.cancel, r.onTouchEnd, S)
            } else
                B[m](O.start, r.onTouchStart, !1),
                _[m](O.move, r.onTouchMove, u),
                _[m](O.end, r.onTouchEnd, !1);
            (E.preventClicks || E.preventClicksPropagation) && B[m]("click", r.onClick, !0),
            E.cssMode && se[m]("scroll", r.onScroll),
            r[d](E.updateOnWindowResize ? ce.ios || ce.android ? "resize orientationchange observerUpdate" : "resize observerUpdate" : "observerUpdate", Ps, !0)
        }
          , ci = (r,y)=>r.grid && y.grid && y.grid.rows > 1
          , ss = {
            init: !0,
            direction: "horizontal",
            touchEventsTarget: "wrapper",
            initialSlide: 0,
            speed: 300,
            cssMode: !1,
            updateOnWindowResize: !0,
            resizeObserver: !0,
            nested: !1,
            createElements: !1,
            enabled: !0,
            focusableElements: "input, select, option, textarea, button, video, label",
            width: null,
            height: null,
            preventInteractionOnTransition: !1,
            userAgent: null,
            url: null,
            edgeSwipeDetection: !1,
            edgeSwipeThreshold: 20,
            autoHeight: !1,
            setWrapperSize: !1,
            virtualTranslate: !1,
            effect: "slide",
            breakpoints: void 0,
            breakpointsBase: "window",
            spaceBetween: 0,
            slidesPerView: 1,
            slidesPerGroup: 1,
            slidesPerGroupSkip: 0,
            slidesPerGroupAuto: !1,
            centeredSlides: !1,
            centeredSlidesBounds: !1,
            slidesOffsetBefore: 0,
            slidesOffsetAfter: 0,
            normalizeSlideIndex: !0,
            centerInsufficientSlides: !1,
            watchOverflow: !0,
            roundLengths: !1,
            touchRatio: 1,
            touchAngle: 45,
            simulateTouch: !0,
            shortSwipes: !0,
            longSwipes: !0,
            longSwipesRatio: .5,
            longSwipesMs: 300,
            followFinger: !0,
            allowTouchMove: !0,
            threshold: 0,
            touchMoveStopPropagation: !1,
            touchStartPreventDefault: !0,
            touchStartForcePreventDefault: !1,
            touchReleaseOnEdges: !1,
            uniqueNavElements: !0,
            resistance: !0,
            resistanceRatio: .85,
            watchSlidesProgress: !1,
            grabCursor: !1,
            preventClicks: !0,
            preventClicksPropagation: !0,
            slideToClickedSlide: !1,
            preloadImages: !0,
            updateOnImagesReady: !0,
            loop: !1,
            loopAdditionalSlides: 0,
            loopedSlides: null,
            loopedSlidesLimit: !0,
            loopFillGroupWithBlank: !1,
            loopPreventsSlide: !0,
            rewind: !1,
            allowSlidePrev: !0,
            allowSlideNext: !0,
            swipeHandler: null,
            noSwiping: !0,
            noSwipingClass: "swiper-no-swiping",
            noSwipingSelector: null,
            passiveListeners: !0,
            maxBackfaceHiddenSlides: 10,
            containerModifierClass: "swiper-",
            slideClass: "swiper-slide",
            slideBlankClass: "swiper-slide-invisible-blank",
            slideActiveClass: "swiper-slide-active",
            slideDuplicateActiveClass: "swiper-slide-duplicate-active",
            slideVisibleClass: "swiper-slide-visible",
            slideDuplicateClass: "swiper-slide-duplicate",
            slideNextClass: "swiper-slide-next",
            slideDuplicateNextClass: "swiper-slide-duplicate-next",
            slidePrevClass: "swiper-slide-prev",
            slideDuplicatePrevClass: "swiper-slide-duplicate-prev",
            wrapperClass: "swiper-wrapper",
            runCallbacksOnInit: !0,
            _emitClasses: !1
        };
        function mi(r, y) {
            return function(E={}) {
                const O = Object.keys(E)[0]
                  , B = E[O];
                "object" == typeof B && null !== B ? (["navigation", "pagination", "scrollbar"].indexOf(O) >= 0 && !0 === r[O] && (r[O] = {
                    auto: !0
                }),
                O in r && "enabled"in B ? (!0 === r[O] && (r[O] = {
                    enabled: !0
                }),
                "object" == typeof r[O] && !("enabled"in r[O]) && (r[O].enabled = !0),
                r[O] || (r[O] = {
                    enabled: !1
                }),
                Jt(y, E)) : Jt(y, E)) : Jt(y, E)
            }
        }
        const bs = {
            eventsEmitter: {
                on(r, y, _) {
                    const E = this;
                    if (!E.eventsListeners || E.destroyed || "function" != typeof y)
                        return E;
                    const O = _ ? "unshift" : "push";
                    return r.split(" ").forEach(B=>{
                        E.eventsListeners[B] || (E.eventsListeners[B] = []),
                        E.eventsListeners[B][O](y)
                    }
                    ),
                    E
                },
                once(r, y, _) {
                    const E = this;
                    if (!E.eventsListeners || E.destroyed || "function" != typeof y)
                        return E;
                    function O(...B) {
                        E.off(r, O),
                        O.__emitterProxy && delete O.__emitterProxy,
                        y.apply(E, B)
                    }
                    return O.__emitterProxy = y,
                    E.on(r, O, _)
                },
                onAny(r, y) {
                    const _ = this;
                    if (!_.eventsListeners || _.destroyed || "function" != typeof r)
                        return _;
                    const E = y ? "unshift" : "push";
                    return _.eventsAnyListeners.indexOf(r) < 0 && _.eventsAnyListeners[E](r),
                    _
                },
                offAny(r) {
                    const y = this;
                    if (!y.eventsListeners || y.destroyed || !y.eventsAnyListeners)
                        return y;
                    const _ = y.eventsAnyListeners.indexOf(r);
                    return _ >= 0 && y.eventsAnyListeners.splice(_, 1),
                    y
                },
                off(r, y) {
                    const _ = this;
                    return !_.eventsListeners || _.destroyed || !_.eventsListeners || r.split(" ").forEach(E=>{
                        typeof y > "u" ? _.eventsListeners[E] = [] : _.eventsListeners[E] && _.eventsListeners[E].forEach((O,B)=>{
                            (O === y || O.__emitterProxy && O.__emitterProxy === y) && _.eventsListeners[E].splice(B, 1)
                        }
                        )
                    }
                    ),
                    _
                },
                emit(...r) {
                    const y = this;
                    if (!y.eventsListeners || y.destroyed || !y.eventsListeners)
                        return y;
                    let _, E, O;
                    return "string" == typeof r[0] || Array.isArray(r[0]) ? (_ = r[0],
                    E = r.slice(1, r.length),
                    O = y) : (_ = r[0].events,
                    E = r[0].data,
                    O = r[0].context || y),
                    E.unshift(O),
                    (Array.isArray(_) ? _ : _.split(" ")).forEach(se=>{
                        y.eventsAnyListeners && y.eventsAnyListeners.length && y.eventsAnyListeners.forEach(ce=>{
                            ce.apply(O, [se, ...E])
                        }
                        ),
                        y.eventsListeners && y.eventsListeners[se] && y.eventsListeners[se].forEach(ce=>{
                            ce.apply(O, E)
                        }
                        )
                    }
                    ),
                    y
                }
            },
            update: {
                updateSize: function Mi() {
                    const r = this;
                    let y, _;
                    const E = r.$el;
                    y = typeof r.params.width < "u" && null !== r.params.width ? r.params.width : E[0].clientWidth,
                    _ = typeof r.params.height < "u" && null !== r.params.height ? r.params.height : E[0].clientHeight,
                    !(0 === y && r.isHorizontal() || 0 === _ && r.isVertical()) && (y = y - parseInt(E.css("padding-left") || 0, 10) - parseInt(E.css("padding-right") || 0, 10),
                    _ = _ - parseInt(E.css("padding-top") || 0, 10) - parseInt(E.css("padding-bottom") || 0, 10),
                    Number.isNaN(y) && (y = 0),
                    Number.isNaN(_) && (_ = 0),
                    Object.assign(r, {
                        width: y,
                        height: _,
                        size: r.isHorizontal() ? y : _
                    }))
                },
                updateSlides: function vs() {
                    const r = this;
                    function y(At) {
                        return r.isHorizontal() ? At : {
                            width: "height",
                            "margin-top": "margin-left",
                            "margin-bottom ": "margin-right",
                            "margin-left": "margin-top",
                            "margin-right": "margin-bottom",
                            "padding-left": "padding-top",
                            "padding-right": "padding-bottom",
                            marginRight: "marginBottom"
                        }[At]
                    }
                    function _(At, Xe) {
                        return parseFloat(At.getPropertyValue(y(Xe)) || 0)
                    }
                    const E = r.params
                      , {$wrapperEl: O, size: B, rtlTranslate: se, wrongRTL: ce} = r
                      , G = r.virtual && E.virtual.enabled
                      , u = G ? r.virtual.slides.length : r.slides.length
                      , m = O.children(`.${r.params.slideClass}`)
                      , d = G ? r.virtual.slides.length : m.length;
                    let S = [];
                    const V = []
                      , X = [];
                    let j = E.slidesOffsetBefore;
                    "function" == typeof j && (j = E.slidesOffsetBefore.call(r));
                    let ae = E.slidesOffsetAfter;
                    "function" == typeof ae && (ae = E.slidesOffsetAfter.call(r));
                    const Ae = r.snapGrid.length
                      , Se = r.slidesGrid.length;
                    let ke = E.spaceBetween
                      , lt = -j
                      , yt = 0
                      , mt = 0;
                    if (typeof B > "u")
                        return;
                    "string" == typeof ke && ke.indexOf("%") >= 0 && (ke = parseFloat(ke.replace("%", "")) / 100 * B),
                    r.virtualSize = -ke,
                    m.css(se ? {
                        marginLeft: "",
                        marginBottom: "",
                        marginTop: ""
                    } : {
                        marginRight: "",
                        marginBottom: "",
                        marginTop: ""
                    }),
                    E.centeredSlides && E.cssMode && (Bn(r.wrapperEl, "--swiper-centered-offset-before", ""),
                    Bn(r.wrapperEl, "--swiper-centered-offset-after", ""));
                    const Ct = E.grid && E.grid.rows > 1 && r.grid;
                    let Nt;
                    Ct && r.grid.initSlides(d);
                    const Ut = "auto" === E.slidesPerView && E.breakpoints && Object.keys(E.breakpoints).filter(At=>typeof E.breakpoints[At].slidesPerView < "u").length > 0;
                    for (let At = 0; At < d; At += 1) {
                        Nt = 0;
                        const Xe = m.eq(At);
                        if (Ct && r.grid.updateSlide(At, Xe, d, y),
                        "none" !== Xe.css("display")) {
                            if ("auto" === E.slidesPerView) {
                                Ut && (m[At].style[y("width")] = "");
                                const Ye = getComputedStyle(Xe[0])
                                  , ct = Xe[0].style.transform
                                  , en = Xe[0].style.webkitTransform;
                                if (ct && (Xe[0].style.transform = "none"),
                                en && (Xe[0].style.webkitTransform = "none"),
                                E.roundLengths)
                                    Nt = r.isHorizontal() ? Xe.outerWidth(!0) : Xe.outerHeight(!0);
                                else {
                                    const hn = _(Ye, "width")
                                      , ht = _(Ye, "padding-left")
                                      , Yt = _(Ye, "padding-right")
                                      , zt = _(Ye, "margin-left")
                                      , Vn = _(Ye, "margin-right")
                                      , Un = Ye.getPropertyValue("box-sizing");
                                    if (Un && "border-box" === Un)
                                        Nt = hn + zt + Vn;
                                    else {
                                        const {clientWidth: Yi, offsetWidth: ps} = Xe[0];
                                        Nt = hn + ht + Yt + zt + Vn + (ps - Yi)
                                    }
                                }
                                ct && (Xe[0].style.transform = ct),
                                en && (Xe[0].style.webkitTransform = en),
                                E.roundLengths && (Nt = Math.floor(Nt))
                            } else
                                Nt = (B - (E.slidesPerView - 1) * ke) / E.slidesPerView,
                                E.roundLengths && (Nt = Math.floor(Nt)),
                                m[At] && (m[At].style[y("width")] = `${Nt}px`);
                            m[At] && (m[At].swiperSlideSize = Nt),
                            X.push(Nt),
                            E.centeredSlides ? (lt = lt + Nt / 2 + yt / 2 + ke,
                            0 === yt && 0 !== At && (lt = lt - B / 2 - ke),
                            0 === At && (lt = lt - B / 2 - ke),
                            Math.abs(lt) < .001 && (lt = 0),
                            E.roundLengths && (lt = Math.floor(lt)),
                            mt % E.slidesPerGroup == 0 && S.push(lt),
                            V.push(lt)) : (E.roundLengths && (lt = Math.floor(lt)),
                            (mt - Math.min(r.params.slidesPerGroupSkip, mt)) % r.params.slidesPerGroup == 0 && S.push(lt),
                            V.push(lt),
                            lt = lt + Nt + ke),
                            r.virtualSize += Nt + ke,
                            yt = Nt,
                            mt += 1
                        }
                    }
                    if (r.virtualSize = Math.max(r.virtualSize, B) + ae,
                    se && ce && ("slide" === E.effect || "coverflow" === E.effect) && O.css({
                        width: `${r.virtualSize + E.spaceBetween}px`
                    }),
                    E.setWrapperSize && O.css({
                        [y("width")]: `${r.virtualSize + E.spaceBetween}px`
                    }),
                    Ct && r.grid.updateWrapperSize(Nt, S, y),
                    !E.centeredSlides) {
                        const At = [];
                        for (let Xe = 0; Xe < S.length; Xe += 1) {
                            let Ye = S[Xe];
                            E.roundLengths && (Ye = Math.floor(Ye)),
                            S[Xe] <= r.virtualSize - B && At.push(Ye)
                        }
                        S = At,
                        Math.floor(r.virtualSize - B) - Math.floor(S[S.length - 1]) > 1 && S.push(r.virtualSize - B)
                    }
                    if (0 === S.length && (S = [0]),
                    0 !== E.spaceBetween) {
                        const At = r.isHorizontal() && se ? "marginLeft" : y("marginRight");
                        m.filter((Xe,Ye)=>!E.cssMode || Ye !== m.length - 1).css({
                            [At]: `${ke}px`
                        })
                    }
                    if (E.centeredSlides && E.centeredSlidesBounds) {
                        let At = 0;
                        X.forEach(Ye=>{
                            At += Ye + (E.spaceBetween ? E.spaceBetween : 0)
                        }
                        ),
                        At -= E.spaceBetween;
                        const Xe = At - B;
                        S = S.map(Ye=>Ye < 0 ? -j : Ye > Xe ? Xe + ae : Ye)
                    }
                    if (E.centerInsufficientSlides) {
                        let At = 0;
                        if (X.forEach(Xe=>{
                            At += Xe + (E.spaceBetween ? E.spaceBetween : 0)
                        }
                        ),
                        At -= E.spaceBetween,
                        At < B) {
                            const Xe = (B - At) / 2;
                            S.forEach((Ye,ct)=>{
                                S[ct] = Ye - Xe
                            }
                            ),
                            V.forEach((Ye,ct)=>{
                                V[ct] = Ye + Xe
                            }
                            )
                        }
                    }
                    if (Object.assign(r, {
                        slides: m,
                        snapGrid: S,
                        slidesGrid: V,
                        slidesSizesGrid: X
                    }),
                    E.centeredSlides && E.cssMode && !E.centeredSlidesBounds) {
                        Bn(r.wrapperEl, "--swiper-centered-offset-before", -S[0] + "px"),
                        Bn(r.wrapperEl, "--swiper-centered-offset-after", r.size / 2 - X[X.length - 1] / 2 + "px");
                        const At = -r.snapGrid[0]
                          , Xe = -r.slidesGrid[0];
                        r.snapGrid = r.snapGrid.map(Ye=>Ye + At),
                        r.slidesGrid = r.slidesGrid.map(Ye=>Ye + Xe)
                    }
                    if (d !== u && r.emit("slidesLengthChange"),
                    S.length !== Ae && (r.params.watchOverflow && r.checkOverflow(),
                    r.emit("snapGridLengthChange")),
                    V.length !== Se && r.emit("slidesGridLengthChange"),
                    E.watchSlidesProgress && r.updateSlidesOffset(),
                    !(G || E.cssMode || "slide" !== E.effect && "fade" !== E.effect)) {
                        const At = `${E.containerModifierClass}backface-hidden`
                          , Xe = r.$el.hasClass(At);
                        d <= E.maxBackfaceHiddenSlides ? Xe || r.$el.addClass(At) : Xe && r.$el.removeClass(At)
                    }
                },
                updateAutoHeight: function Ci(r) {
                    const y = this
                      , _ = []
                      , E = y.virtual && y.params.virtual.enabled;
                    let B, O = 0;
                    "number" == typeof r ? y.setTransition(r) : !0 === r && y.setTransition(y.params.speed);
                    const se = ce=>E ? y.slides.filter(G=>parseInt(G.getAttribute("data-swiper-slide-index"), 10) === ce)[0] : y.slides.eq(ce)[0];
                    if ("auto" !== y.params.slidesPerView && y.params.slidesPerView > 1)
                        if (y.params.centeredSlides)
                            (y.visibleSlides || Gt([])).each(ce=>{
                                _.push(ce)
                            }
                            );
                        else
                            for (B = 0; B < Math.ceil(y.params.slidesPerView); B += 1) {
                                const ce = y.activeIndex + B;
                                if (ce > y.slides.length && !E)
                                    break;
                                _.push(se(ce))
                            }
                    else
                        _.push(se(y.activeIndex));
                    for (B = 0; B < _.length; B += 1)
                        if (typeof _[B] < "u") {
                            const ce = _[B].offsetHeight;
                            O = ce > O ? ce : O
                        }
                    (O || 0 === O) && y.$wrapperEl.css("height", `${O}px`)
                },
                updateSlidesOffset: function fi() {
                    const r = this
                      , y = r.slides;
                    for (let _ = 0; _ < y.length; _ += 1)
                        y[_].swiperSlideOffset = r.isHorizontal() ? y[_].offsetLeft : y[_].offsetTop
                },
                updateSlidesProgress: function Xi(r=this && this.translate || 0) {
                    const y = this
                      , _ = y.params
                      , {slides: E, rtlTranslate: O, snapGrid: B} = y;
                    if (0 === E.length)
                        return;
                    typeof E[0].swiperSlideOffset > "u" && y.updateSlidesOffset();
                    let se = -r;
                    O && (se = r),
                    E.removeClass(_.slideVisibleClass),
                    y.visibleSlidesIndexes = [],
                    y.visibleSlides = [];
                    for (let ce = 0; ce < E.length; ce += 1) {
                        const G = E[ce];
                        let u = G.swiperSlideOffset;
                        _.cssMode && _.centeredSlides && (u -= E[0].swiperSlideOffset);
                        const m = (se + (_.centeredSlides ? y.minTranslate() : 0) - u) / (G.swiperSlideSize + _.spaceBetween)
                          , d = (se - B[0] + (_.centeredSlides ? y.minTranslate() : 0) - u) / (G.swiperSlideSize + _.spaceBetween)
                          , S = -(se - u)
                          , V = S + y.slidesSizesGrid[ce];
                        (S >= 0 && S < y.size - 1 || V > 1 && V <= y.size || S <= 0 && V >= y.size) && (y.visibleSlides.push(G),
                        y.visibleSlidesIndexes.push(ce),
                        E.eq(ce).addClass(_.slideVisibleClass)),
                        G.progress = O ? -m : m,
                        G.originalProgress = O ? -d : d
                    }
                    y.visibleSlides = Gt(y.visibleSlides)
                },
                updateProgress: function ks(r) {
                    const y = this;
                    if (typeof r > "u") {
                        const u = y.rtlTranslate ? -1 : 1;
                        r = y && y.translate && y.translate * u || 0
                    }
                    const _ = y.params
                      , E = y.maxTranslate() - y.minTranslate();
                    let {progress: O, isBeginning: B, isEnd: se} = y;
                    const ce = B
                      , G = se;
                    0 === E ? (O = 0,
                    B = !0,
                    se = !0) : (O = (r - y.minTranslate()) / E,
                    B = O <= 0,
                    se = O >= 1),
                    Object.assign(y, {
                        progress: O,
                        isBeginning: B,
                        isEnd: se
                    }),
                    (_.watchSlidesProgress || _.centeredSlides && _.autoHeight) && y.updateSlidesProgress(r),
                    B && !ce && y.emit("reachBeginning toEdge"),
                    se && !G && y.emit("reachEnd toEdge"),
                    (ce && !B || G && !se) && y.emit("fromEdge"),
                    y.emit("progress", O)
                },
                updateSlidesClasses: function Ni() {
                    const r = this
                      , {slides: y, params: _, $wrapperEl: E, activeIndex: O, realIndex: B} = r
                      , se = r.virtual && _.virtual.enabled;
                    let ce;
                    y.removeClass(`${_.slideActiveClass} ${_.slideNextClass} ${_.slidePrevClass} ${_.slideDuplicateActiveClass} ${_.slideDuplicateNextClass} ${_.slideDuplicatePrevClass}`),
                    ce = se ? r.$wrapperEl.find(`.${_.slideClass}[data-swiper-slide-index="${O}"]`) : y.eq(O),
                    ce.addClass(_.slideActiveClass),
                    _.loop && (ce.hasClass(_.slideDuplicateClass) ? E.children(`.${_.slideClass}:not(.${_.slideDuplicateClass})[data-swiper-slide-index="${B}"]`).addClass(_.slideDuplicateActiveClass) : E.children(`.${_.slideClass}.${_.slideDuplicateClass}[data-swiper-slide-index="${B}"]`).addClass(_.slideDuplicateActiveClass));
                    let G = ce.nextAll(`.${_.slideClass}`).eq(0).addClass(_.slideNextClass);
                    _.loop && 0 === G.length && (G = y.eq(0),
                    G.addClass(_.slideNextClass));
                    let u = ce.prevAll(`.${_.slideClass}`).eq(0).addClass(_.slidePrevClass);
                    _.loop && 0 === u.length && (u = y.eq(-1),
                    u.addClass(_.slidePrevClass)),
                    _.loop && (G.hasClass(_.slideDuplicateClass) ? E.children(`.${_.slideClass}:not(.${_.slideDuplicateClass})[data-swiper-slide-index="${G.attr("data-swiper-slide-index")}"]`).addClass(_.slideDuplicateNextClass) : E.children(`.${_.slideClass}.${_.slideDuplicateClass}[data-swiper-slide-index="${G.attr("data-swiper-slide-index")}"]`).addClass(_.slideDuplicateNextClass),
                    u.hasClass(_.slideDuplicateClass) ? E.children(`.${_.slideClass}:not(.${_.slideDuplicateClass})[data-swiper-slide-index="${u.attr("data-swiper-slide-index")}"]`).addClass(_.slideDuplicatePrevClass) : E.children(`.${_.slideClass}.${_.slideDuplicateClass}[data-swiper-slide-index="${u.attr("data-swiper-slide-index")}"]`).addClass(_.slideDuplicatePrevClass)),
                    r.emitSlidesClasses()
                },
                updateActiveIndex: function Vs(r) {
                    const y = this
                      , _ = y.rtlTranslate ? y.translate : -y.translate
                      , {slidesGrid: E, snapGrid: O, params: B, activeIndex: se, realIndex: ce, snapIndex: G} = y;
                    let m, u = r;
                    if (typeof u > "u") {
                        for (let S = 0; S < E.length; S += 1)
                            typeof E[S + 1] < "u" ? _ >= E[S] && _ < E[S + 1] - (E[S + 1] - E[S]) / 2 ? u = S : _ >= E[S] && _ < E[S + 1] && (u = S + 1) : _ >= E[S] && (u = S);
                        B.normalizeSlideIndex && (u < 0 || typeof u > "u") && (u = 0)
                    }
                    if (O.indexOf(_) >= 0)
                        m = O.indexOf(_);
                    else {
                        const S = Math.min(B.slidesPerGroupSkip, u);
                        m = S + Math.floor((u - S) / B.slidesPerGroup)
                    }
                    if (m >= O.length && (m = O.length - 1),
                    u === se)
                        return void (m !== G && (y.snapIndex = m,
                        y.emit("snapIndexChange")));
                    const d = parseInt(y.slides.eq(u).attr("data-swiper-slide-index") || u, 10);
                    Object.assign(y, {
                        snapIndex: m,
                        realIndex: d,
                        previousIndex: se,
                        activeIndex: u
                    }),
                    y.emit("activeIndexChange"),
                    y.emit("snapIndexChange"),
                    ce !== d && y.emit("realIndexChange"),
                    (y.initialized || y.params.runCallbacksOnInit) && y.emit("slideChange")
                },
                updateClickedSlide: function Br(r) {
                    const y = this
                      , _ = y.params
                      , E = Gt(r).closest(`.${_.slideClass}`)[0];
                    let B, O = !1;
                    if (E)
                        for (let se = 0; se < y.slides.length; se += 1)
                            if (y.slides[se] === E) {
                                O = !0,
                                B = se;
                                break
                            }
                    if (!E || !O)
                        return y.clickedSlide = void 0,
                        void (y.clickedIndex = void 0);
                    y.clickedSlide = E,
                    y.clickedIndex = y.virtual && y.params.virtual.enabled ? parseInt(Gt(E).attr("data-swiper-slide-index"), 10) : B,
                    _.slideToClickedSlide && void 0 !== y.clickedIndex && y.clickedIndex !== y.activeIndex && y.slideToClickedSlide()
                }
            },
            translate: {
                getTranslate: function Mr(r=(this.isHorizontal() ? "x" : "y")) {
                    const {params: _, rtlTranslate: E, translate: O, $wrapperEl: B} = this;
                    if (_.virtualTranslate)
                        return E ? -O : O;
                    if (_.cssMode)
                        return O;
                    let se = function Ve(r, y="x") {
                        const _ = U();
                        let E, O, B;
                        const se = function me(r) {
                            const y = U();
                            let _;
                            return y.getComputedStyle && (_ = y.getComputedStyle(r, null)),
                            !_ && r.currentStyle && (_ = r.currentStyle),
                            _ || (_ = r.style),
                            _
                        }(r);
                        return _.WebKitCSSMatrix ? (O = se.transform || se.webkitTransform,
                        O.split(",").length > 6 && (O = O.split(", ").map(ce=>ce.replace(",", ".")).join(", ")),
                        B = new _.WebKitCSSMatrix("none" === O ? "" : O)) : (B = se.MozTransform || se.OTransform || se.MsTransform || se.msTransform || se.transform || se.getPropertyValue("transform").replace("translate(", "matrix(1, 0, 0, 1,"),
                        E = B.toString().split(",")),
                        "x" === y && (O = _.WebKitCSSMatrix ? B.m41 : 16 === E.length ? parseFloat(E[12]) : parseFloat(E[4])),
                        "y" === y && (O = _.WebKitCSSMatrix ? B.m42 : 16 === E.length ? parseFloat(E[13]) : parseFloat(E[5])),
                        O || 0
                    }(B[0], r);
                    return E && (se = -se),
                    se || 0
                },
                setTranslate: function Ir(r, y) {
                    const _ = this
                      , {rtlTranslate: E, params: O, $wrapperEl: B, wrapperEl: se, progress: ce} = _;
                    let d, G = 0, u = 0;
                    _.isHorizontal() ? G = E ? -r : r : u = r,
                    O.roundLengths && (G = Math.floor(G),
                    u = Math.floor(u)),
                    O.cssMode ? se[_.isHorizontal() ? "scrollLeft" : "scrollTop"] = _.isHorizontal() ? -G : -u : O.virtualTranslate || B.transform(`translate3d(${G}px, ${u}px, 0px)`),
                    _.previousTranslate = _.translate,
                    _.translate = _.isHorizontal() ? G : u;
                    const S = _.maxTranslate() - _.minTranslate();
                    d = 0 === S ? 0 : (r - _.minTranslate()) / S,
                    d !== ce && _.updateProgress(r),
                    _.emit("setTranslate", _.translate, y)
                },
                minTranslate: function sr() {
                    return -this.snapGrid[0]
                },
                maxTranslate: function $r() {
                    return -this.snapGrid[this.snapGrid.length - 1]
                },
                translateTo: function Ys(r=0, y=this.params.speed, _=!0, E=!0, O) {
                    const B = this
                      , {params: se, wrapperEl: ce} = B;
                    if (B.animating && se.preventInteractionOnTransition)
                        return !1;
                    const G = B.minTranslate()
                      , u = B.maxTranslate();
                    let m;
                    if (m = E && r > G ? G : E && r < u ? u : r,
                    B.updateProgress(m),
                    se.cssMode) {
                        const d = B.isHorizontal();
                        if (0 === y)
                            ce[d ? "scrollLeft" : "scrollTop"] = -m;
                        else {
                            if (!B.support.smoothScroll)
                                return Rn({
                                    swiper: B,
                                    targetPosition: -m,
                                    side: d ? "left" : "top"
                                }),
                                !0;
                            ce.scrollTo({
                                [d ? "left" : "top"]: -m,
                                behavior: "smooth"
                            })
                        }
                        return !0
                    }
                    return 0 === y ? (B.setTransition(0),
                    B.setTranslate(m),
                    _ && (B.emit("beforeTransitionStart", y, O),
                    B.emit("transitionEnd"))) : (B.setTransition(y),
                    B.setTranslate(m),
                    _ && (B.emit("beforeTransitionStart", y, O),
                    B.emit("transitionStart")),
                    B.animating || (B.animating = !0,
                    B.onTranslateToWrapperTransitionEnd || (B.onTranslateToWrapperTransitionEnd = function(S) {
                        !B || B.destroyed || S.target === this && (B.$wrapperEl[0].removeEventListener("transitionend", B.onTranslateToWrapperTransitionEnd),
                        B.$wrapperEl[0].removeEventListener("webkitTransitionEnd", B.onTranslateToWrapperTransitionEnd),
                        B.onTranslateToWrapperTransitionEnd = null,
                        delete B.onTranslateToWrapperTransitionEnd,
                        _ && B.emit("transitionEnd"))
                    }
                    ),
                    B.$wrapperEl[0].addEventListener("transitionend", B.onTranslateToWrapperTransitionEnd),
                    B.$wrapperEl[0].addEventListener("webkitTransitionEnd", B.onTranslateToWrapperTransitionEnd))),
                    !0
                }
            },
            transition: {
                setTransition: function fr(r, y) {
                    const _ = this;
                    _.params.cssMode || _.$wrapperEl.transition(r),
                    _.emit("setTransition", r, y)
                },
                transitionStart: function pr(r=!0, y) {
                    const _ = this
                      , {params: E} = _;
                    E.cssMode || (E.autoHeight && _.updateAutoHeight(),
                    Bs({
                        swiper: _,
                        runCallbacks: r,
                        direction: y,
                        step: "Start"
                    }))
                },
                transitionEnd: function Ks(r=!0, y) {
                    const _ = this
                      , {params: E} = _;
                    _.animating = !1,
                    !E.cssMode && (_.setTransition(0),
                    Bs({
                        swiper: _,
                        runCallbacks: r,
                        direction: y,
                        step: "End"
                    }))
                }
            },
            slide: {
                slideTo: function es(r=0, y=this.params.speed, _=!0, E, O) {
                    if ("number" != typeof r && "string" != typeof r)
                        throw new Error(`The 'index' argument cannot have type other than 'number' or 'string'. [${typeof r}] given.`);
                    if ("string" == typeof r) {
                        const ke = parseInt(r, 10);
                        if (!isFinite(ke))
                            throw new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${r}] given.`);
                        r = ke
                    }
                    const B = this;
                    let se = r;
                    se < 0 && (se = 0);
                    const {params: ce, snapGrid: G, slidesGrid: u, previousIndex: m, activeIndex: d, rtlTranslate: S, wrapperEl: V, enabled: X} = B;
                    if (B.animating && ce.preventInteractionOnTransition || !X && !E && !O)
                        return !1;
                    const j = Math.min(B.params.slidesPerGroupSkip, se);
                    let ae = j + Math.floor((se - j) / B.params.slidesPerGroup);
                    ae >= G.length && (ae = G.length - 1);
                    const Ae = -G[ae];
                    if (ce.normalizeSlideIndex)
                        for (let ke = 0; ke < u.length; ke += 1) {
                            const lt = -Math.floor(100 * Ae)
                              , yt = Math.floor(100 * u[ke])
                              , mt = Math.floor(100 * u[ke + 1]);
                            typeof u[ke + 1] < "u" ? lt >= yt && lt < mt - (mt - yt) / 2 ? se = ke : lt >= yt && lt < mt && (se = ke + 1) : lt >= yt && (se = ke)
                        }
                    if (B.initialized && se !== d && (!B.allowSlideNext && Ae < B.translate && Ae < B.minTranslate() || !B.allowSlidePrev && Ae > B.translate && Ae > B.maxTranslate() && (d || 0) !== se))
                        return !1;
                    let Se;
                    if (se !== (m || 0) && _ && B.emit("beforeSlideChangeStart"),
                    B.updateProgress(Ae),
                    Se = se > d ? "next" : se < d ? "prev" : "reset",
                    S && -Ae === B.translate || !S && Ae === B.translate)
                        return B.updateActiveIndex(se),
                        ce.autoHeight && B.updateAutoHeight(),
                        B.updateSlidesClasses(),
                        "slide" !== ce.effect && B.setTranslate(Ae),
                        "reset" !== Se && (B.transitionStart(_, Se),
                        B.transitionEnd(_, Se)),
                        !1;
                    if (ce.cssMode) {
                        const ke = B.isHorizontal()
                          , lt = S ? Ae : -Ae;
                        if (0 === y) {
                            const yt = B.virtual && B.params.virtual.enabled;
                            yt && (B.wrapperEl.style.scrollSnapType = "none",
                            B._immediateVirtual = !0),
                            V[ke ? "scrollLeft" : "scrollTop"] = lt,
                            yt && requestAnimationFrame(()=>{
                                B.wrapperEl.style.scrollSnapType = "",
                                B._swiperImmediateVirtual = !1
                            }
                            )
                        } else {
                            if (!B.support.smoothScroll)
                                return Rn({
                                    swiper: B,
                                    targetPosition: lt,
                                    side: ke ? "left" : "top"
                                }),
                                !0;
                            V.scrollTo({
                                [ke ? "left" : "top"]: lt,
                                behavior: "smooth"
                            })
                        }
                        return !0
                    }
                    return B.setTransition(y),
                    B.setTranslate(Ae),
                    B.updateActiveIndex(se),
                    B.updateSlidesClasses(),
                    B.emit("beforeTransitionStart", y, E),
                    B.transitionStart(_, Se),
                    0 === y ? B.transitionEnd(_, Se) : B.animating || (B.animating = !0,
                    B.onSlideToWrapperTransitionEnd || (B.onSlideToWrapperTransitionEnd = function(lt) {
                        !B || B.destroyed || lt.target === this && (B.$wrapperEl[0].removeEventListener("transitionend", B.onSlideToWrapperTransitionEnd),
                        B.$wrapperEl[0].removeEventListener("webkitTransitionEnd", B.onSlideToWrapperTransitionEnd),
                        B.onSlideToWrapperTransitionEnd = null,
                        delete B.onSlideToWrapperTransitionEnd,
                        B.transitionEnd(_, Se))
                    }
                    ),
                    B.$wrapperEl[0].addEventListener("transitionend", B.onSlideToWrapperTransitionEnd),
                    B.$wrapperEl[0].addEventListener("webkitTransitionEnd", B.onSlideToWrapperTransitionEnd)),
                    !0
                },
                slideToLoop: function cs(r=0, y=this.params.speed, _=!0, E) {
                    if ("string" == typeof r) {
                        const se = parseInt(r, 10);
                        if (!isFinite(se))
                            throw new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${r}] given.`);
                        r = se
                    }
                    const O = this;
                    let B = r;
                    return O.params.loop && (B += O.loopedSlides),
                    O.slideTo(B, y, _, E)
                },
                slideNext: function bi(r=this.params.speed, y=!0, _) {
                    const E = this
                      , {animating: O, enabled: B, params: se} = E;
                    if (!B)
                        return E;
                    let ce = se.slidesPerGroup;
                    "auto" === se.slidesPerView && 1 === se.slidesPerGroup && se.slidesPerGroupAuto && (ce = Math.max(E.slidesPerViewDynamic("current", !0), 1));
                    const G = E.activeIndex < se.slidesPerGroupSkip ? 1 : ce;
                    if (se.loop) {
                        if (O && se.loopPreventsSlide)
                            return !1;
                        E.loopFix(),
                        E._clientLeft = E.$wrapperEl[0].clientLeft
                    }
                    return E.slideTo(se.rewind && E.isEnd ? 0 : E.activeIndex + G, r, y, _)
                },
                slidePrev: function us(r=this.params.speed, y=!0, _) {
                    const E = this
                      , {params: O, animating: B, snapGrid: se, slidesGrid: ce, rtlTranslate: G, enabled: u} = E;
                    if (!u)
                        return E;
                    if (O.loop) {
                        if (B && O.loopPreventsSlide)
                            return !1;
                        E.loopFix(),
                        E._clientLeft = E.$wrapperEl[0].clientLeft
                    }
                    function d(ae) {
                        return ae < 0 ? -Math.floor(Math.abs(ae)) : Math.floor(ae)
                    }
                    const S = d(G ? E.translate : -E.translate)
                      , V = se.map(ae=>d(ae));
                    let X = se[V.indexOf(S) - 1];
                    if (typeof X > "u" && O.cssMode) {
                        let ae;
                        se.forEach((Ae,Se)=>{
                            S >= Ae && (ae = Se)
                        }
                        ),
                        typeof ae < "u" && (X = se[ae > 0 ? ae - 1 : ae])
                    }
                    let j = 0;
                    return typeof X < "u" && (j = ce.indexOf(X),
                    j < 0 && (j = E.activeIndex - 1),
                    "auto" === O.slidesPerView && 1 === O.slidesPerGroup && O.slidesPerGroupAuto && (j = j - E.slidesPerViewDynamic("previous", !0) + 1,
                    j = Math.max(j, 0))),
                    E.slideTo(O.rewind && E.isBeginning ? E.params.virtual && E.params.virtual.enabled && E.virtual ? E.virtual.slides.length - 1 : E.slides.length - 1 : j, r, y, _)
                },
                slideReset: function ki(r=this.params.speed, y=!0, _) {
                    return this.slideTo(this.activeIndex, r, y, _)
                },
                slideToClosest: function $s(r=this.params.speed, y=!0, _, E=.5) {
                    const O = this;
                    let B = O.activeIndex;
                    const se = Math.min(O.params.slidesPerGroupSkip, B)
                      , ce = se + Math.floor((B - se) / O.params.slidesPerGroup)
                      , G = O.rtlTranslate ? O.translate : -O.translate;
                    if (G >= O.snapGrid[ce]) {
                        const u = O.snapGrid[ce];
                        G - u > (O.snapGrid[ce + 1] - u) * E && (B += O.params.slidesPerGroup)
                    } else {
                        const u = O.snapGrid[ce - 1];
                        G - u <= (O.snapGrid[ce] - u) * E && (B -= O.params.slidesPerGroup)
                    }
                    return B = Math.max(B, 0),
                    B = Math.min(B, O.slidesGrid.length - 1),
                    O.slideTo(B, r, y, _)
                },
                slideToClickedSlide: function Vi() {
                    const r = this
                      , {params: y, $wrapperEl: _} = r
                      , E = "auto" === y.slidesPerView ? r.slidesPerViewDynamic() : y.slidesPerView;
                    let B, O = r.clickedIndex;
                    if (y.loop) {
                        if (r.animating)
                            return;
                        B = parseInt(Gt(r.clickedSlide).attr("data-swiper-slide-index"), 10),
                        y.centeredSlides ? O < r.loopedSlides - E / 2 || O > r.slides.length - r.loopedSlides + E / 2 ? (r.loopFix(),
                        O = _.children(`.${y.slideClass}[data-swiper-slide-index="${B}"]:not(.${y.slideDuplicateClass})`).eq(0).index(),
                        wt(()=>{
                            r.slideTo(O)
                        }
                        )) : r.slideTo(O) : O > r.slides.length - E ? (r.loopFix(),
                        O = _.children(`.${y.slideClass}[data-swiper-slide-index="${B}"]:not(.${y.slideDuplicateClass})`).eq(0).index(),
                        wt(()=>{
                            r.slideTo(O)
                        }
                        )) : r.slideTo(O)
                    } else
                        r.slideTo(O)
                }
            },
            loop: {
                loopCreate: function ts() {
                    const r = this
                      , y = ue()
                      , {params: _, $wrapperEl: E} = r
                      , O = E.children().length > 0 ? Gt(E.children()[0].parentNode) : E;
                    O.children(`.${_.slideClass}.${_.slideDuplicateClass}`).remove();
                    let B = O.children(`.${_.slideClass}`);
                    if (_.loopFillGroupWithBlank) {
                        const G = _.slidesPerGroup - B.length % _.slidesPerGroup;
                        if (G !== _.slidesPerGroup) {
                            for (let u = 0; u < G; u += 1) {
                                const m = Gt(y.createElement("div")).addClass(`${_.slideClass} ${_.slideBlankClass}`);
                                O.append(m)
                            }
                            B = O.children(`.${_.slideClass}`)
                        }
                    }
                    "auto" === _.slidesPerView && !_.loopedSlides && (_.loopedSlides = B.length),
                    r.loopedSlides = Math.ceil(parseFloat(_.loopedSlides || _.slidesPerView, 10)),
                    r.loopedSlides += _.loopAdditionalSlides,
                    r.loopedSlides > B.length && r.params.loopedSlidesLimit && (r.loopedSlides = B.length);
                    const se = []
                      , ce = [];
                    B.each((G,u)=>{
                        Gt(G).attr("data-swiper-slide-index", u)
                    }
                    );
                    for (let G = 0; G < r.loopedSlides; G += 1) {
                        const u = G - Math.floor(G / B.length) * B.length;
                        ce.push(B.eq(u)[0]),
                        se.unshift(B.eq(B.length - u - 1)[0])
                    }
                    for (let G = 0; G < ce.length; G += 1)
                        O.append(Gt(ce[G].cloneNode(!0)).addClass(_.slideDuplicateClass));
                    for (let G = se.length - 1; G >= 0; G -= 1)
                        O.prepend(Gt(se[G].cloneNode(!0)).addClass(_.slideDuplicateClass))
                },
                loopFix: function Hs() {
                    const r = this;
                    r.emit("beforeLoopFix");
                    const {activeIndex: y, slides: _, loopedSlides: E, allowSlidePrev: O, allowSlideNext: B, snapGrid: se, rtlTranslate: ce} = r;
                    let G;
                    r.allowSlidePrev = !0,
                    r.allowSlideNext = !0;
                    const m = -se[y] - r.getTranslate();
                    y < E ? (G = _.length - 3 * E + y,
                    G += E,
                    r.slideTo(G, 0, !1, !0) && 0 !== m && r.setTranslate((ce ? -r.translate : r.translate) - m)) : y >= _.length - E && (G = -_.length + y + E,
                    G += E,
                    r.slideTo(G, 0, !1, !0) && 0 !== m && r.setTranslate((ce ? -r.translate : r.translate) - m)),
                    r.allowSlidePrev = O,
                    r.allowSlideNext = B,
                    r.emit("loopFix")
                },
                loopDestroy: function _s() {
                    const {$wrapperEl: y, params: _, slides: E} = this;
                    y.children(`.${_.slideClass}.${_.slideDuplicateClass},.${_.slideClass}.${_.slideBlankClass}`).remove(),
                    E.removeAttr("data-swiper-slide-index")
                }
            },
            grabCursor: {
                setGrabCursor: function Ai(r) {
                    const y = this;
                    if (y.support.touch || !y.params.simulateTouch || y.params.watchOverflow && y.isLocked || y.params.cssMode)
                        return;
                    const _ = "container" === y.params.touchEventsTarget ? y.el : y.wrapperEl;
                    _.style.cursor = "move",
                    _.style.cursor = r ? "grabbing" : "grab"
                },
                unsetGrabCursor: function Zs() {
                    const r = this;
                    r.support.touch || r.params.watchOverflow && r.isLocked || r.params.cssMode || (r["container" === r.params.touchEventsTarget ? "el" : "wrapperEl"].style.cursor = "")
                }
            },
            events: {
                attachEvents: function gr() {
                    const r = this
                      , y = ue()
                      , {params: _, support: E} = r;
                    r.onTouchStart = ys.bind(r),
                    r.onTouchMove = Jn.bind(r),
                    r.onTouchEnd = Us.bind(r),
                    _.cssMode && (r.onScroll = $i.bind(r)),
                    r.onClick = hs.bind(r),
                    E.touch && !zs && (y.addEventListener("touchstart", ni),
                    zs = !0),
                    Os(r, "on")
                },
                detachEvents: function Qi() {
                    Os(this, "off")
                }
            },
            breakpoints: {
                setBreakpoint: function Cs() {
                    const r = this
                      , {activeIndex: y, initialized: _, loopedSlides: E=0, params: O, $el: B} = r
                      , se = O.breakpoints;
                    if (!se || se && 0 === Object.keys(se).length)
                        return;
                    const ce = r.getBreakpoint(se, r.params.breakpointsBase, r.el);
                    if (!ce || r.currentBreakpoint === ce)
                        return;
                    const u = (ce in se ? se[ce] : void 0) || r.originalParams
                      , m = ci(r, O)
                      , d = ci(r, u)
                      , S = O.enabled;
                    m && !d ? (B.removeClass(`${O.containerModifierClass}grid ${O.containerModifierClass}grid-column`),
                    r.emitContainerClasses()) : !m && d && (B.addClass(`${O.containerModifierClass}grid`),
                    (u.grid.fill && "column" === u.grid.fill || !u.grid.fill && "column" === O.grid.fill) && B.addClass(`${O.containerModifierClass}grid-column`),
                    r.emitContainerClasses()),
                    ["navigation", "pagination", "scrollbar"].forEach(ae=>{
                        const Ae = O[ae] && O[ae].enabled
                          , Se = u[ae] && u[ae].enabled;
                        Ae && !Se && r[ae].disable(),
                        !Ae && Se && r[ae].enable()
                    }
                    );
                    const V = u.direction && u.direction !== O.direction
                      , X = O.loop && (u.slidesPerView !== O.slidesPerView || V);
                    V && _ && r.changeDirection(),
                    Jt(r.params, u);
                    const j = r.params.enabled;
                    Object.assign(r, {
                        allowTouchMove: r.params.allowTouchMove,
                        allowSlideNext: r.params.allowSlideNext,
                        allowSlidePrev: r.params.allowSlidePrev
                    }),
                    S && !j ? r.disable() : !S && j && r.enable(),
                    r.currentBreakpoint = ce,
                    r.emit("_beforeBreakpoint", u),
                    X && _ && (r.loopDestroy(),
                    r.loopCreate(),
                    r.updateSlides(),
                    r.slideTo(y - E + r.loopedSlides, 0, !1)),
                    r.emit("breakpoint", u)
                },
                getBreakpoint: function ns(r, y="window", _) {
                    if (!r || "container" === y && !_)
                        return;
                    let E = !1;
                    const O = U()
                      , B = "window" === y ? O.innerHeight : _.clientHeight
                      , se = Object.keys(r).map(ce=>{
                        if ("string" == typeof ce && 0 === ce.indexOf("@")) {
                            const G = parseFloat(ce.substr(1));
                            return {
                                value: B * G,
                                point: ce
                            }
                        }
                        return {
                            value: ce,
                            point: ce
                        }
                    }
                    );
                    se.sort((ce,G)=>parseInt(ce.value, 10) - parseInt(G.value, 10));
                    for (let ce = 0; ce < se.length; ce += 1) {
                        const {point: G, value: u} = se[ce];
                        "window" === y ? O.matchMedia(`(min-width: ${u}px)`).matches && (E = G) : u <= _.clientWidth && (E = G)
                    }
                    return E || "max"
                }
            },
            checkOverflow: {
                checkOverflow: function Ar() {
                    const r = this
                      , {isLocked: y, params: _} = r
                      , {slidesOffsetBefore: E} = _;
                    if (E) {
                        const O = r.slides.length - 1;
                        r.isLocked = r.size > r.slidesGrid[O] + r.slidesSizesGrid[O] + 2 * E
                    } else
                        r.isLocked = 1 === r.snapGrid.length;
                    !0 === _.allowSlideNext && (r.allowSlideNext = !r.isLocked),
                    !0 === _.allowSlidePrev && (r.allowSlidePrev = !r.isLocked),
                    y && y !== r.isLocked && (r.isEnd = !1),
                    y !== r.isLocked && r.emit(r.isLocked ? "lock" : "unlock")
                }
            },
            classes: {
                addClasses: function fs() {
                    const r = this
                      , {classNames: y, params: _, rtl: E, $el: O, device: B, support: se} = r
                      , ce = function mr(r, y) {
                        const _ = [];
                        return r.forEach(E=>{
                            "object" == typeof E ? Object.keys(E).forEach(O=>{
                                E[O] && _.push(y + O)
                            }
                            ) : "string" == typeof E && _.push(y + E)
                        }
                        ),
                        _
                    }(["initialized", _.direction, {
                        "pointer-events": !se.touch
                    }, {
                        "free-mode": r.params.freeMode && _.freeMode.enabled
                    }, {
                        autoheight: _.autoHeight
                    }, {
                        rtl: E
                    }, {
                        grid: _.grid && _.grid.rows > 1
                    }, {
                        "grid-column": _.grid && _.grid.rows > 1 && "column" === _.grid.fill
                    }, {
                        android: B.android
                    }, {
                        ios: B.ios
                    }, {
                        "css-mode": _.cssMode
                    }, {
                        centered: _.cssMode && _.centeredSlides
                    }, {
                        "watch-progress": _.watchSlidesProgress
                    }], _.containerModifierClass);
                    y.push(...ce),
                    O.addClass([...y].join(" ")),
                    r.emitContainerClasses()
                },
                removeClasses: function Hr() {
                    const {$el: y, classNames: _} = this;
                    y.removeClass(_.join(" ")),
                    this.emitContainerClasses()
                }
            },
            images: {
                loadImage: function xr(r, y, _, E, O, B) {
                    const se = U();
                    let ce;
                    function G() {
                        B && B()
                    }
                    Gt(r).parent("picture")[0] || r.complete && O || !y ? G() : (ce = new se.Image,
                    ce.onload = G,
                    ce.onerror = G,
                    E && (ce.sizes = E),
                    _ && (ce.srcset = _),
                    y && (ce.src = y))
                },
                preloadImages: function Gi() {
                    const r = this;
                    function y() {
                        typeof r > "u" || null === r || !r || r.destroyed || (void 0 !== r.imagesLoaded && (r.imagesLoaded += 1),
                        r.imagesLoaded === r.imagesToLoad.length && (r.params.updateOnImagesReady && r.update(),
                        r.emit("imagesReady")))
                    }
                    r.imagesToLoad = r.$el.find("img");
                    for (let _ = 0; _ < r.imagesToLoad.length; _ += 1) {
                        const E = r.imagesToLoad[_];
                        r.loadImage(E, E.currentSrc || E.getAttribute("src"), E.srcset || E.getAttribute("srcset"), E.sizes || E.getAttribute("sizes"), !0, y)
                    }
                }
            }
        }
          , Ii = {};
        class Hi {
            constructor(...y) {
                let _, E;
                if (1 === y.length && y[0].constructor && "Object" === Object.prototype.toString.call(y[0]).slice(8, -1) ? E = y[0] : [_,E] = y,
                E || (E = {}),
                E = Jt({}, E),
                _ && !E.el && (E.el = _),
                E.el && Gt(E.el).length > 1) {
                    const ce = [];
                    return Gt(E.el).each(G=>{
                        const u = Jt({}, E, {
                            el: G
                        });
                        ce.push(new Hi(u))
                    }
                    ),
                    ce
                }
                const O = this;
                O.__swiper__ = !0,
                O.support = Zn(),
                O.device = function li(r={}) {
                    return ui || (ui = function ji({userAgent: r}={}) {
                        const y = Zn()
                          , _ = U()
                          , E = _.navigator.platform
                          , O = r || _.navigator.userAgent
                          , B = {
                            ios: !1,
                            android: !1
                        }
                          , se = _.screen.width
                          , ce = _.screen.height
                          , G = O.match(/(Android);?[\s\/]+([\d.]+)?/);
                        let u = O.match(/(iPad).*OS\s([\d_]+)/);
                        const m = O.match(/(iPod)(.*OS\s([\d_]+))?/)
                          , d = !u && O.match(/(iPhone\sOS|iOS)\s([\d_]+)/)
                          , S = "Win32" === E;
                        let V = "MacIntel" === E;
                        return !u && V && y.touch && ["1024x1366", "1366x1024", "834x1194", "1194x834", "834x1112", "1112x834", "768x1024", "1024x768", "820x1180", "1180x820", "810x1080", "1080x810"].indexOf(`${se}x${ce}`) >= 0 && (u = O.match(/(Version)\/([\d.]+)/),
                        u || (u = [0, 1, "13_0_0"]),
                        V = !1),
                        G && !S && (B.os = "android",
                        B.android = !0),
                        (u || d || m) && (B.os = "ios",
                        B.ios = !0),
                        B
                    }(r)),
                    ui
                }({
                    userAgent: E.userAgent
                }),
                O.browser = function bn() {
                    return Dn || (Dn = function Hn() {
                        const r = U();
                        return {
                            isSafari: function y() {
                                const _ = r.navigator.userAgent.toLowerCase();
                                return _.indexOf("safari") >= 0 && _.indexOf("chrome") < 0 && _.indexOf("android") < 0
                            }(),
                            isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(r.navigator.userAgent)
                        }
                    }()),
                    Dn
                }(),
                O.eventsListeners = {},
                O.eventsAnyListeners = [],
                O.modules = [...O.__modules__],
                E.modules && Array.isArray(E.modules) && O.modules.push(...E.modules);
                const B = {};
                O.modules.forEach(ce=>{
                    ce({
                        swiper: O,
                        extendParams: mi(E, B),
                        on: O.on.bind(O),
                        once: O.once.bind(O),
                        off: O.off.bind(O),
                        emit: O.emit.bind(O)
                    })
                }
                );
                const se = Jt({}, ss, B);
                return O.params = Jt({}, se, Ii, E),
                O.originalParams = Jt({}, O.params),
                O.passedParams = Jt({}, E),
                O.params && O.params.on && Object.keys(O.params.on).forEach(ce=>{
                    O.on(ce, O.params.on[ce])
                }
                ),
                O.params && O.params.onAny && O.onAny(O.params.onAny),
                O.$ = Gt,
                Object.assign(O, {
                    enabled: O.params.enabled,
                    el: _,
                    classNames: [],
                    slides: Gt(),
                    slidesGrid: [],
                    snapGrid: [],
                    slidesSizesGrid: [],
                    isHorizontal: ()=>"horizontal" === O.params.direction,
                    isVertical: ()=>"vertical" === O.params.direction,
                    activeIndex: 0,
                    realIndex: 0,
                    isBeginning: !0,
                    isEnd: !1,
                    translate: 0,
                    previousTranslate: 0,
                    progress: 0,
                    velocity: 0,
                    animating: !1,
                    allowSlideNext: O.params.allowSlideNext,
                    allowSlidePrev: O.params.allowSlidePrev,
                    touchEvents: function() {
                        const G = ["touchstart", "touchmove", "touchend", "touchcancel"]
                          , u = ["pointerdown", "pointermove", "pointerup"];
                        return O.touchEventsTouch = {
                            start: G[0],
                            move: G[1],
                            end: G[2],
                            cancel: G[3]
                        },
                        O.touchEventsDesktop = {
                            start: u[0],
                            move: u[1],
                            end: u[2]
                        },
                        O.support.touch || !O.params.simulateTouch ? O.touchEventsTouch : O.touchEventsDesktop
                    }(),
                    touchEventsData: {
                        isTouched: void 0,
                        isMoved: void 0,
                        allowTouchCallbacks: void 0,
                        touchStartTime: void 0,
                        isScrolling: void 0,
                        currentTranslate: void 0,
                        startTranslate: void 0,
                        allowThresholdMove: void 0,
                        focusableElements: O.params.focusableElements,
                        lastClickTime: N(),
                        clickTimeout: void 0,
                        velocities: [],
                        allowMomentumBounce: void 0,
                        isTouchEvent: void 0,
                        startMoving: void 0
                    },
                    allowClick: !0,
                    allowTouchMove: O.params.allowTouchMove,
                    touches: {
                        startX: 0,
                        startY: 0,
                        currentX: 0,
                        currentY: 0,
                        diff: 0
                    },
                    imagesToLoad: [],
                    imagesLoaded: 0
                }),
                O.emit("_swiper"),
                O.params.init && O.init(),
                O
            }
            enable() {
                const y = this;
                y.enabled || (y.enabled = !0,
                y.params.grabCursor && y.setGrabCursor(),
                y.emit("enable"))
            }
            disable() {
                const y = this;
                !y.enabled || (y.enabled = !1,
                y.params.grabCursor && y.unsetGrabCursor(),
                y.emit("disable"))
            }
            setProgress(y, _) {
                const E = this;
                y = Math.min(Math.max(y, 0), 1);
                const O = E.minTranslate()
                  , se = (E.maxTranslate() - O) * y + O;
                E.translateTo(se, typeof _ > "u" ? 0 : _),
                E.updateActiveIndex(),
                E.updateSlidesClasses()
            }
            emitContainerClasses() {
                const y = this;
                if (!y.params._emitClasses || !y.el)
                    return;
                const _ = y.el.className.split(" ").filter(E=>0 === E.indexOf("swiper") || 0 === E.indexOf(y.params.containerModifierClass));
                y.emit("_containerClasses", _.join(" "))
            }
            getSlideClasses(y) {
                const _ = this;
                return _.destroyed ? "" : y.className.split(" ").filter(E=>0 === E.indexOf("swiper-slide") || 0 === E.indexOf(_.params.slideClass)).join(" ")
            }
            emitSlidesClasses() {
                const y = this;
                if (!y.params._emitClasses || !y.el)
                    return;
                const _ = [];
                y.slides.each(E=>{
                    const O = y.getSlideClasses(E);
                    _.push({
                        slideEl: E,
                        classNames: O
                    }),
                    y.emit("_slideClass", E, O)
                }
                ),
                y.emit("_slideClasses", _)
            }
            slidesPerViewDynamic(y="current", _=!1) {
                const {params: O, slides: B, slidesGrid: se, slidesSizesGrid: ce, size: G, activeIndex: u} = this;
                let m = 1;
                if (O.centeredSlides) {
                    let S, d = B[u].swiperSlideSize;
                    for (let V = u + 1; V < B.length; V += 1)
                        B[V] && !S && (d += B[V].swiperSlideSize,
                        m += 1,
                        d > G && (S = !0));
                    for (let V = u - 1; V >= 0; V -= 1)
                        B[V] && !S && (d += B[V].swiperSlideSize,
                        m += 1,
                        d > G && (S = !0))
                } else if ("current" === y)
                    for (let d = u + 1; d < B.length; d += 1)
                        (_ ? se[d] + ce[d] - se[u] < G : se[d] - se[u] < G) && (m += 1);
                else
                    for (let d = u - 1; d >= 0; d -= 1)
                        se[u] - se[d] < G && (m += 1);
                return m
            }
            update() {
                const y = this;
                if (!y || y.destroyed)
                    return;
                const {snapGrid: _, params: E} = y;
                function O() {
                    const ce = Math.min(Math.max(y.rtlTranslate ? -1 * y.translate : y.translate, y.maxTranslate()), y.minTranslate());
                    y.setTranslate(ce),
                    y.updateActiveIndex(),
                    y.updateSlidesClasses()
                }
                let B;
                E.breakpoints && y.setBreakpoint(),
                y.updateSize(),
                y.updateSlides(),
                y.updateProgress(),
                y.updateSlidesClasses(),
                y.params.freeMode && y.params.freeMode.enabled ? (O(),
                y.params.autoHeight && y.updateAutoHeight()) : (B = y.slideTo(("auto" === y.params.slidesPerView || y.params.slidesPerView > 1) && y.isEnd && !y.params.centeredSlides ? y.slides.length - 1 : y.activeIndex, 0, !1, !0),
                B || O()),
                E.watchOverflow && _ !== y.snapGrid && y.checkOverflow(),
                y.emit("update")
            }
            changeDirection(y, _=!0) {
                const E = this
                  , O = E.params.direction;
                return y || (y = "horizontal" === O ? "vertical" : "horizontal"),
                y === O || "horizontal" !== y && "vertical" !== y || (E.$el.removeClass(`${E.params.containerModifierClass}${O}`).addClass(`${E.params.containerModifierClass}${y}`),
                E.emitContainerClasses(),
                E.params.direction = y,
                E.slides.each(B=>{
                    "vertical" === y ? B.style.width = "" : B.style.height = ""
                }
                ),
                E.emit("changeDirection"),
                _ && E.update()),
                E
            }
            changeLanguageDirection(y) {
                const _ = this;
                _.rtl && "rtl" === y || !_.rtl && "ltr" === y || (_.rtl = "rtl" === y,
                _.rtlTranslate = "horizontal" === _.params.direction && _.rtl,
                _.rtl ? (_.$el.addClass(`${_.params.containerModifierClass}rtl`),
                _.el.dir = "rtl") : (_.$el.removeClass(`${_.params.containerModifierClass}rtl`),
                _.el.dir = "ltr"),
                _.update())
            }
            mount(y) {
                const _ = this;
                if (_.mounted)
                    return !0;
                const E = Gt(y || _.params.el);
                if (!(y = E[0]))
                    return !1;
                y.swiper = _;
                const O = ()=>`.${(_.params.wrapperClass || "").trim().split(" ").join(".")}`;
                let se = (()=>{
                    if (y && y.shadowRoot && y.shadowRoot.querySelector) {
                        const ce = Gt(y.shadowRoot.querySelector(O()));
                        return ce.children = G=>E.children(G),
                        ce
                    }
                    return E.children ? E.children(O()) : Gt(E).children(O())
                }
                )();
                if (0 === se.length && _.params.createElements) {
                    const G = ue().createElement("div");
                    se = Gt(G),
                    G.className = _.params.wrapperClass,
                    E.append(G),
                    E.children(`.${_.params.slideClass}`).each(u=>{
                        se.append(u)
                    }
                    )
                }
                return Object.assign(_, {
                    $el: E,
                    el: y,
                    $wrapperEl: se,
                    wrapperEl: se[0],
                    mounted: !0,
                    rtl: "rtl" === y.dir.toLowerCase() || "rtl" === E.css("direction"),
                    rtlTranslate: "horizontal" === _.params.direction && ("rtl" === y.dir.toLowerCase() || "rtl" === E.css("direction")),
                    wrongRTL: "-webkit-box" === se.css("display")
                }),
                !0
            }
            init(y) {
                const _ = this;
                return _.initialized || !1 === _.mount(y) || (_.emit("beforeInit"),
                _.params.breakpoints && _.setBreakpoint(),
                _.addClasses(),
                _.params.loop && _.loopCreate(),
                _.updateSize(),
                _.updateSlides(),
                _.params.watchOverflow && _.checkOverflow(),
                _.params.grabCursor && _.enabled && _.setGrabCursor(),
                _.params.preloadImages && _.preloadImages(),
                _.slideTo(_.params.loop ? _.params.initialSlide + _.loopedSlides : _.params.initialSlide, 0, _.params.runCallbacksOnInit, !1, !0),
                _.attachEvents(),
                _.initialized = !0,
                _.emit("init"),
                _.emit("afterInit")),
                _
            }
            destroy(y=!0, _=!0) {
                const E = this
                  , {params: O, $el: B, $wrapperEl: se, slides: ce} = E;
                return typeof E.params > "u" || E.destroyed || (E.emit("beforeDestroy"),
                E.initialized = !1,
                E.detachEvents(),
                O.loop && E.loopDestroy(),
                _ && (E.removeClasses(),
                B.removeAttr("style"),
                se.removeAttr("style"),
                ce && ce.length && ce.removeClass([O.slideVisibleClass, O.slideActiveClass, O.slideNextClass, O.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index")),
                E.emit("destroy"),
                Object.keys(E.eventsListeners).forEach(G=>{
                    E.off(G)
                }
                ),
                !1 !== y && (E.$el[0].swiper = null,
                function xe(r) {
                    const y = r;
                    Object.keys(y).forEach(_=>{
                        try {
                            y[_] = null
                        } catch {}
                        try {
                            delete y[_]
                        } catch {}
                    }
                    )
                }(E)),
                E.destroyed = !0),
                null
            }
            static extendDefaults(y) {
                Jt(Ii, y)
            }
            static get extendedDefaults() {
                return Ii
            }
            static get defaults() {
                return ss
            }
            static installModule(y) {
                Hi.prototype.__modules__ || (Hi.prototype.__modules__ = []);
                const _ = Hi.prototype.__modules__;
                "function" == typeof y && _.indexOf(y) < 0 && _.push(y)
            }
            static use(y) {
                return Array.isArray(y) ? (y.forEach(_=>Hi.installModule(_)),
                Hi) : (Hi.installModule(y),
                Hi)
            }
        }
        Object.keys(bs).forEach(r=>{
            Object.keys(bs[r]).forEach(y=>{
                Hi.prototype[y] = bs[r][y]
            }
            )
        }
        ),
        Hi.use([function yi({swiper: r, on: y, emit: _}) {
            const E = U();
            let O = null
              , B = null;
            const se = ()=>{
                !r || r.destroyed || !r.initialized || (_("beforeResize"),
                _("resize"))
            }
              , u = ()=>{
                !r || r.destroyed || !r.initialized || _("orientationchange")
            }
            ;
            y("init", ()=>{
                r.params.resizeObserver && typeof E.ResizeObserver < "u" ? !r || r.destroyed || !r.initialized || (O = new ResizeObserver(m=>{
                    B = E.requestAnimationFrame(()=>{
                        const {width: d, height: S} = r;
                        let V = d
                          , X = S;
                        m.forEach(({contentBoxSize: j, contentRect: ae, target: Ae})=>{
                            Ae && Ae !== r.el || (V = ae ? ae.width : (j[0] || j).inlineSize,
                            X = ae ? ae.height : (j[0] || j).blockSize)
                        }
                        ),
                        (V !== d || X !== S) && se()
                    }
                    )
                }
                ),
                O.observe(r.el)) : (E.addEventListener("resize", se),
                E.addEventListener("orientationchange", u))
            }
            ),
            y("destroy", ()=>{
                B && E.cancelAnimationFrame(B),
                O && O.unobserve && r.el && (O.unobserve(r.el),
                O = null),
                E.removeEventListener("resize", se),
                E.removeEventListener("orientationchange", u)
            }
            )
        }
        , function Mn({swiper: r, extendParams: y, on: _, emit: E}) {
            const O = []
              , B = U()
              , se = (u,m={})=>{
                const S = new (B.MutationObserver || B.WebkitMutationObserver)(V=>{
                    if (1 === V.length)
                        return void E("observerUpdate", V[0]);
                    const X = function() {
                        E("observerUpdate", V[0])
                    };
                    B.requestAnimationFrame ? B.requestAnimationFrame(X) : B.setTimeout(X, 0)
                }
                );
                S.observe(u, {
                    attributes: typeof m.attributes > "u" || m.attributes,
                    childList: typeof m.childList > "u" || m.childList,
                    characterData: typeof m.characterData > "u" || m.characterData
                }),
                O.push(S)
            }
            ;
            y({
                observer: !1,
                observeParents: !1,
                observeSlideChildren: !1
            }),
            _("init", ()=>{
                if (r.params.observer) {
                    if (r.params.observeParents) {
                        const u = r.$el.parents();
                        for (let m = 0; m < u.length; m += 1)
                            se(u[m])
                    }
                    se(r.$el[0], {
                        childList: r.params.observeSlideChildren
                    }),
                    se(r.$wrapperEl[0], {
                        attributes: !1
                    })
                }
            }
            ),
            _("destroy", ()=>{
                O.forEach(u=>{
                    u.disconnect()
                }
                ),
                O.splice(0, O.length)
            }
            )
        }
        ]);
        const or = Hi;
        function ar(r, y, _, E) {
            const O = ue();
            return r.params.createElements && Object.keys(E).forEach(B=>{
                if (!_[B] && !0 === _.auto) {
                    let se = r.$el.children(`.${E[B]}`)[0];
                    se || (se = O.createElement("div"),
                    se.className = E[B],
                    r.$el.append(se)),
                    _[B] = se,
                    y[B] = se
                }
            }
            ),
            _
        }
        function Qn({swiper: r, extendParams: y, on: _, emit: E}) {
            function O(V) {
                let X;
                return V && (X = Gt(V),
                r.params.uniqueNavElements && "string" == typeof V && X.length > 1 && 1 === r.$el.find(V).length && (X = r.$el.find(V))),
                X
            }
            function B(V, X) {
                const j = r.params.navigation;
                V && V.length > 0 && (V[X ? "addClass" : "removeClass"](j.disabledClass),
                V[0] && "BUTTON" === V[0].tagName && (V[0].disabled = X),
                r.params.watchOverflow && r.enabled && V[r.isLocked ? "addClass" : "removeClass"](j.lockClass))
            }
            function se() {
                if (r.params.loop)
                    return;
                const {$nextEl: V, $prevEl: X} = r.navigation;
                B(X, r.isBeginning && !r.params.rewind),
                B(V, r.isEnd && !r.params.rewind)
            }
            function ce(V) {
                V.preventDefault(),
                (!r.isBeginning || r.params.loop || r.params.rewind) && (r.slidePrev(),
                E("navigationPrev"))
            }
            function G(V) {
                V.preventDefault(),
                (!r.isEnd || r.params.loop || r.params.rewind) && (r.slideNext(),
                E("navigationNext"))
            }
            function u() {
                const V = r.params.navigation;
                if (r.params.navigation = ar(r, r.originalParams.navigation, r.params.navigation, {
                    nextEl: "swiper-button-next",
                    prevEl: "swiper-button-prev"
                }),
                !V.nextEl && !V.prevEl)
                    return;
                const X = O(V.nextEl)
                  , j = O(V.prevEl);
                X && X.length > 0 && X.on("click", G),
                j && j.length > 0 && j.on("click", ce),
                Object.assign(r.navigation, {
                    $nextEl: X,
                    nextEl: X && X[0],
                    $prevEl: j,
                    prevEl: j && j[0]
                }),
                r.enabled || (X && X.addClass(V.lockClass),
                j && j.addClass(V.lockClass))
            }
            function m() {
                const {$nextEl: V, $prevEl: X} = r.navigation;
                V && V.length && (V.off("click", G),
                V.removeClass(r.params.navigation.disabledClass)),
                X && X.length && (X.off("click", ce),
                X.removeClass(r.params.navigation.disabledClass))
            }
            y({
                navigation: {
                    nextEl: null,
                    prevEl: null,
                    hideOnClick: !1,
                    disabledClass: "swiper-button-disabled",
                    hiddenClass: "swiper-button-hidden",
                    lockClass: "swiper-button-lock",
                    navigationDisabledClass: "swiper-navigation-disabled"
                }
            }),
            r.navigation = {
                nextEl: null,
                $nextEl: null,
                prevEl: null,
                $prevEl: null
            },
            _("init", ()=>{
                !1 === r.params.navigation.enabled ? S() : (u(),
                se())
            }
            ),
            _("toEdge fromEdge lock unlock", ()=>{
                se()
            }
            ),
            _("destroy", ()=>{
                m()
            }
            ),
            _("enable disable", ()=>{
                const {$nextEl: V, $prevEl: X} = r.navigation;
                V && V[r.enabled ? "removeClass" : "addClass"](r.params.navigation.lockClass),
                X && X[r.enabled ? "removeClass" : "addClass"](r.params.navigation.lockClass)
            }
            ),
            _("click", (V,X)=>{
                const {$nextEl: j, $prevEl: ae} = r.navigation
                  , Ae = X.target;
                if (r.params.navigation.hideOnClick && !Gt(Ae).is(ae) && !Gt(Ae).is(j)) {
                    if (r.pagination && r.params.pagination && r.params.pagination.clickable && (r.pagination.el === Ae || r.pagination.el.contains(Ae)))
                        return;
                    let Se;
                    j ? Se = j.hasClass(r.params.navigation.hiddenClass) : ae && (Se = ae.hasClass(r.params.navigation.hiddenClass)),
                    E(!0 === Se ? "navigationShow" : "navigationHide"),
                    j && j.toggleClass(r.params.navigation.hiddenClass),
                    ae && ae.toggleClass(r.params.navigation.hiddenClass)
                }
            }
            );
            const S = ()=>{
                r.$el.addClass(r.params.navigation.navigationDisabledClass),
                m()
            }
            ;
            Object.assign(r.navigation, {
                enable: ()=>{
                    r.$el.removeClass(r.params.navigation.navigationDisabledClass),
                    u(),
                    se()
                }
                ,
                disable: S,
                update: se,
                init: u,
                destroy: m
            })
        }
        function R(r="") {
            return `.${r.trim().replace(/([\.:!\/])/g, "\\$1").replace(/ /g, ".")}`
        }
        function P({swiper: r, extendParams: y, on: _, emit: E}) {
            const O = "swiper-pagination";
            y({
                pagination: {
                    el: null,
                    bulletElement: "span",
                    clickable: !1,
                    hideOnClick: !1,
                    renderBullet: null,
                    renderProgressbar: null,
                    renderFraction: null,
                    renderCustom: null,
                    progressbarOpposite: !1,
                    type: "bullets",
                    dynamicBullets: !1,
                    dynamicMainBullets: 1,
                    formatFractionCurrent: j=>j,
                    formatFractionTotal: j=>j,
                    bulletClass: `${O}-bullet`,
                    bulletActiveClass: `${O}-bullet-active`,
                    modifierClass: `${O}-`,
                    currentClass: `${O}-current`,
                    totalClass: `${O}-total`,
                    hiddenClass: `${O}-hidden`,
                    progressbarFillClass: `${O}-progressbar-fill`,
                    progressbarOppositeClass: `${O}-progressbar-opposite`,
                    clickableClass: `${O}-clickable`,
                    lockClass: `${O}-lock`,
                    horizontalClass: `${O}-horizontal`,
                    verticalClass: `${O}-vertical`,
                    paginationDisabledClass: `${O}-disabled`
                }
            }),
            r.pagination = {
                el: null,
                $el: null,
                bullets: []
            };
            let B, se = 0;
            function ce() {
                return !r.params.pagination.el || !r.pagination.el || !r.pagination.$el || 0 === r.pagination.$el.length
            }
            function G(j, ae) {
                const {bulletActiveClass: Ae} = r.params.pagination;
                j[ae]().addClass(`${Ae}-${ae}`)[ae]().addClass(`${Ae}-${ae}-${ae}`)
            }
            function u() {
                const j = r.rtl
                  , ae = r.params.pagination;
                if (ce())
                    return;
                const Ae = r.virtual && r.params.virtual.enabled ? r.virtual.slides.length : r.slides.length
                  , Se = r.pagination.$el;
                let ke;
                const lt = r.params.loop ? Math.ceil((Ae - 2 * r.loopedSlides) / r.params.slidesPerGroup) : r.snapGrid.length;
                if (r.params.loop ? (ke = Math.ceil((r.activeIndex - r.loopedSlides) / r.params.slidesPerGroup),
                ke > Ae - 1 - 2 * r.loopedSlides && (ke -= Ae - 2 * r.loopedSlides),
                ke > lt - 1 && (ke -= lt),
                ke < 0 && "bullets" !== r.params.paginationType && (ke = lt + ke)) : ke = typeof r.snapIndex < "u" ? r.snapIndex : r.activeIndex || 0,
                "bullets" === ae.type && r.pagination.bullets && r.pagination.bullets.length > 0) {
                    const yt = r.pagination.bullets;
                    let mt, Ct, Nt;
                    if (ae.dynamicBullets && (B = yt.eq(0)[r.isHorizontal() ? "outerWidth" : "outerHeight"](!0),
                    Se.css(r.isHorizontal() ? "width" : "height", B * (ae.dynamicMainBullets + 4) + "px"),
                    ae.dynamicMainBullets > 1 && void 0 !== r.previousIndex && (se += ke - (r.previousIndex - r.loopedSlides || 0),
                    se > ae.dynamicMainBullets - 1 ? se = ae.dynamicMainBullets - 1 : se < 0 && (se = 0)),
                    mt = Math.max(ke - se, 0),
                    Ct = mt + (Math.min(yt.length, ae.dynamicMainBullets) - 1),
                    Nt = (Ct + mt) / 2),
                    yt.removeClass(["", "-next", "-next-next", "-prev", "-prev-prev", "-main"].map(Ut=>`${ae.bulletActiveClass}${Ut}`).join(" ")),
                    Se.length > 1)
                        yt.each(Ut=>{
                            const At = Gt(Ut)
                              , Xe = At.index();
                            Xe === ke && At.addClass(ae.bulletActiveClass),
                            ae.dynamicBullets && (Xe >= mt && Xe <= Ct && At.addClass(`${ae.bulletActiveClass}-main`),
                            Xe === mt && G(At, "prev"),
                            Xe === Ct && G(At, "next"))
                        }
                        );
                    else {
                        const Ut = yt.eq(ke)
                          , At = Ut.index();
                        if (Ut.addClass(ae.bulletActiveClass),
                        ae.dynamicBullets) {
                            const Xe = yt.eq(mt)
                              , Ye = yt.eq(Ct);
                            for (let ct = mt; ct <= Ct; ct += 1)
                                yt.eq(ct).addClass(`${ae.bulletActiveClass}-main`);
                            if (r.params.loop)
                                if (At >= yt.length) {
                                    for (let ct = ae.dynamicMainBullets; ct >= 0; ct -= 1)
                                        yt.eq(yt.length - ct).addClass(`${ae.bulletActiveClass}-main`);
                                    yt.eq(yt.length - ae.dynamicMainBullets - 1).addClass(`${ae.bulletActiveClass}-prev`)
                                } else
                                    G(Xe, "prev"),
                                    G(Ye, "next");
                            else
                                G(Xe, "prev"),
                                G(Ye, "next")
                        }
                    }
                    if (ae.dynamicBullets) {
                        const Ut = Math.min(yt.length, ae.dynamicMainBullets + 4)
                          , At = (B * Ut - B) / 2 - Nt * B
                          , Xe = j ? "right" : "left";
                        yt.css(r.isHorizontal() ? Xe : "top", `${At}px`)
                    }
                }
                if ("fraction" === ae.type && (Se.find(R(ae.currentClass)).text(ae.formatFractionCurrent(ke + 1)),
                Se.find(R(ae.totalClass)).text(ae.formatFractionTotal(lt))),
                "progressbar" === ae.type) {
                    let yt;
                    yt = ae.progressbarOpposite ? r.isHorizontal() ? "vertical" : "horizontal" : r.isHorizontal() ? "horizontal" : "vertical";
                    const mt = (ke + 1) / lt;
                    let Ct = 1
                      , Nt = 1;
                    "horizontal" === yt ? Ct = mt : Nt = mt,
                    Se.find(R(ae.progressbarFillClass)).transform(`translate3d(0,0,0) scaleX(${Ct}) scaleY(${Nt})`).transition(r.params.speed)
                }
                "custom" === ae.type && ae.renderCustom ? (Se.html(ae.renderCustom(r, ke + 1, lt)),
                E("paginationRender", Se[0])) : E("paginationUpdate", Se[0]),
                r.params.watchOverflow && r.enabled && Se[r.isLocked ? "addClass" : "removeClass"](ae.lockClass)
            }
            function m() {
                const j = r.params.pagination;
                if (ce())
                    return;
                const ae = r.virtual && r.params.virtual.enabled ? r.virtual.slides.length : r.slides.length
                  , Ae = r.pagination.$el;
                let Se = "";
                if ("bullets" === j.type) {
                    let ke = r.params.loop ? Math.ceil((ae - 2 * r.loopedSlides) / r.params.slidesPerGroup) : r.snapGrid.length;
                    r.params.freeMode && r.params.freeMode.enabled && !r.params.loop && ke > ae && (ke = ae);
                    for (let lt = 0; lt < ke; lt += 1)
                        Se += j.renderBullet ? j.renderBullet.call(r, lt, j.bulletClass) : `<${j.bulletElement} class="${j.bulletClass}"></${j.bulletElement}>`;
                    Ae.html(Se),
                    r.pagination.bullets = Ae.find(R(j.bulletClass))
                }
                "fraction" === j.type && (Se = j.renderFraction ? j.renderFraction.call(r, j.currentClass, j.totalClass) : `<span class="${j.currentClass}"></span> / <span class="${j.totalClass}"></span>`,
                Ae.html(Se)),
                "progressbar" === j.type && (Se = j.renderProgressbar ? j.renderProgressbar.call(r, j.progressbarFillClass) : `<span class="${j.progressbarFillClass}"></span>`,
                Ae.html(Se)),
                "custom" !== j.type && E("paginationRender", r.pagination.$el[0])
            }
            function d() {
                r.params.pagination = ar(r, r.originalParams.pagination, r.params.pagination, {
                    el: "swiper-pagination"
                });
                const j = r.params.pagination;
                if (!j.el)
                    return;
                let ae = Gt(j.el);
                0 !== ae.length && (r.params.uniqueNavElements && "string" == typeof j.el && ae.length > 1 && (ae = r.$el.find(j.el),
                ae.length > 1 && (ae = ae.filter(Ae=>Gt(Ae).parents(".swiper")[0] === r.el))),
                "bullets" === j.type && j.clickable && ae.addClass(j.clickableClass),
                ae.addClass(j.modifierClass + j.type),
                ae.addClass(r.isHorizontal() ? j.horizontalClass : j.verticalClass),
                "bullets" === j.type && j.dynamicBullets && (ae.addClass(`${j.modifierClass}${j.type}-dynamic`),
                se = 0,
                j.dynamicMainBullets < 1 && (j.dynamicMainBullets = 1)),
                "progressbar" === j.type && j.progressbarOpposite && ae.addClass(j.progressbarOppositeClass),
                j.clickable && ae.on("click", R(j.bulletClass), function(Se) {
                    Se.preventDefault();
                    let ke = Gt(this).index() * r.params.slidesPerGroup;
                    r.params.loop && (ke += r.loopedSlides),
                    r.slideTo(ke)
                }),
                Object.assign(r.pagination, {
                    $el: ae,
                    el: ae[0]
                }),
                r.enabled || ae.addClass(j.lockClass))
            }
            function S() {
                const j = r.params.pagination;
                if (ce())
                    return;
                const ae = r.pagination.$el;
                ae.removeClass(j.hiddenClass),
                ae.removeClass(j.modifierClass + j.type),
                ae.removeClass(r.isHorizontal() ? j.horizontalClass : j.verticalClass),
                r.pagination.bullets && r.pagination.bullets.removeClass && r.pagination.bullets.removeClass(j.bulletActiveClass),
                j.clickable && ae.off("click", R(j.bulletClass))
            }
            _("init", ()=>{
                !1 === r.params.pagination.enabled ? X() : (d(),
                m(),
                u())
            }
            ),
            _("activeIndexChange", ()=>{
                (r.params.loop || typeof r.snapIndex > "u") && u()
            }
            ),
            _("snapIndexChange", ()=>{
                r.params.loop || u()
            }
            ),
            _("slidesLengthChange", ()=>{
                r.params.loop && (m(),
                u())
            }
            ),
            _("snapGridLengthChange", ()=>{
                r.params.loop || (m(),
                u())
            }
            ),
            _("destroy", ()=>{
                S()
            }
            ),
            _("enable disable", ()=>{
                const {$el: j} = r.pagination;
                j && j[r.enabled ? "removeClass" : "addClass"](r.params.pagination.lockClass)
            }
            ),
            _("lock unlock", ()=>{
                u()
            }
            ),
            _("click", (j,ae)=>{
                const Ae = ae.target
                  , {$el: Se} = r.pagination;
                if (r.params.pagination.el && r.params.pagination.hideOnClick && Se && Se.length > 0 && !Gt(Ae).hasClass(r.params.pagination.bulletClass)) {
                    if (r.navigation && (r.navigation.nextEl && Ae === r.navigation.nextEl || r.navigation.prevEl && Ae === r.navigation.prevEl))
                        return;
                    const ke = Se.hasClass(r.params.pagination.hiddenClass);
                    E(!0 === ke ? "paginationShow" : "paginationHide"),
                    Se.toggleClass(r.params.pagination.hiddenClass)
                }
            }
            );
            const X = ()=>{
                r.$el.addClass(r.params.pagination.paginationDisabledClass),
                r.pagination.$el && r.pagination.$el.addClass(r.params.pagination.paginationDisabledClass),
                S()
            }
            ;
            Object.assign(r.pagination, {
                enable: ()=>{
                    r.$el.removeClass(r.params.pagination.paginationDisabledClass),
                    r.pagination.$el && r.pagination.$el.removeClass(r.params.pagination.paginationDisabledClass),
                    d(),
                    m(),
                    u()
                }
                ,
                disable: X,
                render: m,
                update: u,
                init: d,
                destroy: S
            })
        }
        function rs({swiper: r, extendParams: y, on: _, emit: E}) {
            let O;
            function B() {
                if (!r.size)
                    return r.autoplay.running = !1,
                    void (r.autoplay.paused = !1);
                const j = r.slides.eq(r.activeIndex);
                let ae = r.params.autoplay.delay;
                j.attr("data-swiper-autoplay") && (ae = j.attr("data-swiper-autoplay") || r.params.autoplay.delay),
                clearTimeout(O),
                O = wt(()=>{
                    let Ae;
                    r.params.autoplay.reverseDirection ? r.params.loop ? (r.loopFix(),
                    Ae = r.slidePrev(r.params.speed, !0, !0),
                    E("autoplay")) : r.isBeginning ? r.params.autoplay.stopOnLastSlide ? ce() : (Ae = r.slideTo(r.slides.length - 1, r.params.speed, !0, !0),
                    E("autoplay")) : (Ae = r.slidePrev(r.params.speed, !0, !0),
                    E("autoplay")) : r.params.loop ? (r.loopFix(),
                    Ae = r.slideNext(r.params.speed, !0, !0),
                    E("autoplay")) : r.isEnd ? r.params.autoplay.stopOnLastSlide ? ce() : (Ae = r.slideTo(0, r.params.speed, !0, !0),
                    E("autoplay")) : (Ae = r.slideNext(r.params.speed, !0, !0),
                    E("autoplay")),
                    (r.params.cssMode && r.autoplay.running || !1 === Ae) && B()
                }
                , ae)
            }
            function se() {
                return !(typeof O < "u" || r.autoplay.running || (r.autoplay.running = !0,
                E("autoplayStart"),
                B(),
                0))
            }
            function ce() {
                return !(!r.autoplay.running || typeof O > "u" || (O && (clearTimeout(O),
                O = void 0),
                r.autoplay.running = !1,
                E("autoplayStop"),
                0))
            }
            function G(j) {
                !r.autoplay.running || r.autoplay.paused || (O && clearTimeout(O),
                r.autoplay.paused = !0,
                0 !== j && r.params.autoplay.waitForTransition ? ["transitionend", "webkitTransitionEnd"].forEach(ae=>{
                    r.$wrapperEl[0].addEventListener(ae, m)
                }
                ) : (r.autoplay.paused = !1,
                B()))
            }
            function u() {
                const j = ue();
                "hidden" === j.visibilityState && r.autoplay.running && G(),
                "visible" === j.visibilityState && r.autoplay.paused && (B(),
                r.autoplay.paused = !1)
            }
            function m(j) {
                !r || r.destroyed || !r.$wrapperEl || j.target === r.$wrapperEl[0] && (["transitionend", "webkitTransitionEnd"].forEach(ae=>{
                    r.$wrapperEl[0].removeEventListener(ae, m)
                }
                ),
                r.autoplay.paused = !1,
                r.autoplay.running ? B() : ce())
            }
            function d() {
                r.params.autoplay.disableOnInteraction ? ce() : (E("autoplayPause"),
                G()),
                ["transitionend", "webkitTransitionEnd"].forEach(j=>{
                    r.$wrapperEl[0].removeEventListener(j, m)
                }
                )
            }
            function S() {
                r.params.autoplay.disableOnInteraction || (r.autoplay.paused = !1,
                E("autoplayResume"),
                B())
            }
            r.autoplay = {
                running: !1,
                paused: !1
            },
            y({
                autoplay: {
                    enabled: !1,
                    delay: 3e3,
                    waitForTransition: !0,
                    disableOnInteraction: !0,
                    stopOnLastSlide: !1,
                    reverseDirection: !1,
                    pauseOnMouseEnter: !1
                }
            }),
            _("init", ()=>{
                r.params.autoplay.enabled && (se(),
                ue().addEventListener("visibilitychange", u),
                function V() {
                    r.params.autoplay.pauseOnMouseEnter && (r.$el.on("mouseenter", d),
                    r.$el.on("mouseleave", S))
                }())
            }
            ),
            _("beforeTransitionStart", (j,ae,Ae)=>{
                r.autoplay.running && (Ae || !r.params.autoplay.disableOnInteraction ? r.autoplay.pause(ae) : ce())
            }
            ),
            _("sliderFirstMove", ()=>{
                r.autoplay.running && (r.params.autoplay.disableOnInteraction ? ce() : G())
            }
            ),
            _("touchEnd", ()=>{
                r.params.cssMode && r.autoplay.paused && !r.params.autoplay.disableOnInteraction && B()
            }
            ),
            _("destroy", ()=>{
                (function X() {
                    r.$el.off("mouseenter", d),
                    r.$el.off("mouseleave", S)
                }
                )(),
                r.autoplay.running && ce(),
                ue().removeEventListener("visibilitychange", u)
            }
            ),
            Object.assign(r.autoplay, {
                pause: G,
                run: B,
                start: se,
                stop: ce
            })
        }
    }
}, Ot=>{
    Ot(Ot.s = 3838)
}
]);
//# sourceMappingURL=main.bfe5291170fd45d6.js.map
